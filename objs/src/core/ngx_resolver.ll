; ModuleID = 'src/core/ngx_resolver.c'
source_filename = "src/core/ngx_resolver.c"
target datalayout = "e-p:32:32-i64:64-v128:32:128-n32-S128"
target triple = "asmjs-unknown-emscripten"

%struct.ngx_time_t = type { i32, i32, i32 }
%struct.ngx_rbtree_s = type { %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)* }
%struct.ngx_rbtree_node_s = type { i32, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, i8, i8 }
%struct.ngx_event_actions_t = type { i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_connection_s*)*, i32 (%struct.ngx_connection_s*, i32)*, i32 (void (%struct.ngx_event_s*)*)*, i32 (%struct.ngx_cycle_s*, i32, i32)*, i32 (%struct.ngx_cycle_s*, i32)*, void (%struct.ngx_cycle_s*)* }
%struct.ngx_event_s = type { i8*, i24, void (%struct.ngx_event_s*)*, i32, %struct.ngx_log_s*, %struct.ngx_rbtree_node_s, %struct.ngx_queue_s }
%struct.ngx_log_s = type { i32, %struct.ngx_open_file_s*, i32, i32, i8* (%struct.ngx_log_s*, i8*, i32)*, i8*, void (%struct.ngx_log_s*, i32, i8*, i32)*, i8*, i8*, %struct.ngx_log_s* }
%struct.ngx_open_file_s = type { i32, %struct.ngx_str_t, void (%struct.ngx_open_file_s*, %struct.ngx_log_s*)*, i8* }
%struct.ngx_str_t = type { i32, i8* }
%struct.ngx_queue_s = type { %struct.ngx_queue_s*, %struct.ngx_queue_s* }
%struct.ngx_connection_s = type { i8*, %struct.ngx_event_s*, %struct.ngx_event_s*, i32, i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, %struct.ngx_chain_s*, i32)*, %struct.ngx_chain_s* (%struct.ngx_connection_s*, %struct.ngx_chain_s*, i32)*, %struct.ngx_listening_s*, i32, %struct.ngx_log_s*, %struct.ngx_pool_s*, i32, %struct.sockaddr*, i32, %struct.ngx_str_t, %struct.ngx_str_t, i16, %struct.sockaddr*, i32, %struct.ngx_buf_s*, %struct.ngx_queue_s, i32, i32, i32 }
%struct.ngx_chain_s = type { %struct.ngx_buf_s*, %struct.ngx_chain_s* }
%struct.ngx_listening_s = type { i32, %struct.sockaddr*, i32, i32, %struct.ngx_str_t, i32, i32, i32, i32, void (%struct.ngx_connection_s*)*, i8*, %struct.ngx_log_s, %struct.ngx_log_s*, i32, i32, i32, %struct.ngx_listening_s*, %struct.ngx_connection_s*, i32, i24 }
%struct.ngx_pool_s = type { %struct.ngx_pool_data_t, i32, %struct.ngx_pool_s*, %struct.ngx_chain_s*, %struct.ngx_pool_large_s*, %struct.ngx_pool_cleanup_s*, %struct.ngx_log_s* }
%struct.ngx_pool_data_t = type { i8*, i8*, %struct.ngx_pool_s*, i32 }
%struct.ngx_pool_large_s = type { %struct.ngx_pool_large_s*, i8* }
%struct.ngx_pool_cleanup_s = type { void (i8*)*, i8*, %struct.ngx_pool_cleanup_s* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.ngx_buf_s = type { i8*, i8*, i32, i32, i8*, i8*, i8*, %struct.ngx_file_s*, %struct.ngx_buf_s*, i16, i32 }
%struct.ngx_file_s = type { i32, %struct.ngx_str_t, %struct.stat, i32, i32, %struct.ngx_log_s*, i8 }
%struct.stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i32, i32 }
%struct.ngx_cycle_s = type { i8****, %struct.ngx_pool_s*, %struct.ngx_log_s*, %struct.ngx_log_s, i32, %struct.ngx_connection_s**, %struct.ngx_connection_s*, i32, %struct.ngx_module_s**, i32, i32, %struct.ngx_queue_s, i32, %struct.ngx_array_t, %struct.ngx_array_t, %struct.ngx_array_t, %struct.ngx_rbtree_s, %struct.ngx_rbtree_node_s, %struct.ngx_list_t, %struct.ngx_list_t, i32, i32, %struct.ngx_connection_s*, %struct.ngx_event_s*, %struct.ngx_event_s*, %struct.ngx_cycle_s*, %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t }
%struct.ngx_module_s = type { i32, i32, i8*, i32, i32, i32, i8*, i8*, %struct.ngx_command_s*, i32, i32 (%struct.ngx_log_s*)*, i32 (%struct.ngx_cycle_s*)*, i32 (%struct.ngx_cycle_s*)*, i32 (%struct.ngx_cycle_s*)*, void (%struct.ngx_cycle_s*)*, void (%struct.ngx_cycle_s*)*, void (%struct.ngx_cycle_s*)*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ngx_command_s = type { %struct.ngx_str_t, i32, i8* (%struct.ngx_conf_s*, %struct.ngx_command_s*, i8*)*, i32, i32, i8* }
%struct.ngx_conf_s = type { i8*, %struct.ngx_array_t*, %struct.ngx_cycle_s*, %struct.ngx_pool_s*, %struct.ngx_pool_s*, %struct.ngx_conf_file_t*, %struct.ngx_log_s*, i8*, i32, i32, i8* (%struct.ngx_conf_s*, %struct.ngx_command_s*, i8*)*, i8* }
%struct.ngx_conf_file_t = type { %struct.ngx_file_s, %struct.ngx_buf_s*, %struct.ngx_buf_s*, i32 }
%struct.ngx_array_t = type { i8*, i32, i32, i32, %struct.ngx_pool_s* }
%struct.ngx_list_t = type { %struct.ngx_list_part_s*, %struct.ngx_list_part_s, i32, i32, %struct.ngx_pool_s* }
%struct.ngx_list_part_s = type { i8*, i32, %struct.ngx_list_part_s* }
%struct.ngx_os_io_t = type { i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, %struct.ngx_chain_s*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)*, %struct.ngx_chain_s* (%struct.ngx_connection_s*, %struct.ngx_chain_s*, i32)*, %struct.ngx_chain_s* (%struct.ngx_connection_s*, %struct.ngx_chain_s*, i32)*, i32 }
%struct.ngx_resolver_s = type { %struct.ngx_event_s*, i8*, %struct.ngx_log_s*, i32, %struct.ngx_array_t, i32, %struct.ngx_rbtree_s, %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_s, %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_s, %struct.ngx_rbtree_node_s, %struct.ngx_queue_s, %struct.ngx_queue_s, %struct.ngx_queue_s, %struct.ngx_queue_s, %struct.ngx_queue_s, %struct.ngx_queue_s, i32, %struct.ngx_rbtree_s, %struct.ngx_rbtree_node_s, %struct.ngx_queue_s, %struct.ngx_queue_s, i32, i32, i32, i32, i32 }
%struct.ngx_url_t = type { %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t, %struct.ngx_str_t, i16, i16, i32, i8, i32, %union.ngx_sockaddr_t, %struct.ngx_addr_t*, i32, i8* }
%union.ngx_sockaddr_t = type { %struct.sockaddr_in6, [84 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.ngx_addr_t = type { %struct.sockaddr*, i32, %struct.ngx_str_t }
%struct.ngx_resolver_connection_t = type { %struct.ngx_connection_s*, %struct.ngx_connection_s*, %struct.sockaddr*, i32, %struct.ngx_str_t, %struct.ngx_log_s, %struct.ngx_buf_s*, %struct.ngx_buf_s*, %struct.ngx_resolver_s* }
%struct.ngx_resolver_node_t = type { %struct.ngx_rbtree_node_s, %struct.ngx_queue_s, i8*, %struct.in6_addr, i16, i16, i8*, i8*, %union.anon.0, i8, i16, i16, i16, %union.anon.1, i16, i32, i32, i32, i8, i32, %struct.ngx_resolver_ctx_s* }
%union.anon.0 = type { i32 }
%union.anon.1 = type { %struct.in6_addr }
%struct.ngx_resolver_ctx_s = type { %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_s*, %struct.ngx_resolver_node_t*, i32, i32, %struct.ngx_str_t, %struct.ngx_str_t, i32, i32, %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t, %struct.sockaddr_in, i32, i32, %struct.ngx_resolver_srv_name_t*, void (%struct.ngx_resolver_ctx_s*)*, i8*, i32, i32, i32, %struct.ngx_event_s* }
%struct.ngx_resolver_addr_t = type { %struct.sockaddr*, i32, %struct.ngx_str_t, i16, i16 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.ngx_resolver_srv_name_t = type { %struct.ngx_str_t, i16, i16, i16, %struct.ngx_resolver_ctx_s*, i32, i32, %struct.ngx_addr_t* }
%struct.ngx_resolver_srv_t = type { %struct.ngx_str_t, i16, i16, i16 }
%struct.ngx_resolver_hdr_t = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.ngx_resolver_qs_t = type { i8, i8, i8, i8 }
%struct.ngx_resolver_an_t = type { i8, i8, i8, i8, [4 x i8], i8, i8 }

@.str = private unnamed_addr constant [7 x i8] c"valid=\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"invalid parameter: %V\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"ipv6=\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"%s in resolver \22%V\22\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%V.%V\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"_%V._tcp.%V\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"could not cancel %V resolving\00", align 1
@ngx_cached_time = external global %struct.ngx_time_t*, align 4
@ngx_resolver_strerror.errors = internal global [5 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0)], align 4, !dbg !0
@.str.9 = private unnamed_addr constant [13 x i8] c"Format error\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"Server failure\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Host not found\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"Unimplemented\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Operation refused\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Operation timed out\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@ngx_event_timer_rbtree = external global %struct.ngx_rbtree_s, align 4
@ngx_crc32_table_short = external global i32*, align 4
@ngx_current_msec = external global i32, align 4
@.str.16 = private unnamed_addr constant [10 x i8] c"resolving\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c" while %s\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c", resolver: %V\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"buffer overflow\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"socket() failed\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"close() socketfailed\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"ioctl(FIONBIO) failed\00", align 1
@ngx_connection_counter = external global i32*, align 4
@ngx_event_actions = external global %struct.ngx_event_actions_t, align 4
@.str.23 = private unnamed_addr constant [23 x i8] c"connect() to %V failed\00", align 1
@ngx_event_flags = external global i32, align 4
@.str.24 = private unnamed_addr constant [23 x i8] c"ioctl(!FIONBIO) failed\00", align 1
@ngx_io = external global %struct.ngx_os_io_t, align 4
@.str.25 = private unnamed_addr constant [37 x i8] c"invalid %s DNS response %ui fl:%04Xi\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"UDP\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"invalid number of questions in DNS response\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"zero-length domain name in DNS response\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"unknown query class %ui in DNS response\00", align 1
@.str.31 = private unnamed_addr constant [39 x i8] c"unknown query type %ui in DNS response\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"short DNS response\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"DNS error (%ui: %s), query id:%ui, name:\22%*s\22\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"DNS error (%ui: %s), query id:%ui\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"unexpected response for %V\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"wrong ident %ui response for %V, expect %ui\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"invalid name in DNS response\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"unexpected RR class %ui\00", align 1
@.str.39 = private unnamed_addr constant [36 x i8] c"unexpected A record in DNS response\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"invalid A record in DNS response\00", align 1
@.str.41 = private unnamed_addr constant [39 x i8] c"unexpected AAAA record in DNS response\00", align 1
@.str.42 = private unnamed_addr constant [36 x i8] c"invalid AAAA record in DNS response\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"unexpected RR type %ui\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"no A or CNAME types in DNS response\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"name is out of response\00", align 1
@.str.46 = private unnamed_addr constant [26 x i8] c"compression pointers loop\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"invalid name DNS response\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"no SRV type in DNS response\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"\07in-addr\04arpa\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"\03ip6\04arpa\00", align 1
@.str.51 = private unnamed_addr constant [54 x i8] c"invalid in-addr.arpa or ip6.arpa name in DNS response\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"no PTR type in DNS response\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"send() incomplete\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"connect() failed\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"\01%xd\01%xd\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"\03ip6\04arpa\00\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"%ud\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"\07in-addr\04arpa\00\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"\00\0C\00\01\00", align 1

; Function Attrs: nounwind
define %struct.ngx_resolver_s* @ngx_resolver_create(%struct.ngx_conf_s* %cf, %struct.ngx_str_t* %names, i32 %n) #0 !dbg !518 {
entry:
  %retval = alloca %struct.ngx_resolver_s*, align 4
  %cf.addr = alloca %struct.ngx_conf_s*, align 4
  %names.addr = alloca %struct.ngx_str_t*, align 4
  %n.addr = alloca i32, align 4
  %s = alloca %struct.ngx_str_t, align 4
  %u = alloca %struct.ngx_url_t, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %cln = alloca %struct.ngx_pool_cleanup_s*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_conf_s* %cf, %struct.ngx_conf_s** %cf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_conf_s** %cf.addr, metadata !762, metadata !824), !dbg !825
  store %struct.ngx_str_t* %names, %struct.ngx_str_t** %names.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %names.addr, metadata !763, metadata !824), !dbg !826
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !764, metadata !824), !dbg !829
  %0 = bitcast %struct.ngx_str_t* %s to i8*, !dbg !830
  call void @llvm.lifetime.start(i64 8, i8* %0) #5, !dbg !830
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %s, metadata !765, metadata !824), !dbg !831
  %1 = bitcast %struct.ngx_url_t* %u to i8*, !dbg !832
  call void @llvm.lifetime.start(i64 172, i8* %1) #5, !dbg !832
  call void @llvm.dbg.declare(metadata %struct.ngx_url_t* %u, metadata !766, metadata !824), !dbg !833
  %2 = bitcast i32* %i to i8*, !dbg !834
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !834
  call void @llvm.dbg.declare(metadata i32* %i, metadata !802, metadata !824), !dbg !835
  %3 = bitcast i32* %j to i8*, !dbg !834
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !834
  call void @llvm.dbg.declare(metadata i32* %j, metadata !803, metadata !824), !dbg !836
  %4 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !837
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !837
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !804, metadata !824), !dbg !838
  %5 = bitcast %struct.ngx_pool_cleanup_s** %cln to i8*, !dbg !839
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !839
  call void @llvm.dbg.declare(metadata %struct.ngx_pool_cleanup_s** %cln, metadata !805, metadata !824), !dbg !840
  %6 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !841
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !841
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !806, metadata !824), !dbg !842
  %7 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !843, !tbaa !820
  %pool = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %7, i32 0, i32 3, !dbg !844
  %8 = load %struct.ngx_pool_s*, %struct.ngx_pool_s** %pool, align 4, !dbg !844, !tbaa !845
  %call = call %struct.ngx_pool_cleanup_s* @ngx_pool_cleanup_add(%struct.ngx_pool_s* %8, i32 0), !dbg !847
  store %struct.ngx_pool_cleanup_s* %call, %struct.ngx_pool_cleanup_s** %cln, align 4, !dbg !848, !tbaa !820
  %9 = load %struct.ngx_pool_cleanup_s*, %struct.ngx_pool_cleanup_s** %cln, align 4, !dbg !849, !tbaa !820
  %cmp = icmp eq %struct.ngx_pool_cleanup_s* %9, null, !dbg !851
  br i1 %cmp, label %if.then, label %if.end, !dbg !852

if.then:                                          ; preds = %entry
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !853
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !853

if.end:                                           ; preds = %entry
  %10 = load %struct.ngx_pool_cleanup_s*, %struct.ngx_pool_cleanup_s** %cln, align 4, !dbg !855, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_pool_cleanup_s, %struct.ngx_pool_cleanup_s* %10, i32 0, i32 0, !dbg !856
  store void (i8*)* @ngx_resolver_cleanup, void (i8*)** %handler, align 4, !dbg !857, !tbaa !858
  %11 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !860, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %11, i32 0, i32 6, !dbg !861
  %12 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !861, !tbaa !862
  %call1 = call i8* @ngx_calloc(i32 256, %struct.ngx_log_s* %12), !dbg !863
  %13 = bitcast i8* %call1 to %struct.ngx_resolver_s*, !dbg !863
  store %struct.ngx_resolver_s* %13, %struct.ngx_resolver_s** %r, align 4, !dbg !864, !tbaa !820
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !865, !tbaa !820
  %cmp2 = icmp eq %struct.ngx_resolver_s* %14, null, !dbg !867
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !868

if.then3:                                         ; preds = %if.end
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !869
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !869

if.end4:                                          ; preds = %if.end
  %15 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !871, !tbaa !820
  %16 = bitcast %struct.ngx_resolver_s* %15 to i8*, !dbg !871
  %17 = load %struct.ngx_pool_cleanup_s*, %struct.ngx_pool_cleanup_s** %cln, align 4, !dbg !872, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_pool_cleanup_s, %struct.ngx_pool_cleanup_s* %17, i32 0, i32 1, !dbg !873
  store i8* %16, i8** %data, align 4, !dbg !874, !tbaa !875
  %18 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !876, !tbaa !820
  %log5 = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %18, i32 0, i32 6, !dbg !877
  %19 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log5, align 4, !dbg !877, !tbaa !862
  %call6 = call i8* @ngx_calloc(i32 48, %struct.ngx_log_s* %19), !dbg !878
  %20 = bitcast i8* %call6 to %struct.ngx_event_s*, !dbg !878
  %21 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !879, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %21, i32 0, i32 0, !dbg !880
  store %struct.ngx_event_s* %20, %struct.ngx_event_s** %event, align 4, !dbg !881, !tbaa !882
  %22 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !889, !tbaa !820
  %event7 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %22, i32 0, i32 0, !dbg !891
  %23 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event7, align 4, !dbg !891, !tbaa !882
  %cmp8 = icmp eq %struct.ngx_event_s* %23, null, !dbg !892
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !893

if.then9:                                         ; preds = %if.end4
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !894
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !894

if.end10:                                         ; preds = %if.end4
  %24 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_sentinel = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %24, i32 0, i32 7, !dbg !896
  %color = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %name_sentinel, i32 0, i32 4, !dbg !896
  store i8 0, i8* %color, align 4, !dbg !896, !tbaa !897
  %25 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_sentinel11 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %25, i32 0, i32 7, !dbg !896
  %26 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %26, i32 0, i32 6, !dbg !896
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %name_rbtree, i32 0, i32 0, !dbg !896
  store %struct.ngx_rbtree_node_s* %name_sentinel11, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !896, !tbaa !898
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_sentinel12 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %27, i32 0, i32 7, !dbg !896
  %28 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_rbtree13 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %28, i32 0, i32 6, !dbg !896
  %sentinel = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %name_rbtree13, i32 0, i32 1, !dbg !896
  store %struct.ngx_rbtree_node_s* %name_sentinel12, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !896, !tbaa !899
  %29 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !896, !tbaa !820
  %name_rbtree14 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %29, i32 0, i32 6, !dbg !896
  %insert = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %name_rbtree14, i32 0, i32 2, !dbg !896
  store void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)* @ngx_resolver_rbtree_insert_value, void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)** %insert, align 4, !dbg !896, !tbaa !900
  %30 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_sentinel = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %30, i32 0, i32 9, !dbg !901
  %color15 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %srv_sentinel, i32 0, i32 4, !dbg !901
  store i8 0, i8* %color15, align 4, !dbg !901, !tbaa !897
  %31 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_sentinel16 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %31, i32 0, i32 9, !dbg !901
  %32 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %32, i32 0, i32 8, !dbg !901
  %root17 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %srv_rbtree, i32 0, i32 0, !dbg !901
  store %struct.ngx_rbtree_node_s* %srv_sentinel16, %struct.ngx_rbtree_node_s** %root17, align 4, !dbg !901, !tbaa !898
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_sentinel18 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %33, i32 0, i32 9, !dbg !901
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_rbtree19 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %34, i32 0, i32 8, !dbg !901
  %sentinel20 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %srv_rbtree19, i32 0, i32 1, !dbg !901
  store %struct.ngx_rbtree_node_s* %srv_sentinel18, %struct.ngx_rbtree_node_s** %sentinel20, align 4, !dbg !901, !tbaa !899
  %35 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !901, !tbaa !820
  %srv_rbtree21 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %35, i32 0, i32 8, !dbg !901
  %insert22 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %srv_rbtree21, i32 0, i32 2, !dbg !901
  store void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)* @ngx_resolver_rbtree_insert_value, void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)** %insert22, align 4, !dbg !901, !tbaa !900
  %36 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_sentinel = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %36, i32 0, i32 11, !dbg !902
  %color23 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %addr_sentinel, i32 0, i32 4, !dbg !902
  store i8 0, i8* %color23, align 4, !dbg !902, !tbaa !897
  %37 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_sentinel24 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %37, i32 0, i32 11, !dbg !902
  %38 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %38, i32 0, i32 10, !dbg !902
  %root25 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr_rbtree, i32 0, i32 0, !dbg !902
  store %struct.ngx_rbtree_node_s* %addr_sentinel24, %struct.ngx_rbtree_node_s** %root25, align 4, !dbg !902, !tbaa !898
  %39 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_sentinel26 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %39, i32 0, i32 11, !dbg !902
  %40 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_rbtree27 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %40, i32 0, i32 10, !dbg !902
  %sentinel28 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr_rbtree27, i32 0, i32 1, !dbg !902
  store %struct.ngx_rbtree_node_s* %addr_sentinel26, %struct.ngx_rbtree_node_s** %sentinel28, align 4, !dbg !902, !tbaa !899
  %41 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !902, !tbaa !820
  %addr_rbtree29 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %41, i32 0, i32 10, !dbg !902
  %insert30 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr_rbtree29, i32 0, i32 2, !dbg !902
  store void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)* @ngx_rbtree_insert_value, void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)** %insert30, align 4, !dbg !902, !tbaa !900
  %42 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !903, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %42, i32 0, i32 12, !dbg !903
  %43 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !903, !tbaa !820
  %name_resend_queue31 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %43, i32 0, i32 12, !dbg !903
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue31, i32 0, i32 0, !dbg !903
  store %struct.ngx_queue_s* %name_resend_queue, %struct.ngx_queue_s** %prev, align 4, !dbg !903, !tbaa !904
  %44 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !903, !tbaa !820
  %name_resend_queue32 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %44, i32 0, i32 12, !dbg !903
  %45 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !903, !tbaa !820
  %name_resend_queue33 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %45, i32 0, i32 12, !dbg !903
  %next = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue33, i32 0, i32 1, !dbg !903
  store %struct.ngx_queue_s* %name_resend_queue32, %struct.ngx_queue_s** %next, align 4, !dbg !903, !tbaa !905
  %46 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !906, !tbaa !820
  %srv_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %46, i32 0, i32 13, !dbg !906
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !906, !tbaa !820
  %srv_resend_queue34 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %47, i32 0, i32 13, !dbg !906
  %prev35 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_resend_queue34, i32 0, i32 0, !dbg !906
  store %struct.ngx_queue_s* %srv_resend_queue, %struct.ngx_queue_s** %prev35, align 4, !dbg !906, !tbaa !904
  %48 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !906, !tbaa !820
  %srv_resend_queue36 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %48, i32 0, i32 13, !dbg !906
  %49 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !906, !tbaa !820
  %srv_resend_queue37 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %49, i32 0, i32 13, !dbg !906
  %next38 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_resend_queue37, i32 0, i32 1, !dbg !906
  store %struct.ngx_queue_s* %srv_resend_queue36, %struct.ngx_queue_s** %next38, align 4, !dbg !906, !tbaa !905
  %50 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !907, !tbaa !820
  %addr_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %50, i32 0, i32 14, !dbg !907
  %51 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !907, !tbaa !820
  %addr_resend_queue39 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %51, i32 0, i32 14, !dbg !907
  %prev40 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr_resend_queue39, i32 0, i32 0, !dbg !907
  store %struct.ngx_queue_s* %addr_resend_queue, %struct.ngx_queue_s** %prev40, align 4, !dbg !907, !tbaa !904
  %52 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !907, !tbaa !820
  %addr_resend_queue41 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %52, i32 0, i32 14, !dbg !907
  %53 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !907, !tbaa !820
  %addr_resend_queue42 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %53, i32 0, i32 14, !dbg !907
  %next43 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr_resend_queue42, i32 0, i32 1, !dbg !907
  store %struct.ngx_queue_s* %addr_resend_queue41, %struct.ngx_queue_s** %next43, align 4, !dbg !907, !tbaa !905
  %54 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !908, !tbaa !820
  %name_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %54, i32 0, i32 15, !dbg !908
  %55 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !908, !tbaa !820
  %name_expire_queue44 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %55, i32 0, i32 15, !dbg !908
  %prev45 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue44, i32 0, i32 0, !dbg !908
  store %struct.ngx_queue_s* %name_expire_queue, %struct.ngx_queue_s** %prev45, align 4, !dbg !908, !tbaa !904
  %56 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !908, !tbaa !820
  %name_expire_queue46 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %56, i32 0, i32 15, !dbg !908
  %57 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !908, !tbaa !820
  %name_expire_queue47 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %57, i32 0, i32 15, !dbg !908
  %next48 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue47, i32 0, i32 1, !dbg !908
  store %struct.ngx_queue_s* %name_expire_queue46, %struct.ngx_queue_s** %next48, align 4, !dbg !908, !tbaa !905
  %58 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !909, !tbaa !820
  %srv_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %58, i32 0, i32 16, !dbg !909
  %59 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !909, !tbaa !820
  %srv_expire_queue49 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %59, i32 0, i32 16, !dbg !909
  %prev50 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue49, i32 0, i32 0, !dbg !909
  store %struct.ngx_queue_s* %srv_expire_queue, %struct.ngx_queue_s** %prev50, align 4, !dbg !909, !tbaa !904
  %60 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !909, !tbaa !820
  %srv_expire_queue51 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %60, i32 0, i32 16, !dbg !909
  %61 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !909, !tbaa !820
  %srv_expire_queue52 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %61, i32 0, i32 16, !dbg !909
  %next53 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue52, i32 0, i32 1, !dbg !909
  store %struct.ngx_queue_s* %srv_expire_queue51, %struct.ngx_queue_s** %next53, align 4, !dbg !909, !tbaa !905
  %62 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !910, !tbaa !820
  %addr_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %62, i32 0, i32 17, !dbg !910
  %63 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !910, !tbaa !820
  %addr_expire_queue54 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %63, i32 0, i32 17, !dbg !910
  %prev55 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr_expire_queue54, i32 0, i32 0, !dbg !910
  store %struct.ngx_queue_s* %addr_expire_queue, %struct.ngx_queue_s** %prev55, align 4, !dbg !910, !tbaa !904
  %64 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !910, !tbaa !820
  %addr_expire_queue56 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %64, i32 0, i32 17, !dbg !910
  %65 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !910, !tbaa !820
  %addr_expire_queue57 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %65, i32 0, i32 17, !dbg !910
  %next58 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr_expire_queue57, i32 0, i32 1, !dbg !910
  store %struct.ngx_queue_s* %addr_expire_queue56, %struct.ngx_queue_s** %next58, align 4, !dbg !910, !tbaa !905
  %66 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !911, !tbaa !820
  %ipv6 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %66, i32 0, i32 18, !dbg !912
  store i32 1, i32* %ipv6, align 4, !dbg !913, !tbaa !914
  %67 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_sentinel = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %67, i32 0, i32 20, !dbg !915
  %color59 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %addr6_sentinel, i32 0, i32 4, !dbg !915
  store i8 0, i8* %color59, align 4, !dbg !915, !tbaa !897
  %68 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_sentinel60 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %68, i32 0, i32 20, !dbg !915
  %69 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %69, i32 0, i32 19, !dbg !915
  %root61 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr6_rbtree, i32 0, i32 0, !dbg !915
  store %struct.ngx_rbtree_node_s* %addr6_sentinel60, %struct.ngx_rbtree_node_s** %root61, align 4, !dbg !915, !tbaa !898
  %70 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_sentinel62 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %70, i32 0, i32 20, !dbg !915
  %71 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_rbtree63 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %71, i32 0, i32 19, !dbg !915
  %sentinel64 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr6_rbtree63, i32 0, i32 1, !dbg !915
  store %struct.ngx_rbtree_node_s* %addr6_sentinel62, %struct.ngx_rbtree_node_s** %sentinel64, align 4, !dbg !915, !tbaa !899
  %72 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !915, !tbaa !820
  %addr6_rbtree65 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %72, i32 0, i32 19, !dbg !915
  %insert66 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr6_rbtree65, i32 0, i32 2, !dbg !915
  store void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)* @ngx_resolver_rbtree_insert_addr6_value, void (%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*)** %insert66, align 4, !dbg !915, !tbaa !900
  %73 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !916, !tbaa !820
  %addr6_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %73, i32 0, i32 21, !dbg !916
  %74 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !916, !tbaa !820
  %addr6_resend_queue67 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %74, i32 0, i32 21, !dbg !916
  %prev68 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr6_resend_queue67, i32 0, i32 0, !dbg !916
  store %struct.ngx_queue_s* %addr6_resend_queue, %struct.ngx_queue_s** %prev68, align 4, !dbg !916, !tbaa !904
  %75 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !916, !tbaa !820
  %addr6_resend_queue69 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %75, i32 0, i32 21, !dbg !916
  %76 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !916, !tbaa !820
  %addr6_resend_queue70 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %76, i32 0, i32 21, !dbg !916
  %next71 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr6_resend_queue70, i32 0, i32 1, !dbg !916
  store %struct.ngx_queue_s* %addr6_resend_queue69, %struct.ngx_queue_s** %next71, align 4, !dbg !916, !tbaa !905
  %77 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !917, !tbaa !820
  %addr6_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %77, i32 0, i32 22, !dbg !917
  %78 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !917, !tbaa !820
  %addr6_expire_queue72 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %78, i32 0, i32 22, !dbg !917
  %prev73 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr6_expire_queue72, i32 0, i32 0, !dbg !917
  store %struct.ngx_queue_s* %addr6_expire_queue, %struct.ngx_queue_s** %prev73, align 4, !dbg !917, !tbaa !904
  %79 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !917, !tbaa !820
  %addr6_expire_queue74 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %79, i32 0, i32 22, !dbg !917
  %80 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !917, !tbaa !820
  %addr6_expire_queue75 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %80, i32 0, i32 22, !dbg !917
  %next76 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr6_expire_queue75, i32 0, i32 1, !dbg !917
  store %struct.ngx_queue_s* %addr6_expire_queue74, %struct.ngx_queue_s** %next76, align 4, !dbg !917, !tbaa !905
  %81 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !918, !tbaa !820
  %event77 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %81, i32 0, i32 0, !dbg !919
  %82 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event77, align 4, !dbg !919, !tbaa !882
  %handler78 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %82, i32 0, i32 2, !dbg !920
  store void (%struct.ngx_event_s*)* @ngx_resolver_resend_handler, void (%struct.ngx_event_s*)** %handler78, align 4, !dbg !921, !tbaa !922
  %83 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !924, !tbaa !820
  %84 = bitcast %struct.ngx_resolver_s* %83 to i8*, !dbg !924
  %85 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !925, !tbaa !820
  %event79 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %85, i32 0, i32 0, !dbg !926
  %86 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event79, align 4, !dbg !926, !tbaa !882
  %data80 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %86, i32 0, i32 0, !dbg !927
  store i8* %84, i8** %data80, align 4, !dbg !928, !tbaa !929
  %87 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !930, !tbaa !820
  %cycle = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %87, i32 0, i32 2, !dbg !931
  %88 = load %struct.ngx_cycle_s*, %struct.ngx_cycle_s** %cycle, align 4, !dbg !931, !tbaa !932
  %new_log = getelementptr inbounds %struct.ngx_cycle_s, %struct.ngx_cycle_s* %88, i32 0, i32 3, !dbg !933
  %89 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !934, !tbaa !820
  %event81 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %89, i32 0, i32 0, !dbg !935
  %90 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event81, align 4, !dbg !935, !tbaa !882
  %log82 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %90, i32 0, i32 4, !dbg !936
  store %struct.ngx_log_s* %new_log, %struct.ngx_log_s** %log82, align 4, !dbg !937, !tbaa !938
  %91 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !939, !tbaa !820
  %ident = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %91, i32 0, i32 3, !dbg !940
  store i32 -1, i32* %ident, align 4, !dbg !941, !tbaa !942
  %92 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !943, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %92, i32 0, i32 23, !dbg !944
  store i32 5, i32* %resend_timeout, align 4, !dbg !945, !tbaa !946
  %93 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !947, !tbaa !820
  %tcp_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %93, i32 0, i32 24, !dbg !948
  store i32 5, i32* %tcp_timeout, align 4, !dbg !949, !tbaa !950
  %94 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !951, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %94, i32 0, i32 25, !dbg !952
  store i32 30, i32* %expire, align 4, !dbg !953, !tbaa !954
  %95 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !955, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %95, i32 0, i32 26, !dbg !956
  store i32 0, i32* %valid, align 4, !dbg !957, !tbaa !958
  %96 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !959, !tbaa !820
  %cycle83 = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %96, i32 0, i32 2, !dbg !960
  %97 = load %struct.ngx_cycle_s*, %struct.ngx_cycle_s** %cycle83, align 4, !dbg !960, !tbaa !932
  %new_log84 = getelementptr inbounds %struct.ngx_cycle_s, %struct.ngx_cycle_s* %97, i32 0, i32 3, !dbg !961
  %98 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !962, !tbaa !820
  %log85 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %98, i32 0, i32 2, !dbg !963
  store %struct.ngx_log_s* %new_log84, %struct.ngx_log_s** %log85, align 4, !dbg !964, !tbaa !965
  %99 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !966, !tbaa !820
  %log_level = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %99, i32 0, i32 27, !dbg !967
  store i32 4, i32* %log_level, align 4, !dbg !968, !tbaa !969
  %100 = load i32, i32* %n.addr, align 4, !dbg !970, !tbaa !827
  %tobool = icmp ne i32 %100, 0, !dbg !970
  br i1 %tobool, label %if.then86, label %if.end92, !dbg !972

if.then86:                                        ; preds = %if.end10
  %101 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !973, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %101, i32 0, i32 4, !dbg !976
  %102 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !977, !tbaa !820
  %pool87 = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %102, i32 0, i32 3, !dbg !978
  %103 = load %struct.ngx_pool_s*, %struct.ngx_pool_s** %pool87, align 4, !dbg !978, !tbaa !845
  %104 = load i32, i32* %n.addr, align 4, !dbg !979, !tbaa !827
  %call88 = call i32 @ngx_array_init(%struct.ngx_array_t* %connections, %struct.ngx_pool_s* %103, i32 %104, i32 76), !dbg !980
  %cmp89 = icmp ne i32 %call88, 0, !dbg !981
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !982

if.then90:                                        ; preds = %if.then86
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !983
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !983

if.end91:                                         ; preds = %if.then86
  br label %if.end92, !dbg !985

if.end92:                                         ; preds = %if.end91, %if.end10
  store i32 0, i32* %i, align 4, !dbg !986, !tbaa !827
  br label %for.cond, !dbg !988

for.cond:                                         ; preds = %for.inc167, %if.end92
  %105 = load i32, i32* %i, align 4, !dbg !989, !tbaa !827
  %106 = load i32, i32* %n.addr, align 4, !dbg !991, !tbaa !827
  %cmp93 = icmp ult i32 %105, %106, !dbg !992
  br i1 %cmp93, label %for.body, label %for.end169, !dbg !993

for.body:                                         ; preds = %for.cond
  %107 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !994, !tbaa !820
  %108 = load i32, i32* %i, align 4, !dbg !994, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %107, i32 %108, !dbg !994
  %data94 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx, i32 0, i32 1, !dbg !994
  %109 = load i8*, i8** %data94, align 4, !dbg !994, !tbaa !997
  %call95 = call i32 @strncmp(i8* %109, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 6), !dbg !994
  %cmp96 = icmp eq i32 %call95, 0, !dbg !999
  br i1 %cmp96, label %if.then97, label %if.end110, !dbg !1000

if.then97:                                        ; preds = %for.body
  %110 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1001, !tbaa !820
  %111 = load i32, i32* %i, align 4, !dbg !1003, !tbaa !827
  %arrayidx98 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %110, i32 %111, !dbg !1001
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx98, i32 0, i32 0, !dbg !1004
  %112 = load i32, i32* %len, align 4, !dbg !1004, !tbaa !1005
  %sub = sub i32 %112, 6, !dbg !1006
  %len99 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %s, i32 0, i32 0, !dbg !1007
  store i32 %sub, i32* %len99, align 4, !dbg !1008, !tbaa !1005
  %113 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1009, !tbaa !820
  %114 = load i32, i32* %i, align 4, !dbg !1010, !tbaa !827
  %arrayidx100 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %113, i32 %114, !dbg !1009
  %data101 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx100, i32 0, i32 1, !dbg !1011
  %115 = load i8*, i8** %data101, align 4, !dbg !1011, !tbaa !997
  %add.ptr = getelementptr inbounds i8, i8* %115, i32 6, !dbg !1012
  %data102 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %s, i32 0, i32 1, !dbg !1013
  store i8* %add.ptr, i8** %data102, align 4, !dbg !1014, !tbaa !997
  %call103 = call i32 @ngx_parse_time(%struct.ngx_str_t* %s, i32 1), !dbg !1015
  %116 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1016, !tbaa !820
  %valid104 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %116, i32 0, i32 26, !dbg !1017
  store i32 %call103, i32* %valid104, align 4, !dbg !1018, !tbaa !958
  %117 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1019, !tbaa !820
  %valid105 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %117, i32 0, i32 26, !dbg !1021
  %118 = load i32, i32* %valid105, align 4, !dbg !1021, !tbaa !958
  %cmp106 = icmp eq i32 %118, -1, !dbg !1022
  br i1 %cmp106, label %if.then107, label %if.end109, !dbg !1023

if.then107:                                       ; preds = %if.then97
  %119 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !1024, !tbaa !820
  %120 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1026, !tbaa !820
  %121 = load i32, i32* %i, align 4, !dbg !1027, !tbaa !827
  %arrayidx108 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %120, i32 %121, !dbg !1026
  call void (i32, %struct.ngx_conf_s*, i32, i8*, ...) @ngx_conf_log_error(i32 1, %struct.ngx_conf_s* %119, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), %struct.ngx_str_t* %arrayidx108), !dbg !1028
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !1029
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1029

if.end109:                                        ; preds = %if.then97
  br label %for.inc167, !dbg !1030

if.end110:                                        ; preds = %for.body
  %122 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1031, !tbaa !820
  %123 = load i32, i32* %i, align 4, !dbg !1031, !tbaa !827
  %arrayidx111 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %122, i32 %123, !dbg !1031
  %data112 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx111, i32 0, i32 1, !dbg !1031
  %124 = load i8*, i8** %data112, align 4, !dbg !1031, !tbaa !997
  %call113 = call i32 @strncmp(i8* %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 5), !dbg !1031
  %cmp114 = icmp eq i32 %call113, 0, !dbg !1033
  br i1 %cmp114, label %if.then115, label %if.end134, !dbg !1034

if.then115:                                       ; preds = %if.end110
  %125 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1035, !tbaa !820
  %126 = load i32, i32* %i, align 4, !dbg !1035, !tbaa !827
  %arrayidx116 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %125, i32 %126, !dbg !1035
  %data117 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx116, i32 0, i32 1, !dbg !1035
  %127 = load i8*, i8** %data117, align 4, !dbg !1035, !tbaa !997
  %arrayidx118 = getelementptr inbounds i8, i8* %127, i32 5, !dbg !1035
  %call119 = call i32 @strcmp(i8* %arrayidx118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0)), !dbg !1035
  %cmp120 = icmp eq i32 %call119, 0, !dbg !1038
  br i1 %cmp120, label %if.then121, label %if.else, !dbg !1039

if.then121:                                       ; preds = %if.then115
  %128 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1040, !tbaa !820
  %ipv6122 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %128, i32 0, i32 18, !dbg !1042
  store i32 1, i32* %ipv6122, align 4, !dbg !1043, !tbaa !914
  br label %if.end133, !dbg !1044

if.else:                                          ; preds = %if.then115
  %129 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1045, !tbaa !820
  %130 = load i32, i32* %i, align 4, !dbg !1045, !tbaa !827
  %arrayidx123 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %129, i32 %130, !dbg !1045
  %data124 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %arrayidx123, i32 0, i32 1, !dbg !1045
  %131 = load i8*, i8** %data124, align 4, !dbg !1045, !tbaa !997
  %arrayidx125 = getelementptr inbounds i8, i8* %131, i32 5, !dbg !1045
  %call126 = call i32 @strcmp(i8* %arrayidx125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0)), !dbg !1045
  %cmp127 = icmp eq i32 %call126, 0, !dbg !1047
  br i1 %cmp127, label %if.then128, label %if.else130, !dbg !1048

if.then128:                                       ; preds = %if.else
  %132 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1049, !tbaa !820
  %ipv6129 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %132, i32 0, i32 18, !dbg !1051
  store i32 0, i32* %ipv6129, align 4, !dbg !1052, !tbaa !914
  br label %if.end132, !dbg !1053

if.else130:                                       ; preds = %if.else
  %133 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !1054, !tbaa !820
  %134 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1056, !tbaa !820
  %135 = load i32, i32* %i, align 4, !dbg !1057, !tbaa !827
  %arrayidx131 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %134, i32 %135, !dbg !1056
  call void (i32, %struct.ngx_conf_s*, i32, i8*, ...) @ngx_conf_log_error(i32 1, %struct.ngx_conf_s* %133, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), %struct.ngx_str_t* %arrayidx131), !dbg !1058
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !1059
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1059

if.end132:                                        ; preds = %if.then128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then121
  br label %for.inc167, !dbg !1060

if.end134:                                        ; preds = %if.end110
  %136 = bitcast %struct.ngx_url_t* %u to i8*, !dbg !1061
  call void @llvm.memset.p0i8.i32(i8* %136, i8 0, i32 172, i32 4, i1 false), !dbg !1061
  %url = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 0, !dbg !1062
  %137 = load %struct.ngx_str_t*, %struct.ngx_str_t** %names.addr, align 4, !dbg !1063, !tbaa !820
  %138 = load i32, i32* %i, align 4, !dbg !1064, !tbaa !827
  %arrayidx135 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %137, i32 %138, !dbg !1063
  %139 = bitcast %struct.ngx_str_t* %url to i8*, !dbg !1063
  %140 = bitcast %struct.ngx_str_t* %arrayidx135 to i8*, !dbg !1063
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %139, i8* %140, i32 8, i32 4, i1 false), !dbg !1063, !tbaa.struct !1065
  %default_port = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 5, !dbg !1066
  store i16 53, i16* %default_port, align 2, !dbg !1067, !tbaa !1068
  %141 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !1071, !tbaa !820
  %pool136 = getelementptr inbounds %struct.ngx_conf_s, %struct.ngx_conf_s* %141, i32 0, i32 3, !dbg !1073
  %142 = load %struct.ngx_pool_s*, %struct.ngx_pool_s** %pool136, align 4, !dbg !1073, !tbaa !845
  %call137 = call i32 @ngx_parse_url(%struct.ngx_pool_s* %142, %struct.ngx_url_t* %u), !dbg !1074
  %cmp138 = icmp ne i32 %call137, 0, !dbg !1075
  br i1 %cmp138, label %if.then139, label %if.end145, !dbg !1076

if.then139:                                       ; preds = %if.end134
  %err = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 12, !dbg !1077
  %143 = load i8*, i8** %err, align 4, !dbg !1077, !tbaa !1080
  %tobool140 = icmp ne i8* %143, null, !dbg !1081
  br i1 %tobool140, label %if.then141, label %if.end144, !dbg !1082

if.then141:                                       ; preds = %if.then139
  %144 = load %struct.ngx_conf_s*, %struct.ngx_conf_s** %cf.addr, align 4, !dbg !1083, !tbaa !820
  %err142 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 12, !dbg !1085
  %145 = load i8*, i8** %err142, align 4, !dbg !1085, !tbaa !1080
  %url143 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 0, !dbg !1086
  call void (i32, %struct.ngx_conf_s*, i32, i8*, ...) @ngx_conf_log_error(i32 1, %struct.ngx_conf_s* %144, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i32 0, i32 0), i8* %145, %struct.ngx_str_t* %url143), !dbg !1087
  br label %if.end144, !dbg !1088

if.end144:                                        ; preds = %if.then141, %if.then139
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !1089
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1089

if.end145:                                        ; preds = %if.end134
  %146 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1090, !tbaa !820
  %connections146 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %146, i32 0, i32 4, !dbg !1091
  %naddrs = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 11, !dbg !1092
  %147 = load i32, i32* %naddrs, align 4, !dbg !1092, !tbaa !1093
  %call147 = call i8* @ngx_array_push_n(%struct.ngx_array_t* %connections146, i32 %147), !dbg !1094
  %148 = bitcast i8* %call147 to %struct.ngx_resolver_connection_t*, !dbg !1094
  store %struct.ngx_resolver_connection_t* %148, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1095, !tbaa !820
  %149 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1096, !tbaa !820
  %cmp148 = icmp eq %struct.ngx_resolver_connection_t* %149, null, !dbg !1098
  br i1 %cmp148, label %if.then149, label %if.end150, !dbg !1099

if.then149:                                       ; preds = %if.end145
  store %struct.ngx_resolver_s* null, %struct.ngx_resolver_s** %retval, align 4, !dbg !1100
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1100

if.end150:                                        ; preds = %if.end145
  %150 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1102, !tbaa !820
  %151 = bitcast %struct.ngx_resolver_connection_t* %150 to i8*, !dbg !1102
  %naddrs151 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 11, !dbg !1102
  %152 = load i32, i32* %naddrs151, align 4, !dbg !1102, !tbaa !1093
  %mul = mul i32 %152, 76, !dbg !1102
  call void @llvm.memset.p0i8.i32(i8* %151, i8 0, i32 %mul, i32 4, i1 false), !dbg !1102
  store i32 0, i32* %j, align 4, !dbg !1103, !tbaa !827
  br label %for.cond152, !dbg !1105

for.cond152:                                      ; preds = %for.inc, %if.end150
  %153 = load i32, i32* %j, align 4, !dbg !1106, !tbaa !827
  %naddrs153 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 11, !dbg !1108
  %154 = load i32, i32* %naddrs153, align 4, !dbg !1108, !tbaa !1093
  %cmp154 = icmp ult i32 %153, %154, !dbg !1109
  br i1 %cmp154, label %for.body155, label %for.end, !dbg !1110

for.body155:                                      ; preds = %for.cond152
  %addrs = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 10, !dbg !1111
  %155 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !1111, !tbaa !1113
  %156 = load i32, i32* %j, align 4, !dbg !1114, !tbaa !827
  %arrayidx156 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %155, i32 %156, !dbg !1115
  %sockaddr = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx156, i32 0, i32 0, !dbg !1116
  %157 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !1116, !tbaa !1117
  %158 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1119, !tbaa !820
  %159 = load i32, i32* %j, align 4, !dbg !1120, !tbaa !827
  %arrayidx157 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %158, i32 %159, !dbg !1119
  %sockaddr158 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx157, i32 0, i32 2, !dbg !1121
  store %struct.sockaddr* %157, %struct.sockaddr** %sockaddr158, align 4, !dbg !1122, !tbaa !1123
  %addrs159 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 10, !dbg !1126
  %160 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs159, align 4, !dbg !1126, !tbaa !1113
  %161 = load i32, i32* %j, align 4, !dbg !1127, !tbaa !827
  %arrayidx160 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %160, i32 %161, !dbg !1128
  %socklen = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx160, i32 0, i32 1, !dbg !1129
  %162 = load i32, i32* %socklen, align 4, !dbg !1129, !tbaa !1130
  %163 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1131, !tbaa !820
  %164 = load i32, i32* %j, align 4, !dbg !1132, !tbaa !827
  %arrayidx161 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %163, i32 %164, !dbg !1131
  %socklen162 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx161, i32 0, i32 3, !dbg !1133
  store i32 %162, i32* %socklen162, align 4, !dbg !1134, !tbaa !1135
  %165 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1136, !tbaa !820
  %166 = load i32, i32* %j, align 4, !dbg !1137, !tbaa !827
  %arrayidx163 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %165, i32 %166, !dbg !1136
  %server = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx163, i32 0, i32 4, !dbg !1138
  %addrs164 = getelementptr inbounds %struct.ngx_url_t, %struct.ngx_url_t* %u, i32 0, i32 10, !dbg !1139
  %167 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs164, align 4, !dbg !1139, !tbaa !1113
  %168 = load i32, i32* %j, align 4, !dbg !1140, !tbaa !827
  %arrayidx165 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %167, i32 %168, !dbg !1141
  %name = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx165, i32 0, i32 2, !dbg !1142
  %169 = bitcast %struct.ngx_str_t* %server to i8*, !dbg !1142
  %170 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !1142
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %169, i8* %170, i32 8, i32 4, i1 false), !dbg !1142, !tbaa.struct !1065
  %171 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1143, !tbaa !820
  %172 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1144, !tbaa !820
  %173 = load i32, i32* %j, align 4, !dbg !1145, !tbaa !827
  %arrayidx166 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %172, i32 %173, !dbg !1144
  %resolver = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx166, i32 0, i32 8, !dbg !1146
  store %struct.ngx_resolver_s* %171, %struct.ngx_resolver_s** %resolver, align 4, !dbg !1147, !tbaa !1148
  br label %for.inc, !dbg !1149

for.inc:                                          ; preds = %for.body155
  %174 = load i32, i32* %j, align 4, !dbg !1150, !tbaa !827
  %inc = add i32 %174, 1, !dbg !1150
  store i32 %inc, i32* %j, align 4, !dbg !1150, !tbaa !827
  br label %for.cond152, !dbg !1151, !llvm.loop !1152

for.end:                                          ; preds = %for.cond152
  br label %for.inc167, !dbg !1154

for.inc167:                                       ; preds = %for.end, %if.end133, %if.end109
  %175 = load i32, i32* %i, align 4, !dbg !1155, !tbaa !827
  %inc168 = add i32 %175, 1, !dbg !1155
  store i32 %inc168, i32* %i, align 4, !dbg !1155, !tbaa !827
  br label %for.cond, !dbg !1156, !llvm.loop !1157

for.end169:                                       ; preds = %for.cond
  %176 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1159, !tbaa !820
  store %struct.ngx_resolver_s* %176, %struct.ngx_resolver_s** %retval, align 4, !dbg !1160
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1160

cleanup:                                          ; preds = %for.end169, %if.then149, %if.end144, %if.else130, %if.then107, %if.then90, %if.then9, %if.then3, %if.then
  %177 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 4, i8* %177) #5, !dbg !1161
  %178 = bitcast %struct.ngx_pool_cleanup_s** %cln to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 4, i8* %178) #5, !dbg !1161
  %179 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 4, i8* %179) #5, !dbg !1161
  %180 = bitcast i32* %j to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 4, i8* %180) #5, !dbg !1161
  %181 = bitcast i32* %i to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 4, i8* %181) #5, !dbg !1161
  %182 = bitcast %struct.ngx_url_t* %u to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 172, i8* %182) #5, !dbg !1161
  %183 = bitcast %struct.ngx_str_t* %s to i8*, !dbg !1161
  call void @llvm.lifetime.end(i64 8, i8* %183) #5, !dbg !1161
  %184 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %retval, align 4, !dbg !1161
  ret %struct.ngx_resolver_s* %184, !dbg !1161
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare %struct.ngx_pool_cleanup_s* @ngx_pool_cleanup_add(%struct.ngx_pool_s*, i32) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_cleanup(i8* %data) #0 !dbg !1162 {
entry:
  %data.addr = alloca i8*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %i = alloca i32, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  store i8* %data, i8** %data.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1164, metadata !824), !dbg !1168
  %0 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1169
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1169
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !1165, metadata !824), !dbg !1170
  %1 = load i8*, i8** %data.addr, align 4, !dbg !1171, !tbaa !820
  %2 = bitcast i8* %1 to %struct.ngx_resolver_s*, !dbg !1171
  store %struct.ngx_resolver_s* %2, %struct.ngx_resolver_s** %r, align 4, !dbg !1170, !tbaa !820
  %3 = bitcast i32* %i to i8*, !dbg !1172
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !1172
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1166, metadata !824), !dbg !1173
  %4 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !1174
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !1174
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !1167, metadata !824), !dbg !1175
  %5 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1176, !tbaa !820
  %tobool = icmp ne %struct.ngx_resolver_s* %5, null, !dbg !1176
  br i1 %tobool, label %if.then, label %if.end38, !dbg !1178

if.then:                                          ; preds = %entry
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1179, !tbaa !820
  %7 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1181, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %7, i32 0, i32 6, !dbg !1182
  call void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %6, %struct.ngx_rbtree_s* %name_rbtree), !dbg !1183
  %8 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1184, !tbaa !820
  %9 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1185, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %9, i32 0, i32 8, !dbg !1186
  call void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %8, %struct.ngx_rbtree_s* %srv_rbtree), !dbg !1187
  %10 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1188, !tbaa !820
  %11 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1189, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %11, i32 0, i32 10, !dbg !1190
  call void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %10, %struct.ngx_rbtree_s* %addr_rbtree), !dbg !1191
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1192, !tbaa !820
  %13 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1193, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %13, i32 0, i32 19, !dbg !1194
  call void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %12, %struct.ngx_rbtree_s* %addr6_rbtree), !dbg !1195
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1196, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %14, i32 0, i32 0, !dbg !1198
  %15 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !1198, !tbaa !882
  %tobool1 = icmp ne %struct.ngx_event_s* %15, null, !dbg !1196
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !1199

if.then2:                                         ; preds = %if.then
  %16 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1200, !tbaa !820
  %event3 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %16, i32 0, i32 0, !dbg !1203
  %17 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event3, align 4, !dbg !1203, !tbaa !882
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %17, i32 0, i32 1, !dbg !1204
  %18 = bitcast i24* %timer_set to i32*, !dbg !1204
  %bf.load = load i32, i32* %18, align 4, !dbg !1204
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !1204
  %bf.clear = and i32 %bf.lshr, 1, !dbg !1204
  %tobool4 = icmp ne i32 %bf.clear, 0, !dbg !1200
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !1205

if.then5:                                         ; preds = %if.then2
  %19 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1206, !tbaa !820
  %event6 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %19, i32 0, i32 0, !dbg !1208
  %20 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event6, align 4, !dbg !1208, !tbaa !882
  call void @ngx_event_del_timer(%struct.ngx_event_s* %20), !dbg !1209
  br label %if.end, !dbg !1210

if.end:                                           ; preds = %if.then5, %if.then2
  %21 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1211, !tbaa !820
  %event7 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %21, i32 0, i32 0, !dbg !1212
  %22 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event7, align 4, !dbg !1212, !tbaa !882
  %23 = bitcast %struct.ngx_event_s* %22 to i8*, !dbg !1211
  call void @free(i8* %23), !dbg !1213
  br label %if.end8, !dbg !1214

if.end8:                                          ; preds = %if.end, %if.then
  %24 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1215, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %24, i32 0, i32 4, !dbg !1216
  %elts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 0, !dbg !1217
  %25 = load i8*, i8** %elts, align 4, !dbg !1217, !tbaa !1218
  %26 = bitcast i8* %25 to %struct.ngx_resolver_connection_t*, !dbg !1215
  store %struct.ngx_resolver_connection_t* %26, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1219, !tbaa !820
  store i32 0, i32* %i, align 4, !dbg !1220, !tbaa !827
  br label %for.cond, !dbg !1222

for.cond:                                         ; preds = %for.inc, %if.end8
  %27 = load i32, i32* %i, align 4, !dbg !1223, !tbaa !827
  %28 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1225, !tbaa !820
  %connections9 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %28, i32 0, i32 4, !dbg !1226
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections9, i32 0, i32 1, !dbg !1227
  %29 = load i32, i32* %nelts, align 4, !dbg !1227, !tbaa !1228
  %cmp = icmp ult i32 %27, %29, !dbg !1229
  br i1 %cmp, label %for.body, label %for.end, !dbg !1230

for.body:                                         ; preds = %for.cond
  %30 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1231, !tbaa !820
  %31 = load i32, i32* %i, align 4, !dbg !1234, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %30, i32 %31, !dbg !1231
  %udp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx, i32 0, i32 0, !dbg !1235
  %32 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp, align 4, !dbg !1235, !tbaa !1236
  %tobool10 = icmp ne %struct.ngx_connection_s* %32, null, !dbg !1231
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !1237

if.then11:                                        ; preds = %for.body
  %33 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1238, !tbaa !820
  %34 = load i32, i32* %i, align 4, !dbg !1240, !tbaa !827
  %arrayidx12 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %33, i32 %34, !dbg !1238
  %udp13 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx12, i32 0, i32 0, !dbg !1241
  %35 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp13, align 4, !dbg !1241, !tbaa !1236
  call void @ngx_close_connection(%struct.ngx_connection_s* %35), !dbg !1242
  br label %if.end14, !dbg !1243

if.end14:                                         ; preds = %if.then11, %for.body
  %36 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1244, !tbaa !820
  %37 = load i32, i32* %i, align 4, !dbg !1246, !tbaa !827
  %arrayidx15 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %36, i32 %37, !dbg !1244
  %tcp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx15, i32 0, i32 1, !dbg !1247
  %38 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp, align 4, !dbg !1247, !tbaa !1248
  %tobool16 = icmp ne %struct.ngx_connection_s* %38, null, !dbg !1244
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !1249

if.then17:                                        ; preds = %if.end14
  %39 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1250, !tbaa !820
  %40 = load i32, i32* %i, align 4, !dbg !1252, !tbaa !827
  %arrayidx18 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %39, i32 %40, !dbg !1250
  %tcp19 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx18, i32 0, i32 1, !dbg !1253
  %41 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp19, align 4, !dbg !1253, !tbaa !1248
  call void @ngx_close_connection(%struct.ngx_connection_s* %41), !dbg !1254
  br label %if.end20, !dbg !1255

if.end20:                                         ; preds = %if.then17, %if.end14
  %42 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1256, !tbaa !820
  %43 = load i32, i32* %i, align 4, !dbg !1258, !tbaa !827
  %arrayidx21 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %42, i32 %43, !dbg !1256
  %read_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx21, i32 0, i32 6, !dbg !1259
  %44 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %read_buf, align 4, !dbg !1259, !tbaa !1260
  %tobool22 = icmp ne %struct.ngx_buf_s* %44, null, !dbg !1256
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !1261

if.then23:                                        ; preds = %if.end20
  %45 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1262, !tbaa !820
  %46 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1264, !tbaa !820
  %47 = load i32, i32* %i, align 4, !dbg !1265, !tbaa !827
  %arrayidx24 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %46, i32 %47, !dbg !1264
  %read_buf25 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx24, i32 0, i32 6, !dbg !1266
  %48 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %read_buf25, align 4, !dbg !1266, !tbaa !1260
  %start = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %48, i32 0, i32 4, !dbg !1267
  %49 = load i8*, i8** %start, align 4, !dbg !1267, !tbaa !1268
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %45, i8* %49), !dbg !1270
  %50 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1271, !tbaa !820
  %51 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1272, !tbaa !820
  %52 = load i32, i32* %i, align 4, !dbg !1273, !tbaa !827
  %arrayidx26 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %51, i32 %52, !dbg !1272
  %read_buf27 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx26, i32 0, i32 6, !dbg !1274
  %53 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %read_buf27, align 4, !dbg !1274, !tbaa !1260
  %54 = bitcast %struct.ngx_buf_s* %53 to i8*, !dbg !1272
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %50, i8* %54), !dbg !1275
  br label %if.end28, !dbg !1276

if.end28:                                         ; preds = %if.then23, %if.end20
  %55 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1277, !tbaa !820
  %56 = load i32, i32* %i, align 4, !dbg !1279, !tbaa !827
  %arrayidx29 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %55, i32 %56, !dbg !1277
  %write_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx29, i32 0, i32 7, !dbg !1280
  %57 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf, align 4, !dbg !1280, !tbaa !1281
  %tobool30 = icmp ne %struct.ngx_buf_s* %57, null, !dbg !1277
  br i1 %tobool30, label %if.then31, label %if.end37, !dbg !1282

if.then31:                                        ; preds = %if.end28
  %58 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1283, !tbaa !820
  %59 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1285, !tbaa !820
  %60 = load i32, i32* %i, align 4, !dbg !1286, !tbaa !827
  %arrayidx32 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %59, i32 %60, !dbg !1285
  %write_buf33 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx32, i32 0, i32 7, !dbg !1287
  %61 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf33, align 4, !dbg !1287, !tbaa !1281
  %start34 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %61, i32 0, i32 4, !dbg !1288
  %62 = load i8*, i8** %start34, align 4, !dbg !1288, !tbaa !1268
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %58, i8* %62), !dbg !1289
  %63 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1290, !tbaa !820
  %64 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !1291, !tbaa !820
  %65 = load i32, i32* %i, align 4, !dbg !1292, !tbaa !827
  %arrayidx35 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %64, i32 %65, !dbg !1291
  %write_buf36 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %arrayidx35, i32 0, i32 7, !dbg !1293
  %66 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf36, align 4, !dbg !1293, !tbaa !1281
  %67 = bitcast %struct.ngx_buf_s* %66 to i8*, !dbg !1291
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %63, i8* %67), !dbg !1294
  br label %if.end37, !dbg !1295

if.end37:                                         ; preds = %if.then31, %if.end28
  br label %for.inc, !dbg !1296

for.inc:                                          ; preds = %if.end37
  %68 = load i32, i32* %i, align 4, !dbg !1297, !tbaa !827
  %inc = add i32 %68, 1, !dbg !1297
  store i32 %inc, i32* %i, align 4, !dbg !1297, !tbaa !827
  br label %for.cond, !dbg !1298, !llvm.loop !1299

for.end:                                          ; preds = %for.cond
  %69 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1301, !tbaa !820
  %70 = bitcast %struct.ngx_resolver_s* %69 to i8*, !dbg !1301
  call void @free(i8* %70), !dbg !1302
  br label %if.end38, !dbg !1303

if.end38:                                         ; preds = %for.end, %entry
  %71 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !1304
  call void @llvm.lifetime.end(i64 4, i8* %71) #5, !dbg !1304
  %72 = bitcast i32* %i to i8*, !dbg !1304
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !1304
  %73 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1304
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !1304
  ret void, !dbg !1304
}

declare i8* @ngx_calloc(i32, %struct.ngx_log_s*) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_rbtree_insert_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !1305 {
entry:
  %temp.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %node.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %p = alloca %struct.ngx_rbtree_node_s**, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %rn_temp = alloca %struct.ngx_resolver_node_t*, align 4
  store %struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %temp.addr, metadata !1307, metadata !824), !dbg !1314
  store %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s** %node.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node.addr, metadata !1308, metadata !824), !dbg !1315
  store %struct.ngx_rbtree_node_s* %sentinel, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel.addr, metadata !1309, metadata !824), !dbg !1316
  %0 = bitcast %struct.ngx_rbtree_node_s*** %p to i8*, !dbg !1317
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1317
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s*** %p, metadata !1310, metadata !824), !dbg !1318
  %1 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !1319
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !1319
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !1312, metadata !824), !dbg !1320
  %2 = bitcast %struct.ngx_resolver_node_t** %rn_temp to i8*, !dbg !1319
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !1319
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn_temp, metadata !1313, metadata !824), !dbg !1321
  br label %for.cond, !dbg !1322

for.cond:                                         ; preds = %if.end19, %entry
  %3 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1323, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %3, i32 0, i32 0, !dbg !1328
  %4 = load i32, i32* %key, align 4, !dbg !1328, !tbaa !1329
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1330, !tbaa !820
  %key1 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %5, i32 0, i32 0, !dbg !1331
  %6 = load i32, i32* %key1, align 4, !dbg !1331, !tbaa !1329
  %cmp = icmp ult i32 %4, %6, !dbg !1332
  br i1 %cmp, label %if.then, label %if.else, !dbg !1333

if.then:                                          ; preds = %for.cond
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1334, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %7, i32 0, i32 1, !dbg !1336
  store %struct.ngx_rbtree_node_s** %left, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1337, !tbaa !820
  br label %if.end15, !dbg !1338

if.else:                                          ; preds = %for.cond
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1339, !tbaa !820
  %key2 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %8, i32 0, i32 0, !dbg !1341
  %9 = load i32, i32* %key2, align 4, !dbg !1341, !tbaa !1329
  %10 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1342, !tbaa !820
  %key3 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %10, i32 0, i32 0, !dbg !1343
  %11 = load i32, i32* %key3, align 4, !dbg !1343, !tbaa !1329
  %cmp4 = icmp ugt i32 %9, %11, !dbg !1344
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !1345

if.then5:                                         ; preds = %if.else
  %12 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1346, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %12, i32 0, i32 2, !dbg !1348
  store %struct.ngx_rbtree_node_s** %right, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1349, !tbaa !820
  br label %if.end, !dbg !1350

if.else6:                                         ; preds = %if.else
  %13 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1351, !tbaa !820
  %14 = bitcast %struct.ngx_rbtree_node_s* %13 to i8*, !dbg !1351
  %add.ptr = getelementptr inbounds i8, i8* %14, i32 0, !dbg !1351
  %15 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !1351
  store %struct.ngx_resolver_node_t* %15, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !1353, !tbaa !820
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1354, !tbaa !820
  %17 = bitcast %struct.ngx_rbtree_node_s* %16 to i8*, !dbg !1354
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i32 0, !dbg !1354
  %18 = bitcast i8* %add.ptr7 to %struct.ngx_resolver_node_t*, !dbg !1354
  store %struct.ngx_resolver_node_t* %18, %struct.ngx_resolver_node_t** %rn_temp, align 4, !dbg !1355, !tbaa !820
  %19 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !1356, !tbaa !820
  %name = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %19, i32 0, i32 2, !dbg !1357
  %20 = load i8*, i8** %name, align 4, !dbg !1357, !tbaa !1358
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn_temp, align 4, !dbg !1361, !tbaa !820
  %name8 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 2, !dbg !1362
  %22 = load i8*, i8** %name8, align 4, !dbg !1362, !tbaa !1358
  %23 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !1363, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %23, i32 0, i32 4, !dbg !1364
  %24 = load i16, i16* %nlen, align 4, !dbg !1364, !tbaa !1365
  %conv = zext i16 %24 to i32, !dbg !1363
  %25 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn_temp, align 4, !dbg !1366, !tbaa !820
  %nlen9 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %25, i32 0, i32 4, !dbg !1367
  %26 = load i16, i16* %nlen9, align 4, !dbg !1367, !tbaa !1365
  %conv10 = zext i16 %26 to i32, !dbg !1366
  %call = call i32 @ngx_memn2cmp(i8* %20, i8* %22, i32 %conv, i32 %conv10), !dbg !1368
  %cmp11 = icmp slt i32 %call, 0, !dbg !1369
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !1370

cond.true:                                        ; preds = %if.else6
  %27 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1371, !tbaa !820
  %left13 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %27, i32 0, i32 1, !dbg !1372
  br label %cond.end, !dbg !1370

cond.false:                                       ; preds = %if.else6
  %28 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1373, !tbaa !820
  %right14 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %28, i32 0, i32 2, !dbg !1374
  br label %cond.end, !dbg !1370

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ngx_rbtree_node_s** [ %left13, %cond.true ], [ %right14, %cond.false ], !dbg !1370
  store %struct.ngx_rbtree_node_s** %cond, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1375, !tbaa !820
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then5
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %29 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1376, !tbaa !820
  %30 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %29, align 4, !dbg !1378, !tbaa !820
  %31 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1379, !tbaa !820
  %cmp16 = icmp eq %struct.ngx_rbtree_node_s* %30, %31, !dbg !1380
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1381

if.then18:                                        ; preds = %if.end15
  br label %for.end, !dbg !1382

if.end19:                                         ; preds = %if.end15
  %32 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1384, !tbaa !820
  %33 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %32, align 4, !dbg !1385, !tbaa !820
  store %struct.ngx_rbtree_node_s* %33, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1386, !tbaa !820
  br label %for.cond, !dbg !1387, !llvm.loop !1388

for.end:                                          ; preds = %if.then18
  %34 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1391, !tbaa !820
  %35 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1392, !tbaa !820
  store %struct.ngx_rbtree_node_s* %34, %struct.ngx_rbtree_node_s** %35, align 4, !dbg !1393, !tbaa !820
  %36 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1394, !tbaa !820
  %37 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1395, !tbaa !820
  %parent = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %37, i32 0, i32 3, !dbg !1396
  store %struct.ngx_rbtree_node_s* %36, %struct.ngx_rbtree_node_s** %parent, align 4, !dbg !1397, !tbaa !1398
  %38 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1399, !tbaa !820
  %39 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1400, !tbaa !820
  %left20 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %39, i32 0, i32 1, !dbg !1401
  store %struct.ngx_rbtree_node_s* %38, %struct.ngx_rbtree_node_s** %left20, align 4, !dbg !1402, !tbaa !1403
  %40 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1404, !tbaa !820
  %41 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1405, !tbaa !820
  %right21 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %41, i32 0, i32 2, !dbg !1406
  store %struct.ngx_rbtree_node_s* %40, %struct.ngx_rbtree_node_s** %right21, align 4, !dbg !1407, !tbaa !1408
  %42 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1409, !tbaa !820
  %color = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %42, i32 0, i32 4, !dbg !1409
  store i8 1, i8* %color, align 4, !dbg !1409, !tbaa !897
  %43 = bitcast %struct.ngx_resolver_node_t** %rn_temp to i8*, !dbg !1410
  call void @llvm.lifetime.end(i64 4, i8* %43) #5, !dbg !1410
  %44 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !1410
  call void @llvm.lifetime.end(i64 4, i8* %44) #5, !dbg !1410
  %45 = bitcast %struct.ngx_rbtree_node_s*** %p to i8*, !dbg !1410
  call void @llvm.lifetime.end(i64 4, i8* %45) #5, !dbg !1410
  ret void, !dbg !1410
}

declare void @ngx_rbtree_insert_value(%struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s*) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_rbtree_insert_addr6_value(%struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #0 !dbg !1411 {
entry:
  %temp.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %node.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %p = alloca %struct.ngx_rbtree_node_s**, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %rn_temp = alloca %struct.ngx_resolver_node_t*, align 4
  store %struct.ngx_rbtree_node_s* %temp, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %temp.addr, metadata !1413, metadata !824), !dbg !1419
  store %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s** %node.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node.addr, metadata !1414, metadata !824), !dbg !1420
  store %struct.ngx_rbtree_node_s* %sentinel, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel.addr, metadata !1415, metadata !824), !dbg !1421
  %0 = bitcast %struct.ngx_rbtree_node_s*** %p to i8*, !dbg !1422
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1422
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s*** %p, metadata !1416, metadata !824), !dbg !1423
  %1 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !1424
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !1424
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !1417, metadata !824), !dbg !1425
  %2 = bitcast %struct.ngx_resolver_node_t** %rn_temp to i8*, !dbg !1424
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !1424
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn_temp, metadata !1418, metadata !824), !dbg !1426
  br label %for.cond, !dbg !1427

for.cond:                                         ; preds = %if.end15, %entry
  %3 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1428, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %3, i32 0, i32 0, !dbg !1433
  %4 = load i32, i32* %key, align 4, !dbg !1433, !tbaa !1329
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1434, !tbaa !820
  %key1 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %5, i32 0, i32 0, !dbg !1435
  %6 = load i32, i32* %key1, align 4, !dbg !1435, !tbaa !1329
  %cmp = icmp ult i32 %4, %6, !dbg !1436
  br i1 %cmp, label %if.then, label %if.else, !dbg !1437

if.then:                                          ; preds = %for.cond
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1438, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %7, i32 0, i32 1, !dbg !1440
  store %struct.ngx_rbtree_node_s** %left, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1441, !tbaa !820
  br label %if.end12, !dbg !1442

if.else:                                          ; preds = %for.cond
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1443, !tbaa !820
  %key2 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %8, i32 0, i32 0, !dbg !1445
  %9 = load i32, i32* %key2, align 4, !dbg !1445, !tbaa !1329
  %10 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1446, !tbaa !820
  %key3 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %10, i32 0, i32 0, !dbg !1447
  %11 = load i32, i32* %key3, align 4, !dbg !1447, !tbaa !1329
  %cmp4 = icmp ugt i32 %9, %11, !dbg !1448
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !1449

if.then5:                                         ; preds = %if.else
  %12 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1450, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %12, i32 0, i32 2, !dbg !1452
  store %struct.ngx_rbtree_node_s** %right, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1453, !tbaa !820
  br label %if.end, !dbg !1454

if.else6:                                         ; preds = %if.else
  %13 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1455, !tbaa !820
  %14 = bitcast %struct.ngx_rbtree_node_s* %13 to i8*, !dbg !1455
  %add.ptr = getelementptr inbounds i8, i8* %14, i32 0, !dbg !1455
  %15 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !1455
  store %struct.ngx_resolver_node_t* %15, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !1457, !tbaa !820
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1458, !tbaa !820
  %17 = bitcast %struct.ngx_rbtree_node_s* %16 to i8*, !dbg !1458
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i32 0, !dbg !1458
  %18 = bitcast i8* %add.ptr7 to %struct.ngx_resolver_node_t*, !dbg !1458
  store %struct.ngx_resolver_node_t* %18, %struct.ngx_resolver_node_t** %rn_temp, align 4, !dbg !1459, !tbaa !820
  %19 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !1460, !tbaa !820
  %addr6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %19, i32 0, i32 3, !dbg !1460
  %20 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !1460
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn_temp, align 4, !dbg !1460, !tbaa !820
  %addr68 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 3, !dbg !1460
  %22 = bitcast %struct.in6_addr* %addr68 to i8*, !dbg !1460
  %call = call i32 @memcmp(i8* %20, i8* %22, i32 16), !dbg !1460
  %cmp9 = icmp slt i32 %call, 0, !dbg !1461
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !1462

cond.true:                                        ; preds = %if.else6
  %23 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1463, !tbaa !820
  %left10 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %23, i32 0, i32 1, !dbg !1464
  br label %cond.end, !dbg !1462

cond.false:                                       ; preds = %if.else6
  %24 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1465, !tbaa !820
  %right11 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %24, i32 0, i32 2, !dbg !1466
  br label %cond.end, !dbg !1462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ngx_rbtree_node_s** [ %left10, %cond.true ], [ %right11, %cond.false ], !dbg !1462
  store %struct.ngx_rbtree_node_s** %cond, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1467, !tbaa !820
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then5
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %25 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1468, !tbaa !820
  %26 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %25, align 4, !dbg !1470, !tbaa !820
  %27 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1471, !tbaa !820
  %cmp13 = icmp eq %struct.ngx_rbtree_node_s* %26, %27, !dbg !1472
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !1473

if.then14:                                        ; preds = %if.end12
  br label %for.end, !dbg !1474

if.end15:                                         ; preds = %if.end12
  %28 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1476, !tbaa !820
  %29 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %28, align 4, !dbg !1477, !tbaa !820
  store %struct.ngx_rbtree_node_s* %29, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1478, !tbaa !820
  br label %for.cond, !dbg !1479, !llvm.loop !1480

for.end:                                          ; preds = %if.then14
  %30 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1483, !tbaa !820
  %31 = load %struct.ngx_rbtree_node_s**, %struct.ngx_rbtree_node_s*** %p, align 4, !dbg !1484, !tbaa !820
  store %struct.ngx_rbtree_node_s* %30, %struct.ngx_rbtree_node_s** %31, align 4, !dbg !1485, !tbaa !820
  %32 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %temp.addr, align 4, !dbg !1486, !tbaa !820
  %33 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1487, !tbaa !820
  %parent = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %33, i32 0, i32 3, !dbg !1488
  store %struct.ngx_rbtree_node_s* %32, %struct.ngx_rbtree_node_s** %parent, align 4, !dbg !1489, !tbaa !1398
  %34 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1490, !tbaa !820
  %35 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1491, !tbaa !820
  %left16 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %35, i32 0, i32 1, !dbg !1492
  store %struct.ngx_rbtree_node_s* %34, %struct.ngx_rbtree_node_s** %left16, align 4, !dbg !1493, !tbaa !1403
  %36 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !1494, !tbaa !820
  %37 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1495, !tbaa !820
  %right17 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %37, i32 0, i32 2, !dbg !1496
  store %struct.ngx_rbtree_node_s* %36, %struct.ngx_rbtree_node_s** %right17, align 4, !dbg !1497, !tbaa !1408
  %38 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !1498, !tbaa !820
  %color = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %38, i32 0, i32 4, !dbg !1498
  store i8 1, i8* %color, align 4, !dbg !1498, !tbaa !897
  %39 = bitcast %struct.ngx_resolver_node_t** %rn_temp to i8*, !dbg !1499
  call void @llvm.lifetime.end(i64 4, i8* %39) #5, !dbg !1499
  %40 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !1499
  call void @llvm.lifetime.end(i64 4, i8* %40) #5, !dbg !1499
  %41 = bitcast %struct.ngx_rbtree_node_s*** %p to i8*, !dbg !1499
  call void @llvm.lifetime.end(i64 4, i8* %41) #5, !dbg !1499
  ret void, !dbg !1499
}

; Function Attrs: nounwind
define internal void @ngx_resolver_resend_handler(%struct.ngx_event_s* %ev) #0 !dbg !1500 {
entry:
  %ev.addr = alloca %struct.ngx_event_s*, align 4
  %timer = alloca i32, align 4
  %atimer = alloca i32, align 4
  %stimer = alloca i32, align 4
  %ntimer = alloca i32, align 4
  %a6timer = alloca i32, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  store %struct.ngx_event_s* %ev, %struct.ngx_event_s** %ev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %ev.addr, metadata !1502, metadata !824), !dbg !1509
  %0 = bitcast i32* %timer to i8*, !dbg !1510
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !1503, metadata !824), !dbg !1511
  %1 = bitcast i32* %atimer to i8*, !dbg !1510
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %atimer, metadata !1504, metadata !824), !dbg !1512
  %2 = bitcast i32* %stimer to i8*, !dbg !1510
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %stimer, metadata !1505, metadata !824), !dbg !1513
  %3 = bitcast i32* %ntimer to i8*, !dbg !1510
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %ntimer, metadata !1506, metadata !824), !dbg !1514
  %4 = bitcast i32* %a6timer to i8*, !dbg !1515
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !1515
  call void @llvm.dbg.declare(metadata i32* %a6timer, metadata !1507, metadata !824), !dbg !1516
  %5 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1517
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !1517
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !1508, metadata !824), !dbg !1518
  %6 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !1519, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %6, i32 0, i32 0, !dbg !1520
  %7 = load i8*, i8** %data, align 4, !dbg !1520, !tbaa !929
  %8 = bitcast i8* %7 to %struct.ngx_resolver_s*, !dbg !1519
  store %struct.ngx_resolver_s* %8, %struct.ngx_resolver_s** %r, align 4, !dbg !1521, !tbaa !820
  %9 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1522, !tbaa !820
  %10 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1523, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %10, i32 0, i32 6, !dbg !1524
  %11 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1525, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %11, i32 0, i32 12, !dbg !1526
  %call = call i32 @ngx_resolver_resend(%struct.ngx_resolver_s* %9, %struct.ngx_rbtree_s* %name_rbtree, %struct.ngx_queue_s* %name_resend_queue), !dbg !1527
  store i32 %call, i32* %ntimer, align 4, !dbg !1528, !tbaa !1529
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1530, !tbaa !820
  %13 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1531, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %13, i32 0, i32 8, !dbg !1532
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1533, !tbaa !820
  %srv_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %14, i32 0, i32 13, !dbg !1534
  %call1 = call i32 @ngx_resolver_resend(%struct.ngx_resolver_s* %12, %struct.ngx_rbtree_s* %srv_rbtree, %struct.ngx_queue_s* %srv_resend_queue), !dbg !1535
  store i32 %call1, i32* %stimer, align 4, !dbg !1536, !tbaa !1529
  %15 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1537, !tbaa !820
  %16 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1538, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %16, i32 0, i32 10, !dbg !1539
  %17 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1540, !tbaa !820
  %addr_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %17, i32 0, i32 14, !dbg !1541
  %call2 = call i32 @ngx_resolver_resend(%struct.ngx_resolver_s* %15, %struct.ngx_rbtree_s* %addr_rbtree, %struct.ngx_queue_s* %addr_resend_queue), !dbg !1542
  store i32 %call2, i32* %atimer, align 4, !dbg !1543, !tbaa !1529
  %18 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1544, !tbaa !820
  %19 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1545, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %19, i32 0, i32 19, !dbg !1546
  %20 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1547, !tbaa !820
  %addr6_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %20, i32 0, i32 21, !dbg !1548
  %call3 = call i32 @ngx_resolver_resend(%struct.ngx_resolver_s* %18, %struct.ngx_rbtree_s* %addr6_rbtree, %struct.ngx_queue_s* %addr6_resend_queue), !dbg !1549
  store i32 %call3, i32* %a6timer, align 4, !dbg !1550, !tbaa !1529
  %21 = load i32, i32* %ntimer, align 4, !dbg !1551, !tbaa !1529
  store i32 %21, i32* %timer, align 4, !dbg !1552, !tbaa !1529
  %22 = load i32, i32* %timer, align 4, !dbg !1553, !tbaa !1529
  %cmp = icmp eq i32 %22, 0, !dbg !1555
  br i1 %cmp, label %if.then, label %if.else, !dbg !1556

if.then:                                          ; preds = %entry
  %23 = load i32, i32* %atimer, align 4, !dbg !1557, !tbaa !1529
  store i32 %23, i32* %timer, align 4, !dbg !1559, !tbaa !1529
  br label %if.end6, !dbg !1560

if.else:                                          ; preds = %entry
  %24 = load i32, i32* %atimer, align 4, !dbg !1561, !tbaa !1529
  %tobool = icmp ne i32 %24, 0, !dbg !1561
  br i1 %tobool, label %if.then4, label %if.end, !dbg !1563

if.then4:                                         ; preds = %if.else
  %25 = load i32, i32* %timer, align 4, !dbg !1564, !tbaa !1529
  %26 = load i32, i32* %atimer, align 4, !dbg !1564, !tbaa !1529
  %cmp5 = icmp sgt i32 %25, %26, !dbg !1564
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !1564

cond.true:                                        ; preds = %if.then4
  %27 = load i32, i32* %atimer, align 4, !dbg !1564, !tbaa !1529
  br label %cond.end, !dbg !1564

cond.false:                                       ; preds = %if.then4
  %28 = load i32, i32* %timer, align 4, !dbg !1564, !tbaa !1529
  br label %cond.end, !dbg !1564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ %28, %cond.false ], !dbg !1564
  store i32 %cond, i32* %timer, align 4, !dbg !1566, !tbaa !1529
  br label %if.end, !dbg !1567

if.end:                                           ; preds = %cond.end, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %29 = load i32, i32* %timer, align 4, !dbg !1568, !tbaa !1529
  %cmp7 = icmp eq i32 %29, 0, !dbg !1570
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !1571

if.then8:                                         ; preds = %if.end6
  %30 = load i32, i32* %stimer, align 4, !dbg !1572, !tbaa !1529
  store i32 %30, i32* %timer, align 4, !dbg !1574, !tbaa !1529
  br label %if.end18, !dbg !1575

if.else9:                                         ; preds = %if.end6
  %31 = load i32, i32* %stimer, align 4, !dbg !1576, !tbaa !1529
  %tobool10 = icmp ne i32 %31, 0, !dbg !1576
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !1578

if.then11:                                        ; preds = %if.else9
  %32 = load i32, i32* %timer, align 4, !dbg !1579, !tbaa !1529
  %33 = load i32, i32* %stimer, align 4, !dbg !1579, !tbaa !1529
  %cmp12 = icmp sgt i32 %32, %33, !dbg !1579
  br i1 %cmp12, label %cond.true13, label %cond.false14, !dbg !1579

cond.true13:                                      ; preds = %if.then11
  %34 = load i32, i32* %stimer, align 4, !dbg !1579, !tbaa !1529
  br label %cond.end15, !dbg !1579

cond.false14:                                     ; preds = %if.then11
  %35 = load i32, i32* %timer, align 4, !dbg !1579, !tbaa !1529
  br label %cond.end15, !dbg !1579

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ %34, %cond.true13 ], [ %35, %cond.false14 ], !dbg !1579
  store i32 %cond16, i32* %timer, align 4, !dbg !1581, !tbaa !1529
  br label %if.end17, !dbg !1582

if.end17:                                         ; preds = %cond.end15, %if.else9
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then8
  %36 = load i32, i32* %timer, align 4, !dbg !1583, !tbaa !1529
  %cmp19 = icmp eq i32 %36, 0, !dbg !1585
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !1586

if.then20:                                        ; preds = %if.end18
  %37 = load i32, i32* %a6timer, align 4, !dbg !1587, !tbaa !1529
  store i32 %37, i32* %timer, align 4, !dbg !1589, !tbaa !1529
  br label %if.end30, !dbg !1590

if.else21:                                        ; preds = %if.end18
  %38 = load i32, i32* %a6timer, align 4, !dbg !1591, !tbaa !1529
  %tobool22 = icmp ne i32 %38, 0, !dbg !1591
  br i1 %tobool22, label %if.then23, label %if.end29, !dbg !1593

if.then23:                                        ; preds = %if.else21
  %39 = load i32, i32* %timer, align 4, !dbg !1594, !tbaa !1529
  %40 = load i32, i32* %a6timer, align 4, !dbg !1594, !tbaa !1529
  %cmp24 = icmp sgt i32 %39, %40, !dbg !1594
  br i1 %cmp24, label %cond.true25, label %cond.false26, !dbg !1594

cond.true25:                                      ; preds = %if.then23
  %41 = load i32, i32* %a6timer, align 4, !dbg !1594, !tbaa !1529
  br label %cond.end27, !dbg !1594

cond.false26:                                     ; preds = %if.then23
  %42 = load i32, i32* %timer, align 4, !dbg !1594, !tbaa !1529
  br label %cond.end27, !dbg !1594

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ %41, %cond.true25 ], [ %42, %cond.false26 ], !dbg !1594
  store i32 %cond28, i32* %timer, align 4, !dbg !1596, !tbaa !1529
  br label %if.end29, !dbg !1597

if.end29:                                         ; preds = %cond.end27, %if.else21
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then20
  %43 = load i32, i32* %timer, align 4, !dbg !1598, !tbaa !1529
  %tobool31 = icmp ne i32 %43, 0, !dbg !1598
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !1600

if.then32:                                        ; preds = %if.end30
  %44 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1601, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %44, i32 0, i32 0, !dbg !1603
  %45 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !1603, !tbaa !882
  %46 = load i32, i32* %timer, align 4, !dbg !1604, !tbaa !1529
  %mul = mul nsw i32 %46, 1000, !dbg !1605
  call void @ngx_event_add_timer(%struct.ngx_event_s* %45, i32 %mul), !dbg !1606
  br label %if.end33, !dbg !1607

if.end33:                                         ; preds = %if.then32, %if.end30
  %47 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %47) #5, !dbg !1608
  %48 = bitcast i32* %a6timer to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %48) #5, !dbg !1608
  %49 = bitcast i32* %ntimer to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %49) #5, !dbg !1608
  %50 = bitcast i32* %stimer to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %50) #5, !dbg !1608
  %51 = bitcast i32* %atimer to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %51) #5, !dbg !1608
  %52 = bitcast i32* %timer to i8*, !dbg !1608
  call void @llvm.lifetime.end(i64 4, i8* %52) #5, !dbg !1608
  ret void, !dbg !1608
}

; Function Attrs: inlinehint nounwind
define internal i32 @ngx_array_init(%struct.ngx_array_t* %array, %struct.ngx_pool_s* %pool, i32 %n, i32 %size) #4 !dbg !1609 {
entry:
  %retval = alloca i32, align 4
  %array.addr = alloca %struct.ngx_array_t*, align 4
  %pool.addr = alloca %struct.ngx_pool_s*, align 4
  %n.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store %struct.ngx_array_t* %array, %struct.ngx_array_t** %array.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_array_t** %array.addr, metadata !1613, metadata !824), !dbg !1617
  store %struct.ngx_pool_s* %pool, %struct.ngx_pool_s** %pool.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_pool_s** %pool.addr, metadata !1614, metadata !824), !dbg !1618
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1615, metadata !824), !dbg !1619
  store i32 %size, i32* %size.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1616, metadata !824), !dbg !1620
  %0 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1621, !tbaa !820
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %0, i32 0, i32 1, !dbg !1622
  store i32 0, i32* %nelts, align 4, !dbg !1623, !tbaa !1624
  %1 = load i32, i32* %size.addr, align 4, !dbg !1625, !tbaa !827
  %2 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1626, !tbaa !820
  %size1 = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %2, i32 0, i32 2, !dbg !1627
  store i32 %1, i32* %size1, align 4, !dbg !1628, !tbaa !1629
  %3 = load i32, i32* %n.addr, align 4, !dbg !1630, !tbaa !827
  %4 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1631, !tbaa !820
  %nalloc = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %4, i32 0, i32 3, !dbg !1632
  store i32 %3, i32* %nalloc, align 4, !dbg !1633, !tbaa !1634
  %5 = load %struct.ngx_pool_s*, %struct.ngx_pool_s** %pool.addr, align 4, !dbg !1635, !tbaa !820
  %6 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1636, !tbaa !820
  %pool2 = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %6, i32 0, i32 4, !dbg !1637
  store %struct.ngx_pool_s* %5, %struct.ngx_pool_s** %pool2, align 4, !dbg !1638, !tbaa !1639
  %7 = load %struct.ngx_pool_s*, %struct.ngx_pool_s** %pool.addr, align 4, !dbg !1640, !tbaa !820
  %8 = load i32, i32* %n.addr, align 4, !dbg !1641, !tbaa !827
  %9 = load i32, i32* %size.addr, align 4, !dbg !1642, !tbaa !827
  %mul = mul i32 %8, %9, !dbg !1643
  %call = call i8* @ngx_palloc(%struct.ngx_pool_s* %7, i32 %mul), !dbg !1644
  %10 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1645, !tbaa !820
  %elts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %10, i32 0, i32 0, !dbg !1646
  store i8* %call, i8** %elts, align 4, !dbg !1647, !tbaa !1648
  %11 = load %struct.ngx_array_t*, %struct.ngx_array_t** %array.addr, align 4, !dbg !1649, !tbaa !820
  %elts3 = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %11, i32 0, i32 0, !dbg !1651
  %12 = load i8*, i8** %elts3, align 4, !dbg !1651, !tbaa !1648
  %cmp = icmp eq i8* %12, null, !dbg !1652
  br i1 %cmp, label %if.then, label %if.end, !dbg !1653

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !1654
  br label %return, !dbg !1654

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1656
  br label %return, !dbg !1656

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !1657
  ret i32 %13, !dbg !1657
}

declare i32 @strncmp(i8*, i8*, i32) #3

declare i32 @ngx_parse_time(%struct.ngx_str_t*, i32) #3

declare void @ngx_conf_log_error(i32, %struct.ngx_conf_s*, i32, i8*, ...) #3

declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i32, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #2

declare i32 @ngx_parse_url(%struct.ngx_pool_s*, %struct.ngx_url_t*) #3

declare i8* @ngx_array_push_n(%struct.ngx_array_t*, i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind
define %struct.ngx_resolver_ctx_s* @ngx_resolve_start(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %temp) #0 !dbg !1658 {
entry:
  %retval = alloca %struct.ngx_resolver_ctx_s*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %temp.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %addr = alloca i32, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !1662, metadata !824), !dbg !1666
  store %struct.ngx_resolver_ctx_s* %temp, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %temp.addr, metadata !1663, metadata !824), !dbg !1667
  %0 = bitcast i32* %addr to i8*, !dbg !1668
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1668
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !1664, metadata !824), !dbg !1669
  %1 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !1670
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !1670
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !1665, metadata !824), !dbg !1671
  %2 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1672, !tbaa !820
  %tobool = icmp ne %struct.ngx_resolver_ctx_s* %2, null, !dbg !1672
  br i1 %tobool, label %if.then, label %if.end9, !dbg !1674

if.then:                                          ; preds = %entry
  %3 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1675, !tbaa !820
  %name = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %3, i32 0, i32 5, !dbg !1677
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1678
  %4 = load i8*, i8** %data, align 4, !dbg !1678, !tbaa !1679
  %5 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1684, !tbaa !820
  %name1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %5, i32 0, i32 5, !dbg !1685
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name1, i32 0, i32 0, !dbg !1686
  %6 = load i32, i32* %len, align 4, !dbg !1686, !tbaa !1687
  %call = call i32 @ngx_inet_addr(i8* %4, i32 %6), !dbg !1688
  store i32 %call, i32* %addr, align 4, !dbg !1689, !tbaa !827
  %7 = load i32, i32* %addr, align 4, !dbg !1690, !tbaa !827
  %cmp = icmp ne i32 %7, -1, !dbg !1692
  br i1 %cmp, label %if.then2, label %if.end, !dbg !1693

if.then2:                                         ; preds = %if.then
  %8 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1694, !tbaa !820
  %9 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1696, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %9, i32 0, i32 1, !dbg !1697
  store %struct.ngx_resolver_s* %8, %struct.ngx_resolver_s** %resolver, align 4, !dbg !1698, !tbaa !1699
  %10 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1700, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %10, i32 0, i32 4, !dbg !1701
  store i32 0, i32* %state, align 4, !dbg !1702, !tbaa !1703
  %11 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1704, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %11, i32 0, i32 8, !dbg !1705
  store i32 1, i32* %naddrs, align 4, !dbg !1706, !tbaa !1707
  %12 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1708, !tbaa !820
  %addr3 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %12, i32 0, i32 10, !dbg !1709
  %13 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1710, !tbaa !820
  %addrs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %13, i32 0, i32 9, !dbg !1711
  store %struct.ngx_resolver_addr_t* %addr3, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !1712, !tbaa !1713
  %14 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1714, !tbaa !820
  %sin = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %14, i32 0, i32 11, !dbg !1715
  %15 = bitcast %struct.sockaddr_in* %sin to %struct.sockaddr*, !dbg !1716
  %16 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1717, !tbaa !820
  %addr4 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %16, i32 0, i32 10, !dbg !1718
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr4, i32 0, i32 0, !dbg !1719
  store %struct.sockaddr* %15, %struct.sockaddr** %sockaddr, align 4, !dbg !1720, !tbaa !1721
  %17 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1722, !tbaa !820
  %addr5 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %17, i32 0, i32 10, !dbg !1723
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr5, i32 0, i32 1, !dbg !1724
  store i32 16, i32* %socklen, align 4, !dbg !1725, !tbaa !1726
  %18 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1727, !tbaa !820
  %sin6 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %18, i32 0, i32 11, !dbg !1727
  %19 = bitcast %struct.sockaddr_in* %sin6 to i8*, !dbg !1727
  call void @llvm.memset.p0i8.i32(i8* %19, i8 0, i32 16, i32 4, i1 false), !dbg !1727
  %20 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1728, !tbaa !820
  %sin7 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %20, i32 0, i32 11, !dbg !1729
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin7, i32 0, i32 0, !dbg !1730
  store i16 2, i16* %sin_family, align 4, !dbg !1731, !tbaa !1732
  %21 = load i32, i32* %addr, align 4, !dbg !1733, !tbaa !827
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1734, !tbaa !820
  %sin8 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %22, i32 0, i32 11, !dbg !1735
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin8, i32 0, i32 2, !dbg !1736
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !1737
  store i32 %21, i32* %s_addr, align 4, !dbg !1738, !tbaa !1739
  %23 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1740, !tbaa !820
  %quick = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %23, i32 0, i32 18, !dbg !1741
  store i32 1, i32* %quick, align 4, !dbg !1742, !tbaa !1743
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %temp.addr, align 4, !dbg !1744, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %24, %struct.ngx_resolver_ctx_s** %retval, align 4, !dbg !1745
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1745

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !1746

if.end9:                                          ; preds = %if.end, %entry
  %25 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1747, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %25, i32 0, i32 4, !dbg !1749
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 1, !dbg !1750
  %26 = load i32, i32* %nelts, align 4, !dbg !1750, !tbaa !1228
  %cmp10 = icmp eq i32 %26, 0, !dbg !1751
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1752

if.then11:                                        ; preds = %if.end9
  store %struct.ngx_resolver_ctx_s* inttoptr (i32 -1 to %struct.ngx_resolver_ctx_s*), %struct.ngx_resolver_ctx_s** %retval, align 4, !dbg !1753
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1753

if.end12:                                         ; preds = %if.end9
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1755, !tbaa !820
  %call13 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %27, i32 120), !dbg !1756
  %28 = bitcast i8* %call13 to %struct.ngx_resolver_ctx_s*, !dbg !1756
  store %struct.ngx_resolver_ctx_s* %28, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !1757, !tbaa !820
  %29 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !1758, !tbaa !820
  %tobool14 = icmp ne %struct.ngx_resolver_ctx_s* %29, null, !dbg !1758
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !1760

if.then15:                                        ; preds = %if.end12
  %30 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1761, !tbaa !820
  %31 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !1763, !tbaa !820
  %resolver16 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %31, i32 0, i32 1, !dbg !1764
  store %struct.ngx_resolver_s* %30, %struct.ngx_resolver_s** %resolver16, align 4, !dbg !1765, !tbaa !1699
  br label %if.end17, !dbg !1766

if.end17:                                         ; preds = %if.then15, %if.end12
  %32 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !1767, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %32, %struct.ngx_resolver_ctx_s** %retval, align 4, !dbg !1768
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1768

cleanup:                                          ; preds = %if.end17, %if.then11, %if.then2
  %33 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !1769
  call void @llvm.lifetime.end(i64 4, i8* %33) #5, !dbg !1769
  %34 = bitcast i32* %addr to i8*, !dbg !1769
  call void @llvm.lifetime.end(i64 4, i8* %34) #5, !dbg !1769
  %35 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %retval, align 4, !dbg !1769
  ret %struct.ngx_resolver_ctx_s* %35, !dbg !1769
}

declare i32 @ngx_inet_addr(i8*, i32) #3

; Function Attrs: nounwind
define internal i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %r, i32 %size) #0 !dbg !1770 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %size.addr = alloca i32, align 4
  %p = alloca i8*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !1774, metadata !824), !dbg !1777
  store i32 %size, i32* %size.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1775, metadata !824), !dbg !1778
  %0 = bitcast i8** %p to i8*, !dbg !1779
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1779
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1776, metadata !824), !dbg !1780
  %1 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1781, !tbaa !820
  %2 = load i32, i32* %size.addr, align 4, !dbg !1782, !tbaa !827
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %1, i32 %2), !dbg !1783
  store i8* %call, i8** %p, align 4, !dbg !1784, !tbaa !820
  %3 = load i8*, i8** %p, align 4, !dbg !1785, !tbaa !820
  %tobool = icmp ne i8* %3, null, !dbg !1785
  br i1 %tobool, label %if.then, label %if.end, !dbg !1787

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %p, align 4, !dbg !1788, !tbaa !820
  %5 = load i32, i32* %size.addr, align 4, !dbg !1788, !tbaa !827
  call void @llvm.memset.p0i8.i32(i8* %4, i8 0, i32 %5, i32 1, i1 false), !dbg !1788
  br label %if.end, !dbg !1790

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8*, i8** %p, align 4, !dbg !1791, !tbaa !820
  %7 = bitcast i8** %p to i8*, !dbg !1792
  call void @llvm.lifetime.end(i64 4, i8* %7) #5, !dbg !1792
  ret i8* %6, !dbg !1793
}

; Function Attrs: nounwind
define i32 @ngx_resolve_name(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !1794 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %slen = alloca i32, align 4
  %rc = alloca i32, align 4
  %name = alloca %struct.ngx_str_t, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !1798, metadata !824), !dbg !1803
  %0 = bitcast i32* %slen to i8*, !dbg !1804
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1804
  call void @llvm.dbg.declare(metadata i32* %slen, metadata !1799, metadata !824), !dbg !1805
  %1 = bitcast i32* %rc to i8*, !dbg !1806
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !1806
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !1800, metadata !824), !dbg !1807
  %2 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !1808
  call void @llvm.lifetime.start(i64 8, i8* %2) #5, !dbg !1808
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %name, metadata !1801, metadata !824), !dbg !1809
  %3 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1810
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !1810
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !1802, metadata !824), !dbg !1811
  %4 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1812, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %4, i32 0, i32 1, !dbg !1813
  %5 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !1813, !tbaa !1699
  store %struct.ngx_resolver_s* %5, %struct.ngx_resolver_s** %r, align 4, !dbg !1814, !tbaa !820
  %6 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1815, !tbaa !820
  %name1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %6, i32 0, i32 5, !dbg !1817
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name1, i32 0, i32 0, !dbg !1818
  %7 = load i32, i32* %len, align 4, !dbg !1818, !tbaa !1687
  %cmp = icmp ugt i32 %7, 0, !dbg !1819
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1820

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1821, !tbaa !820
  %name2 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %8, i32 0, i32 5, !dbg !1822
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name2, i32 0, i32 1, !dbg !1823
  %9 = load i8*, i8** %data, align 4, !dbg !1823, !tbaa !1679
  %10 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1824, !tbaa !820
  %name3 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %10, i32 0, i32 5, !dbg !1825
  %len4 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name3, i32 0, i32 0, !dbg !1826
  %11 = load i32, i32* %len4, align 4, !dbg !1826, !tbaa !1687
  %sub = sub i32 %11, 1, !dbg !1827
  %arrayidx = getelementptr inbounds i8, i8* %9, i32 %sub, !dbg !1821
  %12 = load i8, i8* %arrayidx, align 1, !dbg !1821, !tbaa !1828
  %conv = zext i8 %12 to i32, !dbg !1821
  %cmp5 = icmp eq i32 %conv, 46, !dbg !1829
  br i1 %cmp5, label %if.then, label %if.end, !dbg !1830

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1831, !tbaa !820
  %name7 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %13, i32 0, i32 5, !dbg !1833
  %len8 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name7, i32 0, i32 0, !dbg !1834
  %14 = load i32, i32* %len8, align 4, !dbg !1835, !tbaa !1687
  %dec = add i32 %14, -1, !dbg !1835
  store i32 %dec, i32* %len8, align 4, !dbg !1835, !tbaa !1687
  br label %if.end, !dbg !1836

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %15 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1837, !tbaa !820
  %quick = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %15, i32 0, i32 18, !dbg !1839
  %16 = load i32, i32* %quick, align 4, !dbg !1839, !tbaa !1743
  %tobool = icmp ne i32 %16, 0, !dbg !1837
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !1840

if.then9:                                         ; preds = %if.end
  %17 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1841, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %17, i32 0, i32 15, !dbg !1843
  %18 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !1843, !tbaa !1844
  %19 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1845, !tbaa !820
  call void %18(%struct.ngx_resolver_ctx_s* %19), !dbg !1841
  store i32 0, i32* %retval, align 4, !dbg !1846
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1846

if.end10:                                         ; preds = %if.end
  %20 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1847, !tbaa !820
  %service = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %20, i32 0, i32 6, !dbg !1849
  %len11 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service, i32 0, i32 0, !dbg !1850
  %21 = load i32, i32* %len11, align 4, !dbg !1850, !tbaa !1851
  %tobool12 = icmp ne i32 %21, 0, !dbg !1847
  br i1 %tobool12, label %if.then13, label %if.else55, !dbg !1852

if.then13:                                        ; preds = %if.end10
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1853, !tbaa !820
  %service14 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %22, i32 0, i32 6, !dbg !1855
  %len15 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service14, i32 0, i32 0, !dbg !1856
  %23 = load i32, i32* %len15, align 4, !dbg !1856, !tbaa !1851
  store i32 %23, i32* %slen, align 4, !dbg !1857, !tbaa !827
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1858, !tbaa !820
  %service16 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %24, i32 0, i32 6, !dbg !1860
  %data17 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service16, i32 0, i32 1, !dbg !1861
  %25 = load i8*, i8** %data17, align 4, !dbg !1861, !tbaa !1862
  %26 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1863, !tbaa !820
  %service18 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %26, i32 0, i32 6, !dbg !1864
  %data19 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service18, i32 0, i32 1, !dbg !1865
  %27 = load i8*, i8** %data19, align 4, !dbg !1865, !tbaa !1862
  %28 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1866, !tbaa !820
  %service20 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %28, i32 0, i32 6, !dbg !1867
  %len21 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service20, i32 0, i32 0, !dbg !1868
  %29 = load i32, i32* %len21, align 4, !dbg !1868, !tbaa !1851
  %add.ptr = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !1869
  %call = call i8* @ngx_strlchr(i8* %25, i8* %add.ptr, i8 zeroext 46), !dbg !1870
  %cmp22 = icmp eq i8* %call, null, !dbg !1871
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !1872

if.then24:                                        ; preds = %if.then13
  %30 = load i32, i32* %slen, align 4, !dbg !1873, !tbaa !827
  %add = add i32 %30, 6, !dbg !1873
  store i32 %add, i32* %slen, align 4, !dbg !1873, !tbaa !827
  br label %if.end25, !dbg !1875

if.end25:                                         ; preds = %if.then24, %if.then13
  %31 = load i32, i32* %slen, align 4, !dbg !1876, !tbaa !827
  %add26 = add i32 %31, 1, !dbg !1877
  %32 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1878, !tbaa !820
  %name27 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %32, i32 0, i32 5, !dbg !1879
  %len28 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name27, i32 0, i32 0, !dbg !1880
  %33 = load i32, i32* %len28, align 4, !dbg !1880, !tbaa !1687
  %add29 = add i32 %add26, %33, !dbg !1881
  %len30 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !1882
  store i32 %add29, i32* %len30, align 4, !dbg !1883, !tbaa !1005
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1884, !tbaa !820
  %len31 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !1885
  %35 = load i32, i32* %len31, align 4, !dbg !1885, !tbaa !1005
  %call32 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %34, i32 %35), !dbg !1886
  %data33 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1887
  store i8* %call32, i8** %data33, align 4, !dbg !1888, !tbaa !997
  %data34 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1889
  %36 = load i8*, i8** %data34, align 4, !dbg !1889, !tbaa !997
  %cmp35 = icmp eq i8* %36, null, !dbg !1891
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !1892

if.then37:                                        ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !1893
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1893

if.end38:                                         ; preds = %if.end25
  %37 = load i32, i32* %slen, align 4, !dbg !1895, !tbaa !827
  %38 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1897, !tbaa !820
  %service39 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %38, i32 0, i32 6, !dbg !1898
  %len40 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service39, i32 0, i32 0, !dbg !1899
  %39 = load i32, i32* %len40, align 4, !dbg !1899, !tbaa !1851
  %cmp41 = icmp eq i32 %37, %39, !dbg !1900
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !1901

if.then43:                                        ; preds = %if.end38
  %data44 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1902
  %40 = load i8*, i8** %data44, align 4, !dbg !1902, !tbaa !997
  %41 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1904, !tbaa !820
  %service45 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %41, i32 0, i32 6, !dbg !1905
  %42 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1906, !tbaa !820
  %name46 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %42, i32 0, i32 5, !dbg !1907
  %call47 = call i8* (i8*, i8*, ...) @ngx_sprintf(i8* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), %struct.ngx_str_t* %service45, %struct.ngx_str_t* %name46), !dbg !1908
  br label %if.end52, !dbg !1909

if.else:                                          ; preds = %if.end38
  %data48 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1910
  %43 = load i8*, i8** %data48, align 4, !dbg !1910, !tbaa !997
  %44 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1912, !tbaa !820
  %service49 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %44, i32 0, i32 6, !dbg !1913
  %45 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1914, !tbaa !820
  %name50 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %45, i32 0, i32 5, !dbg !1915
  %call51 = call i8* (i8*, i8*, ...) @ngx_sprintf(i8* %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), %struct.ngx_str_t* %service49, %struct.ngx_str_t* %name50), !dbg !1916
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then43
  %46 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1917, !tbaa !820
  %47 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1918, !tbaa !820
  %call53 = call i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %46, %struct.ngx_resolver_ctx_s* %47, %struct.ngx_str_t* %name), !dbg !1919
  store i32 %call53, i32* %rc, align 4, !dbg !1920, !tbaa !827
  %48 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1921, !tbaa !820
  %data54 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !1922
  %49 = load i8*, i8** %data54, align 4, !dbg !1922, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %48, i8* %49), !dbg !1923
  br label %if.end58, !dbg !1924

if.else55:                                        ; preds = %if.end10
  %50 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1925, !tbaa !820
  %51 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1927, !tbaa !820
  %52 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1928, !tbaa !820
  %name56 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %52, i32 0, i32 5, !dbg !1929
  %call57 = call i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %50, %struct.ngx_resolver_ctx_s* %51, %struct.ngx_str_t* %name56), !dbg !1930
  store i32 %call57, i32* %rc, align 4, !dbg !1931, !tbaa !827
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.end52
  %53 = load i32, i32* %rc, align 4, !dbg !1932, !tbaa !827
  %cmp59 = icmp eq i32 %53, 0, !dbg !1934
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !1935

if.then61:                                        ; preds = %if.end58
  store i32 0, i32* %retval, align 4, !dbg !1936
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1936

if.end62:                                         ; preds = %if.end58
  %54 = load i32, i32* %rc, align 4, !dbg !1938, !tbaa !827
  %cmp63 = icmp eq i32 %54, -2, !dbg !1940
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !1941

if.then65:                                        ; preds = %if.end62
  store i32 0, i32* %retval, align 4, !dbg !1942
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1942

if.end66:                                         ; preds = %if.end62
  %55 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1944, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %55, i32 0, i32 20, !dbg !1946
  %56 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !1946, !tbaa !1947
  %tobool67 = icmp ne %struct.ngx_event_s* %56, null, !dbg !1944
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !1948

if.then68:                                        ; preds = %if.end66
  %57 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1949, !tbaa !820
  %58 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1951, !tbaa !820
  %event69 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %58, i32 0, i32 20, !dbg !1952
  %59 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event69, align 4, !dbg !1952, !tbaa !1947
  %60 = bitcast %struct.ngx_event_s* %59 to i8*, !dbg !1951
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %57, i8* %60), !dbg !1953
  br label %if.end70, !dbg !1954

if.end70:                                         ; preds = %if.then68, %if.end66
  %61 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !1955, !tbaa !820
  %62 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !1956, !tbaa !820
  %63 = bitcast %struct.ngx_resolver_ctx_s* %62 to i8*, !dbg !1956
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %61, i8* %63), !dbg !1957
  store i32 -1, i32* %retval, align 4, !dbg !1958
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1958

cleanup:                                          ; preds = %if.end70, %if.then65, %if.then61, %if.then37, %if.then9
  %64 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !1959
  call void @llvm.lifetime.end(i64 4, i8* %64) #5, !dbg !1959
  %65 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !1959
  call void @llvm.lifetime.end(i64 8, i8* %65) #5, !dbg !1959
  %66 = bitcast i32* %rc to i8*, !dbg !1959
  call void @llvm.lifetime.end(i64 4, i8* %66) #5, !dbg !1959
  %67 = bitcast i32* %slen to i8*, !dbg !1959
  call void @llvm.lifetime.end(i64 4, i8* %67) #5, !dbg !1959
  %68 = load i32, i32* %retval, align 4, !dbg !1959
  ret i32 %68, !dbg !1959
}

; Function Attrs: inlinehint nounwind
define internal i8* @ngx_strlchr(i8* %p, i8* %last, i8 zeroext %c) #4 !dbg !1960 {
entry:
  %retval = alloca i8*, align 4
  %p.addr = alloca i8*, align 4
  %last.addr = alloca i8*, align 4
  %c.addr = alloca i8, align 1
  store i8* %p, i8** %p.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1964, metadata !824), !dbg !1967
  store i8* %last, i8** %last.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %last.addr, metadata !1965, metadata !824), !dbg !1968
  store i8 %c, i8* %c.addr, align 1, !tbaa !1828
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !1966, metadata !824), !dbg !1969
  br label %while.cond, !dbg !1970

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %p.addr, align 4, !dbg !1971, !tbaa !820
  %1 = load i8*, i8** %last.addr, align 4, !dbg !1972, !tbaa !820
  %cmp = icmp ult i8* %0, %1, !dbg !1973
  br i1 %cmp, label %while.body, label %while.end, !dbg !1970

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %p.addr, align 4, !dbg !1974, !tbaa !820
  %3 = load i8, i8* %2, align 1, !dbg !1977, !tbaa !1828
  %conv = zext i8 %3 to i32, !dbg !1977
  %4 = load i8, i8* %c.addr, align 1, !dbg !1978, !tbaa !1828
  %conv1 = zext i8 %4 to i32, !dbg !1978
  %cmp2 = icmp eq i32 %conv, %conv1, !dbg !1979
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1980

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 4, !dbg !1981, !tbaa !820
  store i8* %5, i8** %retval, align 4, !dbg !1983
  br label %return, !dbg !1983

if.end:                                           ; preds = %while.body
  %6 = load i8*, i8** %p.addr, align 4, !dbg !1984, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !1984
  store i8* %incdec.ptr, i8** %p.addr, align 4, !dbg !1984, !tbaa !820
  br label %while.cond, !dbg !1970, !llvm.loop !1985

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 4, !dbg !1987
  br label %return, !dbg !1987

return:                                           ; preds = %while.end, %if.then
  %7 = load i8*, i8** %retval, align 4, !dbg !1988
  ret i8* %7, !dbg !1988
}

; Function Attrs: nounwind
define internal i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %r, i32 %size) #0 !dbg !1989 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %size.addr = alloca i32, align 4
  %p = alloca i8*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !1991, metadata !824), !dbg !1994
  store i32 %size, i32* %size.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !1992, metadata !824), !dbg !1995
  %0 = bitcast i8** %p to i8*, !dbg !1996
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !1996
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1993, metadata !824), !dbg !1997
  %1 = load i32, i32* %size.addr, align 4, !dbg !1998, !tbaa !827
  %2 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !1999, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %2, i32 0, i32 2, !dbg !2000
  %3 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !2000, !tbaa !965
  %call = call i8* @ngx_alloc(i32 %1, %struct.ngx_log_s* %3), !dbg !2001
  store i8* %call, i8** %p, align 4, !dbg !2002, !tbaa !820
  %4 = load i8*, i8** %p, align 4, !dbg !2003, !tbaa !820
  %5 = bitcast i8** %p to i8*, !dbg !2004
  call void @llvm.lifetime.end(i64 4, i8* %5) #5, !dbg !2004
  ret i8* %4, !dbg !2005
}

declare i8* @ngx_sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind
define internal i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_str_t* %name) #0 !dbg !2006 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %hash = alloca i32, align 4
  %rc = alloca i32, align 4
  %cname = alloca %struct.ngx_str_t, align 4
  %i = alloca i32, align 4
  %naddrs = alloca i32, align 4
  %resend_queue = alloca %struct.ngx_queue_s*, align 4
  %expire_queue = alloca %struct.ngx_queue_s*, align 4
  %tree = alloca %struct.ngx_rbtree_s*, align 4
  %next = alloca %struct.ngx_resolver_ctx_s*, align 4
  %last = alloca %struct.ngx_resolver_ctx_s*, align 4
  %addrs = alloca %struct.ngx_resolver_addr_t*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !2010, metadata !824), !dbg !2026
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !2011, metadata !824), !dbg !2027
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !2012, metadata !824), !dbg !2028
  %0 = bitcast i32* %hash to i8*, !dbg !2029
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !2029
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !2013, metadata !824), !dbg !2030
  %1 = bitcast i32* %rc to i8*, !dbg !2031
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !2031
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !2014, metadata !824), !dbg !2032
  %2 = bitcast %struct.ngx_str_t* %cname to i8*, !dbg !2033
  call void @llvm.lifetime.start(i64 8, i8* %2) #5, !dbg !2033
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %cname, metadata !2015, metadata !824), !dbg !2034
  %3 = bitcast i32* %i to i8*, !dbg !2035
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !2035
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2016, metadata !824), !dbg !2036
  %4 = bitcast i32* %naddrs to i8*, !dbg !2035
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !2035
  call void @llvm.dbg.declare(metadata i32* %naddrs, metadata !2017, metadata !824), !dbg !2037
  %5 = bitcast %struct.ngx_queue_s** %resend_queue to i8*, !dbg !2038
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !2038
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %resend_queue, metadata !2018, metadata !824), !dbg !2039
  %6 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !2038
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !2038
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %expire_queue, metadata !2019, metadata !824), !dbg !2040
  %7 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !2041
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !2041
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree, metadata !2020, metadata !824), !dbg !2042
  %8 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !2043
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !2043
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %next, metadata !2022, metadata !824), !dbg !2044
  %9 = bitcast %struct.ngx_resolver_ctx_s** %last to i8*, !dbg !2043
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !2043
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %last, metadata !2023, metadata !824), !dbg !2045
  %10 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !2046
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !2046
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_addr_t** %addrs, metadata !2024, metadata !824), !dbg !2047
  %11 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !2048
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !2048
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !2025, metadata !824), !dbg !2049
  %12 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2050, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %12, i32 0, i32 1, !dbg !2051
  %13 = load i8*, i8** %data, align 4, !dbg !2051, !tbaa !997
  %14 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2052, !tbaa !820
  %data1 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %14, i32 0, i32 1, !dbg !2053
  %15 = load i8*, i8** %data1, align 4, !dbg !2053, !tbaa !997
  %16 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2054, !tbaa !820
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %16, i32 0, i32 0, !dbg !2055
  %17 = load i32, i32* %len, align 4, !dbg !2055, !tbaa !1005
  call void @ngx_strlow(i8* %13, i8* %15, i32 %17), !dbg !2056
  %18 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2057, !tbaa !820
  %data2 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %18, i32 0, i32 1, !dbg !2058
  %19 = load i8*, i8** %data2, align 4, !dbg !2058, !tbaa !997
  %20 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2059, !tbaa !820
  %len3 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %20, i32 0, i32 0, !dbg !2060
  %21 = load i32, i32* %len3, align 4, !dbg !2060, !tbaa !1005
  %call = call i32 @ngx_crc32_short(i8* %19, i32 %21), !dbg !2061
  store i32 %call, i32* %hash, align 4, !dbg !2062, !tbaa !827
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2063, !tbaa !820
  %service = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %22, i32 0, i32 6, !dbg !2065
  %len4 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service, i32 0, i32 0, !dbg !2066
  %23 = load i32, i32* %len4, align 4, !dbg !2066, !tbaa !1851
  %tobool = icmp ne i32 %23, 0, !dbg !2063
  br i1 %tobool, label %if.then, label %if.else, !dbg !2067

if.then:                                          ; preds = %entry
  %24 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2068, !tbaa !820
  %25 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2070, !tbaa !820
  %26 = load i32, i32* %hash, align 4, !dbg !2071, !tbaa !827
  %call5 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_srv(%struct.ngx_resolver_s* %24, %struct.ngx_str_t* %25, i32 %26), !dbg !2072
  store %struct.ngx_resolver_node_t* %call5, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2073, !tbaa !820
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2074, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %27, i32 0, i32 8, !dbg !2075
  store %struct.ngx_rbtree_s* %srv_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !2076, !tbaa !820
  %28 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2077, !tbaa !820
  %srv_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %28, i32 0, i32 13, !dbg !2078
  store %struct.ngx_queue_s* %srv_resend_queue, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !2079, !tbaa !820
  %29 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2080, !tbaa !820
  %srv_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %29, i32 0, i32 16, !dbg !2081
  store %struct.ngx_queue_s* %srv_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !2082, !tbaa !820
  br label %if.end, !dbg !2083

if.else:                                          ; preds = %entry
  %30 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2084, !tbaa !820
  %31 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2086, !tbaa !820
  %32 = load i32, i32* %hash, align 4, !dbg !2087, !tbaa !827
  %call6 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_name(%struct.ngx_resolver_s* %30, %struct.ngx_str_t* %31, i32 %32), !dbg !2088
  store %struct.ngx_resolver_node_t* %call6, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2089, !tbaa !820
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2090, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %33, i32 0, i32 6, !dbg !2091
  store %struct.ngx_rbtree_s* %name_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !2092, !tbaa !820
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2093, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %34, i32 0, i32 12, !dbg !2094
  store %struct.ngx_queue_s* %name_resend_queue, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !2095, !tbaa !820
  %35 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2096, !tbaa !820
  %name_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %35, i32 0, i32 15, !dbg !2097
  store %struct.ngx_queue_s* %name_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !2098, !tbaa !820
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %36 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2099, !tbaa !820
  %tobool7 = icmp ne %struct.ngx_resolver_node_t* %36, null, !dbg !2099
  br i1 %tobool7, label %if.then8, label %if.else238, !dbg !2101

if.then8:                                         ; preds = %if.end
  %37 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2102, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %37, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2105, !tbaa !820
  br label %for.cond, !dbg !2106

for.cond:                                         ; preds = %for.inc, %if.then8
  %38 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2107, !tbaa !820
  %next9 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %38, i32 0, i32 0, !dbg !2109
  %39 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next9, align 4, !dbg !2109, !tbaa !2110
  %tobool10 = icmp ne %struct.ngx_resolver_ctx_s* %39, null, !dbg !2111
  br i1 %tobool10, label %for.body, label %for.end, !dbg !2111

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !2111

for.inc:                                          ; preds = %for.body
  %40 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2112, !tbaa !820
  %next11 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %40, i32 0, i32 0, !dbg !2113
  %41 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next11, align 4, !dbg !2113, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %41, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2114, !tbaa !820
  br label %for.cond, !dbg !2115, !llvm.loop !2116

for.end:                                          ; preds = %for.cond
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2118, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %42, i32 0, i32 16, !dbg !2120
  %43 = load i32, i32* %valid, align 4, !dbg !2120, !tbaa !2121
  %44 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !2122, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %44, i32 0, i32 0, !dbg !2122
  %45 = load volatile i32, i32* %sec, align 4, !dbg !2122, !tbaa !2123
  %cmp = icmp sge i32 %43, %45, !dbg !2125
  br i1 %cmp, label %if.then12, label %if.end132, !dbg !2126

if.then12:                                        ; preds = %for.end
  %46 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2127, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %46, i32 0, i32 1, !dbg !2127
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !2127
  %47 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !2127, !tbaa !904
  %48 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2127, !tbaa !820
  %queue13 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %48, i32 0, i32 1, !dbg !2127
  %next14 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue13, i32 0, i32 1, !dbg !2127
  %49 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next14, align 4, !dbg !2127, !tbaa !905
  %prev15 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %49, i32 0, i32 0, !dbg !2127
  store %struct.ngx_queue_s* %47, %struct.ngx_queue_s** %prev15, align 4, !dbg !2127, !tbaa !904
  %50 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2127, !tbaa !820
  %queue16 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %50, i32 0, i32 1, !dbg !2127
  %next17 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue16, i32 0, i32 1, !dbg !2127
  %51 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next17, align 4, !dbg !2127, !tbaa !905
  %52 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2127, !tbaa !820
  %queue18 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %52, i32 0, i32 1, !dbg !2127
  %prev19 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue18, i32 0, i32 0, !dbg !2127
  %53 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev19, align 4, !dbg !2127, !tbaa !904
  %next20 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %53, i32 0, i32 1, !dbg !2127
  store %struct.ngx_queue_s* %51, %struct.ngx_queue_s** %next20, align 4, !dbg !2127, !tbaa !905
  %54 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !2129, !tbaa !820
  %sec21 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %54, i32 0, i32 0, !dbg !2129
  %55 = load volatile i32, i32* %sec21, align 4, !dbg !2129, !tbaa !2123
  %56 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2130, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %56, i32 0, i32 25, !dbg !2131
  %57 = load i32, i32* %expire, align 4, !dbg !2131, !tbaa !954
  %add = add nsw i32 %55, %57, !dbg !2132
  %58 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2133, !tbaa !820
  %expire22 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %58, i32 0, i32 15, !dbg !2134
  store i32 %add, i32* %expire22, align 4, !dbg !2135, !tbaa !2136
  %59 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !2137, !tbaa !820
  %next23 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %59, i32 0, i32 1, !dbg !2137
  %60 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next23, align 4, !dbg !2137, !tbaa !905
  %61 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2137, !tbaa !820
  %queue24 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %61, i32 0, i32 1, !dbg !2137
  %next25 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue24, i32 0, i32 1, !dbg !2137
  store %struct.ngx_queue_s* %60, %struct.ngx_queue_s** %next25, align 4, !dbg !2137, !tbaa !905
  %62 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2137, !tbaa !820
  %queue26 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %62, i32 0, i32 1, !dbg !2137
  %63 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2137, !tbaa !820
  %queue27 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %63, i32 0, i32 1, !dbg !2137
  %next28 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue27, i32 0, i32 1, !dbg !2137
  %64 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next28, align 4, !dbg !2137, !tbaa !905
  %prev29 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %64, i32 0, i32 0, !dbg !2137
  store %struct.ngx_queue_s* %queue26, %struct.ngx_queue_s** %prev29, align 4, !dbg !2137, !tbaa !904
  %65 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !2137, !tbaa !820
  %66 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2137, !tbaa !820
  %queue30 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %66, i32 0, i32 1, !dbg !2137
  %prev31 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue30, i32 0, i32 0, !dbg !2137
  store %struct.ngx_queue_s* %65, %struct.ngx_queue_s** %prev31, align 4, !dbg !2137, !tbaa !904
  %67 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2137, !tbaa !820
  %queue32 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %67, i32 0, i32 1, !dbg !2137
  %68 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !2137, !tbaa !820
  %next33 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %68, i32 0, i32 1, !dbg !2137
  store %struct.ngx_queue_s* %queue32, %struct.ngx_queue_s** %next33, align 4, !dbg !2137, !tbaa !905
  %69 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2138, !tbaa !820
  %naddrs34 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %69, i32 0, i32 10, !dbg !2139
  %70 = load i16, i16* %naddrs34, align 2, !dbg !2139, !tbaa !2140
  %conv = zext i16 %70 to i32, !dbg !2138
  %cmp35 = icmp eq i32 %conv, 65535, !dbg !2141
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !2142

cond.true:                                        ; preds = %if.then12
  br label %cond.end, !dbg !2142

cond.false:                                       ; preds = %if.then12
  %71 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2143, !tbaa !820
  %naddrs37 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %71, i32 0, i32 10, !dbg !2144
  %72 = load i16, i16* %naddrs37, align 2, !dbg !2144, !tbaa !2140
  %conv38 = zext i16 %72 to i32, !dbg !2143
  br label %cond.end, !dbg !2142

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv38, %cond.false ], !dbg !2142
  store i32 %cond, i32* %naddrs, align 4, !dbg !2145, !tbaa !827
  %73 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2146, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %73, i32 0, i32 14, !dbg !2147
  %74 = load i16, i16* %naddrs6, align 4, !dbg !2147, !tbaa !2148
  %conv39 = zext i16 %74 to i32, !dbg !2146
  %cmp40 = icmp eq i32 %conv39, 65535, !dbg !2149
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !2150

cond.true42:                                      ; preds = %cond.end
  br label %cond.end46, !dbg !2150

cond.false43:                                     ; preds = %cond.end
  %75 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2151, !tbaa !820
  %naddrs644 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %75, i32 0, i32 14, !dbg !2152
  %76 = load i16, i16* %naddrs644, align 4, !dbg !2152, !tbaa !2148
  %conv45 = zext i16 %76 to i32, !dbg !2151
  br label %cond.end46, !dbg !2150

cond.end46:                                       ; preds = %cond.false43, %cond.true42
  %cond47 = phi i32 [ 0, %cond.true42 ], [ %conv45, %cond.false43 ], !dbg !2150
  %77 = load i32, i32* %naddrs, align 4, !dbg !2153, !tbaa !827
  %add48 = add i32 %77, %cond47, !dbg !2153
  store i32 %add48, i32* %naddrs, align 4, !dbg !2153, !tbaa !827
  %78 = load i32, i32* %naddrs, align 4, !dbg !2154, !tbaa !827
  %tobool49 = icmp ne i32 %78, 0, !dbg !2154
  br i1 %tobool49, label %if.then50, label %if.end90, !dbg !2156

if.then50:                                        ; preds = %cond.end46
  %79 = load i32, i32* %naddrs, align 4, !dbg !2157, !tbaa !827
  %cmp51 = icmp eq i32 %79, 1, !dbg !2160
  br i1 %cmp51, label %land.lhs.true, label %if.else58, !dbg !2161

land.lhs.true:                                    ; preds = %if.then50
  %80 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2162, !tbaa !820
  %naddrs53 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %80, i32 0, i32 10, !dbg !2163
  %81 = load i16, i16* %naddrs53, align 2, !dbg !2163, !tbaa !2140
  %conv54 = zext i16 %81 to i32, !dbg !2162
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !2164
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !2165

if.then57:                                        ; preds = %land.lhs.true
  store %struct.ngx_resolver_addr_t* null, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2166, !tbaa !820
  br label %if.end64, !dbg !2168

if.else58:                                        ; preds = %land.lhs.true, %if.then50
  %82 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2169, !tbaa !820
  %83 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2171, !tbaa !820
  %call59 = call %struct.ngx_resolver_addr_t* @ngx_resolver_export(%struct.ngx_resolver_s* %82, %struct.ngx_resolver_node_t* %83, i32 1), !dbg !2172
  store %struct.ngx_resolver_addr_t* %call59, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2173, !tbaa !820
  %84 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2174, !tbaa !820
  %cmp60 = icmp eq %struct.ngx_resolver_addr_t* %84, null, !dbg !2176
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2177

if.then62:                                        ; preds = %if.else58
  store i32 -1, i32* %retval, align 4, !dbg !2178
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2178

if.end63:                                         ; preds = %if.else58
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then57
  %85 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2180, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %85, i32 0, i32 20, !dbg !2181
  %86 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !2181, !tbaa !2182
  %87 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2183, !tbaa !820
  %next65 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %87, i32 0, i32 0, !dbg !2184
  store %struct.ngx_resolver_ctx_s* %86, %struct.ngx_resolver_ctx_s** %next65, align 4, !dbg !2185, !tbaa !2110
  %88 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2186, !tbaa !820
  %waiting66 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %88, i32 0, i32 20, !dbg !2187
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting66, align 4, !dbg !2188, !tbaa !2182
  br label %do.body, !dbg !2189, !llvm.loop !2190

do.body:                                          ; preds = %do.cond, %if.end64
  %89 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2192, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %89, i32 0, i32 4, !dbg !2194
  store i32 0, i32* %state, align 4, !dbg !2195, !tbaa !1703
  %90 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2196, !tbaa !820
  %valid67 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %90, i32 0, i32 16, !dbg !2197
  %91 = load i32, i32* %valid67, align 4, !dbg !2197, !tbaa !2121
  %92 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2198, !tbaa !820
  %valid68 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %92, i32 0, i32 7, !dbg !2199
  store i32 %91, i32* %valid68, align 4, !dbg !2200, !tbaa !2201
  %93 = load i32, i32* %naddrs, align 4, !dbg !2202, !tbaa !827
  %94 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2203, !tbaa !820
  %naddrs69 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %94, i32 0, i32 8, !dbg !2204
  store i32 %93, i32* %naddrs69, align 4, !dbg !2205, !tbaa !1707
  %95 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2206, !tbaa !820
  %cmp70 = icmp eq %struct.ngx_resolver_addr_t* %95, null, !dbg !2208
  br i1 %cmp70, label %if.then72, label %if.else80, !dbg !2209

if.then72:                                        ; preds = %do.body
  %96 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2210, !tbaa !820
  %addr = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %96, i32 0, i32 10, !dbg !2212
  %97 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2213, !tbaa !820
  %addrs73 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %97, i32 0, i32 9, !dbg !2214
  store %struct.ngx_resolver_addr_t* %addr, %struct.ngx_resolver_addr_t** %addrs73, align 4, !dbg !2215, !tbaa !1713
  %98 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2216, !tbaa !820
  %sin = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %98, i32 0, i32 11, !dbg !2217
  %99 = bitcast %struct.sockaddr_in* %sin to %struct.sockaddr*, !dbg !2218
  %100 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2219, !tbaa !820
  %addr74 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %100, i32 0, i32 10, !dbg !2220
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr74, i32 0, i32 0, !dbg !2221
  store %struct.sockaddr* %99, %struct.sockaddr** %sockaddr, align 4, !dbg !2222, !tbaa !1721
  %101 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2223, !tbaa !820
  %addr75 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %101, i32 0, i32 10, !dbg !2224
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr75, i32 0, i32 1, !dbg !2225
  store i32 16, i32* %socklen, align 4, !dbg !2226, !tbaa !1726
  %102 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2227, !tbaa !820
  %sin76 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %102, i32 0, i32 11, !dbg !2227
  %103 = bitcast %struct.sockaddr_in* %sin76 to i8*, !dbg !2227
  call void @llvm.memset.p0i8.i32(i8* %103, i8 0, i32 16, i32 4, i1 false), !dbg !2227
  %104 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2228, !tbaa !820
  %sin77 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %104, i32 0, i32 11, !dbg !2229
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin77, i32 0, i32 0, !dbg !2230
  store i16 2, i16* %sin_family, align 4, !dbg !2231, !tbaa !1732
  %105 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2232, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %105, i32 0, i32 8, !dbg !2233
  %addr78 = bitcast %union.anon.0* %u to i32*, !dbg !2234
  %106 = load i32, i32* %addr78, align 4, !dbg !2234, !tbaa !827
  %107 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2235, !tbaa !820
  %sin79 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %107, i32 0, i32 11, !dbg !2236
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin79, i32 0, i32 2, !dbg !2237
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !2238
  store i32 %106, i32* %s_addr, align 4, !dbg !2239, !tbaa !1739
  br label %if.end82, !dbg !2240

if.else80:                                        ; preds = %do.body
  %108 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2241, !tbaa !820
  %109 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2243, !tbaa !820
  %addrs81 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %109, i32 0, i32 9, !dbg !2244
  store %struct.ngx_resolver_addr_t* %108, %struct.ngx_resolver_addr_t** %addrs81, align 4, !dbg !2245, !tbaa !1713
  br label %if.end82

if.end82:                                         ; preds = %if.else80, %if.then72
  %110 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2246, !tbaa !820
  %next83 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %110, i32 0, i32 0, !dbg !2247
  %111 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next83, align 4, !dbg !2247, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %111, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2248, !tbaa !820
  %112 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2249, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %112, i32 0, i32 15, !dbg !2250
  %113 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !2250, !tbaa !1844
  %114 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2251, !tbaa !820
  call void %113(%struct.ngx_resolver_ctx_s* %114), !dbg !2249
  %115 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2252, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %115, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2253, !tbaa !820
  br label %do.cond, !dbg !2254

do.cond:                                          ; preds = %if.end82
  %116 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2255, !tbaa !820
  %tobool84 = icmp ne %struct.ngx_resolver_ctx_s* %116, null, !dbg !2254
  br i1 %tobool84, label %do.body, label %do.end, !dbg !2254, !llvm.loop !2190

do.end:                                           ; preds = %do.cond
  %117 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2256, !tbaa !820
  %cmp85 = icmp ne %struct.ngx_resolver_addr_t* %117, null, !dbg !2258
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !2259

if.then87:                                        ; preds = %do.end
  %118 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2260, !tbaa !820
  %119 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2262, !tbaa !820
  %sockaddr88 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %119, i32 0, i32 0, !dbg !2263
  %120 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr88, align 4, !dbg !2263, !tbaa !2264
  %121 = bitcast %struct.sockaddr* %120 to i8*, !dbg !2262
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %118, i8* %121), !dbg !2265
  %122 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2266, !tbaa !820
  %123 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !2267, !tbaa !820
  %124 = bitcast %struct.ngx_resolver_addr_t* %123 to i8*, !dbg !2267
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %122, i8* %124), !dbg !2268
  br label %if.end89, !dbg !2269

if.end89:                                         ; preds = %if.then87, %do.end
  store i32 0, i32* %retval, align 4, !dbg !2270
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2270

if.end90:                                         ; preds = %cond.end46
  %125 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2271, !tbaa !820
  %nsrvs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %125, i32 0, i32 11, !dbg !2273
  %126 = load i16, i16* %nsrvs, align 4, !dbg !2273, !tbaa !2274
  %tobool91 = icmp ne i16 %126, 0, !dbg !2271
  br i1 %tobool91, label %if.then92, label %if.end101, !dbg !2275

if.then92:                                        ; preds = %if.end90
  %127 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2276, !tbaa !820
  %waiting93 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %127, i32 0, i32 20, !dbg !2278
  %128 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting93, align 4, !dbg !2278, !tbaa !2182
  %129 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2279, !tbaa !820
  %next94 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %129, i32 0, i32 0, !dbg !2280
  store %struct.ngx_resolver_ctx_s* %128, %struct.ngx_resolver_ctx_s** %next94, align 4, !dbg !2281, !tbaa !2110
  %130 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2282, !tbaa !820
  %waiting95 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %130, i32 0, i32 20, !dbg !2283
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting95, align 4, !dbg !2284, !tbaa !2182
  br label %do.body96, !dbg !2285, !llvm.loop !2286

do.body96:                                        ; preds = %do.cond98, %if.then92
  %131 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2288, !tbaa !820
  %next97 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %131, i32 0, i32 0, !dbg !2290
  %132 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next97, align 4, !dbg !2290, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %132, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2291, !tbaa !820
  %133 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2292, !tbaa !820
  %134 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2293, !tbaa !820
  call void @ngx_resolver_resolve_srv_names(%struct.ngx_resolver_ctx_s* %133, %struct.ngx_resolver_node_t* %134), !dbg !2294
  %135 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2295, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %135, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2296, !tbaa !820
  br label %do.cond98, !dbg !2297

do.cond98:                                        ; preds = %do.body96
  %136 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2298, !tbaa !820
  %tobool99 = icmp ne %struct.ngx_resolver_ctx_s* %136, null, !dbg !2297
  br i1 %tobool99, label %do.body96, label %do.end100, !dbg !2297, !llvm.loop !2286

do.end100:                                        ; preds = %do.cond98
  store i32 0, i32* %retval, align 4, !dbg !2299
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2299

if.end101:                                        ; preds = %if.end90
  %137 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2300, !tbaa !820
  %recursion = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %137, i32 0, i32 19, !dbg !2302
  %138 = load i32, i32* %recursion, align 4, !dbg !2303, !tbaa !2304
  %inc = add i32 %138, 1, !dbg !2303
  store i32 %inc, i32* %recursion, align 4, !dbg !2303, !tbaa !2304
  %cmp102 = icmp ult i32 %138, 50, !dbg !2305
  br i1 %cmp102, label %if.then104, label %if.end111, !dbg !2306

if.then104:                                       ; preds = %if.end101
  %139 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2307, !tbaa !820
  %cnlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %139, i32 0, i32 12, !dbg !2309
  %140 = load i16, i16* %cnlen, align 2, !dbg !2309, !tbaa !2310
  %conv105 = zext i16 %140 to i32, !dbg !2307
  %len106 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %cname, i32 0, i32 0, !dbg !2311
  store i32 %conv105, i32* %len106, align 4, !dbg !2312, !tbaa !1005
  %141 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2313, !tbaa !820
  %u107 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %141, i32 0, i32 8, !dbg !2314
  %cname108 = bitcast %union.anon.0* %u107 to i8**, !dbg !2315
  %142 = load i8*, i8** %cname108, align 4, !dbg !2315, !tbaa !820
  %data109 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %cname, i32 0, i32 1, !dbg !2316
  store i8* %142, i8** %data109, align 4, !dbg !2317, !tbaa !997
  %143 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2318, !tbaa !820
  %144 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2319, !tbaa !820
  %call110 = call i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %143, %struct.ngx_resolver_ctx_s* %144, %struct.ngx_str_t* %cname), !dbg !2320
  store i32 %call110, i32* %retval, align 4, !dbg !2321
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2321

if.end111:                                        ; preds = %if.end101
  %145 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2322, !tbaa !820
  %waiting112 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %145, i32 0, i32 20, !dbg !2323
  %146 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting112, align 4, !dbg !2323, !tbaa !2182
  %147 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2324, !tbaa !820
  %next113 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %147, i32 0, i32 0, !dbg !2325
  store %struct.ngx_resolver_ctx_s* %146, %struct.ngx_resolver_ctx_s** %next113, align 4, !dbg !2326, !tbaa !2110
  %148 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2327, !tbaa !820
  %waiting114 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %148, i32 0, i32 20, !dbg !2328
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting114, align 4, !dbg !2329, !tbaa !2182
  br label %do.body115, !dbg !2330, !llvm.loop !2331

do.body115:                                       ; preds = %do.cond129, %if.end111
  %149 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2333, !tbaa !820
  %state116 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %149, i32 0, i32 4, !dbg !2335
  store i32 3, i32* %state116, align 4, !dbg !2336, !tbaa !1703
  %150 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !2337, !tbaa !820
  %sec117 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %150, i32 0, i32 0, !dbg !2337
  %151 = load volatile i32, i32* %sec117, align 4, !dbg !2337, !tbaa !2123
  %152 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2338, !tbaa !820
  %valid118 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %152, i32 0, i32 26, !dbg !2339
  %153 = load i32, i32* %valid118, align 4, !dbg !2339, !tbaa !958
  %tobool119 = icmp ne i32 %153, 0, !dbg !2338
  br i1 %tobool119, label %cond.true120, label %cond.false122, !dbg !2338

cond.true120:                                     ; preds = %do.body115
  %154 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2340, !tbaa !820
  %valid121 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %154, i32 0, i32 26, !dbg !2341
  %155 = load i32, i32* %valid121, align 4, !dbg !2341, !tbaa !958
  br label %cond.end123, !dbg !2338

cond.false122:                                    ; preds = %do.body115
  br label %cond.end123, !dbg !2338

cond.end123:                                      ; preds = %cond.false122, %cond.true120
  %cond124 = phi i32 [ %155, %cond.true120 ], [ 10, %cond.false122 ], !dbg !2338
  %add125 = add nsw i32 %151, %cond124, !dbg !2342
  %156 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2343, !tbaa !820
  %valid126 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %156, i32 0, i32 7, !dbg !2344
  store i32 %add125, i32* %valid126, align 4, !dbg !2345, !tbaa !2201
  %157 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2346, !tbaa !820
  %next127 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %157, i32 0, i32 0, !dbg !2347
  %158 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next127, align 4, !dbg !2347, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %158, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2348, !tbaa !820
  %159 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2349, !tbaa !820
  %handler128 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %159, i32 0, i32 15, !dbg !2350
  %160 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler128, align 4, !dbg !2350, !tbaa !1844
  %161 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2351, !tbaa !820
  call void %160(%struct.ngx_resolver_ctx_s* %161), !dbg !2349
  %162 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2352, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %162, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2353, !tbaa !820
  br label %do.cond129, !dbg !2354

do.cond129:                                       ; preds = %cond.end123
  %163 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2355, !tbaa !820
  %tobool130 = icmp ne %struct.ngx_resolver_ctx_s* %163, null, !dbg !2354
  br i1 %tobool130, label %do.body115, label %do.end131, !dbg !2354, !llvm.loop !2331

do.end131:                                        ; preds = %do.cond129
  store i32 0, i32* %retval, align 4, !dbg !2356
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2356

if.end132:                                        ; preds = %for.end
  %164 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2357, !tbaa !820
  %waiting133 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %164, i32 0, i32 20, !dbg !2359
  %165 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting133, align 4, !dbg !2359, !tbaa !2182
  %tobool134 = icmp ne %struct.ngx_resolver_ctx_s* %165, null, !dbg !2357
  br i1 %tobool134, label %if.then135, label %if.end166, !dbg !2360

if.then135:                                       ; preds = %if.end132
  %166 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2361, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %166, i32 0, i32 20, !dbg !2364
  %167 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !2364, !tbaa !1947
  %cmp136 = icmp eq %struct.ngx_event_s* %167, null, !dbg !2365
  br i1 %cmp136, label %land.lhs.true138, label %if.end156, !dbg !2366

land.lhs.true138:                                 ; preds = %if.then135
  %168 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2367, !tbaa !820
  %timeout = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %168, i32 0, i32 17, !dbg !2368
  %169 = load i32, i32* %timeout, align 4, !dbg !2368, !tbaa !2369
  %tobool139 = icmp ne i32 %169, 0, !dbg !2367
  br i1 %tobool139, label %if.then140, label %if.end156, !dbg !2370

if.then140:                                       ; preds = %land.lhs.true138
  %170 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2371, !tbaa !820
  %call141 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %170, i32 48), !dbg !2373
  %171 = bitcast i8* %call141 to %struct.ngx_event_s*, !dbg !2373
  %172 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2374, !tbaa !820
  %event142 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %172, i32 0, i32 20, !dbg !2375
  store %struct.ngx_event_s* %171, %struct.ngx_event_s** %event142, align 4, !dbg !2376, !tbaa !1947
  %173 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2377, !tbaa !820
  %event143 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %173, i32 0, i32 20, !dbg !2379
  %174 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event143, align 4, !dbg !2379, !tbaa !1947
  %cmp144 = icmp eq %struct.ngx_event_s* %174, null, !dbg !2380
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !2381

if.then146:                                       ; preds = %if.then140
  store i32 -1, i32* %retval, align 4, !dbg !2382
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2382

if.end147:                                        ; preds = %if.then140
  %175 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2384, !tbaa !820
  %event148 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %175, i32 0, i32 20, !dbg !2385
  %176 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event148, align 4, !dbg !2385, !tbaa !1947
  %handler149 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %176, i32 0, i32 2, !dbg !2386
  store void (%struct.ngx_event_s*)* @ngx_resolver_timeout_handler, void (%struct.ngx_event_s*)** %handler149, align 4, !dbg !2387, !tbaa !922
  %177 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2388, !tbaa !820
  %178 = bitcast %struct.ngx_resolver_ctx_s* %177 to i8*, !dbg !2388
  %179 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2389, !tbaa !820
  %event150 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %179, i32 0, i32 20, !dbg !2390
  %180 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event150, align 4, !dbg !2390, !tbaa !1947
  %data151 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %180, i32 0, i32 0, !dbg !2391
  store i8* %178, i8** %data151, align 4, !dbg !2392, !tbaa !929
  %181 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2393, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %181, i32 0, i32 2, !dbg !2394
  %182 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !2394, !tbaa !965
  %183 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2395, !tbaa !820
  %event152 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %183, i32 0, i32 20, !dbg !2396
  %184 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event152, align 4, !dbg !2396, !tbaa !1947
  %log153 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %184, i32 0, i32 4, !dbg !2397
  store %struct.ngx_log_s* %182, %struct.ngx_log_s** %log153, align 4, !dbg !2398, !tbaa !938
  %185 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2399, !tbaa !820
  %ident = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %185, i32 0, i32 3, !dbg !2400
  store i32 -1, i32* %ident, align 4, !dbg !2401, !tbaa !2402
  %186 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2403, !tbaa !820
  %event154 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %186, i32 0, i32 20, !dbg !2404
  %187 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event154, align 4, !dbg !2404, !tbaa !1947
  %188 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2405, !tbaa !820
  %timeout155 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %188, i32 0, i32 17, !dbg !2406
  %189 = load i32, i32* %timeout155, align 4, !dbg !2406, !tbaa !2369
  call void @ngx_event_add_timer(%struct.ngx_event_s* %187, i32 %189), !dbg !2407
  br label %if.end156, !dbg !2408

if.end156:                                        ; preds = %if.end147, %land.lhs.true138, %if.then135
  %190 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2409, !tbaa !820
  %waiting157 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %190, i32 0, i32 20, !dbg !2410
  %191 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting157, align 4, !dbg !2410, !tbaa !2182
  %192 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %last, align 4, !dbg !2411, !tbaa !820
  %next158 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %192, i32 0, i32 0, !dbg !2412
  store %struct.ngx_resolver_ctx_s* %191, %struct.ngx_resolver_ctx_s** %next158, align 4, !dbg !2413, !tbaa !2110
  %193 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2414, !tbaa !820
  %194 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2415, !tbaa !820
  %waiting159 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %194, i32 0, i32 20, !dbg !2416
  store %struct.ngx_resolver_ctx_s* %193, %struct.ngx_resolver_ctx_s** %waiting159, align 4, !dbg !2417, !tbaa !2182
  %195 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2418, !tbaa !820
  %state160 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %195, i32 0, i32 4, !dbg !2419
  store i32 -2, i32* %state160, align 4, !dbg !2420, !tbaa !1703
  br label %do.body161, !dbg !2421, !llvm.loop !2422

do.body161:                                       ; preds = %do.cond163, %if.end156
  %196 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2424, !tbaa !820
  %197 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2426, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %197, i32 0, i32 2, !dbg !2427
  store %struct.ngx_resolver_node_t* %196, %struct.ngx_resolver_node_t** %node, align 4, !dbg !2428, !tbaa !2429
  %198 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2430, !tbaa !820
  %next162 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %198, i32 0, i32 0, !dbg !2431
  %199 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next162, align 4, !dbg !2431, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %199, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2432, !tbaa !820
  br label %do.cond163, !dbg !2433

do.cond163:                                       ; preds = %do.body161
  %200 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2434, !tbaa !820
  %tobool164 = icmp ne %struct.ngx_resolver_ctx_s* %200, null, !dbg !2433
  br i1 %tobool164, label %do.body161, label %do.end165, !dbg !2433, !llvm.loop !2422

do.end165:                                        ; preds = %do.cond163
  store i32 -2, i32* %retval, align 4, !dbg !2435
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2435

if.end166:                                        ; preds = %if.end132
  %201 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2436, !tbaa !820
  %queue167 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %201, i32 0, i32 1, !dbg !2436
  %prev168 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue167, i32 0, i32 0, !dbg !2436
  %202 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev168, align 4, !dbg !2436, !tbaa !904
  %203 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2436, !tbaa !820
  %queue169 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %203, i32 0, i32 1, !dbg !2436
  %next170 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue169, i32 0, i32 1, !dbg !2436
  %204 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next170, align 4, !dbg !2436, !tbaa !905
  %prev171 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %204, i32 0, i32 0, !dbg !2436
  store %struct.ngx_queue_s* %202, %struct.ngx_queue_s** %prev171, align 4, !dbg !2436, !tbaa !904
  %205 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2436, !tbaa !820
  %queue172 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %205, i32 0, i32 1, !dbg !2436
  %next173 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue172, i32 0, i32 1, !dbg !2436
  %206 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next173, align 4, !dbg !2436, !tbaa !905
  %207 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2436, !tbaa !820
  %queue174 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %207, i32 0, i32 1, !dbg !2436
  %prev175 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue174, i32 0, i32 0, !dbg !2436
  %208 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev175, align 4, !dbg !2436, !tbaa !904
  %next176 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %208, i32 0, i32 1, !dbg !2436
  store %struct.ngx_queue_s* %206, %struct.ngx_queue_s** %next176, align 4, !dbg !2436, !tbaa !905
  %209 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2437, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %209, i32 0, i32 6, !dbg !2439
  %210 = load i8*, i8** %query, align 4, !dbg !2439, !tbaa !2440
  %tobool177 = icmp ne i8* %210, null, !dbg !2437
  br i1 %tobool177, label %if.then178, label %if.end181, !dbg !2441

if.then178:                                       ; preds = %if.end166
  %211 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2442, !tbaa !820
  %212 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2444, !tbaa !820
  %query179 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %212, i32 0, i32 6, !dbg !2445
  %213 = load i8*, i8** %query179, align 4, !dbg !2445, !tbaa !2440
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %211, i8* %213), !dbg !2446
  %214 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2447, !tbaa !820
  %query180 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %214, i32 0, i32 6, !dbg !2448
  store i8* null, i8** %query180, align 4, !dbg !2449, !tbaa !2440
  %215 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2450, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %215, i32 0, i32 7, !dbg !2451
  store i8* null, i8** %query6, align 4, !dbg !2452, !tbaa !2453
  br label %if.end181, !dbg !2454

if.end181:                                        ; preds = %if.then178, %if.end166
  %216 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2455, !tbaa !820
  %cnlen182 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %216, i32 0, i32 12, !dbg !2457
  %217 = load i16, i16* %cnlen182, align 2, !dbg !2457, !tbaa !2310
  %tobool183 = icmp ne i16 %217, 0, !dbg !2455
  br i1 %tobool183, label %if.then184, label %if.end187, !dbg !2458

if.then184:                                       ; preds = %if.end181
  %218 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2459, !tbaa !820
  %219 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2461, !tbaa !820
  %u185 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %219, i32 0, i32 8, !dbg !2462
  %cname186 = bitcast %union.anon.0* %u185 to i8**, !dbg !2463
  %220 = load i8*, i8** %cname186, align 4, !dbg !2463, !tbaa !820
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %218, i8* %220), !dbg !2464
  br label %if.end187, !dbg !2465

if.end187:                                        ; preds = %if.then184, %if.end181
  %221 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2466, !tbaa !820
  %naddrs188 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %221, i32 0, i32 10, !dbg !2468
  %222 = load i16, i16* %naddrs188, align 2, !dbg !2468, !tbaa !2140
  %conv189 = zext i16 %222 to i32, !dbg !2466
  %cmp190 = icmp sgt i32 %conv189, 1, !dbg !2469
  br i1 %cmp190, label %land.lhs.true192, label %if.end200, !dbg !2470

land.lhs.true192:                                 ; preds = %if.end187
  %223 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2471, !tbaa !820
  %naddrs193 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %223, i32 0, i32 10, !dbg !2472
  %224 = load i16, i16* %naddrs193, align 2, !dbg !2472, !tbaa !2140
  %conv194 = zext i16 %224 to i32, !dbg !2471
  %cmp195 = icmp ne i32 %conv194, 65535, !dbg !2473
  br i1 %cmp195, label %if.then197, label %if.end200, !dbg !2474

if.then197:                                       ; preds = %land.lhs.true192
  %225 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2475, !tbaa !820
  %226 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2477, !tbaa !820
  %u198 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %226, i32 0, i32 8, !dbg !2478
  %addrs199 = bitcast %union.anon.0* %u198 to i32**, !dbg !2479
  %227 = load i32*, i32** %addrs199, align 4, !dbg !2479, !tbaa !820
  %228 = bitcast i32* %227 to i8*, !dbg !2477
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %225, i8* %228), !dbg !2480
  br label %if.end200, !dbg !2481

if.end200:                                        ; preds = %if.then197, %land.lhs.true192, %if.end187
  %229 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2482, !tbaa !820
  %naddrs6201 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %229, i32 0, i32 14, !dbg !2484
  %230 = load i16, i16* %naddrs6201, align 4, !dbg !2484, !tbaa !2148
  %conv202 = zext i16 %230 to i32, !dbg !2482
  %cmp203 = icmp sgt i32 %conv202, 1, !dbg !2485
  br i1 %cmp203, label %land.lhs.true205, label %if.end211, !dbg !2486

land.lhs.true205:                                 ; preds = %if.end200
  %231 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2487, !tbaa !820
  %naddrs6206 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %231, i32 0, i32 14, !dbg !2488
  %232 = load i16, i16* %naddrs6206, align 4, !dbg !2488, !tbaa !2148
  %conv207 = zext i16 %232 to i32, !dbg !2487
  %cmp208 = icmp ne i32 %conv207, 65535, !dbg !2489
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !2490

if.then210:                                       ; preds = %land.lhs.true205
  %233 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2491, !tbaa !820
  %234 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2493, !tbaa !820
  %u6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %234, i32 0, i32 13, !dbg !2494
  %addrs6 = bitcast %union.anon.1* %u6 to %struct.in6_addr**, !dbg !2495
  %235 = load %struct.in6_addr*, %struct.in6_addr** %addrs6, align 4, !dbg !2495, !tbaa !820
  %236 = bitcast %struct.in6_addr* %235 to i8*, !dbg !2493
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %233, i8* %236), !dbg !2496
  br label %if.end211, !dbg !2497

if.end211:                                        ; preds = %if.then210, %land.lhs.true205, %if.end200
  %237 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2498, !tbaa !820
  %nsrvs212 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %237, i32 0, i32 11, !dbg !2500
  %238 = load i16, i16* %nsrvs212, align 4, !dbg !2500, !tbaa !2274
  %tobool213 = icmp ne i16 %238, 0, !dbg !2498
  br i1 %tobool213, label %if.then214, label %if.end237, !dbg !2501

if.then214:                                       ; preds = %if.end211
  store i32 0, i32* %i, align 4, !dbg !2502, !tbaa !827
  br label %for.cond215, !dbg !2505

for.cond215:                                      ; preds = %for.inc232, %if.then214
  %239 = load i32, i32* %i, align 4, !dbg !2506, !tbaa !827
  %240 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2508, !tbaa !820
  %nsrvs216 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %240, i32 0, i32 11, !dbg !2509
  %241 = load i16, i16* %nsrvs216, align 4, !dbg !2509, !tbaa !2274
  %conv217 = zext i16 %241 to i32, !dbg !2510
  %cmp218 = icmp ult i32 %239, %conv217, !dbg !2511
  br i1 %cmp218, label %for.body220, label %for.end234, !dbg !2512

for.body220:                                      ; preds = %for.cond215
  %242 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2513, !tbaa !820
  %u221 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %242, i32 0, i32 8, !dbg !2516
  %srvs = bitcast %union.anon.0* %u221 to %struct.ngx_resolver_srv_t**, !dbg !2517
  %243 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !2517, !tbaa !820
  %244 = load i32, i32* %i, align 4, !dbg !2518, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %243, i32 %244, !dbg !2513
  %name222 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx, i32 0, i32 0, !dbg !2519
  %data223 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name222, i32 0, i32 1, !dbg !2520
  %245 = load i8*, i8** %data223, align 4, !dbg !2520, !tbaa !2521
  %tobool224 = icmp ne i8* %245, null, !dbg !2513
  br i1 %tobool224, label %if.then225, label %if.end231, !dbg !2523

if.then225:                                       ; preds = %for.body220
  %246 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2524, !tbaa !820
  %247 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2526, !tbaa !820
  %u226 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %247, i32 0, i32 8, !dbg !2527
  %srvs227 = bitcast %union.anon.0* %u226 to %struct.ngx_resolver_srv_t**, !dbg !2528
  %248 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs227, align 4, !dbg !2528, !tbaa !820
  %249 = load i32, i32* %i, align 4, !dbg !2529, !tbaa !827
  %arrayidx228 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %248, i32 %249, !dbg !2526
  %name229 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx228, i32 0, i32 0, !dbg !2530
  %data230 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name229, i32 0, i32 1, !dbg !2531
  %250 = load i8*, i8** %data230, align 4, !dbg !2531, !tbaa !2521
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %246, i8* %250), !dbg !2532
  br label %if.end231, !dbg !2533

if.end231:                                        ; preds = %if.then225, %for.body220
  br label %for.inc232, !dbg !2534

for.inc232:                                       ; preds = %if.end231
  %251 = load i32, i32* %i, align 4, !dbg !2535, !tbaa !827
  %inc233 = add i32 %251, 1, !dbg !2535
  store i32 %inc233, i32* %i, align 4, !dbg !2535, !tbaa !827
  br label %for.cond215, !dbg !2536, !llvm.loop !2537

for.end234:                                       ; preds = %for.cond215
  %252 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2539, !tbaa !820
  %253 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2540, !tbaa !820
  %u235 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %253, i32 0, i32 8, !dbg !2541
  %srvs236 = bitcast %union.anon.0* %u235 to %struct.ngx_resolver_srv_t**, !dbg !2542
  %254 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs236, align 4, !dbg !2542, !tbaa !820
  %255 = bitcast %struct.ngx_resolver_srv_t* %254 to i8*, !dbg !2540
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %252, i8* %255), !dbg !2543
  br label %if.end237, !dbg !2544

if.end237:                                        ; preds = %for.end234, %if.end211
  br label %if.end259, !dbg !2545

if.else238:                                       ; preds = %if.end
  %256 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2546, !tbaa !820
  %call239 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %256, i32 116), !dbg !2548
  %257 = bitcast i8* %call239 to %struct.ngx_resolver_node_t*, !dbg !2548
  store %struct.ngx_resolver_node_t* %257, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2549, !tbaa !820
  %258 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2550, !tbaa !820
  %cmp240 = icmp eq %struct.ngx_resolver_node_t* %258, null, !dbg !2552
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !2553

if.then242:                                       ; preds = %if.else238
  store i32 -1, i32* %retval, align 4, !dbg !2554
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2554

if.end243:                                        ; preds = %if.else238
  %259 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2556, !tbaa !820
  %260 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2557, !tbaa !820
  %data244 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %260, i32 0, i32 1, !dbg !2558
  %261 = load i8*, i8** %data244, align 4, !dbg !2558, !tbaa !997
  %262 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2559, !tbaa !820
  %len245 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %262, i32 0, i32 0, !dbg !2560
  %263 = load i32, i32* %len245, align 4, !dbg !2560, !tbaa !1005
  %call246 = call i8* @ngx_resolver_dup(%struct.ngx_resolver_s* %259, i8* %261, i32 %263), !dbg !2561
  %264 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2562, !tbaa !820
  %name247 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %264, i32 0, i32 2, !dbg !2563
  store i8* %call246, i8** %name247, align 4, !dbg !2564, !tbaa !1358
  %265 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2565, !tbaa !820
  %name248 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %265, i32 0, i32 2, !dbg !2567
  %266 = load i8*, i8** %name248, align 4, !dbg !2567, !tbaa !1358
  %cmp249 = icmp eq i8* %266, null, !dbg !2568
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !2569

if.then251:                                       ; preds = %if.end243
  %267 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2570, !tbaa !820
  %268 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2572, !tbaa !820
  %269 = bitcast %struct.ngx_resolver_node_t* %268 to i8*, !dbg !2572
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %267, i8* %269), !dbg !2573
  store i32 -1, i32* %retval, align 4, !dbg !2574
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2574

if.end252:                                        ; preds = %if.end243
  %270 = load i32, i32* %hash, align 4, !dbg !2575, !tbaa !827
  %271 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2576, !tbaa !820
  %node253 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %271, i32 0, i32 0, !dbg !2577
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %node253, i32 0, i32 0, !dbg !2578
  store i32 %270, i32* %key, align 4, !dbg !2579, !tbaa !2580
  %272 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2581, !tbaa !820
  %len254 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %272, i32 0, i32 0, !dbg !2582
  %273 = load i32, i32* %len254, align 4, !dbg !2582, !tbaa !1005
  %conv255 = trunc i32 %273 to i16, !dbg !2583
  %274 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2584, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %274, i32 0, i32 4, !dbg !2585
  store i16 %conv255, i16* %nlen, align 4, !dbg !2586, !tbaa !1365
  %275 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2587, !tbaa !820
  %query256 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %275, i32 0, i32 6, !dbg !2588
  store i8* null, i8** %query256, align 4, !dbg !2589, !tbaa !2440
  %276 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2590, !tbaa !820
  %query6257 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %276, i32 0, i32 7, !dbg !2591
  store i8* null, i8** %query6257, align 4, !dbg !2592, !tbaa !2453
  %277 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !2593, !tbaa !820
  %278 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2594, !tbaa !820
  %node258 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %278, i32 0, i32 0, !dbg !2595
  call void @ngx_rbtree_insert(%struct.ngx_rbtree_s* %277, %struct.ngx_rbtree_node_s* %node258), !dbg !2596
  br label %if.end259

if.end259:                                        ; preds = %if.end252, %if.end237
  %279 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2597, !tbaa !820
  %service260 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %279, i32 0, i32 6, !dbg !2599
  %len261 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service260, i32 0, i32 0, !dbg !2600
  %280 = load i32, i32* %len261, align 4, !dbg !2600, !tbaa !1851
  %tobool262 = icmp ne i32 %280, 0, !dbg !2597
  br i1 %tobool262, label %if.then263, label %if.else265, !dbg !2601

if.then263:                                       ; preds = %if.end259
  %281 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2602, !tbaa !820
  %282 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2604, !tbaa !820
  %283 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2605, !tbaa !820
  %call264 = call i32 @ngx_resolver_create_srv_query(%struct.ngx_resolver_s* %281, %struct.ngx_resolver_node_t* %282, %struct.ngx_str_t* %283), !dbg !2606
  store i32 %call264, i32* %rc, align 4, !dbg !2607, !tbaa !827
  br label %if.end267, !dbg !2608

if.else265:                                       ; preds = %if.end259
  %284 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2609, !tbaa !820
  %285 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2611, !tbaa !820
  %286 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !2612, !tbaa !820
  %call266 = call i32 @ngx_resolver_create_name_query(%struct.ngx_resolver_s* %284, %struct.ngx_resolver_node_t* %285, %struct.ngx_str_t* %286), !dbg !2613
  store i32 %call266, i32* %rc, align 4, !dbg !2614, !tbaa !827
  br label %if.end267

if.end267:                                        ; preds = %if.else265, %if.then263
  %287 = load i32, i32* %rc, align 4, !dbg !2615, !tbaa !827
  %cmp268 = icmp eq i32 %287, -1, !dbg !2617
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !2618

if.then270:                                       ; preds = %if.end267
  br label %failed, !dbg !2619

if.end271:                                        ; preds = %if.end267
  %288 = load i32, i32* %rc, align 4, !dbg !2621, !tbaa !827
  %cmp272 = icmp eq i32 %288, -5, !dbg !2623
  br i1 %cmp272, label %if.then274, label %if.end285, !dbg !2624

if.then274:                                       ; preds = %if.end271
  %289 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !2625, !tbaa !820
  %290 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2627, !tbaa !820
  %node275 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %290, i32 0, i32 0, !dbg !2628
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %289, %struct.ngx_rbtree_node_s* %node275), !dbg !2629
  %291 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2630, !tbaa !820
  %292 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2631, !tbaa !820
  %query276 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %292, i32 0, i32 6, !dbg !2632
  %293 = load i8*, i8** %query276, align 4, !dbg !2632, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %291, i8* %293), !dbg !2633
  %294 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2634, !tbaa !820
  %295 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2635, !tbaa !820
  %name277 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %295, i32 0, i32 2, !dbg !2636
  %296 = load i8*, i8** %name277, align 4, !dbg !2636, !tbaa !1358
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %294, i8* %296), !dbg !2637
  %297 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2638, !tbaa !820
  %298 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2639, !tbaa !820
  %299 = bitcast %struct.ngx_resolver_node_t* %298 to i8*, !dbg !2639
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %297, i8* %299), !dbg !2640
  br label %do.body278, !dbg !2641, !llvm.loop !2642

do.body278:                                       ; preds = %do.cond282, %if.then274
  %300 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2644, !tbaa !820
  %state279 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %300, i32 0, i32 4, !dbg !2646
  store i32 3, i32* %state279, align 4, !dbg !2647, !tbaa !1703
  %301 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2648, !tbaa !820
  %next280 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %301, i32 0, i32 0, !dbg !2649
  %302 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next280, align 4, !dbg !2649, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %302, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2650, !tbaa !820
  %303 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2651, !tbaa !820
  %handler281 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %303, i32 0, i32 15, !dbg !2652
  %304 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler281, align 4, !dbg !2652, !tbaa !1844
  %305 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2653, !tbaa !820
  call void %304(%struct.ngx_resolver_ctx_s* %305), !dbg !2651
  %306 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2654, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %306, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2655, !tbaa !820
  br label %do.cond282, !dbg !2656

do.cond282:                                       ; preds = %do.body278
  %307 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2657, !tbaa !820
  %tobool283 = icmp ne %struct.ngx_resolver_ctx_s* %307, null, !dbg !2656
  br i1 %tobool283, label %do.body278, label %do.end284, !dbg !2656, !llvm.loop !2642

do.end284:                                        ; preds = %do.cond282
  store i32 0, i32* %retval, align 4, !dbg !2658
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2658

if.end285:                                        ; preds = %if.end271
  %308 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2659, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %308, i32 0, i32 5, !dbg !2660
  %309 = load i32, i32* %last_connection, align 4, !dbg !2661, !tbaa !2662
  %inc286 = add i32 %309, 1, !dbg !2661
  store i32 %inc286, i32* %last_connection, align 4, !dbg !2661, !tbaa !2662
  %310 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2663, !tbaa !820
  %last_connection287 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %310, i32 0, i32 19, !dbg !2664
  store i32 %309, i32* %last_connection287, align 4, !dbg !2665, !tbaa !2666
  %311 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2667, !tbaa !820
  %last_connection288 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %311, i32 0, i32 5, !dbg !2669
  %312 = load i32, i32* %last_connection288, align 4, !dbg !2669, !tbaa !2662
  %313 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2670, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %313, i32 0, i32 4, !dbg !2671
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 1, !dbg !2672
  %314 = load i32, i32* %nelts, align 4, !dbg !2672, !tbaa !1228
  %cmp289 = icmp eq i32 %312, %314, !dbg !2673
  br i1 %cmp289, label %if.then291, label %if.end293, !dbg !2674

if.then291:                                       ; preds = %if.end285
  %315 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2675, !tbaa !820
  %last_connection292 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %315, i32 0, i32 5, !dbg !2677
  store i32 0, i32* %last_connection292, align 4, !dbg !2678, !tbaa !2662
  br label %if.end293, !dbg !2679

if.end293:                                        ; preds = %if.then291, %if.end285
  %316 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2680, !tbaa !820
  %naddrs294 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %316, i32 0, i32 10, !dbg !2681
  store i16 -1, i16* %naddrs294, align 2, !dbg !2682, !tbaa !2140
  %317 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2683, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %317, i32 0, i32 18, !dbg !2684
  %bf.load = load i8, i8* %tcp, align 4, !dbg !2685
  %bf.clear = and i8 %bf.load, -2, !dbg !2685
  store i8 %bf.clear, i8* %tcp, align 4, !dbg !2685
  %318 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2686, !tbaa !820
  %ipv6 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %318, i32 0, i32 18, !dbg !2687
  %319 = load i32, i32* %ipv6, align 4, !dbg !2687, !tbaa !914
  %tobool295 = icmp ne i32 %319, 0, !dbg !2686
  %cond296 = select i1 %tobool295, i32 65535, i32 0, !dbg !2686
  %conv297 = trunc i32 %cond296 to i16, !dbg !2686
  %320 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2688, !tbaa !820
  %naddrs6298 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %320, i32 0, i32 14, !dbg !2689
  store i16 %conv297, i16* %naddrs6298, align 4, !dbg !2690, !tbaa !2148
  %321 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2691, !tbaa !820
  %tcp6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %321, i32 0, i32 18, !dbg !2692
  %bf.load299 = load i8, i8* %tcp6, align 4, !dbg !2693
  %bf.clear300 = and i8 %bf.load299, -3, !dbg !2693
  store i8 %bf.clear300, i8* %tcp6, align 4, !dbg !2693
  %322 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2694, !tbaa !820
  %nsrvs301 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %322, i32 0, i32 11, !dbg !2695
  store i16 0, i16* %nsrvs301, align 4, !dbg !2696, !tbaa !2274
  %323 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2697, !tbaa !820
  %324 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2699, !tbaa !820
  %call302 = call i32 @ngx_resolver_send_query(%struct.ngx_resolver_s* %323, %struct.ngx_resolver_node_t* %324), !dbg !2700
  %cmp303 = icmp ne i32 %call302, 0, !dbg !2701
  br i1 %cmp303, label %if.then305, label %if.end306, !dbg !2702

if.then305:                                       ; preds = %if.end293
  br label %failed, !dbg !2703

if.end306:                                        ; preds = %if.end293
  %325 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2705, !tbaa !820
  %event307 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %325, i32 0, i32 20, !dbg !2707
  %326 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event307, align 4, !dbg !2707, !tbaa !1947
  %cmp308 = icmp eq %struct.ngx_event_s* %326, null, !dbg !2708
  br i1 %cmp308, label %land.lhs.true310, label %if.end331, !dbg !2709

land.lhs.true310:                                 ; preds = %if.end306
  %327 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2710, !tbaa !820
  %timeout311 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %327, i32 0, i32 17, !dbg !2711
  %328 = load i32, i32* %timeout311, align 4, !dbg !2711, !tbaa !2369
  %tobool312 = icmp ne i32 %328, 0, !dbg !2710
  br i1 %tobool312, label %if.then313, label %if.end331, !dbg !2712

if.then313:                                       ; preds = %land.lhs.true310
  %329 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2713, !tbaa !820
  %call314 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %329, i32 48), !dbg !2715
  %330 = bitcast i8* %call314 to %struct.ngx_event_s*, !dbg !2715
  %331 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2716, !tbaa !820
  %event315 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %331, i32 0, i32 20, !dbg !2717
  store %struct.ngx_event_s* %330, %struct.ngx_event_s** %event315, align 4, !dbg !2718, !tbaa !1947
  %332 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2719, !tbaa !820
  %event316 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %332, i32 0, i32 20, !dbg !2721
  %333 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event316, align 4, !dbg !2721, !tbaa !1947
  %cmp317 = icmp eq %struct.ngx_event_s* %333, null, !dbg !2722
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !2723

if.then319:                                       ; preds = %if.then313
  br label %failed, !dbg !2724

if.end320:                                        ; preds = %if.then313
  %334 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2726, !tbaa !820
  %event321 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %334, i32 0, i32 20, !dbg !2727
  %335 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event321, align 4, !dbg !2727, !tbaa !1947
  %handler322 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %335, i32 0, i32 2, !dbg !2728
  store void (%struct.ngx_event_s*)* @ngx_resolver_timeout_handler, void (%struct.ngx_event_s*)** %handler322, align 4, !dbg !2729, !tbaa !922
  %336 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2730, !tbaa !820
  %337 = bitcast %struct.ngx_resolver_ctx_s* %336 to i8*, !dbg !2730
  %338 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2731, !tbaa !820
  %event323 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %338, i32 0, i32 20, !dbg !2732
  %339 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event323, align 4, !dbg !2732, !tbaa !1947
  %data324 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %339, i32 0, i32 0, !dbg !2733
  store i8* %337, i8** %data324, align 4, !dbg !2734, !tbaa !929
  %340 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2735, !tbaa !820
  %log325 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %340, i32 0, i32 2, !dbg !2736
  %341 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log325, align 4, !dbg !2736, !tbaa !965
  %342 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2737, !tbaa !820
  %event326 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %342, i32 0, i32 20, !dbg !2738
  %343 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event326, align 4, !dbg !2738, !tbaa !1947
  %log327 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %343, i32 0, i32 4, !dbg !2739
  store %struct.ngx_log_s* %341, %struct.ngx_log_s** %log327, align 4, !dbg !2740, !tbaa !938
  %344 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2741, !tbaa !820
  %ident328 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %344, i32 0, i32 3, !dbg !2742
  store i32 -1, i32* %ident328, align 4, !dbg !2743, !tbaa !2402
  %345 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2744, !tbaa !820
  %event329 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %345, i32 0, i32 20, !dbg !2745
  %346 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event329, align 4, !dbg !2745, !tbaa !1947
  %347 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2746, !tbaa !820
  %timeout330 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %347, i32 0, i32 17, !dbg !2747
  %348 = load i32, i32* %timeout330, align 4, !dbg !2747, !tbaa !2369
  call void @ngx_event_add_timer(%struct.ngx_event_s* %346, i32 %348), !dbg !2748
  br label %if.end331, !dbg !2749

if.end331:                                        ; preds = %if.end320, %land.lhs.true310, %if.end306
  %349 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2750, !tbaa !820
  %call332 = call i32 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %349), !dbg !2752
  %tobool333 = icmp ne i32 %call332, 0, !dbg !2752
  br i1 %tobool333, label %if.then334, label %if.end336, !dbg !2753

if.then334:                                       ; preds = %if.end331
  %350 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2754, !tbaa !820
  %event335 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %350, i32 0, i32 0, !dbg !2756
  %351 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event335, align 4, !dbg !2756, !tbaa !882
  %352 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2757, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %352, i32 0, i32 23, !dbg !2758
  %353 = load i32, i32* %resend_timeout, align 4, !dbg !2758, !tbaa !946
  %mul = mul nsw i32 %353, 1000, !dbg !2759
  call void @ngx_event_add_timer(%struct.ngx_event_s* %351, i32 %mul), !dbg !2760
  br label %if.end336, !dbg !2761

if.end336:                                        ; preds = %if.then334, %if.end331
  %354 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !2762, !tbaa !820
  %sec337 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %354, i32 0, i32 0, !dbg !2762
  %355 = load volatile i32, i32* %sec337, align 4, !dbg !2762, !tbaa !2123
  %356 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2763, !tbaa !820
  %resend_timeout338 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %356, i32 0, i32 23, !dbg !2764
  %357 = load i32, i32* %resend_timeout338, align 4, !dbg !2764, !tbaa !946
  %add339 = add nsw i32 %355, %357, !dbg !2765
  %358 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2766, !tbaa !820
  %expire340 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %358, i32 0, i32 15, !dbg !2767
  store i32 %add339, i32* %expire340, align 4, !dbg !2768, !tbaa !2136
  %359 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !2769, !tbaa !820
  %next341 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %359, i32 0, i32 1, !dbg !2769
  %360 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next341, align 4, !dbg !2769, !tbaa !905
  %361 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2769, !tbaa !820
  %queue342 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %361, i32 0, i32 1, !dbg !2769
  %next343 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue342, i32 0, i32 1, !dbg !2769
  store %struct.ngx_queue_s* %360, %struct.ngx_queue_s** %next343, align 4, !dbg !2769, !tbaa !905
  %362 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2769, !tbaa !820
  %queue344 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %362, i32 0, i32 1, !dbg !2769
  %363 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2769, !tbaa !820
  %queue345 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %363, i32 0, i32 1, !dbg !2769
  %next346 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue345, i32 0, i32 1, !dbg !2769
  %364 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next346, align 4, !dbg !2769, !tbaa !905
  %prev347 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %364, i32 0, i32 0, !dbg !2769
  store %struct.ngx_queue_s* %queue344, %struct.ngx_queue_s** %prev347, align 4, !dbg !2769, !tbaa !904
  %365 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !2769, !tbaa !820
  %366 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2769, !tbaa !820
  %queue348 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %366, i32 0, i32 1, !dbg !2769
  %prev349 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue348, i32 0, i32 0, !dbg !2769
  store %struct.ngx_queue_s* %365, %struct.ngx_queue_s** %prev349, align 4, !dbg !2769, !tbaa !904
  %367 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2769, !tbaa !820
  %queue350 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %367, i32 0, i32 1, !dbg !2769
  %368 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !2769, !tbaa !820
  %next351 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %368, i32 0, i32 1, !dbg !2769
  store %struct.ngx_queue_s* %queue350, %struct.ngx_queue_s** %next351, align 4, !dbg !2769, !tbaa !905
  %369 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2770, !tbaa !820
  %code = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %369, i32 0, i32 9, !dbg !2771
  store i8 0, i8* %code, align 4, !dbg !2772, !tbaa !2773
  %370 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2774, !tbaa !820
  %cnlen352 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %370, i32 0, i32 12, !dbg !2775
  store i16 0, i16* %cnlen352, align 2, !dbg !2776, !tbaa !2310
  %371 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2777, !tbaa !820
  %valid353 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %371, i32 0, i32 16, !dbg !2778
  store i32 0, i32* %valid353, align 4, !dbg !2779, !tbaa !2121
  %372 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2780, !tbaa !820
  %ttl = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %372, i32 0, i32 17, !dbg !2781
  store i32 -1, i32* %ttl, align 4, !dbg !2782, !tbaa !2783
  %373 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2784, !tbaa !820
  %374 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2785, !tbaa !820
  %waiting354 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %374, i32 0, i32 20, !dbg !2786
  store %struct.ngx_resolver_ctx_s* %373, %struct.ngx_resolver_ctx_s** %waiting354, align 4, !dbg !2787, !tbaa !2182
  %375 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2788, !tbaa !820
  %state355 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %375, i32 0, i32 4, !dbg !2789
  store i32 -2, i32* %state355, align 4, !dbg !2790, !tbaa !1703
  br label %do.body356, !dbg !2791, !llvm.loop !2792

do.body356:                                       ; preds = %do.cond359, %if.end336
  %376 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2794, !tbaa !820
  %377 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2796, !tbaa !820
  %node357 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %377, i32 0, i32 2, !dbg !2797
  store %struct.ngx_resolver_node_t* %376, %struct.ngx_resolver_node_t** %node357, align 4, !dbg !2798, !tbaa !2429
  %378 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2799, !tbaa !820
  %next358 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %378, i32 0, i32 0, !dbg !2800
  %379 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next358, align 4, !dbg !2800, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %379, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2801, !tbaa !820
  br label %do.cond359, !dbg !2802

do.cond359:                                       ; preds = %do.body356
  %380 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2803, !tbaa !820
  %tobool360 = icmp ne %struct.ngx_resolver_ctx_s* %380, null, !dbg !2802
  br i1 %tobool360, label %do.body356, label %do.end361, !dbg !2802, !llvm.loop !2792

do.end361:                                        ; preds = %do.cond359
  store i32 -2, i32* %retval, align 4, !dbg !2804
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2804

failed:                                           ; preds = %if.then319, %if.then305, %if.then270
  %381 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !2805, !tbaa !820
  %382 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2806, !tbaa !820
  %node362 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %382, i32 0, i32 0, !dbg !2807
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %381, %struct.ngx_rbtree_node_s* %node362), !dbg !2808
  %383 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2809, !tbaa !820
  %query363 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %383, i32 0, i32 6, !dbg !2811
  %384 = load i8*, i8** %query363, align 4, !dbg !2811, !tbaa !2440
  %tobool364 = icmp ne i8* %384, null, !dbg !2809
  br i1 %tobool364, label %if.then365, label %if.end367, !dbg !2812

if.then365:                                       ; preds = %failed
  %385 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2813, !tbaa !820
  %386 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2815, !tbaa !820
  %query366 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %386, i32 0, i32 6, !dbg !2816
  %387 = load i8*, i8** %query366, align 4, !dbg !2816, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %385, i8* %387), !dbg !2817
  br label %if.end367, !dbg !2818

if.end367:                                        ; preds = %if.then365, %failed
  %388 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2819, !tbaa !820
  %389 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2820, !tbaa !820
  %name368 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %389, i32 0, i32 2, !dbg !2821
  %390 = load i8*, i8** %name368, align 4, !dbg !2821, !tbaa !1358
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %388, i8* %390), !dbg !2822
  %391 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !2823, !tbaa !820
  %392 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2824, !tbaa !820
  %393 = bitcast %struct.ngx_resolver_node_t* %392 to i8*, !dbg !2824
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %391, i8* %393), !dbg !2825
  store i32 -1, i32* %retval, align 4, !dbg !2826
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2826

cleanup:                                          ; preds = %if.end367, %do.end361, %do.end284, %if.then251, %if.then242, %do.end165, %if.then146, %do.end131, %if.then104, %do.end100, %if.end89, %if.then62
  %394 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %394) #5, !dbg !2827
  %395 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %395) #5, !dbg !2827
  %396 = bitcast %struct.ngx_resolver_ctx_s** %last to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %396) #5, !dbg !2827
  %397 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %397) #5, !dbg !2827
  %398 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %398) #5, !dbg !2827
  %399 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %399) #5, !dbg !2827
  %400 = bitcast %struct.ngx_queue_s** %resend_queue to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %400) #5, !dbg !2827
  %401 = bitcast i32* %naddrs to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %401) #5, !dbg !2827
  %402 = bitcast i32* %i to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %402) #5, !dbg !2827
  %403 = bitcast %struct.ngx_str_t* %cname to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 8, i8* %403) #5, !dbg !2827
  %404 = bitcast i32* %rc to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %404) #5, !dbg !2827
  %405 = bitcast i32* %hash to i8*, !dbg !2827
  call void @llvm.lifetime.end(i64 4, i8* %405) #5, !dbg !2827
  %406 = load i32, i32* %retval, align 4, !dbg !2827
  ret i32 %406, !dbg !2827
}

; Function Attrs: nounwind
define internal void @ngx_resolver_free(%struct.ngx_resolver_s* %r, i8* %p) #0 !dbg !2828 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %p.addr = alloca i8*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !2832, metadata !824), !dbg !2834
  store i8* %p, i8** %p.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2833, metadata !824), !dbg !2835
  %0 = load i8*, i8** %p.addr, align 4, !dbg !2836, !tbaa !820
  call void @free(i8* %0), !dbg !2837
  ret void, !dbg !2838
}

; Function Attrs: nounwind
define void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !2839 {
entry:
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %i = alloca i32, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %w = alloca %struct.ngx_resolver_ctx_s*, align 4
  %p = alloca %struct.ngx_resolver_ctx_s**, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !2841, metadata !824), !dbg !2848
  %0 = bitcast i32* %i to i8*, !dbg !2849
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !2849
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2842, metadata !824), !dbg !2850
  %1 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !2851
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !2851
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !2843, metadata !824), !dbg !2852
  %2 = bitcast %struct.ngx_resolver_ctx_s** %w to i8*, !dbg !2853
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !2853
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %w, metadata !2844, metadata !824), !dbg !2854
  %3 = bitcast %struct.ngx_resolver_ctx_s*** %p to i8*, !dbg !2853
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !2853
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s*** %p, metadata !2845, metadata !824), !dbg !2855
  %4 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !2856
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !2856
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !2847, metadata !824), !dbg !2857
  %5 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2858, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %5, i32 0, i32 1, !dbg !2859
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !2859, !tbaa !1699
  store %struct.ngx_resolver_s* %6, %struct.ngx_resolver_s** %r, align 4, !dbg !2860, !tbaa !820
  %7 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2861, !tbaa !820
  %quick = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %7, i32 0, i32 18, !dbg !2863
  %8 = load i32, i32* %quick, align 4, !dbg !2863, !tbaa !1743
  %tobool = icmp ne i32 %8, 0, !dbg !2861
  br i1 %tobool, label %if.then, label %if.end, !dbg !2864

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2865

if.end:                                           ; preds = %entry
  %9 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2867, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %9, i32 0, i32 20, !dbg !2869
  %10 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !2869, !tbaa !1947
  %tobool1 = icmp ne %struct.ngx_event_s* %10, null, !dbg !2867
  br i1 %tobool1, label %land.lhs.true, label %if.end6, !dbg !2870

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2871, !tbaa !820
  %event2 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %11, i32 0, i32 20, !dbg !2872
  %12 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event2, align 4, !dbg !2872, !tbaa !1947
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %12, i32 0, i32 1, !dbg !2873
  %13 = bitcast i24* %timer_set to i32*, !dbg !2873
  %bf.load = load i32, i32* %13, align 4, !dbg !2873
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !2873
  %bf.clear = and i32 %bf.lshr, 1, !dbg !2873
  %tobool3 = icmp ne i32 %bf.clear, 0, !dbg !2871
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !2874

if.then4:                                         ; preds = %land.lhs.true
  %14 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2875, !tbaa !820
  %event5 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %14, i32 0, i32 20, !dbg !2877
  %15 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event5, align 4, !dbg !2877, !tbaa !1947
  call void @ngx_event_del_timer(%struct.ngx_event_s* %15), !dbg !2878
  br label %if.end6, !dbg !2879

if.end6:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %16 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2880, !tbaa !820
  %nsrvs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %16, i32 0, i32 13, !dbg !2882
  %17 = load i32, i32* %nsrvs, align 4, !dbg !2882, !tbaa !2883
  %tobool7 = icmp ne i32 %17, 0, !dbg !2880
  br i1 %tobool7, label %if.then8, label %if.end31, !dbg !2884

if.then8:                                         ; preds = %if.end6
  store i32 0, i32* %i, align 4, !dbg !2885, !tbaa !827
  br label %for.cond, !dbg !2888

for.cond:                                         ; preds = %for.inc, %if.then8
  %18 = load i32, i32* %i, align 4, !dbg !2889, !tbaa !827
  %19 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2891, !tbaa !820
  %nsrvs9 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %19, i32 0, i32 13, !dbg !2892
  %20 = load i32, i32* %nsrvs9, align 4, !dbg !2892, !tbaa !2883
  %cmp = icmp ult i32 %18, %20, !dbg !2893
  br i1 %cmp, label %for.body, label %for.end, !dbg !2894

for.body:                                         ; preds = %for.cond
  %21 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2895, !tbaa !820
  %srvs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %21, i32 0, i32 14, !dbg !2898
  %22 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !2898, !tbaa !2899
  %23 = load i32, i32* %i, align 4, !dbg !2900, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %22, i32 %23, !dbg !2895
  %ctx10 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx, i32 0, i32 4, !dbg !2901
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx10, align 4, !dbg !2901, !tbaa !2902
  %tobool11 = icmp ne %struct.ngx_resolver_ctx_s* %24, null, !dbg !2895
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !2904

if.then12:                                        ; preds = %for.body
  %25 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2905, !tbaa !820
  %srvs13 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %25, i32 0, i32 14, !dbg !2907
  %26 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs13, align 4, !dbg !2907, !tbaa !2899
  %27 = load i32, i32* %i, align 4, !dbg !2908, !tbaa !827
  %arrayidx14 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %26, i32 %27, !dbg !2905
  %ctx15 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx14, i32 0, i32 4, !dbg !2909
  %28 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx15, align 4, !dbg !2909, !tbaa !2902
  call void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %28), !dbg !2910
  br label %if.end16, !dbg !2911

if.end16:                                         ; preds = %if.then12, %for.body
  %29 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2912, !tbaa !820
  %srvs17 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %29, i32 0, i32 14, !dbg !2914
  %30 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs17, align 4, !dbg !2914, !tbaa !2899
  %31 = load i32, i32* %i, align 4, !dbg !2915, !tbaa !827
  %arrayidx18 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %30, i32 %31, !dbg !2912
  %addrs = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx18, i32 0, i32 7, !dbg !2916
  %32 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !2916, !tbaa !2917
  %tobool19 = icmp ne %struct.ngx_addr_t* %32, null, !dbg !2912
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !2918

if.then20:                                        ; preds = %if.end16
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2919, !tbaa !820
  %34 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2921, !tbaa !820
  %srvs21 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %34, i32 0, i32 14, !dbg !2922
  %35 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs21, align 4, !dbg !2922, !tbaa !2899
  %36 = load i32, i32* %i, align 4, !dbg !2923, !tbaa !827
  %arrayidx22 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %35, i32 %36, !dbg !2921
  %addrs23 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx22, i32 0, i32 7, !dbg !2924
  %37 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs23, align 4, !dbg !2924, !tbaa !2917
  %sockaddr = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %37, i32 0, i32 0, !dbg !2925
  %38 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !2925, !tbaa !1117
  %39 = bitcast %struct.sockaddr* %38 to i8*, !dbg !2921
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %33, i8* %39), !dbg !2926
  %40 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2927, !tbaa !820
  %41 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2928, !tbaa !820
  %srvs24 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %41, i32 0, i32 14, !dbg !2929
  %42 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs24, align 4, !dbg !2929, !tbaa !2899
  %43 = load i32, i32* %i, align 4, !dbg !2930, !tbaa !827
  %arrayidx25 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %42, i32 %43, !dbg !2928
  %addrs26 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx25, i32 0, i32 7, !dbg !2931
  %44 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs26, align 4, !dbg !2931, !tbaa !2917
  %45 = bitcast %struct.ngx_addr_t* %44 to i8*, !dbg !2928
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %40, i8* %45), !dbg !2932
  br label %if.end27, !dbg !2933

if.end27:                                         ; preds = %if.then20, %if.end16
  %46 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2934, !tbaa !820
  %47 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2935, !tbaa !820
  %srvs28 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %47, i32 0, i32 14, !dbg !2936
  %48 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs28, align 4, !dbg !2936, !tbaa !2899
  %49 = load i32, i32* %i, align 4, !dbg !2937, !tbaa !827
  %arrayidx29 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %48, i32 %49, !dbg !2935
  %name = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx29, i32 0, i32 0, !dbg !2938
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !2939
  %50 = load i8*, i8** %data, align 4, !dbg !2939, !tbaa !2940
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %46, i8* %50), !dbg !2941
  br label %for.inc, !dbg !2942

for.inc:                                          ; preds = %if.end27
  %51 = load i32, i32* %i, align 4, !dbg !2943, !tbaa !827
  %inc = add i32 %51, 1, !dbg !2943
  store i32 %inc, i32* %i, align 4, !dbg !2943, !tbaa !827
  br label %for.cond, !dbg !2944, !llvm.loop !2945

for.end:                                          ; preds = %for.cond
  %52 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2947, !tbaa !820
  %53 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2948, !tbaa !820
  %srvs30 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %53, i32 0, i32 14, !dbg !2949
  %54 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs30, align 4, !dbg !2949, !tbaa !2899
  %55 = bitcast %struct.ngx_resolver_srv_name_t* %54 to i8*, !dbg !2948
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %52, i8* %55), !dbg !2950
  br label %if.end31, !dbg !2951

if.end31:                                         ; preds = %for.end, %if.end6
  %56 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2952, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %56, i32 0, i32 4, !dbg !2954
  %57 = load i32, i32* %state, align 4, !dbg !2954, !tbaa !1703
  %cmp32 = icmp eq i32 %57, -2, !dbg !2955
  br i1 %cmp32, label %if.then35, label %lor.lhs.false, !dbg !2956

lor.lhs.false:                                    ; preds = %if.end31
  %58 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2957, !tbaa !820
  %state33 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %58, i32 0, i32 4, !dbg !2958
  %59 = load i32, i32* %state33, align 4, !dbg !2958, !tbaa !1703
  %cmp34 = icmp eq i32 %59, 110, !dbg !2959
  br i1 %cmp34, label %if.then35, label %if.end51, !dbg !2960

if.then35:                                        ; preds = %lor.lhs.false, %if.end31
  %60 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2961, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %60, i32 0, i32 2, !dbg !2963
  %61 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %node, align 4, !dbg !2963, !tbaa !2429
  store %struct.ngx_resolver_node_t* %61, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2964, !tbaa !820
  %62 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2965, !tbaa !820
  %tobool36 = icmp ne %struct.ngx_resolver_node_t* %62, null, !dbg !2965
  br i1 %tobool36, label %if.then37, label %if.end50, !dbg !2967

if.then37:                                        ; preds = %if.then35
  %63 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2968, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %63, i32 0, i32 20, !dbg !2970
  store %struct.ngx_resolver_ctx_s** %waiting, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !2971, !tbaa !820
  %64 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !2972, !tbaa !820
  %waiting38 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %64, i32 0, i32 20, !dbg !2973
  %65 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting38, align 4, !dbg !2973, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %65, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2974, !tbaa !820
  br label %while.cond, !dbg !2975

while.cond:                                       ; preds = %if.end42, %if.then37
  %66 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2976, !tbaa !820
  %tobool39 = icmp ne %struct.ngx_resolver_ctx_s* %66, null, !dbg !2975
  br i1 %tobool39, label %while.body, label %while.end, !dbg !2975

while.body:                                       ; preds = %while.cond
  %67 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2977, !tbaa !820
  %68 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2980, !tbaa !820
  %cmp40 = icmp eq %struct.ngx_resolver_ctx_s* %67, %68, !dbg !2981
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !2982

if.then41:                                        ; preds = %while.body
  %69 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2983, !tbaa !820
  %next = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %69, i32 0, i32 0, !dbg !2985
  %70 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !2985, !tbaa !2110
  %71 = load %struct.ngx_resolver_ctx_s**, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !2986, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %70, %struct.ngx_resolver_ctx_s** %71, align 4, !dbg !2987, !tbaa !820
  br label %done, !dbg !2988

if.end42:                                         ; preds = %while.body
  %72 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2989, !tbaa !820
  %next43 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %72, i32 0, i32 0, !dbg !2990
  store %struct.ngx_resolver_ctx_s** %next43, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !2991, !tbaa !820
  %73 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2992, !tbaa !820
  %next44 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %73, i32 0, i32 0, !dbg !2993
  %74 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next44, align 4, !dbg !2993, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %74, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !2994, !tbaa !820
  br label %while.cond, !dbg !2975, !llvm.loop !2995

while.end:                                        ; preds = %while.cond
  %75 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2997, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %75, i32 0, i32 2, !dbg !2997
  %76 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !2997, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %76, i32 0, i32 0, !dbg !2997
  %77 = load i32, i32* %log_level, align 4, !dbg !2997, !tbaa !2999
  %cmp45 = icmp uge i32 %77, 2, !dbg !2997
  br i1 %cmp45, label %if.then46, label %if.end49, !dbg !3000

if.then46:                                        ; preds = %while.end
  %78 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !2997, !tbaa !820
  %log47 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %78, i32 0, i32 2, !dbg !2997
  %79 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log47, align 4, !dbg !2997, !tbaa !965
  %80 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !2997, !tbaa !820
  %name48 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %80, i32 0, i32 5, !dbg !2997
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %79, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i32 0, i32 0), %struct.ngx_str_t* %name48), !dbg !2997
  br label %if.end49, !dbg !2997

if.end49:                                         ; preds = %if.then46, %while.end
  br label %if.end50, !dbg !3001

if.end50:                                         ; preds = %if.end49, %if.then35
  br label %if.end51, !dbg !3002

if.end51:                                         ; preds = %if.end50, %lor.lhs.false
  br label %done, !dbg !3003

done:                                             ; preds = %if.end51, %if.then41
  %81 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3004, !tbaa !820
  %service = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %81, i32 0, i32 6, !dbg !3006
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %service, i32 0, i32 0, !dbg !3007
  %82 = load i32, i32* %len, align 4, !dbg !3007, !tbaa !1851
  %tobool52 = icmp ne i32 %82, 0, !dbg !3004
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !3008

if.then53:                                        ; preds = %done
  %83 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3009, !tbaa !820
  %84 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3011, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %84, i32 0, i32 8, !dbg !3012
  %85 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3013, !tbaa !820
  %srv_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %85, i32 0, i32 16, !dbg !3014
  call void @ngx_resolver_expire(%struct.ngx_resolver_s* %83, %struct.ngx_rbtree_s* %srv_rbtree, %struct.ngx_queue_s* %srv_expire_queue), !dbg !3015
  br label %if.end54, !dbg !3016

if.else:                                          ; preds = %done
  %86 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3017, !tbaa !820
  %87 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3019, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %87, i32 0, i32 6, !dbg !3020
  %88 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3021, !tbaa !820
  %name_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %88, i32 0, i32 15, !dbg !3022
  call void @ngx_resolver_expire(%struct.ngx_resolver_s* %86, %struct.ngx_rbtree_s* %name_rbtree, %struct.ngx_queue_s* %name_expire_queue), !dbg !3023
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then53
  %89 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3024, !tbaa !820
  %event55 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %89, i32 0, i32 20, !dbg !3026
  %90 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event55, align 4, !dbg !3026, !tbaa !1947
  %tobool56 = icmp ne %struct.ngx_event_s* %90, null, !dbg !3024
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !3027

if.then57:                                        ; preds = %if.end54
  %91 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3028, !tbaa !820
  %92 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3030, !tbaa !820
  %event58 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %92, i32 0, i32 20, !dbg !3031
  %93 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event58, align 4, !dbg !3031, !tbaa !1947
  %94 = bitcast %struct.ngx_event_s* %93 to i8*, !dbg !3030
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %91, i8* %94), !dbg !3032
  br label %if.end59, !dbg !3033

if.end59:                                         ; preds = %if.then57, %if.end54
  %95 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3034, !tbaa !820
  %96 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3035, !tbaa !820
  %97 = bitcast %struct.ngx_resolver_ctx_s* %96 to i8*, !dbg !3035
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %95, i8* %97), !dbg !3036
  %98 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3037, !tbaa !820
  %event60 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %98, i32 0, i32 0, !dbg !3039
  %99 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event60, align 4, !dbg !3039, !tbaa !882
  %timer_set61 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %99, i32 0, i32 1, !dbg !3040
  %100 = bitcast i24* %timer_set61 to i32*, !dbg !3040
  %bf.load62 = load i32, i32* %100, align 4, !dbg !3040
  %bf.lshr63 = lshr i32 %bf.load62, 11, !dbg !3040
  %bf.clear64 = and i32 %bf.lshr63, 1, !dbg !3040
  %tobool65 = icmp ne i32 %bf.clear64, 0, !dbg !3037
  br i1 %tobool65, label %land.lhs.true66, label %if.end70, !dbg !3041

land.lhs.true66:                                  ; preds = %if.end59
  %101 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3042, !tbaa !820
  %call = call i32 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %101), !dbg !3043
  %tobool67 = icmp ne i32 %call, 0, !dbg !3043
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !3044

if.then68:                                        ; preds = %land.lhs.true66
  %102 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3045, !tbaa !820
  %event69 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %102, i32 0, i32 0, !dbg !3047
  %103 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event69, align 4, !dbg !3047, !tbaa !882
  call void @ngx_event_del_timer(%struct.ngx_event_s* %103), !dbg !3048
  br label %if.end70, !dbg !3049

if.end70:                                         ; preds = %if.then68, %land.lhs.true66, %if.end59
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !3050
  br label %cleanup, !dbg !3050

cleanup:                                          ; preds = %if.end70, %if.then
  %104 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 4, i8* %104) #5, !dbg !3050
  %105 = bitcast %struct.ngx_resolver_ctx_s*** %p to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 4, i8* %105) #5, !dbg !3050
  %106 = bitcast %struct.ngx_resolver_ctx_s** %w to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 4, i8* %106) #5, !dbg !3050
  %107 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 4, i8* %107) #5, !dbg !3050
  %108 = bitcast i32* %i to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 4, i8* %108) #5, !dbg !3050
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3050

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind
define internal void @ngx_event_del_timer(%struct.ngx_event_s* %ev) #4 !dbg !3051 {
entry:
  %ev.addr = alloca %struct.ngx_event_s*, align 4
  store %struct.ngx_event_s* %ev, %struct.ngx_event_s** %ev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %ev.addr, metadata !3054, metadata !824), !dbg !3055
  %0 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3056, !tbaa !820
  %timer = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %0, i32 0, i32 5, !dbg !3057
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* @ngx_event_timer_rbtree, %struct.ngx_rbtree_node_s* %timer), !dbg !3058
  %1 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3059, !tbaa !820
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %1, i32 0, i32 1, !dbg !3060
  %2 = bitcast i24* %timer_set to i32*, !dbg !3060
  %bf.load = load i32, i32* %2, align 4, !dbg !3061
  %bf.clear = and i32 %bf.load, -2049, !dbg !3061
  store i32 %bf.clear, i32* %2, align 4, !dbg !3061
  ret void, !dbg !3062
}

declare void @ngx_log_error_core(i32, %struct.ngx_log_s*, i32, i8*, ...) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_expire(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree, %struct.ngx_queue_s* %queue) #0 !dbg !3063 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %tree.addr = alloca %struct.ngx_rbtree_s*, align 4
  %queue.addr = alloca %struct.ngx_queue_s*, align 4
  %now = alloca i32, align 4
  %i = alloca i32, align 4
  %q = alloca %struct.ngx_queue_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3067, metadata !824), !dbg !3074
  store %struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_s** %tree.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree.addr, metadata !3068, metadata !824), !dbg !3075
  store %struct.ngx_queue_s* %queue, %struct.ngx_queue_s** %queue.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %queue.addr, metadata !3069, metadata !824), !dbg !3076
  %0 = bitcast i32* %now to i8*, !dbg !3077
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3077
  call void @llvm.dbg.declare(metadata i32* %now, metadata !3070, metadata !824), !dbg !3078
  %1 = bitcast i32* %i to i8*, !dbg !3079
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3071, metadata !824), !dbg !3080
  %2 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !3081
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !3081
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %q, metadata !3072, metadata !824), !dbg !3082
  %3 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3083
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !3083
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !3073, metadata !824), !dbg !3084
  %4 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !3085, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %4, i32 0, i32 0, !dbg !3085
  %5 = load volatile i32, i32* %sec, align 4, !dbg !3085, !tbaa !2123
  store i32 %5, i32* %now, align 4, !dbg !3086, !tbaa !1529
  store i32 0, i32* %i, align 4, !dbg !3087, !tbaa !827
  br label %for.cond, !dbg !3089

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !3090, !tbaa !827
  %cmp = icmp ult i32 %6, 2, !dbg !3092
  br i1 %cmp, label %for.body, label %for.end, !dbg !3093

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !3094, !tbaa !820
  %8 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !3094, !tbaa !820
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %8, i32 0, i32 0, !dbg !3094
  %9 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !3094, !tbaa !904
  %cmp1 = icmp eq %struct.ngx_queue_s* %7, %9, !dbg !3094
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3097

if.then:                                          ; preds = %for.body
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3098

if.end:                                           ; preds = %for.body
  %10 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !3100, !tbaa !820
  %prev2 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %10, i32 0, i32 0, !dbg !3100
  %11 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev2, align 4, !dbg !3100, !tbaa !904
  store %struct.ngx_queue_s* %11, %struct.ngx_queue_s** %q, align 4, !dbg !3101, !tbaa !820
  %12 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !3102, !tbaa !820
  %13 = bitcast %struct.ngx_queue_s* %12 to i8*, !dbg !3102
  %add.ptr = getelementptr inbounds i8, i8* %13, i32 -20, !dbg !3102
  %14 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !3102
  store %struct.ngx_resolver_node_t* %14, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3103, !tbaa !820
  %15 = load i32, i32* %now, align 4, !dbg !3104, !tbaa !1529
  %16 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3106, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %16, i32 0, i32 15, !dbg !3107
  %17 = load i32, i32* %expire, align 4, !dbg !3107, !tbaa !2136
  %cmp3 = icmp sle i32 %15, %17, !dbg !3108
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3109

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3110

if.end5:                                          ; preds = %if.end
  %18 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !3112, !tbaa !820
  %prev6 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %18, i32 0, i32 0, !dbg !3112
  %19 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev6, align 4, !dbg !3112, !tbaa !904
  %20 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !3112, !tbaa !820
  %next = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %20, i32 0, i32 1, !dbg !3112
  %21 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next, align 4, !dbg !3112, !tbaa !905
  %prev7 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %21, i32 0, i32 0, !dbg !3112
  store %struct.ngx_queue_s* %19, %struct.ngx_queue_s** %prev7, align 4, !dbg !3112, !tbaa !904
  %22 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !3112, !tbaa !820
  %next8 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %22, i32 0, i32 1, !dbg !3112
  %23 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next8, align 4, !dbg !3112, !tbaa !905
  %24 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !3112, !tbaa !820
  %prev9 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %24, i32 0, i32 0, !dbg !3112
  %25 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev9, align 4, !dbg !3112, !tbaa !904
  %next10 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %25, i32 0, i32 1, !dbg !3112
  store %struct.ngx_queue_s* %23, %struct.ngx_queue_s** %next10, align 4, !dbg !3112, !tbaa !905
  %26 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !3113, !tbaa !820
  %27 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3114, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %27, i32 0, i32 0, !dbg !3115
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %26, %struct.ngx_rbtree_node_s* %node), !dbg !3116
  %28 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3117, !tbaa !820
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3118, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %28, %struct.ngx_resolver_node_t* %29), !dbg !3119
  br label %for.inc, !dbg !3120

for.inc:                                          ; preds = %if.end5
  %30 = load i32, i32* %i, align 4, !dbg !3121, !tbaa !827
  %inc = add i32 %30, 1, !dbg !3121
  store i32 %inc, i32* %i, align 4, !dbg !3121, !tbaa !827
  br label %for.cond, !dbg !3122, !llvm.loop !3123

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !3125
  br label %cleanup, !dbg !3125

cleanup:                                          ; preds = %for.end, %if.then4, %if.then
  %31 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3125
  call void @llvm.lifetime.end(i64 4, i8* %31) #5, !dbg !3125
  %32 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !3125
  call void @llvm.lifetime.end(i64 4, i8* %32) #5, !dbg !3125
  %33 = bitcast i32* %i to i8*, !dbg !3125
  call void @llvm.lifetime.end(i64 4, i8* %33) #5, !dbg !3125
  %34 = bitcast i32* %now to i8*, !dbg !3125
  call void @llvm.lifetime.end(i64 4, i8* %34) #5, !dbg !3125
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3125

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
define internal void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %r, i8* %p) #0 !dbg !3126 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %p.addr = alloca i8*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3128, metadata !824), !dbg !3130
  store i8* %p, i8** %p.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3129, metadata !824), !dbg !3131
  %0 = load i8*, i8** %p.addr, align 4, !dbg !3132, !tbaa !820
  call void @free(i8* %0), !dbg !3133
  ret void, !dbg !3134
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %r) #0 !dbg !3135 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3139, metadata !824), !dbg !3140
  %0 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3141, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %0, i32 0, i32 12, !dbg !3141
  %1 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3141, !tbaa !820
  %name_resend_queue1 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %1, i32 0, i32 12, !dbg !3141
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue1, i32 0, i32 0, !dbg !3141
  %2 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !3141, !tbaa !904
  %cmp = icmp eq %struct.ngx_queue_s* %name_resend_queue, %2, !dbg !3141
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !3142

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3143, !tbaa !820
  %srv_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %3, i32 0, i32 13, !dbg !3143
  %4 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3143, !tbaa !820
  %srv_resend_queue2 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %4, i32 0, i32 13, !dbg !3143
  %prev3 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_resend_queue2, i32 0, i32 0, !dbg !3143
  %5 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev3, align 4, !dbg !3143, !tbaa !904
  %cmp4 = icmp eq %struct.ngx_queue_s* %srv_resend_queue, %5, !dbg !3143
  br i1 %cmp4, label %land.lhs.true5, label %land.end, !dbg !3144

land.lhs.true5:                                   ; preds = %land.lhs.true
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3145, !tbaa !820
  %addr6_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %6, i32 0, i32 21, !dbg !3145
  %7 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3145, !tbaa !820
  %addr6_resend_queue6 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %7, i32 0, i32 21, !dbg !3145
  %prev7 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr6_resend_queue6, i32 0, i32 0, !dbg !3145
  %8 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev7, align 4, !dbg !3145, !tbaa !904
  %cmp8 = icmp eq %struct.ngx_queue_s* %addr6_resend_queue, %8, !dbg !3145
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !3146

land.rhs:                                         ; preds = %land.lhs.true5
  %9 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3147, !tbaa !820
  %addr_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %9, i32 0, i32 14, !dbg !3147
  %10 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3147, !tbaa !820
  %addr_resend_queue9 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %10, i32 0, i32 14, !dbg !3147
  %prev10 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %addr_resend_queue9, i32 0, i32 0, !dbg !3147
  %11 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev10, align 4, !dbg !3147, !tbaa !904
  %cmp11 = icmp eq %struct.ngx_queue_s* %addr_resend_queue, %11, !dbg !3147
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true5, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp11, %land.rhs ]
  %land.ext = zext i1 %12 to i32, !dbg !3146
  ret i32 %land.ext, !dbg !3148
}

; Function Attrs: nounwind
define i32 @ngx_resolve_addr(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !3149 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %name = alloca i8*, align 4
  %addr = alloca i32, align 4
  %resend_queue = alloca %struct.ngx_queue_s*, align 4
  %expire_queue = alloca %struct.ngx_queue_s*, align 4
  %tree = alloca %struct.ngx_rbtree_s*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %sin = alloca %struct.sockaddr_in*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %hash = alloca i32, align 4
  %sin6 = alloca %struct.sockaddr_in6*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !3151, metadata !824), !dbg !3162
  %0 = bitcast i8** %name to i8*, !dbg !3163
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3163
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3152, metadata !824), !dbg !3164
  %1 = bitcast i32* %addr to i8*, !dbg !3165
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3165
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !3153, metadata !824), !dbg !3166
  %2 = bitcast %struct.ngx_queue_s** %resend_queue to i8*, !dbg !3167
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !3167
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %resend_queue, metadata !3154, metadata !824), !dbg !3168
  %3 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !3167
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !3167
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %expire_queue, metadata !3155, metadata !824), !dbg !3169
  %4 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !3170
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree, metadata !3156, metadata !824), !dbg !3171
  %5 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !3172
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !3157, metadata !824), !dbg !3173
  %6 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !3174
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !3174
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sin, metadata !3158, metadata !824), !dbg !3175
  %7 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3176
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !3176
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !3159, metadata !824), !dbg !3177
  %8 = bitcast i32* %hash to i8*, !dbg !3178
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !3178
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !3160, metadata !824), !dbg !3179
  %9 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !3180
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !3180
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sin6, metadata !3161, metadata !824), !dbg !3181
  store i32 0, i32* %addr, align 4, !dbg !3182, !tbaa !827
  store i32 0, i32* %hash, align 4, !dbg !3183, !tbaa !827
  store %struct.sockaddr_in6* null, %struct.sockaddr_in6** %sin6, align 4, !dbg !3184, !tbaa !820
  %10 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3185, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %10, i32 0, i32 1, !dbg !3186
  %11 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !3186, !tbaa !1699
  store %struct.ngx_resolver_s* %11, %struct.ngx_resolver_s** %r, align 4, !dbg !3187, !tbaa !820
  %12 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3188, !tbaa !820
  %addr1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %12, i32 0, i32 10, !dbg !3189
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr1, i32 0, i32 0, !dbg !3190
  %13 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !3190, !tbaa !1721
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 0, !dbg !3191
  %14 = load i16, i16* %sa_family, align 2, !dbg !3191, !tbaa !3192
  %conv = zext i16 %14 to i32, !dbg !3188
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
  ], !dbg !3194

sw.bb:                                            ; preds = %entry
  %15 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3195, !tbaa !820
  %addr2 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %15, i32 0, i32 10, !dbg !3197
  %sockaddr3 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr2, i32 0, i32 0, !dbg !3198
  %16 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr3, align 4, !dbg !3198, !tbaa !1721
  %17 = bitcast %struct.sockaddr* %16 to %struct.sockaddr_in6*, !dbg !3199
  store %struct.sockaddr_in6* %17, %struct.sockaddr_in6** %sin6, align 4, !dbg !3200, !tbaa !820
  %18 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !3201, !tbaa !820
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %18, i32 0, i32 3, !dbg !3202
  %__in6_union = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr, i32 0, i32 0, !dbg !3203
  %__s6_addr = bitcast %union.anon* %__in6_union to [16 x i8]*, !dbg !3203
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr, i32 0, i32 0, !dbg !3201
  %call = call i32 @ngx_crc32_short(i8* %arraydecay, i32 16), !dbg !3204
  store i32 %call, i32* %hash, align 4, !dbg !3205, !tbaa !827
  %19 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3206, !tbaa !820
  %20 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !3207, !tbaa !820
  %sin6_addr4 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %20, i32 0, i32 3, !dbg !3208
  %21 = load i32, i32* %hash, align 4, !dbg !3209, !tbaa !827
  %call5 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr6(%struct.ngx_resolver_s* %19, %struct.in6_addr* %sin6_addr4, i32 %21), !dbg !3210
  store %struct.ngx_resolver_node_t* %call5, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3211, !tbaa !820
  %22 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3212, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %22, i32 0, i32 19, !dbg !3213
  store %struct.ngx_rbtree_s* %addr6_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !3214, !tbaa !820
  %23 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3215, !tbaa !820
  %addr6_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %23, i32 0, i32 21, !dbg !3216
  store %struct.ngx_queue_s* %addr6_resend_queue, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !3217, !tbaa !820
  %24 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3218, !tbaa !820
  %addr6_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %24, i32 0, i32 22, !dbg !3219
  store %struct.ngx_queue_s* %addr6_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !3220, !tbaa !820
  br label %sw.epilog, !dbg !3221

sw.default:                                       ; preds = %entry
  %25 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3222, !tbaa !820
  %addr6 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %25, i32 0, i32 10, !dbg !3223
  %sockaddr7 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr6, i32 0, i32 0, !dbg !3224
  %26 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr7, align 4, !dbg !3224, !tbaa !1721
  %27 = bitcast %struct.sockaddr* %26 to %struct.sockaddr_in*, !dbg !3225
  store %struct.sockaddr_in* %27, %struct.sockaddr_in** %sin, align 4, !dbg !3226, !tbaa !820
  %28 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin, align 4, !dbg !3227, !tbaa !820
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %28, i32 0, i32 2, !dbg !3228
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !3229
  %29 = load i32, i32* %s_addr, align 4, !dbg !3229, !tbaa !3230
  %call8 = call i32 @ntohl(i32 %29), !dbg !3231
  store i32 %call8, i32* %addr, align 4, !dbg !3232, !tbaa !827
  %30 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3233, !tbaa !820
  %31 = load i32, i32* %addr, align 4, !dbg !3234, !tbaa !827
  %call9 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr(%struct.ngx_resolver_s* %30, i32 %31), !dbg !3235
  store %struct.ngx_resolver_node_t* %call9, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3236, !tbaa !820
  %32 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3237, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %32, i32 0, i32 10, !dbg !3238
  store %struct.ngx_rbtree_s* %addr_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !3239, !tbaa !820
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3240, !tbaa !820
  %addr_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %33, i32 0, i32 14, !dbg !3241
  store %struct.ngx_queue_s* %addr_resend_queue, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !3242, !tbaa !820
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3243, !tbaa !820
  %addr_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %34, i32 0, i32 17, !dbg !3244
  store %struct.ngx_queue_s* %addr_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !3245, !tbaa !820
  br label %sw.epilog, !dbg !3246

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %35 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3247, !tbaa !820
  %tobool = icmp ne %struct.ngx_resolver_node_t* %35, null, !dbg !3247
  br i1 %tobool, label %if.then, label %if.else, !dbg !3249

if.then:                                          ; preds = %sw.epilog
  %36 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3250, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %36, i32 0, i32 16, !dbg !3253
  %37 = load i32, i32* %valid, align 4, !dbg !3253, !tbaa !2121
  %38 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !3254, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %38, i32 0, i32 0, !dbg !3254
  %39 = load volatile i32, i32* %sec, align 4, !dbg !3254, !tbaa !2123
  %cmp = icmp sge i32 %37, %39, !dbg !3255
  br i1 %cmp, label %if.then11, label %if.end44, !dbg !3256

if.then11:                                        ; preds = %if.then
  %40 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3257, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %40, i32 0, i32 1, !dbg !3257
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !3257
  %41 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !3257, !tbaa !904
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3257, !tbaa !820
  %queue12 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %42, i32 0, i32 1, !dbg !3257
  %next = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue12, i32 0, i32 1, !dbg !3257
  %43 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next, align 4, !dbg !3257, !tbaa !905
  %prev13 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %43, i32 0, i32 0, !dbg !3257
  store %struct.ngx_queue_s* %41, %struct.ngx_queue_s** %prev13, align 4, !dbg !3257, !tbaa !904
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3257, !tbaa !820
  %queue14 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %44, i32 0, i32 1, !dbg !3257
  %next15 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue14, i32 0, i32 1, !dbg !3257
  %45 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next15, align 4, !dbg !3257, !tbaa !905
  %46 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3257, !tbaa !820
  %queue16 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %46, i32 0, i32 1, !dbg !3257
  %prev17 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue16, i32 0, i32 0, !dbg !3257
  %47 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev17, align 4, !dbg !3257, !tbaa !904
  %next18 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %47, i32 0, i32 1, !dbg !3257
  store %struct.ngx_queue_s* %45, %struct.ngx_queue_s** %next18, align 4, !dbg !3257, !tbaa !905
  %48 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !3259, !tbaa !820
  %sec19 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %48, i32 0, i32 0, !dbg !3259
  %49 = load volatile i32, i32* %sec19, align 4, !dbg !3259, !tbaa !2123
  %50 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3260, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %50, i32 0, i32 25, !dbg !3261
  %51 = load i32, i32* %expire, align 4, !dbg !3261, !tbaa !954
  %add = add nsw i32 %49, %51, !dbg !3262
  %52 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3263, !tbaa !820
  %expire20 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %52, i32 0, i32 15, !dbg !3264
  store i32 %add, i32* %expire20, align 4, !dbg !3265, !tbaa !2136
  %53 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !3266, !tbaa !820
  %next21 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %53, i32 0, i32 1, !dbg !3266
  %54 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next21, align 4, !dbg !3266, !tbaa !905
  %55 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3266, !tbaa !820
  %queue22 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %55, i32 0, i32 1, !dbg !3266
  %next23 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue22, i32 0, i32 1, !dbg !3266
  store %struct.ngx_queue_s* %54, %struct.ngx_queue_s** %next23, align 4, !dbg !3266, !tbaa !905
  %56 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3266, !tbaa !820
  %queue24 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %56, i32 0, i32 1, !dbg !3266
  %57 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3266, !tbaa !820
  %queue25 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %57, i32 0, i32 1, !dbg !3266
  %next26 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue25, i32 0, i32 1, !dbg !3266
  %58 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next26, align 4, !dbg !3266, !tbaa !905
  %prev27 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %58, i32 0, i32 0, !dbg !3266
  store %struct.ngx_queue_s* %queue24, %struct.ngx_queue_s** %prev27, align 4, !dbg !3266, !tbaa !904
  %59 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !3266, !tbaa !820
  %60 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3266, !tbaa !820
  %queue28 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %60, i32 0, i32 1, !dbg !3266
  %prev29 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue28, i32 0, i32 0, !dbg !3266
  store %struct.ngx_queue_s* %59, %struct.ngx_queue_s** %prev29, align 4, !dbg !3266, !tbaa !904
  %61 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3266, !tbaa !820
  %queue30 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %61, i32 0, i32 1, !dbg !3266
  %62 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !3266, !tbaa !820
  %next31 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %62, i32 0, i32 1, !dbg !3266
  store %struct.ngx_queue_s* %queue30, %struct.ngx_queue_s** %next31, align 4, !dbg !3266, !tbaa !905
  %63 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3267, !tbaa !820
  %64 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3268, !tbaa !820
  %name32 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %64, i32 0, i32 2, !dbg !3269
  %65 = load i8*, i8** %name32, align 4, !dbg !3269, !tbaa !1358
  %66 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3270, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %66, i32 0, i32 4, !dbg !3271
  %67 = load i16, i16* %nlen, align 4, !dbg !3271, !tbaa !1365
  %conv33 = zext i16 %67 to i32, !dbg !3270
  %call34 = call i8* @ngx_resolver_dup(%struct.ngx_resolver_s* %63, i8* %65, i32 %conv33), !dbg !3272
  store i8* %call34, i8** %name, align 4, !dbg !3273, !tbaa !820
  %68 = load i8*, i8** %name, align 4, !dbg !3274, !tbaa !820
  %cmp35 = icmp eq i8* %68, null, !dbg !3276
  br i1 %cmp35, label %if.then37, label %if.end, !dbg !3277

if.then37:                                        ; preds = %if.then11
  br label %failed, !dbg !3278

if.end:                                           ; preds = %if.then11
  %69 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3280, !tbaa !820
  %nlen38 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %69, i32 0, i32 4, !dbg !3281
  %70 = load i16, i16* %nlen38, align 4, !dbg !3281, !tbaa !1365
  %conv39 = zext i16 %70 to i32, !dbg !3280
  %71 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3282, !tbaa !820
  %name40 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %71, i32 0, i32 5, !dbg !3283
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name40, i32 0, i32 0, !dbg !3284
  store i32 %conv39, i32* %len, align 4, !dbg !3285, !tbaa !1687
  %72 = load i8*, i8** %name, align 4, !dbg !3286, !tbaa !820
  %73 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3287, !tbaa !820
  %name41 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %73, i32 0, i32 5, !dbg !3288
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name41, i32 0, i32 1, !dbg !3289
  store i8* %72, i8** %data, align 4, !dbg !3290, !tbaa !1679
  %74 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3291, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %74, i32 0, i32 4, !dbg !3292
  store i32 0, i32* %state, align 4, !dbg !3293, !tbaa !1703
  %75 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3294, !tbaa !820
  %valid42 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %75, i32 0, i32 16, !dbg !3295
  %76 = load i32, i32* %valid42, align 4, !dbg !3295, !tbaa !2121
  %77 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3296, !tbaa !820
  %valid43 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %77, i32 0, i32 7, !dbg !3297
  store i32 %76, i32* %valid43, align 4, !dbg !3298, !tbaa !2201
  %78 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3299, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %78, i32 0, i32 15, !dbg !3300
  %79 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !3300, !tbaa !1844
  %80 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3301, !tbaa !820
  call void %79(%struct.ngx_resolver_ctx_s* %80), !dbg !3299
  %81 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3302, !tbaa !820
  %82 = load i8*, i8** %name, align 4, !dbg !3303, !tbaa !820
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %81, i8* %82), !dbg !3304
  store i32 0, i32* %retval, align 4, !dbg !3305
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3305

if.end44:                                         ; preds = %if.then
  %83 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3306, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %83, i32 0, i32 20, !dbg !3308
  %84 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !3308, !tbaa !2182
  %tobool45 = icmp ne %struct.ngx_resolver_ctx_s* %84, null, !dbg !3306
  br i1 %tobool45, label %if.then46, label %if.end71, !dbg !3309

if.then46:                                        ; preds = %if.end44
  %85 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3310, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %85, i32 0, i32 20, !dbg !3313
  %86 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !3313, !tbaa !1947
  %cmp47 = icmp eq %struct.ngx_event_s* %86, null, !dbg !3314
  br i1 %cmp47, label %land.lhs.true, label %if.end66, !dbg !3315

land.lhs.true:                                    ; preds = %if.then46
  %87 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3316, !tbaa !820
  %timeout = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %87, i32 0, i32 17, !dbg !3317
  %88 = load i32, i32* %timeout, align 4, !dbg !3317, !tbaa !2369
  %tobool49 = icmp ne i32 %88, 0, !dbg !3316
  br i1 %tobool49, label %if.then50, label %if.end66, !dbg !3318

if.then50:                                        ; preds = %land.lhs.true
  %89 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3319, !tbaa !820
  %call51 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %89, i32 48), !dbg !3321
  %90 = bitcast i8* %call51 to %struct.ngx_event_s*, !dbg !3321
  %91 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3322, !tbaa !820
  %event52 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %91, i32 0, i32 20, !dbg !3323
  store %struct.ngx_event_s* %90, %struct.ngx_event_s** %event52, align 4, !dbg !3324, !tbaa !1947
  %92 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3325, !tbaa !820
  %event53 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %92, i32 0, i32 20, !dbg !3327
  %93 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event53, align 4, !dbg !3327, !tbaa !1947
  %cmp54 = icmp eq %struct.ngx_event_s* %93, null, !dbg !3328
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !3329

if.then56:                                        ; preds = %if.then50
  store i32 -1, i32* %retval, align 4, !dbg !3330
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3330

if.end57:                                         ; preds = %if.then50
  %94 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3332, !tbaa !820
  %event58 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %94, i32 0, i32 20, !dbg !3333
  %95 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event58, align 4, !dbg !3333, !tbaa !1947
  %handler59 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %95, i32 0, i32 2, !dbg !3334
  store void (%struct.ngx_event_s*)* @ngx_resolver_timeout_handler, void (%struct.ngx_event_s*)** %handler59, align 4, !dbg !3335, !tbaa !922
  %96 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3336, !tbaa !820
  %97 = bitcast %struct.ngx_resolver_ctx_s* %96 to i8*, !dbg !3336
  %98 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3337, !tbaa !820
  %event60 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %98, i32 0, i32 20, !dbg !3338
  %99 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event60, align 4, !dbg !3338, !tbaa !1947
  %data61 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %99, i32 0, i32 0, !dbg !3339
  store i8* %97, i8** %data61, align 4, !dbg !3340, !tbaa !929
  %100 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3341, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %100, i32 0, i32 2, !dbg !3342
  %101 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !3342, !tbaa !965
  %102 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3343, !tbaa !820
  %event62 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %102, i32 0, i32 20, !dbg !3344
  %103 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event62, align 4, !dbg !3344, !tbaa !1947
  %log63 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %103, i32 0, i32 4, !dbg !3345
  store %struct.ngx_log_s* %101, %struct.ngx_log_s** %log63, align 4, !dbg !3346, !tbaa !938
  %104 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3347, !tbaa !820
  %ident = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %104, i32 0, i32 3, !dbg !3348
  store i32 -1, i32* %ident, align 4, !dbg !3349, !tbaa !2402
  %105 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3350, !tbaa !820
  %event64 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %105, i32 0, i32 20, !dbg !3351
  %106 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event64, align 4, !dbg !3351, !tbaa !1947
  %107 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3352, !tbaa !820
  %timeout65 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %107, i32 0, i32 17, !dbg !3353
  %108 = load i32, i32* %timeout65, align 4, !dbg !3353, !tbaa !2369
  call void @ngx_event_add_timer(%struct.ngx_event_s* %106, i32 %108), !dbg !3354
  br label %if.end66, !dbg !3355

if.end66:                                         ; preds = %if.end57, %land.lhs.true, %if.then46
  %109 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3356, !tbaa !820
  %waiting67 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %109, i32 0, i32 20, !dbg !3357
  %110 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting67, align 4, !dbg !3357, !tbaa !2182
  %111 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3358, !tbaa !820
  %next68 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %111, i32 0, i32 0, !dbg !3359
  store %struct.ngx_resolver_ctx_s* %110, %struct.ngx_resolver_ctx_s** %next68, align 4, !dbg !3360, !tbaa !2110
  %112 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3361, !tbaa !820
  %113 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3362, !tbaa !820
  %waiting69 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %113, i32 0, i32 20, !dbg !3363
  store %struct.ngx_resolver_ctx_s* %112, %struct.ngx_resolver_ctx_s** %waiting69, align 4, !dbg !3364, !tbaa !2182
  %114 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3365, !tbaa !820
  %state70 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %114, i32 0, i32 4, !dbg !3366
  store i32 -2, i32* %state70, align 4, !dbg !3367, !tbaa !1703
  %115 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3368, !tbaa !820
  %116 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3369, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %116, i32 0, i32 2, !dbg !3370
  store %struct.ngx_resolver_node_t* %115, %struct.ngx_resolver_node_t** %node, align 4, !dbg !3371, !tbaa !2429
  store i32 0, i32* %retval, align 4, !dbg !3372
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3372

if.end71:                                         ; preds = %if.end44
  %117 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3373, !tbaa !820
  %queue72 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %117, i32 0, i32 1, !dbg !3373
  %prev73 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue72, i32 0, i32 0, !dbg !3373
  %118 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev73, align 4, !dbg !3373, !tbaa !904
  %119 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3373, !tbaa !820
  %queue74 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %119, i32 0, i32 1, !dbg !3373
  %next75 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue74, i32 0, i32 1, !dbg !3373
  %120 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next75, align 4, !dbg !3373, !tbaa !905
  %prev76 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %120, i32 0, i32 0, !dbg !3373
  store %struct.ngx_queue_s* %118, %struct.ngx_queue_s** %prev76, align 4, !dbg !3373, !tbaa !904
  %121 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3373, !tbaa !820
  %queue77 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %121, i32 0, i32 1, !dbg !3373
  %next78 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue77, i32 0, i32 1, !dbg !3373
  %122 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next78, align 4, !dbg !3373, !tbaa !905
  %123 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3373, !tbaa !820
  %queue79 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %123, i32 0, i32 1, !dbg !3373
  %prev80 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue79, i32 0, i32 0, !dbg !3373
  %124 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev80, align 4, !dbg !3373, !tbaa !904
  %next81 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %124, i32 0, i32 1, !dbg !3373
  store %struct.ngx_queue_s* %122, %struct.ngx_queue_s** %next81, align 4, !dbg !3373, !tbaa !905
  %125 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3374, !tbaa !820
  %126 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3375, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %126, i32 0, i32 6, !dbg !3376
  %127 = load i8*, i8** %query, align 4, !dbg !3376, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %125, i8* %127), !dbg !3377
  %128 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3378, !tbaa !820
  %query82 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %128, i32 0, i32 6, !dbg !3379
  store i8* null, i8** %query82, align 4, !dbg !3380, !tbaa !2440
  %129 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3381, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %129, i32 0, i32 7, !dbg !3382
  store i8* null, i8** %query6, align 4, !dbg !3383, !tbaa !2453
  br label %if.end103, !dbg !3384

if.else:                                          ; preds = %sw.epilog
  %130 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3385, !tbaa !820
  %call83 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %130, i32 116), !dbg !3387
  %131 = bitcast i8* %call83 to %struct.ngx_resolver_node_t*, !dbg !3387
  store %struct.ngx_resolver_node_t* %131, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3388, !tbaa !820
  %132 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3389, !tbaa !820
  %cmp84 = icmp eq %struct.ngx_resolver_node_t* %132, null, !dbg !3391
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !3392

if.then86:                                        ; preds = %if.else
  br label %failed, !dbg !3393

if.end87:                                         ; preds = %if.else
  %133 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3395, !tbaa !820
  %addr88 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %133, i32 0, i32 10, !dbg !3396
  %sockaddr89 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr88, i32 0, i32 0, !dbg !3397
  %134 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr89, align 4, !dbg !3397, !tbaa !1721
  %sa_family90 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %134, i32 0, i32 0, !dbg !3398
  %135 = load i16, i16* %sa_family90, align 2, !dbg !3398, !tbaa !3192
  %conv91 = zext i16 %135 to i32, !dbg !3395
  switch i32 %conv91, label %sw.default96 [
    i32 10, label %sw.bb92
  ], !dbg !3399

sw.bb92:                                          ; preds = %if.end87
  %136 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3400, !tbaa !820
  %addr693 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %136, i32 0, i32 3, !dbg !3402
  %137 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !3403, !tbaa !820
  %sin6_addr94 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %137, i32 0, i32 3, !dbg !3404
  %138 = bitcast %struct.in6_addr* %addr693 to i8*, !dbg !3404
  %139 = bitcast %struct.in6_addr* %sin6_addr94 to i8*, !dbg !3404
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %138, i8* %139, i32 16, i32 4, i1 false), !dbg !3404, !tbaa.struct !3405
  %140 = load i32, i32* %hash, align 4, !dbg !3406, !tbaa !827
  %141 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3407, !tbaa !820
  %node95 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %141, i32 0, i32 0, !dbg !3408
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %node95, i32 0, i32 0, !dbg !3409
  store i32 %140, i32* %key, align 4, !dbg !3410, !tbaa !2580
  br label %sw.epilog99, !dbg !3411

sw.default96:                                     ; preds = %if.end87
  %142 = load i32, i32* %addr, align 4, !dbg !3412, !tbaa !827
  %143 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3413, !tbaa !820
  %node97 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %143, i32 0, i32 0, !dbg !3414
  %key98 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %node97, i32 0, i32 0, !dbg !3415
  store i32 %142, i32* %key98, align 4, !dbg !3416, !tbaa !2580
  br label %sw.epilog99, !dbg !3417

sw.epilog99:                                      ; preds = %sw.default96, %sw.bb92
  %144 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3418, !tbaa !820
  %query100 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %144, i32 0, i32 6, !dbg !3419
  store i8* null, i8** %query100, align 4, !dbg !3420, !tbaa !2440
  %145 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3421, !tbaa !820
  %query6101 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %145, i32 0, i32 7, !dbg !3422
  store i8* null, i8** %query6101, align 4, !dbg !3423, !tbaa !2453
  %146 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !3424, !tbaa !820
  %147 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3425, !tbaa !820
  %node102 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %147, i32 0, i32 0, !dbg !3426
  call void @ngx_rbtree_insert(%struct.ngx_rbtree_s* %146, %struct.ngx_rbtree_node_s* %node102), !dbg !3427
  br label %if.end103

if.end103:                                        ; preds = %sw.epilog99, %if.end71
  %148 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3428, !tbaa !820
  %149 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3430, !tbaa !820
  %150 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3431, !tbaa !820
  %addr104 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %150, i32 0, i32 10, !dbg !3432
  %call105 = call i32 @ngx_resolver_create_addr_query(%struct.ngx_resolver_s* %148, %struct.ngx_resolver_node_t* %149, %struct.ngx_resolver_addr_t* %addr104), !dbg !3433
  %cmp106 = icmp ne i32 %call105, 0, !dbg !3434
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !3435

if.then108:                                       ; preds = %if.end103
  br label %failed, !dbg !3436

if.end109:                                        ; preds = %if.end103
  %151 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3438, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %151, i32 0, i32 5, !dbg !3439
  %152 = load i32, i32* %last_connection, align 4, !dbg !3440, !tbaa !2662
  %inc = add i32 %152, 1, !dbg !3440
  store i32 %inc, i32* %last_connection, align 4, !dbg !3440, !tbaa !2662
  %153 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3441, !tbaa !820
  %last_connection110 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %153, i32 0, i32 19, !dbg !3442
  store i32 %152, i32* %last_connection110, align 4, !dbg !3443, !tbaa !2666
  %154 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3444, !tbaa !820
  %last_connection111 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %154, i32 0, i32 5, !dbg !3446
  %155 = load i32, i32* %last_connection111, align 4, !dbg !3446, !tbaa !2662
  %156 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3447, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %156, i32 0, i32 4, !dbg !3448
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 1, !dbg !3449
  %157 = load i32, i32* %nelts, align 4, !dbg !3449, !tbaa !1228
  %cmp112 = icmp eq i32 %155, %157, !dbg !3450
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !3451

if.then114:                                       ; preds = %if.end109
  %158 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3452, !tbaa !820
  %last_connection115 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %158, i32 0, i32 5, !dbg !3454
  store i32 0, i32* %last_connection115, align 4, !dbg !3455, !tbaa !2662
  br label %if.end116, !dbg !3456

if.end116:                                        ; preds = %if.then114, %if.end109
  %159 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3457, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %159, i32 0, i32 10, !dbg !3458
  store i16 -1, i16* %naddrs, align 2, !dbg !3459, !tbaa !2140
  %160 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3460, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %160, i32 0, i32 18, !dbg !3461
  %bf.load = load i8, i8* %tcp, align 4, !dbg !3462
  %bf.clear = and i8 %bf.load, -2, !dbg !3462
  store i8 %bf.clear, i8* %tcp, align 4, !dbg !3462
  %161 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3463, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %161, i32 0, i32 14, !dbg !3464
  store i16 -1, i16* %naddrs6, align 4, !dbg !3465, !tbaa !2148
  %162 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3466, !tbaa !820
  %tcp6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %162, i32 0, i32 18, !dbg !3467
  %bf.load117 = load i8, i8* %tcp6, align 4, !dbg !3468
  %bf.clear118 = and i8 %bf.load117, -3, !dbg !3468
  store i8 %bf.clear118, i8* %tcp6, align 4, !dbg !3468
  %163 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3469, !tbaa !820
  %nsrvs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %163, i32 0, i32 11, !dbg !3470
  store i16 0, i16* %nsrvs, align 4, !dbg !3471, !tbaa !2274
  %164 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3472, !tbaa !820
  %165 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3474, !tbaa !820
  %call119 = call i32 @ngx_resolver_send_query(%struct.ngx_resolver_s* %164, %struct.ngx_resolver_node_t* %165), !dbg !3475
  %cmp120 = icmp ne i32 %call119, 0, !dbg !3476
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !3477

if.then122:                                       ; preds = %if.end116
  br label %failed, !dbg !3478

if.end123:                                        ; preds = %if.end116
  %166 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3480, !tbaa !820
  %event124 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %166, i32 0, i32 20, !dbg !3482
  %167 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event124, align 4, !dbg !3482, !tbaa !1947
  %cmp125 = icmp eq %struct.ngx_event_s* %167, null, !dbg !3483
  br i1 %cmp125, label %land.lhs.true127, label %if.end148, !dbg !3484

land.lhs.true127:                                 ; preds = %if.end123
  %168 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3485, !tbaa !820
  %timeout128 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %168, i32 0, i32 17, !dbg !3486
  %169 = load i32, i32* %timeout128, align 4, !dbg !3486, !tbaa !2369
  %tobool129 = icmp ne i32 %169, 0, !dbg !3485
  br i1 %tobool129, label %if.then130, label %if.end148, !dbg !3487

if.then130:                                       ; preds = %land.lhs.true127
  %170 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3488, !tbaa !820
  %call131 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %170, i32 48), !dbg !3490
  %171 = bitcast i8* %call131 to %struct.ngx_event_s*, !dbg !3490
  %172 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3491, !tbaa !820
  %event132 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %172, i32 0, i32 20, !dbg !3492
  store %struct.ngx_event_s* %171, %struct.ngx_event_s** %event132, align 4, !dbg !3493, !tbaa !1947
  %173 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3494, !tbaa !820
  %event133 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %173, i32 0, i32 20, !dbg !3496
  %174 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event133, align 4, !dbg !3496, !tbaa !1947
  %cmp134 = icmp eq %struct.ngx_event_s* %174, null, !dbg !3497
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !3498

if.then136:                                       ; preds = %if.then130
  br label %failed, !dbg !3499

if.end137:                                        ; preds = %if.then130
  %175 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3501, !tbaa !820
  %event138 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %175, i32 0, i32 20, !dbg !3502
  %176 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event138, align 4, !dbg !3502, !tbaa !1947
  %handler139 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %176, i32 0, i32 2, !dbg !3503
  store void (%struct.ngx_event_s*)* @ngx_resolver_timeout_handler, void (%struct.ngx_event_s*)** %handler139, align 4, !dbg !3504, !tbaa !922
  %177 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3505, !tbaa !820
  %178 = bitcast %struct.ngx_resolver_ctx_s* %177 to i8*, !dbg !3505
  %179 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3506, !tbaa !820
  %event140 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %179, i32 0, i32 20, !dbg !3507
  %180 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event140, align 4, !dbg !3507, !tbaa !1947
  %data141 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %180, i32 0, i32 0, !dbg !3508
  store i8* %178, i8** %data141, align 4, !dbg !3509, !tbaa !929
  %181 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3510, !tbaa !820
  %log142 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %181, i32 0, i32 2, !dbg !3511
  %182 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log142, align 4, !dbg !3511, !tbaa !965
  %183 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3512, !tbaa !820
  %event143 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %183, i32 0, i32 20, !dbg !3513
  %184 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event143, align 4, !dbg !3513, !tbaa !1947
  %log144 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %184, i32 0, i32 4, !dbg !3514
  store %struct.ngx_log_s* %182, %struct.ngx_log_s** %log144, align 4, !dbg !3515, !tbaa !938
  %185 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3516, !tbaa !820
  %ident145 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %185, i32 0, i32 3, !dbg !3517
  store i32 -1, i32* %ident145, align 4, !dbg !3518, !tbaa !2402
  %186 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3519, !tbaa !820
  %event146 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %186, i32 0, i32 20, !dbg !3520
  %187 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event146, align 4, !dbg !3520, !tbaa !1947
  %188 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3521, !tbaa !820
  %timeout147 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %188, i32 0, i32 17, !dbg !3522
  %189 = load i32, i32* %timeout147, align 4, !dbg !3522, !tbaa !2369
  call void @ngx_event_add_timer(%struct.ngx_event_s* %187, i32 %189), !dbg !3523
  br label %if.end148, !dbg !3524

if.end148:                                        ; preds = %if.end137, %land.lhs.true127, %if.end123
  %190 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3525, !tbaa !820
  %call149 = call i32 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %190), !dbg !3527
  %tobool150 = icmp ne i32 %call149, 0, !dbg !3527
  br i1 %tobool150, label %if.then151, label %if.end153, !dbg !3528

if.then151:                                       ; preds = %if.end148
  %191 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3529, !tbaa !820
  %event152 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %191, i32 0, i32 0, !dbg !3531
  %192 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event152, align 4, !dbg !3531, !tbaa !882
  %193 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3532, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %193, i32 0, i32 23, !dbg !3533
  %194 = load i32, i32* %resend_timeout, align 4, !dbg !3533, !tbaa !946
  %mul = mul nsw i32 %194, 1000, !dbg !3534
  call void @ngx_event_add_timer(%struct.ngx_event_s* %192, i32 %mul), !dbg !3535
  br label %if.end153, !dbg !3536

if.end153:                                        ; preds = %if.then151, %if.end148
  %195 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !3537, !tbaa !820
  %sec154 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %195, i32 0, i32 0, !dbg !3537
  %196 = load volatile i32, i32* %sec154, align 4, !dbg !3537, !tbaa !2123
  %197 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3538, !tbaa !820
  %resend_timeout155 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %197, i32 0, i32 23, !dbg !3539
  %198 = load i32, i32* %resend_timeout155, align 4, !dbg !3539, !tbaa !946
  %add156 = add nsw i32 %196, %198, !dbg !3540
  %199 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3541, !tbaa !820
  %expire157 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %199, i32 0, i32 15, !dbg !3542
  store i32 %add156, i32* %expire157, align 4, !dbg !3543, !tbaa !2136
  %200 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !3544, !tbaa !820
  %next158 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %200, i32 0, i32 1, !dbg !3544
  %201 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next158, align 4, !dbg !3544, !tbaa !905
  %202 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3544, !tbaa !820
  %queue159 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %202, i32 0, i32 1, !dbg !3544
  %next160 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue159, i32 0, i32 1, !dbg !3544
  store %struct.ngx_queue_s* %201, %struct.ngx_queue_s** %next160, align 4, !dbg !3544, !tbaa !905
  %203 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3544, !tbaa !820
  %queue161 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %203, i32 0, i32 1, !dbg !3544
  %204 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3544, !tbaa !820
  %queue162 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %204, i32 0, i32 1, !dbg !3544
  %next163 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue162, i32 0, i32 1, !dbg !3544
  %205 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next163, align 4, !dbg !3544, !tbaa !905
  %prev164 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %205, i32 0, i32 0, !dbg !3544
  store %struct.ngx_queue_s* %queue161, %struct.ngx_queue_s** %prev164, align 4, !dbg !3544, !tbaa !904
  %206 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !3544, !tbaa !820
  %207 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3544, !tbaa !820
  %queue165 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %207, i32 0, i32 1, !dbg !3544
  %prev166 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue165, i32 0, i32 0, !dbg !3544
  store %struct.ngx_queue_s* %206, %struct.ngx_queue_s** %prev166, align 4, !dbg !3544, !tbaa !904
  %208 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3544, !tbaa !820
  %queue167 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %208, i32 0, i32 1, !dbg !3544
  %209 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %resend_queue, align 4, !dbg !3544, !tbaa !820
  %next168 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %209, i32 0, i32 1, !dbg !3544
  store %struct.ngx_queue_s* %queue167, %struct.ngx_queue_s** %next168, align 4, !dbg !3544, !tbaa !905
  %210 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3545, !tbaa !820
  %code = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %210, i32 0, i32 9, !dbg !3546
  store i8 0, i8* %code, align 4, !dbg !3547, !tbaa !2773
  %211 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3548, !tbaa !820
  %cnlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %211, i32 0, i32 12, !dbg !3549
  store i16 0, i16* %cnlen, align 2, !dbg !3550, !tbaa !2310
  %212 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3551, !tbaa !820
  %name169 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %212, i32 0, i32 2, !dbg !3552
  store i8* null, i8** %name169, align 4, !dbg !3553, !tbaa !1358
  %213 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3554, !tbaa !820
  %nlen170 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %213, i32 0, i32 4, !dbg !3555
  store i16 0, i16* %nlen170, align 4, !dbg !3556, !tbaa !1365
  %214 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3557, !tbaa !820
  %valid171 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %214, i32 0, i32 16, !dbg !3558
  store i32 0, i32* %valid171, align 4, !dbg !3559, !tbaa !2121
  %215 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3560, !tbaa !820
  %ttl = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %215, i32 0, i32 17, !dbg !3561
  store i32 -1, i32* %ttl, align 4, !dbg !3562, !tbaa !2783
  %216 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3563, !tbaa !820
  %217 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3564, !tbaa !820
  %waiting172 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %217, i32 0, i32 20, !dbg !3565
  store %struct.ngx_resolver_ctx_s* %216, %struct.ngx_resolver_ctx_s** %waiting172, align 4, !dbg !3566, !tbaa !2182
  %218 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3567, !tbaa !820
  %state173 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %218, i32 0, i32 4, !dbg !3568
  store i32 -2, i32* %state173, align 4, !dbg !3569, !tbaa !1703
  %219 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3570, !tbaa !820
  %220 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3571, !tbaa !820
  %node174 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %220, i32 0, i32 2, !dbg !3572
  store %struct.ngx_resolver_node_t* %219, %struct.ngx_resolver_node_t** %node174, align 4, !dbg !3573, !tbaa !2429
  store i32 0, i32* %retval, align 4, !dbg !3574
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3574

failed:                                           ; preds = %if.then136, %if.then122, %if.then108, %if.then86, %if.then37
  %221 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3575, !tbaa !820
  %tobool175 = icmp ne %struct.ngx_resolver_node_t* %221, null, !dbg !3575
  br i1 %tobool175, label %if.then176, label %if.end183, !dbg !3577

if.then176:                                       ; preds = %failed
  %222 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !3578, !tbaa !820
  %223 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3580, !tbaa !820
  %node177 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %223, i32 0, i32 0, !dbg !3581
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %222, %struct.ngx_rbtree_node_s* %node177), !dbg !3582
  %224 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3583, !tbaa !820
  %query178 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %224, i32 0, i32 6, !dbg !3585
  %225 = load i8*, i8** %query178, align 4, !dbg !3585, !tbaa !2440
  %tobool179 = icmp ne i8* %225, null, !dbg !3583
  br i1 %tobool179, label %if.then180, label %if.end182, !dbg !3586

if.then180:                                       ; preds = %if.then176
  %226 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3587, !tbaa !820
  %227 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3589, !tbaa !820
  %query181 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %227, i32 0, i32 6, !dbg !3590
  %228 = load i8*, i8** %query181, align 4, !dbg !3590, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %226, i8* %228), !dbg !3591
  br label %if.end182, !dbg !3592

if.end182:                                        ; preds = %if.then180, %if.then176
  %229 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3593, !tbaa !820
  %230 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3594, !tbaa !820
  %231 = bitcast %struct.ngx_resolver_node_t* %230 to i8*, !dbg !3594
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %229, i8* %231), !dbg !3595
  br label %if.end183, !dbg !3596

if.end183:                                        ; preds = %if.end182, %failed
  %232 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3597, !tbaa !820
  %event184 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %232, i32 0, i32 20, !dbg !3599
  %233 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event184, align 4, !dbg !3599, !tbaa !1947
  %tobool185 = icmp ne %struct.ngx_event_s* %233, null, !dbg !3597
  br i1 %tobool185, label %if.then186, label %if.end188, !dbg !3600

if.then186:                                       ; preds = %if.end183
  %234 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3601, !tbaa !820
  %235 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3603, !tbaa !820
  %event187 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %235, i32 0, i32 20, !dbg !3604
  %236 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event187, align 4, !dbg !3604, !tbaa !1947
  %237 = bitcast %struct.ngx_event_s* %236 to i8*, !dbg !3603
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %234, i8* %237), !dbg !3605
  br label %if.end188, !dbg !3606

if.end188:                                        ; preds = %if.then186, %if.end183
  %238 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !3607, !tbaa !820
  %239 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !3608, !tbaa !820
  %240 = bitcast %struct.ngx_resolver_ctx_s* %239 to i8*, !dbg !3608
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %238, i8* %240), !dbg !3609
  store i32 -1, i32* %retval, align 4, !dbg !3610
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3610

cleanup:                                          ; preds = %if.end188, %if.end153, %if.end66, %if.then56, %if.end
  %241 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %241) #5, !dbg !3611
  %242 = bitcast i32* %hash to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %242) #5, !dbg !3611
  %243 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %243) #5, !dbg !3611
  %244 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %244) #5, !dbg !3611
  %245 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %245) #5, !dbg !3611
  %246 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %246) #5, !dbg !3611
  %247 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %247) #5, !dbg !3611
  %248 = bitcast %struct.ngx_queue_s** %resend_queue to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %248) #5, !dbg !3611
  %249 = bitcast i32* %addr to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %249) #5, !dbg !3611
  %250 = bitcast i8** %name to i8*, !dbg !3611
  call void @llvm.lifetime.end(i64 4, i8* %250) #5, !dbg !3611
  %251 = load i32, i32* %retval, align 4, !dbg !3611
  ret i32 %251, !dbg !3611
}

; Function Attrs: inlinehint nounwind
define internal i32 @ngx_crc32_short(i8* %p, i32 %len) #4 !dbg !3612 {
entry:
  %p.addr = alloca i8*, align 4
  %len.addr = alloca i32, align 4
  %c = alloca i8, align 1
  %crc = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3617, metadata !824), !dbg !3621
  store i32 %len, i32* %len.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3618, metadata !824), !dbg !3622
  call void @llvm.lifetime.start(i64 1, i8* %c) #5, !dbg !3623
  call void @llvm.dbg.declare(metadata i8* %c, metadata !3619, metadata !824), !dbg !3624
  %0 = bitcast i32* %crc to i8*, !dbg !3625
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !3620, metadata !824), !dbg !3626
  store i32 -1, i32* %crc, align 4, !dbg !3627, !tbaa !827
  br label %while.cond, !dbg !3628

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %len.addr, align 4, !dbg !3629, !tbaa !827
  %dec = add i32 %1, -1, !dbg !3629
  store i32 %dec, i32* %len.addr, align 4, !dbg !3629, !tbaa !827
  %tobool = icmp ne i32 %1, 0, !dbg !3628
  br i1 %tobool, label %while.body, label %while.end, !dbg !3628

while.body:                                       ; preds = %while.cond
  %2 = load i8*, i8** %p.addr, align 4, !dbg !3630, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !3630
  store i8* %incdec.ptr, i8** %p.addr, align 4, !dbg !3630, !tbaa !820
  %3 = load i8, i8* %2, align 1, !dbg !3632, !tbaa !1828
  store i8 %3, i8* %c, align 1, !dbg !3633, !tbaa !1828
  %4 = load i32*, i32** @ngx_crc32_table_short, align 4, !dbg !3634, !tbaa !820
  %5 = load i32, i32* %crc, align 4, !dbg !3635, !tbaa !827
  %6 = load i8, i8* %c, align 1, !dbg !3636, !tbaa !1828
  %conv = zext i8 %6 to i32, !dbg !3636
  %and = and i32 %conv, 15, !dbg !3637
  %xor = xor i32 %5, %and, !dbg !3638
  %and1 = and i32 %xor, 15, !dbg !3639
  %arrayidx = getelementptr inbounds i32, i32* %4, i32 %and1, !dbg !3634
  %7 = load i32, i32* %arrayidx, align 4, !dbg !3634, !tbaa !827
  %8 = load i32, i32* %crc, align 4, !dbg !3640, !tbaa !827
  %shr = lshr i32 %8, 4, !dbg !3641
  %xor2 = xor i32 %7, %shr, !dbg !3642
  store i32 %xor2, i32* %crc, align 4, !dbg !3643, !tbaa !827
  %9 = load i32*, i32** @ngx_crc32_table_short, align 4, !dbg !3644, !tbaa !820
  %10 = load i32, i32* %crc, align 4, !dbg !3645, !tbaa !827
  %11 = load i8, i8* %c, align 1, !dbg !3646, !tbaa !1828
  %conv3 = zext i8 %11 to i32, !dbg !3646
  %shr4 = ashr i32 %conv3, 4, !dbg !3647
  %xor5 = xor i32 %10, %shr4, !dbg !3648
  %and6 = and i32 %xor5, 15, !dbg !3649
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i32 %and6, !dbg !3644
  %12 = load i32, i32* %arrayidx7, align 4, !dbg !3644, !tbaa !827
  %13 = load i32, i32* %crc, align 4, !dbg !3650, !tbaa !827
  %shr8 = lshr i32 %13, 4, !dbg !3651
  %xor9 = xor i32 %12, %shr8, !dbg !3652
  store i32 %xor9, i32* %crc, align 4, !dbg !3653, !tbaa !827
  br label %while.cond, !dbg !3628, !llvm.loop !3654

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %crc, align 4, !dbg !3656, !tbaa !827
  %xor10 = xor i32 %14, -1, !dbg !3657
  %15 = bitcast i32* %crc to i8*, !dbg !3658
  call void @llvm.lifetime.end(i64 4, i8* %15) #5, !dbg !3658
  call void @llvm.lifetime.end(i64 1, i8* %c) #5, !dbg !3658
  ret i32 %xor10, !dbg !3659
}

; Function Attrs: nounwind
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr6(%struct.ngx_resolver_s* %r, %struct.in6_addr* %addr, i32 %hash) #0 !dbg !3660 {
entry:
  %retval = alloca %struct.ngx_resolver_node_t*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %addr.addr = alloca %struct.in6_addr*, align 4
  %hash.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %node = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel = alloca %struct.ngx_rbtree_node_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3664, metadata !824), !dbg !3671
  store %struct.in6_addr* %addr, %struct.in6_addr** %addr.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %addr.addr, metadata !3665, metadata !824), !dbg !3672
  store i32 %hash, i32* %hash.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !3666, metadata !824), !dbg !3673
  %0 = bitcast i32* %rc to i8*, !dbg !3674
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3674
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !3667, metadata !824), !dbg !3675
  %1 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !3676
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3676
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node, metadata !3668, metadata !824), !dbg !3677
  %2 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !3676
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !3676
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel, metadata !3669, metadata !824), !dbg !3678
  %3 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3679
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !3679
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !3670, metadata !824), !dbg !3680
  %4 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3681, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %4, i32 0, i32 19, !dbg !3682
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr6_rbtree, i32 0, i32 0, !dbg !3683
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !3683, !tbaa !3684
  store %struct.ngx_rbtree_node_s* %5, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3685, !tbaa !820
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3686, !tbaa !820
  %addr6_rbtree1 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %6, i32 0, i32 19, !dbg !3687
  %sentinel2 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr6_rbtree1, i32 0, i32 1, !dbg !3688
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel2, align 4, !dbg !3688, !tbaa !3689
  store %struct.ngx_rbtree_node_s* %7, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !3690, !tbaa !820
  br label %while.cond, !dbg !3691

while.cond:                                       ; preds = %cond.end, %if.then6, %if.then, %entry
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3692, !tbaa !820
  %9 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !3693, !tbaa !820
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %8, %9, !dbg !3694
  br i1 %cmp, label %while.body, label %while.end, !dbg !3691

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %hash.addr, align 4, !dbg !3695, !tbaa !827
  %11 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3698, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %11, i32 0, i32 0, !dbg !3699
  %12 = load i32, i32* %key, align 4, !dbg !3699, !tbaa !1329
  %cmp3 = icmp ult i32 %10, %12, !dbg !3700
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3701

if.then:                                          ; preds = %while.body
  %13 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3702, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %13, i32 0, i32 1, !dbg !3704
  %14 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left, align 4, !dbg !3704, !tbaa !1403
  store %struct.ngx_rbtree_node_s* %14, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3705, !tbaa !820
  br label %while.cond, !dbg !3706, !llvm.loop !3707

if.end:                                           ; preds = %while.body
  %15 = load i32, i32* %hash.addr, align 4, !dbg !3709, !tbaa !827
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3711, !tbaa !820
  %key4 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %16, i32 0, i32 0, !dbg !3712
  %17 = load i32, i32* %key4, align 4, !dbg !3712, !tbaa !1329
  %cmp5 = icmp ugt i32 %15, %17, !dbg !3713
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3714

if.then6:                                         ; preds = %if.end
  %18 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3715, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %18, i32 0, i32 2, !dbg !3717
  %19 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right, align 4, !dbg !3717, !tbaa !1408
  store %struct.ngx_rbtree_node_s* %19, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3718, !tbaa !820
  br label %while.cond, !dbg !3719, !llvm.loop !3707

if.end7:                                          ; preds = %if.end
  %20 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3720, !tbaa !820
  %21 = bitcast %struct.ngx_rbtree_node_s* %20 to i8*, !dbg !3720
  %add.ptr = getelementptr inbounds i8, i8* %21, i32 0, !dbg !3720
  %22 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !3720
  store %struct.ngx_resolver_node_t* %22, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3721, !tbaa !820
  %23 = load %struct.in6_addr*, %struct.in6_addr** %addr.addr, align 4, !dbg !3722, !tbaa !820
  %24 = bitcast %struct.in6_addr* %23 to i8*, !dbg !3722
  %25 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3722, !tbaa !820
  %addr6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %25, i32 0, i32 3, !dbg !3722
  %26 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !3722
  %call = call i32 @memcmp(i8* %24, i8* %26, i32 16), !dbg !3722
  store i32 %call, i32* %rc, align 4, !dbg !3723, !tbaa !827
  %27 = load i32, i32* %rc, align 4, !dbg !3724, !tbaa !827
  %cmp8 = icmp eq i32 %27, 0, !dbg !3726
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3727

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !3728, !tbaa !820
  store %struct.ngx_resolver_node_t* %28, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3730
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3730

if.end10:                                         ; preds = %if.end7
  %29 = load i32, i32* %rc, align 4, !dbg !3731, !tbaa !827
  %cmp11 = icmp slt i32 %29, 0, !dbg !3732
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !3733

cond.true:                                        ; preds = %if.end10
  %30 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3734, !tbaa !820
  %left12 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %30, i32 0, i32 1, !dbg !3735
  %31 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left12, align 4, !dbg !3735, !tbaa !1403
  br label %cond.end, !dbg !3733

cond.false:                                       ; preds = %if.end10
  %32 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3736, !tbaa !820
  %right13 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %32, i32 0, i32 2, !dbg !3737
  %33 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right13, align 4, !dbg !3737, !tbaa !1408
  br label %cond.end, !dbg !3733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ngx_rbtree_node_s* [ %31, %cond.true ], [ %33, %cond.false ], !dbg !3733
  store %struct.ngx_rbtree_node_s* %cond, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3738, !tbaa !820
  br label %while.cond, !dbg !3691, !llvm.loop !3707

while.end:                                        ; preds = %while.cond
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3739
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3739

cleanup:                                          ; preds = %while.end, %if.then9
  %34 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !3740
  call void @llvm.lifetime.end(i64 4, i8* %34) #5, !dbg !3740
  %35 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !3740
  call void @llvm.lifetime.end(i64 4, i8* %35) #5, !dbg !3740
  %36 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !3740
  call void @llvm.lifetime.end(i64 4, i8* %36) #5, !dbg !3740
  %37 = bitcast i32* %rc to i8*, !dbg !3740
  call void @llvm.lifetime.end(i64 4, i8* %37) #5, !dbg !3740
  %38 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3740
  ret %struct.ngx_resolver_node_t* %38, !dbg !3740
}

declare i32 @ntohl(i32) #3

; Function Attrs: nounwind
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr(%struct.ngx_resolver_s* %r, i32 %addr) #0 !dbg !3741 {
entry:
  %retval = alloca %struct.ngx_resolver_node_t*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %addr.addr = alloca i32, align 4
  %node = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel = alloca %struct.ngx_rbtree_node_s*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3745, metadata !824), !dbg !3749
  store i32 %addr, i32* %addr.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !3746, metadata !824), !dbg !3750
  %0 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !3751
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3751
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node, metadata !3747, metadata !824), !dbg !3752
  %1 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !3751
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3751
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel, metadata !3748, metadata !824), !dbg !3753
  %2 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3754, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %2, i32 0, i32 10, !dbg !3755
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr_rbtree, i32 0, i32 0, !dbg !3756
  %3 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !3756, !tbaa !3757
  store %struct.ngx_rbtree_node_s* %3, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3758, !tbaa !820
  %4 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3759, !tbaa !820
  %addr_rbtree1 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %4, i32 0, i32 10, !dbg !3760
  %sentinel2 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %addr_rbtree1, i32 0, i32 1, !dbg !3761
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel2, align 4, !dbg !3761, !tbaa !3762
  store %struct.ngx_rbtree_node_s* %5, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !3763, !tbaa !820
  br label %while.cond, !dbg !3764

while.cond:                                       ; preds = %if.then6, %if.then, %entry
  %6 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3765, !tbaa !820
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !3766, !tbaa !820
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %6, %7, !dbg !3767
  br i1 %cmp, label %while.body, label %while.end, !dbg !3764

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %addr.addr, align 4, !dbg !3768, !tbaa !827
  %9 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3771, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %9, i32 0, i32 0, !dbg !3772
  %10 = load i32, i32* %key, align 4, !dbg !3772, !tbaa !1329
  %cmp3 = icmp ult i32 %8, %10, !dbg !3773
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3774

if.then:                                          ; preds = %while.body
  %11 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3775, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %11, i32 0, i32 1, !dbg !3777
  %12 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left, align 4, !dbg !3777, !tbaa !1403
  store %struct.ngx_rbtree_node_s* %12, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3778, !tbaa !820
  br label %while.cond, !dbg !3779, !llvm.loop !3780

if.end:                                           ; preds = %while.body
  %13 = load i32, i32* %addr.addr, align 4, !dbg !3782, !tbaa !827
  %14 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3784, !tbaa !820
  %key4 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %14, i32 0, i32 0, !dbg !3785
  %15 = load i32, i32* %key4, align 4, !dbg !3785, !tbaa !1329
  %cmp5 = icmp ugt i32 %13, %15, !dbg !3786
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3787

if.then6:                                         ; preds = %if.end
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3788, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %16, i32 0, i32 2, !dbg !3790
  %17 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right, align 4, !dbg !3790, !tbaa !1408
  store %struct.ngx_rbtree_node_s* %17, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3791, !tbaa !820
  br label %while.cond, !dbg !3792, !llvm.loop !3780

if.end7:                                          ; preds = %if.end
  %18 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !3793, !tbaa !820
  %19 = bitcast %struct.ngx_rbtree_node_s* %18 to i8*, !dbg !3793
  %add.ptr = getelementptr inbounds i8, i8* %19, i32 0, !dbg !3793
  %20 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !3793
  store %struct.ngx_resolver_node_t* %20, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3794
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3794

while.end:                                        ; preds = %while.cond
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3795
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3795

cleanup:                                          ; preds = %while.end, %if.end7
  %21 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 4, i8* %21) #5, !dbg !3796
  %22 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 4, i8* %22) #5, !dbg !3796
  %23 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !3796
  ret %struct.ngx_resolver_node_t* %23, !dbg !3796
}

; Function Attrs: nounwind
define internal i8* @ngx_resolver_dup(%struct.ngx_resolver_s* %r, i8* %src, i32 %size) #0 !dbg !3797 {
entry:
  %retval = alloca i8*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %src.addr = alloca i8*, align 4
  %size.addr = alloca i32, align 4
  %dst = alloca i8*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3801, metadata !824), !dbg !3805
  store i8* %src, i8** %src.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !3802, metadata !824), !dbg !3806
  store i32 %size, i32* %size.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3803, metadata !824), !dbg !3807
  %0 = bitcast i8** %dst to i8*, !dbg !3808
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3808
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !3804, metadata !824), !dbg !3809
  %1 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3810, !tbaa !820
  %2 = load i32, i32* %size.addr, align 4, !dbg !3811, !tbaa !827
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %1, i32 %2), !dbg !3812
  store i8* %call, i8** %dst, align 4, !dbg !3813, !tbaa !820
  %3 = load i8*, i8** %dst, align 4, !dbg !3814, !tbaa !820
  %cmp = icmp eq i8* %3, null, !dbg !3816
  br i1 %cmp, label %if.then, label %if.end, !dbg !3817

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %dst, align 4, !dbg !3818, !tbaa !820
  store i8* %4, i8** %retval, align 4, !dbg !3820
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3820

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %dst, align 4, !dbg !3821, !tbaa !820
  %6 = load i8*, i8** %src.addr, align 4, !dbg !3821, !tbaa !820
  %7 = load i32, i32* %size.addr, align 4, !dbg !3821, !tbaa !827
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %5, i8* %6, i32 %7, i32 1, i1 false), !dbg !3821
  %8 = load i8*, i8** %dst, align 4, !dbg !3822, !tbaa !820
  store i8* %8, i8** %retval, align 4, !dbg !3823
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3823

cleanup:                                          ; preds = %if.end, %if.then
  %9 = bitcast i8** %dst to i8*, !dbg !3824
  call void @llvm.lifetime.end(i64 4, i8* %9) #5, !dbg !3824
  %10 = load i8*, i8** %retval, align 4, !dbg !3824
  ret i8* %10, !dbg !3824
}

; Function Attrs: nounwind
define internal void @ngx_resolver_timeout_handler(%struct.ngx_event_s* %ev) #0 !dbg !3825 {
entry:
  %ev.addr = alloca %struct.ngx_event_s*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  store %struct.ngx_event_s* %ev, %struct.ngx_event_s** %ev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %ev.addr, metadata !3827, metadata !824), !dbg !3829
  %0 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !3830
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3830
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !3828, metadata !824), !dbg !3831
  %1 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3832, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %1, i32 0, i32 0, !dbg !3833
  %2 = load i8*, i8** %data, align 4, !dbg !3833, !tbaa !929
  %3 = bitcast i8* %2 to %struct.ngx_resolver_ctx_s*, !dbg !3832
  store %struct.ngx_resolver_ctx_s* %3, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !3834, !tbaa !820
  %4 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !3835, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %4, i32 0, i32 4, !dbg !3836
  store i32 110, i32* %state, align 4, !dbg !3837, !tbaa !1703
  %5 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !3838, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %5, i32 0, i32 15, !dbg !3839
  %6 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !3839, !tbaa !1844
  %7 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !3840, !tbaa !820
  call void %6(%struct.ngx_resolver_ctx_s* %7), !dbg !3838
  %8 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !3841
  call void @llvm.lifetime.end(i64 4, i8* %8) #5, !dbg !3841
  ret void, !dbg !3841
}

; Function Attrs: inlinehint nounwind
define internal void @ngx_event_add_timer(%struct.ngx_event_s* %ev, i32 %timer) #4 !dbg !3842 {
entry:
  %ev.addr = alloca %struct.ngx_event_s*, align 4
  %timer.addr = alloca i32, align 4
  %key = alloca i32, align 4
  %diff = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_event_s* %ev, %struct.ngx_event_s** %ev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %ev.addr, metadata !3846, metadata !824), !dbg !3850
  store i32 %timer, i32* %timer.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %timer.addr, metadata !3847, metadata !824), !dbg !3851
  %0 = bitcast i32* %key to i8*, !dbg !3852
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3852
  call void @llvm.dbg.declare(metadata i32* %key, metadata !3848, metadata !824), !dbg !3853
  %1 = bitcast i32* %diff to i8*, !dbg !3854
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3854
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !3849, metadata !824), !dbg !3855
  %2 = load volatile i32, i32* @ngx_current_msec, align 4, !dbg !3856, !tbaa !827
  %3 = load i32, i32* %timer.addr, align 4, !dbg !3857, !tbaa !827
  %add = add i32 %2, %3, !dbg !3858
  store i32 %add, i32* %key, align 4, !dbg !3859, !tbaa !827
  %4 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3860, !tbaa !820
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %4, i32 0, i32 1, !dbg !3862
  %5 = bitcast i24* %timer_set to i32*, !dbg !3862
  %bf.load = load i32, i32* %5, align 4, !dbg !3862
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !3862
  %bf.clear = and i32 %bf.lshr, 1, !dbg !3862
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !3860
  br i1 %tobool, label %if.then, label %if.end6, !dbg !3863

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %key, align 4, !dbg !3864, !tbaa !827
  %7 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3866, !tbaa !820
  %timer1 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %7, i32 0, i32 5, !dbg !3867
  %key2 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %timer1, i32 0, i32 0, !dbg !3868
  %8 = load i32, i32* %key2, align 4, !dbg !3868, !tbaa !3869
  %sub = sub i32 %6, %8, !dbg !3870
  store i32 %sub, i32* %diff, align 4, !dbg !3871, !tbaa !827
  %9 = load i32, i32* %diff, align 4, !dbg !3872, !tbaa !827
  %cmp = icmp sge i32 %9, 0, !dbg !3872
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3872

cond.true:                                        ; preds = %if.then
  %10 = load i32, i32* %diff, align 4, !dbg !3872, !tbaa !827
  br label %cond.end, !dbg !3872

cond.false:                                       ; preds = %if.then
  %11 = load i32, i32* %diff, align 4, !dbg !3872, !tbaa !827
  %sub3 = sub nsw i32 0, %11, !dbg !3872
  br label %cond.end, !dbg !3872

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %sub3, %cond.false ], !dbg !3872
  %cmp4 = icmp slt i32 %cond, 300, !dbg !3874
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3875

if.then5:                                         ; preds = %cond.end
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3876

if.end:                                           ; preds = %cond.end
  %12 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3878, !tbaa !820
  call void @ngx_event_del_timer(%struct.ngx_event_s* %12), !dbg !3879
  br label %if.end6, !dbg !3880

if.end6:                                          ; preds = %if.end, %entry
  %13 = load i32, i32* %key, align 4, !dbg !3881, !tbaa !827
  %14 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3882, !tbaa !820
  %timer7 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %14, i32 0, i32 5, !dbg !3883
  %key8 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %timer7, i32 0, i32 0, !dbg !3884
  store i32 %13, i32* %key8, align 4, !dbg !3885, !tbaa !3869
  %15 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3886, !tbaa !820
  %timer9 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %15, i32 0, i32 5, !dbg !3887
  call void @ngx_rbtree_insert(%struct.ngx_rbtree_s* @ngx_event_timer_rbtree, %struct.ngx_rbtree_node_s* %timer9), !dbg !3888
  %16 = load %struct.ngx_event_s*, %struct.ngx_event_s** %ev.addr, align 4, !dbg !3889, !tbaa !820
  %timer_set10 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %16, i32 0, i32 1, !dbg !3890
  %17 = bitcast i24* %timer_set10 to i32*, !dbg !3890
  %bf.load11 = load i32, i32* %17, align 4, !dbg !3891
  %bf.clear12 = and i32 %bf.load11, -2049, !dbg !3891
  %bf.set = or i32 %bf.clear12, 2048, !dbg !3891
  store i32 %bf.set, i32* %17, align 4, !dbg !3891
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !3892
  br label %cleanup, !dbg !3892

cleanup:                                          ; preds = %if.end6, %if.then5
  %18 = bitcast i32* %diff to i8*, !dbg !3892
  call void @llvm.lifetime.end(i64 4, i8* %18) #5, !dbg !3892
  %19 = bitcast i32* %key to i8*, !dbg !3892
  call void @llvm.lifetime.end(i64 4, i8* %19) #5, !dbg !3892
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3892

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @ngx_rbtree_insert(%struct.ngx_rbtree_s*, %struct.ngx_rbtree_node_s*) #3

; Function Attrs: nounwind
define internal i32 @ngx_resolver_create_addr_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_addr_t* %addr) #0 !dbg !3893 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %addr.addr = alloca %struct.ngx_resolver_addr_t*, align 4
  %p = alloca i8*, align 4
  %d = alloca i8*, align 4
  %len = alloca i32, align 4
  %inaddr = alloca i32, align 4
  %n = alloca i32, align 4
  %ident = alloca i32, align 4
  %query = alloca %struct.ngx_resolver_hdr_t*, align 4
  %sin = alloca %struct.sockaddr_in*, align 4
  %sin6 = alloca %struct.sockaddr_in6*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !3897, metadata !824), !dbg !3909
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !3898, metadata !824), !dbg !3910
  store %struct.ngx_resolver_addr_t* %addr, %struct.ngx_resolver_addr_t** %addr.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_addr_t** %addr.addr, metadata !3899, metadata !824), !dbg !3911
  %0 = bitcast i8** %p to i8*, !dbg !3912
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !3912
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3900, metadata !824), !dbg !3913
  %1 = bitcast i8** %d to i8*, !dbg !3912
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !3912
  call void @llvm.dbg.declare(metadata i8** %d, metadata !3901, metadata !824), !dbg !3914
  %2 = bitcast i32* %len to i8*, !dbg !3915
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !3915
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3902, metadata !824), !dbg !3916
  %3 = bitcast i32* %inaddr to i8*, !dbg !3917
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !3917
  call void @llvm.dbg.declare(metadata i32* %inaddr, metadata !3903, metadata !824), !dbg !3918
  %4 = bitcast i32* %n to i8*, !dbg !3919
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !3919
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3904, metadata !824), !dbg !3920
  %5 = bitcast i32* %ident to i8*, !dbg !3921
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !3921
  call void @llvm.dbg.declare(metadata i32* %ident, metadata !3905, metadata !824), !dbg !3922
  %6 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !3923
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !3923
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_hdr_t** %query, metadata !3906, metadata !824), !dbg !3924
  %7 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !3925
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !3925
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sin, metadata !3907, metadata !824), !dbg !3926
  %8 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !3927
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !3927
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sin6, metadata !3908, metadata !824), !dbg !3928
  %9 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addr.addr, align 4, !dbg !3929, !tbaa !820
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %9, i32 0, i32 0, !dbg !3930
  %10 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !3930, !tbaa !2264
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %10, i32 0, i32 0, !dbg !3931
  %11 = load i16, i16* %sa_family, align 2, !dbg !3931, !tbaa !3192
  %conv = zext i16 %11 to i32, !dbg !3929
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
  ], !dbg !3932

sw.bb:                                            ; preds = %entry
  store i32 90, i32* %len, align 4, !dbg !3933, !tbaa !827
  br label %sw.epilog, !dbg !3935

sw.default:                                       ; preds = %entry
  store i32 46, i32* %len, align 4, !dbg !3936, !tbaa !827
  br label %sw.epilog, !dbg !3937

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !3938, !tbaa !820
  %13 = load i32, i32* %len, align 4, !dbg !3939, !tbaa !827
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %12, i32 %13), !dbg !3940
  store i8* %call, i8** %p, align 4, !dbg !3941, !tbaa !820
  %14 = load i8*, i8** %p, align 4, !dbg !3942, !tbaa !820
  %cmp = icmp eq i8* %14, null, !dbg !3944
  br i1 %cmp, label %if.then, label %if.end, !dbg !3945

if.then:                                          ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !3946
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3946

if.end:                                           ; preds = %sw.epilog
  %15 = load i8*, i8** %p, align 4, !dbg !3948, !tbaa !820
  %16 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !3949, !tbaa !820
  %query2 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %16, i32 0, i32 6, !dbg !3950
  store i8* %15, i8** %query2, align 4, !dbg !3951, !tbaa !2440
  %17 = load i8*, i8** %p, align 4, !dbg !3952, !tbaa !820
  %18 = bitcast i8* %17 to %struct.ngx_resolver_hdr_t*, !dbg !3953
  store %struct.ngx_resolver_hdr_t* %18, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3954, !tbaa !820
  %call3 = call i32 @random(), !dbg !3955
  store i32 %call3, i32* %ident, align 4, !dbg !3956, !tbaa !827
  %19 = load i32, i32* %ident, align 4, !dbg !3957, !tbaa !827
  %shr = lshr i32 %19, 8, !dbg !3958
  %and = and i32 %shr, 255, !dbg !3959
  %conv4 = trunc i32 %and to i8, !dbg !3960
  %20 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3961, !tbaa !820
  %ident_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %20, i32 0, i32 0, !dbg !3962
  store i8 %conv4, i8* %ident_hi, align 1, !dbg !3963, !tbaa !3964
  %21 = load i32, i32* %ident, align 4, !dbg !3966, !tbaa !827
  %and5 = and i32 %21, 255, !dbg !3967
  %conv6 = trunc i32 %and5 to i8, !dbg !3968
  %22 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3969, !tbaa !820
  %ident_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %22, i32 0, i32 1, !dbg !3970
  store i8 %conv6, i8* %ident_lo, align 1, !dbg !3971, !tbaa !3972
  %23 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3973, !tbaa !820
  %flags_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %23, i32 0, i32 2, !dbg !3974
  store i8 1, i8* %flags_hi, align 1, !dbg !3975, !tbaa !3976
  %24 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3977, !tbaa !820
  %flags_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %24, i32 0, i32 3, !dbg !3978
  store i8 0, i8* %flags_lo, align 1, !dbg !3979, !tbaa !3980
  %25 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3981, !tbaa !820
  %nqs_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %25, i32 0, i32 4, !dbg !3982
  store i8 0, i8* %nqs_hi, align 1, !dbg !3983, !tbaa !3984
  %26 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3985, !tbaa !820
  %nqs_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %26, i32 0, i32 5, !dbg !3986
  store i8 1, i8* %nqs_lo, align 1, !dbg !3987, !tbaa !3988
  %27 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3989, !tbaa !820
  %nan_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %27, i32 0, i32 6, !dbg !3990
  store i8 0, i8* %nan_hi, align 1, !dbg !3991, !tbaa !3992
  %28 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3993, !tbaa !820
  %nan_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %28, i32 0, i32 7, !dbg !3994
  store i8 0, i8* %nan_lo, align 1, !dbg !3995, !tbaa !3996
  %29 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !3997, !tbaa !820
  %nns_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %29, i32 0, i32 8, !dbg !3998
  store i8 0, i8* %nns_hi, align 1, !dbg !3999, !tbaa !4000
  %30 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !4001, !tbaa !820
  %nns_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %30, i32 0, i32 9, !dbg !4002
  store i8 0, i8* %nns_lo, align 1, !dbg !4003, !tbaa !4004
  %31 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !4005, !tbaa !820
  %nar_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %31, i32 0, i32 10, !dbg !4006
  store i8 0, i8* %nar_hi, align 1, !dbg !4007, !tbaa !4008
  %32 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !4009, !tbaa !820
  %nar_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %32, i32 0, i32 11, !dbg !4010
  store i8 0, i8* %nar_lo, align 1, !dbg !4011, !tbaa !4012
  %33 = load i8*, i8** %p, align 4, !dbg !4013, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %33, i32 12, !dbg !4013
  store i8* %add.ptr, i8** %p, align 4, !dbg !4013, !tbaa !820
  %34 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addr.addr, align 4, !dbg !4014, !tbaa !820
  %sockaddr7 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %34, i32 0, i32 0, !dbg !4015
  %35 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr7, align 4, !dbg !4015, !tbaa !2264
  %sa_family8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %35, i32 0, i32 0, !dbg !4016
  %36 = load i16, i16* %sa_family8, align 2, !dbg !4016, !tbaa !3192
  %conv9 = zext i16 %36 to i32, !dbg !4014
  switch i32 %conv9, label %sw.default25 [
    i32 10, label %sw.bb10
  ], !dbg !4017

sw.bb10:                                          ; preds = %if.end
  %37 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addr.addr, align 4, !dbg !4018, !tbaa !820
  %sockaddr11 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %37, i32 0, i32 0, !dbg !4020
  %38 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr11, align 4, !dbg !4020, !tbaa !2264
  %39 = bitcast %struct.sockaddr* %38 to %struct.sockaddr_in6*, !dbg !4021
  store %struct.sockaddr_in6* %39, %struct.sockaddr_in6** %sin6, align 4, !dbg !4022, !tbaa !820
  store i32 15, i32* %n, align 4, !dbg !4023, !tbaa !827
  br label %for.cond, !dbg !4025

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %40 = load i32, i32* %n, align 4, !dbg !4026, !tbaa !827
  %cmp12 = icmp sge i32 %40, 0, !dbg !4028
  br i1 %cmp12, label %for.body, label %for.end, !dbg !4029

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 4, !dbg !4030, !tbaa !820
  %42 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !4032, !tbaa !820
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %42, i32 0, i32 3, !dbg !4033
  %__in6_union = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr, i32 0, i32 0, !dbg !4034
  %__s6_addr = bitcast %union.anon* %__in6_union to [16 x i8]*, !dbg !4034
  %43 = load i32, i32* %n, align 4, !dbg !4035, !tbaa !827
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr, i32 0, i32 %43, !dbg !4032
  %44 = load i8, i8* %arrayidx, align 1, !dbg !4032, !tbaa !1828
  %conv14 = zext i8 %44 to i32, !dbg !4032
  %and15 = and i32 %conv14, 15, !dbg !4036
  %45 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !4037, !tbaa !820
  %sin6_addr16 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %45, i32 0, i32 3, !dbg !4038
  %__in6_union17 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr16, i32 0, i32 0, !dbg !4039
  %__s6_addr18 = bitcast %union.anon* %__in6_union17 to [16 x i8]*, !dbg !4039
  %46 = load i32, i32* %n, align 4, !dbg !4040, !tbaa !827
  %arrayidx19 = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr18, i32 0, i32 %46, !dbg !4037
  %47 = load i8, i8* %arrayidx19, align 1, !dbg !4037, !tbaa !1828
  %conv20 = zext i8 %47 to i32, !dbg !4037
  %shr21 = ashr i32 %conv20, 4, !dbg !4041
  %and22 = and i32 %shr21, 15, !dbg !4042
  %call23 = call i8* (i8*, i8*, ...) @ngx_sprintf(i8* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i32 0, i32 0), i32 %and15, i32 %and22), !dbg !4043
  store i8* %call23, i8** %p, align 4, !dbg !4044, !tbaa !820
  br label %for.inc, !dbg !4045

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %n, align 4, !dbg !4046, !tbaa !827
  %dec = add nsw i32 %48, -1, !dbg !4046
  store i32 %dec, i32* %n, align 4, !dbg !4046, !tbaa !827
  br label %for.cond, !dbg !4047, !llvm.loop !4048

for.end:                                          ; preds = %for.cond
  %49 = load i8*, i8** %p, align 4, !dbg !4050, !tbaa !820
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %49, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i32 10, i32 1, i1 false), !dbg !4050
  %add.ptr24 = getelementptr inbounds i8, i8* %49, i32 10, !dbg !4050
  store i8* %add.ptr24, i8** %p, align 4, !dbg !4051, !tbaa !820
  br label %sw.epilog41, !dbg !4052

sw.default25:                                     ; preds = %if.end
  %50 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addr.addr, align 4, !dbg !4053, !tbaa !820
  %sockaddr26 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %50, i32 0, i32 0, !dbg !4054
  %51 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr26, align 4, !dbg !4054, !tbaa !2264
  %52 = bitcast %struct.sockaddr* %51 to %struct.sockaddr_in*, !dbg !4055
  store %struct.sockaddr_in* %52, %struct.sockaddr_in** %sin, align 4, !dbg !4056, !tbaa !820
  %53 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin, align 4, !dbg !4057, !tbaa !820
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %53, i32 0, i32 2, !dbg !4058
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !4059
  %54 = load i32, i32* %s_addr, align 4, !dbg !4059, !tbaa !3230
  %call27 = call i32 @ntohl(i32 %54), !dbg !4060
  store i32 %call27, i32* %inaddr, align 4, !dbg !4061, !tbaa !827
  store i32 0, i32* %n, align 4, !dbg !4062, !tbaa !827
  br label %for.cond28, !dbg !4064

for.cond28:                                       ; preds = %for.inc38, %sw.default25
  %55 = load i32, i32* %n, align 4, !dbg !4065, !tbaa !827
  %cmp29 = icmp slt i32 %55, 32, !dbg !4067
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !4068

for.body31:                                       ; preds = %for.cond28
  %56 = load i8*, i8** %p, align 4, !dbg !4069, !tbaa !820
  %arrayidx32 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !4069
  %57 = load i32, i32* %inaddr, align 4, !dbg !4071, !tbaa !827
  %58 = load i32, i32* %n, align 4, !dbg !4072, !tbaa !827
  %shr33 = lshr i32 %57, %58, !dbg !4073
  %and34 = and i32 %shr33, 255, !dbg !4074
  %call35 = call i8* (i8*, i8*, ...) @ngx_sprintf(i8* %arrayidx32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 %and34), !dbg !4075
  store i8* %call35, i8** %d, align 4, !dbg !4076, !tbaa !820
  %59 = load i8*, i8** %d, align 4, !dbg !4077, !tbaa !820
  %60 = load i8*, i8** %p, align 4, !dbg !4078, !tbaa !820
  %arrayidx36 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !4078
  %sub.ptr.lhs.cast = ptrtoint i8* %59 to i32, !dbg !4079
  %sub.ptr.rhs.cast = ptrtoint i8* %arrayidx36 to i32, !dbg !4079
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4079
  %conv37 = trunc i32 %sub.ptr.sub to i8, !dbg !4080
  %61 = load i8*, i8** %p, align 4, !dbg !4081, !tbaa !820
  store i8 %conv37, i8* %61, align 1, !dbg !4082, !tbaa !1828
  %62 = load i8*, i8** %d, align 4, !dbg !4083, !tbaa !820
  store i8* %62, i8** %p, align 4, !dbg !4084, !tbaa !820
  br label %for.inc38, !dbg !4085

for.inc38:                                        ; preds = %for.body31
  %63 = load i32, i32* %n, align 4, !dbg !4086, !tbaa !827
  %add = add nsw i32 %63, 8, !dbg !4086
  store i32 %add, i32* %n, align 4, !dbg !4086, !tbaa !827
  br label %for.cond28, !dbg !4087, !llvm.loop !4088

for.end39:                                        ; preds = %for.cond28
  %64 = load i8*, i8** %p, align 4, !dbg !4090, !tbaa !820
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 14, i32 1, i1 false), !dbg !4090
  %add.ptr40 = getelementptr inbounds i8, i8* %64, i32 14, !dbg !4090
  store i8* %add.ptr40, i8** %p, align 4, !dbg !4091, !tbaa !820
  br label %sw.epilog41, !dbg !4092

sw.epilog41:                                      ; preds = %for.end39, %for.end
  %65 = load i8*, i8** %p, align 4, !dbg !4093, !tbaa !820
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i32 4, i32 1, i1 false), !dbg !4093
  %add.ptr42 = getelementptr inbounds i8, i8* %65, i32 4, !dbg !4093
  store i8* %add.ptr42, i8** %p, align 4, !dbg !4094, !tbaa !820
  %66 = load i8*, i8** %p, align 4, !dbg !4095, !tbaa !820
  %67 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4096, !tbaa !820
  %query43 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %67, i32 0, i32 6, !dbg !4097
  %68 = load i8*, i8** %query43, align 4, !dbg !4097, !tbaa !2440
  %sub.ptr.lhs.cast44 = ptrtoint i8* %66 to i32, !dbg !4098
  %sub.ptr.rhs.cast45 = ptrtoint i8* %68 to i32, !dbg !4098
  %sub.ptr.sub46 = sub i32 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast45, !dbg !4098
  %conv47 = trunc i32 %sub.ptr.sub46 to i16, !dbg !4099
  %69 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4100, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %69, i32 0, i32 5, !dbg !4101
  store i16 %conv47, i16* %qlen, align 2, !dbg !4102, !tbaa !4103
  store i32 0, i32* %retval, align 4, !dbg !4104
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4104

cleanup:                                          ; preds = %sw.epilog41, %if.then
  %70 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %70) #5, !dbg !4105
  %71 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %71) #5, !dbg !4105
  %72 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !4105
  %73 = bitcast i32* %ident to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !4105
  %74 = bitcast i32* %n to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %74) #5, !dbg !4105
  %75 = bitcast i32* %inaddr to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %75) #5, !dbg !4105
  %76 = bitcast i32* %len to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %76) #5, !dbg !4105
  %77 = bitcast i8** %d to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %77) #5, !dbg !4105
  %78 = bitcast i8** %p to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 4, i8* %78) #5, !dbg !4105
  %79 = load i32, i32* %retval, align 4, !dbg !4105
  ret i32 %79, !dbg !4105
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_send_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn) #0 !dbg !4106 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %rc = alloca i32, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4110, metadata !824), !dbg !4114
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !4111, metadata !824), !dbg !4115
  %0 = bitcast i32* %rc to i8*, !dbg !4116
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4116
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4112, metadata !824), !dbg !4117
  %1 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !4118
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4118
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !4113, metadata !824), !dbg !4119
  %2 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4120, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %2, i32 0, i32 4, !dbg !4121
  %elts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 0, !dbg !4122
  %3 = load i8*, i8** %elts, align 4, !dbg !4122, !tbaa !1218
  %4 = bitcast i8* %3 to %struct.ngx_resolver_connection_t*, !dbg !4120
  store %struct.ngx_resolver_connection_t* %4, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4123, !tbaa !820
  %5 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4124, !tbaa !820
  %6 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4125, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %6, i32 0, i32 19, !dbg !4126
  %7 = load i32, i32* %last_connection, align 4, !dbg !4126, !tbaa !2666
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %5, i32 %7, !dbg !4124
  store %struct.ngx_resolver_connection_t* %arrayidx, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4127, !tbaa !820
  %8 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4128, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %8, i32 0, i32 5, !dbg !4130
  %handler = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log, i32 0, i32 4, !dbg !4131
  %9 = load i8* (%struct.ngx_log_s*, i8*, i32)*, i8* (%struct.ngx_log_s*, i8*, i32)** %handler, align 4, !dbg !4131, !tbaa !4132
  %cmp = icmp eq i8* (%struct.ngx_log_s*, i8*, i32)* %9, null, !dbg !4133
  br i1 %cmp, label %if.then, label %if.end, !dbg !4134

if.then:                                          ; preds = %entry
  %10 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4135, !tbaa !820
  %log1 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %10, i32 0, i32 5, !dbg !4137
  %11 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4138, !tbaa !820
  %log2 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %11, i32 0, i32 2, !dbg !4139
  %12 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log2, align 4, !dbg !4139, !tbaa !965
  %13 = bitcast %struct.ngx_log_s* %log1 to i8*, !dbg !4140
  %14 = bitcast %struct.ngx_log_s* %12 to i8*, !dbg !4140
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %13, i8* %14, i32 40, i32 4, i1 false), !dbg !4140, !tbaa.struct !4141
  %15 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4142, !tbaa !820
  %log3 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %15, i32 0, i32 5, !dbg !4143
  %handler4 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log3, i32 0, i32 4, !dbg !4144
  store i8* (%struct.ngx_log_s*, i8*, i32)* @ngx_resolver_log_error, i8* (%struct.ngx_log_s*, i8*, i32)** %handler4, align 4, !dbg !4145, !tbaa !4132
  %16 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4146, !tbaa !820
  %17 = bitcast %struct.ngx_resolver_connection_t* %16 to i8*, !dbg !4146
  %18 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4147, !tbaa !820
  %log5 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %18, i32 0, i32 5, !dbg !4148
  %data = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log5, i32 0, i32 5, !dbg !4149
  store i8* %17, i8** %data, align 4, !dbg !4150, !tbaa !4151
  %19 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4152, !tbaa !820
  %log6 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %19, i32 0, i32 5, !dbg !4153
  %action = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log6, i32 0, i32 8, !dbg !4154
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8** %action, align 4, !dbg !4155, !tbaa !4156
  br label %if.end, !dbg !4157

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4158, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %20, i32 0, i32 10, !dbg !4160
  %21 = load i16, i16* %naddrs, align 2, !dbg !4160, !tbaa !2140
  %conv = zext i16 %21 to i32, !dbg !4158
  %cmp7 = icmp eq i32 %conv, 65535, !dbg !4161
  br i1 %cmp7, label %if.then9, label %if.end17, !dbg !4162

if.then9:                                         ; preds = %if.end
  %22 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4163, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %22, i32 0, i32 18, !dbg !4165
  %bf.load = load i8, i8* %tcp, align 4, !dbg !4165
  %bf.clear = and i8 %bf.load, 1, !dbg !4165
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4165
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4163
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4163

cond.true:                                        ; preds = %if.then9
  %23 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4166, !tbaa !820
  %24 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4167, !tbaa !820
  %25 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4168, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %25, i32 0, i32 6, !dbg !4169
  %26 = load i8*, i8** %query, align 4, !dbg !4169, !tbaa !2440
  %27 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4170, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %27, i32 0, i32 5, !dbg !4171
  %28 = load i16, i16* %qlen, align 2, !dbg !4171, !tbaa !4103
  %call = call i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %23, %struct.ngx_resolver_connection_t* %24, i8* %26, i16 zeroext %28), !dbg !4172
  br label %cond.end, !dbg !4163

cond.false:                                       ; preds = %if.then9
  %29 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4173, !tbaa !820
  %30 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4174, !tbaa !820
  %31 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4175, !tbaa !820
  %query10 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %31, i32 0, i32 6, !dbg !4176
  %32 = load i8*, i8** %query10, align 4, !dbg !4176, !tbaa !2440
  %33 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4177, !tbaa !820
  %qlen11 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %33, i32 0, i32 5, !dbg !4178
  %34 = load i16, i16* %qlen11, align 2, !dbg !4178, !tbaa !4103
  %call12 = call i32 @ngx_resolver_send_udp_query(%struct.ngx_resolver_s* %29, %struct.ngx_resolver_connection_t* %30, i8* %32, i16 zeroext %34), !dbg !4179
  br label %cond.end, !dbg !4163

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call12, %cond.false ], !dbg !4163
  store i32 %cond, i32* %rc, align 4, !dbg !4180, !tbaa !827
  %35 = load i32, i32* %rc, align 4, !dbg !4181, !tbaa !827
  %cmp13 = icmp ne i32 %35, 0, !dbg !4183
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !4184

if.then15:                                        ; preds = %cond.end
  %36 = load i32, i32* %rc, align 4, !dbg !4185, !tbaa !827
  store i32 %36, i32* %retval, align 4, !dbg !4187
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4187

if.end16:                                         ; preds = %cond.end
  br label %if.end17, !dbg !4188

if.end17:                                         ; preds = %if.end16, %if.end
  %37 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4189, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %37, i32 0, i32 7, !dbg !4191
  %38 = load i8*, i8** %query6, align 4, !dbg !4191, !tbaa !2453
  %tobool18 = icmp ne i8* %38, null, !dbg !4189
  br i1 %tobool18, label %land.lhs.true, label %if.end41, !dbg !4192

land.lhs.true:                                    ; preds = %if.end17
  %39 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4193, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %39, i32 0, i32 14, !dbg !4194
  %40 = load i16, i16* %naddrs6, align 4, !dbg !4194, !tbaa !2148
  %conv19 = zext i16 %40 to i32, !dbg !4193
  %cmp20 = icmp eq i32 %conv19, 65535, !dbg !4195
  br i1 %cmp20, label %if.then22, label %if.end41, !dbg !4196

if.then22:                                        ; preds = %land.lhs.true
  %41 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4197, !tbaa !820
  %tcp6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %41, i32 0, i32 18, !dbg !4199
  %bf.load23 = load i8, i8* %tcp6, align 4, !dbg !4199
  %bf.lshr = lshr i8 %bf.load23, 1, !dbg !4199
  %bf.clear24 = and i8 %bf.lshr, 1, !dbg !4199
  %bf.cast25 = zext i8 %bf.clear24 to i32, !dbg !4199
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !4197
  br i1 %tobool26, label %cond.true27, label %cond.false31, !dbg !4197

cond.true27:                                      ; preds = %if.then22
  %42 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4200, !tbaa !820
  %43 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4201, !tbaa !820
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4202, !tbaa !820
  %query628 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %44, i32 0, i32 7, !dbg !4203
  %45 = load i8*, i8** %query628, align 4, !dbg !4203, !tbaa !2453
  %46 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4204, !tbaa !820
  %qlen29 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %46, i32 0, i32 5, !dbg !4205
  %47 = load i16, i16* %qlen29, align 2, !dbg !4205, !tbaa !4103
  %call30 = call i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %42, %struct.ngx_resolver_connection_t* %43, i8* %45, i16 zeroext %47), !dbg !4206
  br label %cond.end35, !dbg !4197

cond.false31:                                     ; preds = %if.then22
  %48 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4207, !tbaa !820
  %49 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !4208, !tbaa !820
  %50 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4209, !tbaa !820
  %query632 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %50, i32 0, i32 7, !dbg !4210
  %51 = load i8*, i8** %query632, align 4, !dbg !4210, !tbaa !2453
  %52 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4211, !tbaa !820
  %qlen33 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %52, i32 0, i32 5, !dbg !4212
  %53 = load i16, i16* %qlen33, align 2, !dbg !4212, !tbaa !4103
  %call34 = call i32 @ngx_resolver_send_udp_query(%struct.ngx_resolver_s* %48, %struct.ngx_resolver_connection_t* %49, i8* %51, i16 zeroext %53), !dbg !4213
  br label %cond.end35, !dbg !4197

cond.end35:                                       ; preds = %cond.false31, %cond.true27
  %cond36 = phi i32 [ %call30, %cond.true27 ], [ %call34, %cond.false31 ], !dbg !4197
  store i32 %cond36, i32* %rc, align 4, !dbg !4214, !tbaa !827
  %54 = load i32, i32* %rc, align 4, !dbg !4215, !tbaa !827
  %cmp37 = icmp ne i32 %54, 0, !dbg !4217
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4218

if.then39:                                        ; preds = %cond.end35
  %55 = load i32, i32* %rc, align 4, !dbg !4219, !tbaa !827
  store i32 %55, i32* %retval, align 4, !dbg !4221
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4221

if.end40:                                         ; preds = %cond.end35
  br label %if.end41, !dbg !4222

if.end41:                                         ; preds = %if.end40, %land.lhs.true, %if.end17
  store i32 0, i32* %retval, align 4, !dbg !4223
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4223

cleanup:                                          ; preds = %if.end41, %if.then39, %if.then15
  %56 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !4224
  call void @llvm.lifetime.end(i64 4, i8* %56) #5, !dbg !4224
  %57 = bitcast i32* %rc to i8*, !dbg !4224
  call void @llvm.lifetime.end(i64 4, i8* %57) #5, !dbg !4224
  %58 = load i32, i32* %retval, align 4, !dbg !4224
  ret i32 %58, !dbg !4224
}

declare void @ngx_rbtree_delete(%struct.ngx_rbtree_s*, %struct.ngx_rbtree_node_s*) #3

; Function Attrs: nounwind
define void @ngx_resolve_addr_done(%struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !4225 {
entry:
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %expire_queue = alloca %struct.ngx_queue_s*, align 4
  %tree = alloca %struct.ngx_rbtree_s*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %w = alloca %struct.ngx_resolver_ctx_s*, align 4
  %p = alloca %struct.ngx_resolver_ctx_s**, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %text = alloca [113 x i8], align 1
  %addrtext = alloca %struct.ngx_str_t, align 4
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !4227, metadata !824), !dbg !4242
  %0 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !4243
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4243
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %expire_queue, metadata !4228, metadata !824), !dbg !4244
  %1 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !4245
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4245
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree, metadata !4229, metadata !824), !dbg !4246
  %2 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !4247
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !4247
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !4230, metadata !824), !dbg !4248
  %3 = bitcast %struct.ngx_resolver_ctx_s** %w to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %w, metadata !4231, metadata !824), !dbg !4250
  %4 = bitcast %struct.ngx_resolver_ctx_s*** %p to i8*, !dbg !4249
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s*** %p, metadata !4232, metadata !824), !dbg !4251
  %5 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4252
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !4252
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !4233, metadata !824), !dbg !4253
  %6 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4254, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %6, i32 0, i32 1, !dbg !4255
  %7 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !4255, !tbaa !1699
  store %struct.ngx_resolver_s* %7, %struct.ngx_resolver_s** %r, align 4, !dbg !4256, !tbaa !820
  %8 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4257, !tbaa !820
  %addr = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %8, i32 0, i32 10, !dbg !4258
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr, i32 0, i32 0, !dbg !4259
  %9 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !4259, !tbaa !1721
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %9, i32 0, i32 0, !dbg !4260
  %10 = load i16, i16* %sa_family, align 2, !dbg !4260, !tbaa !3192
  %conv = zext i16 %10 to i32, !dbg !4257
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
  ], !dbg !4261

sw.bb:                                            ; preds = %entry
  %11 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4262, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %11, i32 0, i32 19, !dbg !4264
  store %struct.ngx_rbtree_s* %addr6_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !4265, !tbaa !820
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4266, !tbaa !820
  %addr6_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %12, i32 0, i32 22, !dbg !4267
  store %struct.ngx_queue_s* %addr6_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !4268, !tbaa !820
  br label %sw.epilog, !dbg !4269

sw.default:                                       ; preds = %entry
  %13 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4270, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %13, i32 0, i32 10, !dbg !4271
  store %struct.ngx_rbtree_s* %addr_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !4272, !tbaa !820
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4273, !tbaa !820
  %addr_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %14, i32 0, i32 17, !dbg !4274
  store %struct.ngx_queue_s* %addr_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !4275, !tbaa !820
  br label %sw.epilog, !dbg !4276

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %15 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4277, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %15, i32 0, i32 20, !dbg !4279
  %16 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !4279, !tbaa !1947
  %tobool = icmp ne %struct.ngx_event_s* %16, null, !dbg !4277
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4280

land.lhs.true:                                    ; preds = %sw.epilog
  %17 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4281, !tbaa !820
  %event1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %17, i32 0, i32 20, !dbg !4282
  %18 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event1, align 4, !dbg !4282, !tbaa !1947
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %18, i32 0, i32 1, !dbg !4283
  %19 = bitcast i24* %timer_set to i32*, !dbg !4283
  %bf.load = load i32, i32* %19, align 4, !dbg !4283
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !4283
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4283
  %tobool2 = icmp ne i32 %bf.clear, 0, !dbg !4281
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4284

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4285, !tbaa !820
  %event3 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %20, i32 0, i32 20, !dbg !4287
  %21 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event3, align 4, !dbg !4287, !tbaa !1947
  call void @ngx_event_del_timer(%struct.ngx_event_s* %21), !dbg !4288
  br label %if.end, !dbg !4289

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.epilog
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4290, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %22, i32 0, i32 4, !dbg !4291
  %23 = load i32, i32* %state, align 4, !dbg !4291, !tbaa !1703
  %cmp = icmp eq i32 %23, -2, !dbg !4292
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !4293

lor.lhs.false:                                    ; preds = %if.end
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4294, !tbaa !820
  %state5 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %24, i32 0, i32 4, !dbg !4295
  %25 = load i32, i32* %state5, align 4, !dbg !4295, !tbaa !1703
  %cmp6 = icmp eq i32 %25, 110, !dbg !4296
  br i1 %cmp6, label %if.then8, label %if.end29, !dbg !4297

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  %26 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4298, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %26, i32 0, i32 2, !dbg !4299
  %27 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %node, align 4, !dbg !4299, !tbaa !2429
  store %struct.ngx_resolver_node_t* %27, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4300, !tbaa !820
  %28 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4301, !tbaa !820
  %tobool9 = icmp ne %struct.ngx_resolver_node_t* %28, null, !dbg !4301
  br i1 %tobool9, label %if.then10, label %if.end19, !dbg !4303

if.then10:                                        ; preds = %if.then8
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4304, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %29, i32 0, i32 20, !dbg !4306
  store %struct.ngx_resolver_ctx_s** %waiting, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !4307, !tbaa !820
  %30 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4308, !tbaa !820
  %waiting11 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %30, i32 0, i32 20, !dbg !4309
  %31 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting11, align 4, !dbg !4309, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %31, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4310, !tbaa !820
  br label %while.cond, !dbg !4311

while.cond:                                       ; preds = %if.end16, %if.then10
  %32 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4312, !tbaa !820
  %tobool12 = icmp ne %struct.ngx_resolver_ctx_s* %32, null, !dbg !4311
  br i1 %tobool12, label %while.body, label %while.end, !dbg !4311

while.body:                                       ; preds = %while.cond
  %33 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4313, !tbaa !820
  %34 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4316, !tbaa !820
  %cmp13 = icmp eq %struct.ngx_resolver_ctx_s* %33, %34, !dbg !4317
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !4318

if.then15:                                        ; preds = %while.body
  %35 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4319, !tbaa !820
  %next = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %35, i32 0, i32 0, !dbg !4321
  %36 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !4321, !tbaa !2110
  %37 = load %struct.ngx_resolver_ctx_s**, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !4322, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %36, %struct.ngx_resolver_ctx_s** %37, align 4, !dbg !4323, !tbaa !820
  br label %done, !dbg !4324

if.end16:                                         ; preds = %while.body
  %38 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4325, !tbaa !820
  %next17 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %38, i32 0, i32 0, !dbg !4326
  store %struct.ngx_resolver_ctx_s** %next17, %struct.ngx_resolver_ctx_s*** %p, align 4, !dbg !4327, !tbaa !820
  %39 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4328, !tbaa !820
  %next18 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %39, i32 0, i32 0, !dbg !4329
  %40 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next18, align 4, !dbg !4329, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %40, %struct.ngx_resolver_ctx_s** %w, align 4, !dbg !4330, !tbaa !820
  br label %while.cond, !dbg !4311, !llvm.loop !4331

while.end:                                        ; preds = %while.cond
  br label %if.end19, !dbg !4333

if.end19:                                         ; preds = %while.end, %if.then8
  %41 = bitcast [113 x i8]* %text to i8*, !dbg !4334
  call void @llvm.lifetime.start(i64 113, i8* %41) #5, !dbg !4334
  call void @llvm.dbg.declare(metadata [113 x i8]* %text, metadata !4234, metadata !824), !dbg !4335
  %42 = bitcast %struct.ngx_str_t* %addrtext to i8*, !dbg !4336
  call void @llvm.lifetime.start(i64 8, i8* %42) #5, !dbg !4336
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %addrtext, metadata !4241, metadata !824), !dbg !4337
  %arraydecay = getelementptr inbounds [113 x i8], [113 x i8]* %text, i32 0, i32 0, !dbg !4338
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %addrtext, i32 0, i32 1, !dbg !4339
  store i8* %arraydecay, i8** %data, align 4, !dbg !4340, !tbaa !997
  %43 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4341, !tbaa !820
  %addr20 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %43, i32 0, i32 10, !dbg !4342
  %sockaddr21 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr20, i32 0, i32 0, !dbg !4343
  %44 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr21, align 4, !dbg !4343, !tbaa !1721
  %45 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4344, !tbaa !820
  %addr22 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %45, i32 0, i32 10, !dbg !4345
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr22, i32 0, i32 1, !dbg !4346
  %46 = load i32, i32* %socklen, align 4, !dbg !4346, !tbaa !1726
  %arraydecay23 = getelementptr inbounds [113 x i8], [113 x i8]* %text, i32 0, i32 0, !dbg !4347
  %call = call i32 @ngx_sock_ntop(%struct.sockaddr* %44, i32 %46, i8* %arraydecay23, i32 113, i32 0), !dbg !4348
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %addrtext, i32 0, i32 0, !dbg !4349
  store i32 %call, i32* %len, align 4, !dbg !4350, !tbaa !1005
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4351, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %47, i32 0, i32 2, !dbg !4351
  %48 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !4351, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %48, i32 0, i32 0, !dbg !4351
  %49 = load i32, i32* %log_level, align 4, !dbg !4351, !tbaa !2999
  %cmp24 = icmp uge i32 %49, 2, !dbg !4351
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !4353

if.then26:                                        ; preds = %if.end19
  %50 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4351, !tbaa !820
  %log27 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %50, i32 0, i32 2, !dbg !4351
  %51 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log27, align 4, !dbg !4351, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %51, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i32 0, i32 0), %struct.ngx_str_t* %addrtext), !dbg !4351
  br label %if.end28, !dbg !4351

if.end28:                                         ; preds = %if.then26, %if.end19
  %52 = bitcast %struct.ngx_str_t* %addrtext to i8*, !dbg !4354
  call void @llvm.lifetime.end(i64 8, i8* %52) #5, !dbg !4354
  %53 = bitcast [113 x i8]* %text to i8*, !dbg !4354
  call void @llvm.lifetime.end(i64 113, i8* %53) #5, !dbg !4354
  br label %if.end29, !dbg !4355

if.end29:                                         ; preds = %if.end28, %lor.lhs.false
  br label %done, !dbg !4356

done:                                             ; preds = %if.end29, %if.then15
  %54 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4357, !tbaa !820
  %55 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !4358, !tbaa !820
  %56 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !4359, !tbaa !820
  call void @ngx_resolver_expire(%struct.ngx_resolver_s* %54, %struct.ngx_rbtree_s* %55, %struct.ngx_queue_s* %56), !dbg !4360
  %57 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4361, !tbaa !820
  %event30 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %57, i32 0, i32 20, !dbg !4363
  %58 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event30, align 4, !dbg !4363, !tbaa !1947
  %tobool31 = icmp ne %struct.ngx_event_s* %58, null, !dbg !4361
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !4364

if.then32:                                        ; preds = %done
  %59 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4365, !tbaa !820
  %60 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4367, !tbaa !820
  %event33 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %60, i32 0, i32 20, !dbg !4368
  %61 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event33, align 4, !dbg !4368, !tbaa !1947
  %62 = bitcast %struct.ngx_event_s* %61 to i8*, !dbg !4367
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %59, i8* %62), !dbg !4369
  br label %if.end34, !dbg !4370

if.end34:                                         ; preds = %if.then32, %done
  %63 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4371, !tbaa !820
  %64 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !4372, !tbaa !820
  %65 = bitcast %struct.ngx_resolver_ctx_s* %64 to i8*, !dbg !4372
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %63, i8* %65), !dbg !4373
  %66 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4374, !tbaa !820
  %event35 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %66, i32 0, i32 0, !dbg !4376
  %67 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event35, align 4, !dbg !4376, !tbaa !882
  %timer_set36 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %67, i32 0, i32 1, !dbg !4377
  %68 = bitcast i24* %timer_set36 to i32*, !dbg !4377
  %bf.load37 = load i32, i32* %68, align 4, !dbg !4377
  %bf.lshr38 = lshr i32 %bf.load37, 11, !dbg !4377
  %bf.clear39 = and i32 %bf.lshr38, 1, !dbg !4377
  %tobool40 = icmp ne i32 %bf.clear39, 0, !dbg !4374
  br i1 %tobool40, label %land.lhs.true41, label %if.end46, !dbg !4378

land.lhs.true41:                                  ; preds = %if.end34
  %69 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4379, !tbaa !820
  %call42 = call i32 @ngx_resolver_resend_empty(%struct.ngx_resolver_s* %69), !dbg !4380
  %tobool43 = icmp ne i32 %call42, 0, !dbg !4380
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !4381

if.then44:                                        ; preds = %land.lhs.true41
  %70 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !4382, !tbaa !820
  %event45 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %70, i32 0, i32 0, !dbg !4384
  %71 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event45, align 4, !dbg !4384, !tbaa !882
  call void @ngx_event_del_timer(%struct.ngx_event_s* %71), !dbg !4385
  br label %if.end46, !dbg !4386

if.end46:                                         ; preds = %if.then44, %land.lhs.true41, %if.end34
  %72 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !4387
  %73 = bitcast %struct.ngx_resolver_ctx_s*** %p to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !4387
  %74 = bitcast %struct.ngx_resolver_ctx_s** %w to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %74) #5, !dbg !4387
  %75 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %75) #5, !dbg !4387
  %76 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %76) #5, !dbg !4387
  %77 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 4, i8* %77) #5, !dbg !4387
  ret void, !dbg !4387
}

declare i32 @ngx_sock_ntop(%struct.sockaddr*, i32, i8*, i32, i32) #3

; Function Attrs: nounwind
define i8* @ngx_resolver_strerror(i32 %err) #0 !dbg !2 {
entry:
  %retval = alloca i8*, align 4
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !511, metadata !824), !dbg !4388
  %0 = load i32, i32* %err.addr, align 4, !dbg !4389, !tbaa !827
  %cmp = icmp sgt i32 %0, 0, !dbg !4391
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4392

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4393, !tbaa !827
  %cmp1 = icmp slt i32 %1, 6, !dbg !4394
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4395

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %err.addr, align 4, !dbg !4396, !tbaa !827
  %sub = sub nsw i32 %2, 1, !dbg !4398
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* @ngx_resolver_strerror.errors, i32 0, i32 %sub, !dbg !4399
  %3 = load i8*, i8** %arrayidx, align 4, !dbg !4399, !tbaa !820
  store i8* %3, i8** %retval, align 4, !dbg !4400
  br label %return, !dbg !4400

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %err.addr, align 4, !dbg !4401, !tbaa !827
  %cmp2 = icmp eq i32 %4, 110, !dbg !4403
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4404

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8** %retval, align 4, !dbg !4405
  br label %return, !dbg !4405

if.end4:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8** %retval, align 4, !dbg !4407
  br label %return, !dbg !4407

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %5 = load i8*, i8** %retval, align 4, !dbg !4408
  ret i8* %5, !dbg !4408
}

declare i8* @ngx_palloc(%struct.ngx_pool_s*, i32) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_cleanup_tree(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree) #0 !dbg !4409 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %tree.addr = alloca %struct.ngx_rbtree_s*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %next = alloca %struct.ngx_resolver_ctx_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4413, metadata !824), !dbg !4418
  store %struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_s** %tree.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree.addr, metadata !4414, metadata !824), !dbg !4419
  %0 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !4420
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4420
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !4415, metadata !824), !dbg !4421
  %1 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !4420
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4420
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %next, metadata !4416, metadata !824), !dbg !4422
  %2 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4423
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !4423
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !4417, metadata !824), !dbg !4424
  br label %while.cond, !dbg !4425

while.cond:                                       ; preds = %for.end, %entry
  %3 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !4426, !tbaa !820
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %3, i32 0, i32 0, !dbg !4427
  %4 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !4427, !tbaa !898
  %5 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !4428, !tbaa !820
  %sentinel = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %5, i32 0, i32 1, !dbg !4429
  %6 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !4429, !tbaa !899
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %4, %6, !dbg !4430
  br i1 %cmp, label %while.body, label %while.end, !dbg !4425

while.body:                                       ; preds = %while.cond
  %7 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !4431, !tbaa !820
  %root1 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %7, i32 0, i32 0, !dbg !4431
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root1, align 4, !dbg !4431, !tbaa !898
  %9 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !4431, !tbaa !820
  %sentinel2 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %9, i32 0, i32 1, !dbg !4431
  %10 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel2, align 4, !dbg !4431, !tbaa !899
  %call = call %struct.ngx_rbtree_node_s* @ngx_rbtree_min(%struct.ngx_rbtree_node_s* %8, %struct.ngx_rbtree_node_s* %10), !dbg !4431
  %11 = bitcast %struct.ngx_rbtree_node_s* %call to i8*, !dbg !4431
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 0, !dbg !4431
  %12 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !4431
  store %struct.ngx_resolver_node_t* %12, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4433, !tbaa !820
  %13 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4434, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %13, i32 0, i32 1, !dbg !4434
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !4434
  %14 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !4434, !tbaa !904
  %15 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4434, !tbaa !820
  %queue3 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %15, i32 0, i32 1, !dbg !4434
  %next4 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue3, i32 0, i32 1, !dbg !4434
  %16 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next4, align 4, !dbg !4434, !tbaa !905
  %prev5 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %16, i32 0, i32 0, !dbg !4434
  store %struct.ngx_queue_s* %14, %struct.ngx_queue_s** %prev5, align 4, !dbg !4434, !tbaa !904
  %17 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4434, !tbaa !820
  %queue6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %17, i32 0, i32 1, !dbg !4434
  %next7 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue6, i32 0, i32 1, !dbg !4434
  %18 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next7, align 4, !dbg !4434, !tbaa !905
  %19 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4434, !tbaa !820
  %queue8 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %19, i32 0, i32 1, !dbg !4434
  %prev9 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue8, i32 0, i32 0, !dbg !4434
  %20 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev9, align 4, !dbg !4434, !tbaa !904
  %next10 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %20, i32 0, i32 1, !dbg !4434
  store %struct.ngx_queue_s* %18, %struct.ngx_queue_s** %next10, align 4, !dbg !4434, !tbaa !905
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4435, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 20, !dbg !4437
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !4437, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %22, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4438, !tbaa !820
  br label %for.cond, !dbg !4439

for.cond:                                         ; preds = %for.inc, %while.body
  %23 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4440, !tbaa !820
  %tobool = icmp ne %struct.ngx_resolver_ctx_s* %23, null, !dbg !4442
  br i1 %tobool, label %for.body, label %for.end, !dbg !4442

for.body:                                         ; preds = %for.cond
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4443, !tbaa !820
  %next11 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %24, i32 0, i32 0, !dbg !4445
  %25 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next11, align 4, !dbg !4445, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %25, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !4446, !tbaa !820
  %26 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4447, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %26, i32 0, i32 20, !dbg !4449
  %27 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !4449, !tbaa !1947
  %tobool12 = icmp ne %struct.ngx_event_s* %27, null, !dbg !4447
  br i1 %tobool12, label %if.then, label %if.end18, !dbg !4450

if.then:                                          ; preds = %for.body
  %28 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4451, !tbaa !820
  %event13 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %28, i32 0, i32 20, !dbg !4454
  %29 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event13, align 4, !dbg !4454, !tbaa !1947
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %29, i32 0, i32 1, !dbg !4455
  %30 = bitcast i24* %timer_set to i32*, !dbg !4455
  %bf.load = load i32, i32* %30, align 4, !dbg !4455
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !4455
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4455
  %tobool14 = icmp ne i32 %bf.clear, 0, !dbg !4451
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !4456

if.then15:                                        ; preds = %if.then
  %31 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4457, !tbaa !820
  %event16 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %31, i32 0, i32 20, !dbg !4459
  %32 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event16, align 4, !dbg !4459, !tbaa !1947
  call void @ngx_event_del_timer(%struct.ngx_event_s* %32), !dbg !4460
  br label %if.end, !dbg !4461

if.end:                                           ; preds = %if.then15, %if.then
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4462, !tbaa !820
  %34 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4463, !tbaa !820
  %event17 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %34, i32 0, i32 20, !dbg !4464
  %35 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event17, align 4, !dbg !4464, !tbaa !1947
  %36 = bitcast %struct.ngx_event_s* %35 to i8*, !dbg !4463
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %33, i8* %36), !dbg !4465
  br label %if.end18, !dbg !4466

if.end18:                                         ; preds = %if.end, %for.body
  %37 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4467, !tbaa !820
  %38 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4468, !tbaa !820
  %39 = bitcast %struct.ngx_resolver_ctx_s* %38 to i8*, !dbg !4468
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %37, i8* %39), !dbg !4469
  br label %for.inc, !dbg !4470

for.inc:                                          ; preds = %if.end18
  %40 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !4471, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %40, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !4472, !tbaa !820
  br label %for.cond, !dbg !4473, !llvm.loop !4474

for.end:                                          ; preds = %for.cond
  %41 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !4476, !tbaa !820
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4477, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %42, i32 0, i32 0, !dbg !4478
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %41, %struct.ngx_rbtree_node_s* %node), !dbg !4479
  %43 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4480, !tbaa !820
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4481, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %43, %struct.ngx_resolver_node_t* %44), !dbg !4482
  br label %while.cond, !dbg !4425, !llvm.loop !4483

while.end:                                        ; preds = %while.cond
  %45 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4485
  call void @llvm.lifetime.end(i64 4, i8* %45) #5, !dbg !4485
  %46 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !4485
  call void @llvm.lifetime.end(i64 4, i8* %46) #5, !dbg !4485
  %47 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !4485
  call void @llvm.lifetime.end(i64 4, i8* %47) #5, !dbg !4485
  ret void, !dbg !4485
}

declare void @free(i8*) #3

declare void @ngx_close_connection(%struct.ngx_connection_s*) #3

; Function Attrs: inlinehint nounwind
define internal %struct.ngx_rbtree_node_s* @ngx_rbtree_min(%struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s* %sentinel) #4 !dbg !4486 {
entry:
  %node.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel.addr = alloca %struct.ngx_rbtree_node_s*, align 4
  store %struct.ngx_rbtree_node_s* %node, %struct.ngx_rbtree_node_s** %node.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node.addr, metadata !4490, metadata !824), !dbg !4492
  store %struct.ngx_rbtree_node_s* %sentinel, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel.addr, metadata !4491, metadata !824), !dbg !4493
  br label %while.cond, !dbg !4494

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !4495, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %0, i32 0, i32 1, !dbg !4496
  %1 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left, align 4, !dbg !4496, !tbaa !1403
  %2 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel.addr, align 4, !dbg !4497, !tbaa !820
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %1, %2, !dbg !4498
  br i1 %cmp, label %while.body, label %while.end, !dbg !4494

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !4499, !tbaa !820
  %left1 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %3, i32 0, i32 1, !dbg !4501
  %4 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left1, align 4, !dbg !4501, !tbaa !1403
  store %struct.ngx_rbtree_node_s* %4, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !4502, !tbaa !820
  br label %while.cond, !dbg !4494, !llvm.loop !4503

while.end:                                        ; preds = %while.cond
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node.addr, align 4, !dbg !4505, !tbaa !820
  ret %struct.ngx_rbtree_node_s* %5, !dbg !4506
}

; Function Attrs: nounwind
define internal void @ngx_resolver_free_node(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn) #0 !dbg !4507 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %i = alloca i32, align 4
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4511, metadata !824), !dbg !4514
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !4512, metadata !824), !dbg !4515
  %0 = bitcast i32* %i to i8*, !dbg !4516
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4516
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4513, metadata !824), !dbg !4517
  %1 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4518, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %1, i32 0, i32 6, !dbg !4520
  %2 = load i8*, i8** %query, align 4, !dbg !4520, !tbaa !2440
  %tobool = icmp ne i8* %2, null, !dbg !4518
  br i1 %tobool, label %if.then, label %if.end, !dbg !4521

if.then:                                          ; preds = %entry
  %3 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4522, !tbaa !820
  %4 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4524, !tbaa !820
  %query1 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %4, i32 0, i32 6, !dbg !4525
  %5 = load i8*, i8** %query1, align 4, !dbg !4525, !tbaa !2440
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %3, i8* %5), !dbg !4526
  br label %if.end, !dbg !4527

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4528, !tbaa !820
  %name = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %6, i32 0, i32 2, !dbg !4530
  %7 = load i8*, i8** %name, align 4, !dbg !4530, !tbaa !1358
  %tobool2 = icmp ne i8* %7, null, !dbg !4528
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !4531

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4532, !tbaa !820
  %9 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4534, !tbaa !820
  %name4 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %9, i32 0, i32 2, !dbg !4535
  %10 = load i8*, i8** %name4, align 4, !dbg !4535, !tbaa !1358
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %8, i8* %10), !dbg !4536
  br label %if.end5, !dbg !4537

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4538, !tbaa !820
  %cnlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %11, i32 0, i32 12, !dbg !4540
  %12 = load i16, i16* %cnlen, align 2, !dbg !4540, !tbaa !2310
  %tobool6 = icmp ne i16 %12, 0, !dbg !4538
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !4541

if.then7:                                         ; preds = %if.end5
  %13 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4542, !tbaa !820
  %14 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4544, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %14, i32 0, i32 8, !dbg !4545
  %cname = bitcast %union.anon.0* %u to i8**, !dbg !4546
  %15 = load i8*, i8** %cname, align 4, !dbg !4546, !tbaa !820
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %13, i8* %15), !dbg !4547
  br label %if.end8, !dbg !4548

if.end8:                                          ; preds = %if.then7, %if.end5
  %16 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4549, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %16, i32 0, i32 10, !dbg !4551
  %17 = load i16, i16* %naddrs, align 2, !dbg !4551, !tbaa !2140
  %conv = zext i16 %17 to i32, !dbg !4549
  %cmp = icmp sgt i32 %conv, 1, !dbg !4552
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !4553

land.lhs.true:                                    ; preds = %if.end8
  %18 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4554, !tbaa !820
  %naddrs10 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %18, i32 0, i32 10, !dbg !4555
  %19 = load i16, i16* %naddrs10, align 2, !dbg !4555, !tbaa !2140
  %conv11 = zext i16 %19 to i32, !dbg !4554
  %cmp12 = icmp ne i32 %conv11, 65535, !dbg !4556
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !4557

if.then14:                                        ; preds = %land.lhs.true
  %20 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4558, !tbaa !820
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4560, !tbaa !820
  %u15 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 8, !dbg !4561
  %addrs = bitcast %union.anon.0* %u15 to i32**, !dbg !4562
  %22 = load i32*, i32** %addrs, align 4, !dbg !4562, !tbaa !820
  %23 = bitcast i32* %22 to i8*, !dbg !4560
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %20, i8* %23), !dbg !4563
  br label %if.end16, !dbg !4564

if.end16:                                         ; preds = %if.then14, %land.lhs.true, %if.end8
  %24 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4565, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %24, i32 0, i32 14, !dbg !4567
  %25 = load i16, i16* %naddrs6, align 4, !dbg !4567, !tbaa !2148
  %conv17 = zext i16 %25 to i32, !dbg !4565
  %cmp18 = icmp sgt i32 %conv17, 1, !dbg !4568
  br i1 %cmp18, label %land.lhs.true20, label %if.end26, !dbg !4569

land.lhs.true20:                                  ; preds = %if.end16
  %26 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4570, !tbaa !820
  %naddrs621 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %26, i32 0, i32 14, !dbg !4571
  %27 = load i16, i16* %naddrs621, align 4, !dbg !4571, !tbaa !2148
  %conv22 = zext i16 %27 to i32, !dbg !4570
  %cmp23 = icmp ne i32 %conv22, 65535, !dbg !4572
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !4573

if.then25:                                        ; preds = %land.lhs.true20
  %28 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4574, !tbaa !820
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4576, !tbaa !820
  %u6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %29, i32 0, i32 13, !dbg !4577
  %addrs6 = bitcast %union.anon.1* %u6 to %struct.in6_addr**, !dbg !4578
  %30 = load %struct.in6_addr*, %struct.in6_addr** %addrs6, align 4, !dbg !4578, !tbaa !820
  %31 = bitcast %struct.in6_addr* %30 to i8*, !dbg !4576
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %28, i8* %31), !dbg !4579
  br label %if.end26, !dbg !4580

if.end26:                                         ; preds = %if.then25, %land.lhs.true20, %if.end16
  %32 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4581, !tbaa !820
  %nsrvs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %32, i32 0, i32 11, !dbg !4583
  %33 = load i16, i16* %nsrvs, align 4, !dbg !4583, !tbaa !2274
  %tobool27 = icmp ne i16 %33, 0, !dbg !4581
  br i1 %tobool27, label %if.then28, label %if.end45, !dbg !4584

if.then28:                                        ; preds = %if.end26
  store i32 0, i32* %i, align 4, !dbg !4585, !tbaa !827
  br label %for.cond, !dbg !4588

for.cond:                                         ; preds = %for.inc, %if.then28
  %34 = load i32, i32* %i, align 4, !dbg !4589, !tbaa !827
  %35 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4591, !tbaa !820
  %nsrvs29 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %35, i32 0, i32 11, !dbg !4592
  %36 = load i16, i16* %nsrvs29, align 4, !dbg !4592, !tbaa !2274
  %conv30 = zext i16 %36 to i32, !dbg !4593
  %cmp31 = icmp ult i32 %34, %conv30, !dbg !4594
  br i1 %cmp31, label %for.body, label %for.end, !dbg !4595

for.body:                                         ; preds = %for.cond
  %37 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4596, !tbaa !820
  %u33 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %37, i32 0, i32 8, !dbg !4599
  %srvs = bitcast %union.anon.0* %u33 to %struct.ngx_resolver_srv_t**, !dbg !4600
  %38 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !4600, !tbaa !820
  %39 = load i32, i32* %i, align 4, !dbg !4601, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %38, i32 %39, !dbg !4596
  %name34 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx, i32 0, i32 0, !dbg !4602
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name34, i32 0, i32 1, !dbg !4603
  %40 = load i8*, i8** %data, align 4, !dbg !4603, !tbaa !2521
  %tobool35 = icmp ne i8* %40, null, !dbg !4596
  br i1 %tobool35, label %if.then36, label %if.end42, !dbg !4604

if.then36:                                        ; preds = %for.body
  %41 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4605, !tbaa !820
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4607, !tbaa !820
  %u37 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %42, i32 0, i32 8, !dbg !4608
  %srvs38 = bitcast %union.anon.0* %u37 to %struct.ngx_resolver_srv_t**, !dbg !4609
  %43 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs38, align 4, !dbg !4609, !tbaa !820
  %44 = load i32, i32* %i, align 4, !dbg !4610, !tbaa !827
  %arrayidx39 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %43, i32 %44, !dbg !4607
  %name40 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx39, i32 0, i32 0, !dbg !4611
  %data41 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name40, i32 0, i32 1, !dbg !4612
  %45 = load i8*, i8** %data41, align 4, !dbg !4612, !tbaa !2521
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %41, i8* %45), !dbg !4613
  br label %if.end42, !dbg !4614

if.end42:                                         ; preds = %if.then36, %for.body
  br label %for.inc, !dbg !4615

for.inc:                                          ; preds = %if.end42
  %46 = load i32, i32* %i, align 4, !dbg !4616, !tbaa !827
  %inc = add i32 %46, 1, !dbg !4616
  store i32 %inc, i32* %i, align 4, !dbg !4616, !tbaa !827
  br label %for.cond, !dbg !4617, !llvm.loop !4618

for.end:                                          ; preds = %for.cond
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4620, !tbaa !820
  %48 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4621, !tbaa !820
  %u43 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %48, i32 0, i32 8, !dbg !4622
  %srvs44 = bitcast %union.anon.0* %u43 to %struct.ngx_resolver_srv_t**, !dbg !4623
  %49 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs44, align 4, !dbg !4623, !tbaa !820
  %50 = bitcast %struct.ngx_resolver_srv_t* %49 to i8*, !dbg !4621
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %47, i8* %50), !dbg !4624
  br label %if.end45, !dbg !4625

if.end45:                                         ; preds = %for.end, %if.end26
  %51 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4626, !tbaa !820
  %52 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4627, !tbaa !820
  %53 = bitcast %struct.ngx_resolver_node_t* %52 to i8*, !dbg !4627
  call void @ngx_resolver_free_locked(%struct.ngx_resolver_s* %51, i8* %53), !dbg !4628
  %54 = bitcast i32* %i to i8*, !dbg !4629
  call void @llvm.lifetime.end(i64 4, i8* %54) #5, !dbg !4629
  ret void, !dbg !4629
}

declare void @ngx_strlow(i8*, i8*, i32) #3

; Function Attrs: nounwind
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_srv(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i32 %hash) #0 !dbg !4630 {
entry:
  %retval = alloca %struct.ngx_resolver_node_t*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %hash.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %node = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel = alloca %struct.ngx_rbtree_node_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4634, metadata !824), !dbg !4641
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !4635, metadata !824), !dbg !4642
  store i32 %hash, i32* %hash.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !4636, metadata !824), !dbg !4643
  %0 = bitcast i32* %rc to i8*, !dbg !4644
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4644
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4637, metadata !824), !dbg !4645
  %1 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !4646
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4646
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node, metadata !4638, metadata !824), !dbg !4647
  %2 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !4646
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !4646
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel, metadata !4639, metadata !824), !dbg !4648
  %3 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4649
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !4649
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !4640, metadata !824), !dbg !4650
  %4 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4651, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %4, i32 0, i32 8, !dbg !4652
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %srv_rbtree, i32 0, i32 0, !dbg !4653
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !4653, !tbaa !4654
  store %struct.ngx_rbtree_node_s* %5, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4655, !tbaa !820
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4656, !tbaa !820
  %srv_rbtree1 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %6, i32 0, i32 8, !dbg !4657
  %sentinel2 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %srv_rbtree1, i32 0, i32 1, !dbg !4658
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel2, align 4, !dbg !4658, !tbaa !4659
  store %struct.ngx_rbtree_node_s* %7, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !4660, !tbaa !820
  br label %while.cond, !dbg !4661

while.cond:                                       ; preds = %cond.end, %if.then6, %if.then, %entry
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4662, !tbaa !820
  %9 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !4663, !tbaa !820
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %8, %9, !dbg !4664
  br i1 %cmp, label %while.body, label %while.end, !dbg !4661

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %hash.addr, align 4, !dbg !4665, !tbaa !827
  %11 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4668, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %11, i32 0, i32 0, !dbg !4669
  %12 = load i32, i32* %key, align 4, !dbg !4669, !tbaa !1329
  %cmp3 = icmp ult i32 %10, %12, !dbg !4670
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4671

if.then:                                          ; preds = %while.body
  %13 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4672, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %13, i32 0, i32 1, !dbg !4674
  %14 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left, align 4, !dbg !4674, !tbaa !1403
  store %struct.ngx_rbtree_node_s* %14, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4675, !tbaa !820
  br label %while.cond, !dbg !4676, !llvm.loop !4677

if.end:                                           ; preds = %while.body
  %15 = load i32, i32* %hash.addr, align 4, !dbg !4679, !tbaa !827
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4681, !tbaa !820
  %key4 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %16, i32 0, i32 0, !dbg !4682
  %17 = load i32, i32* %key4, align 4, !dbg !4682, !tbaa !1329
  %cmp5 = icmp ugt i32 %15, %17, !dbg !4683
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4684

if.then6:                                         ; preds = %if.end
  %18 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4685, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %18, i32 0, i32 2, !dbg !4687
  %19 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right, align 4, !dbg !4687, !tbaa !1408
  store %struct.ngx_rbtree_node_s* %19, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4688, !tbaa !820
  br label %while.cond, !dbg !4689, !llvm.loop !4677

if.end7:                                          ; preds = %if.end
  %20 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4690, !tbaa !820
  %21 = bitcast %struct.ngx_rbtree_node_s* %20 to i8*, !dbg !4690
  %add.ptr = getelementptr inbounds i8, i8* %21, i32 0, !dbg !4690
  %22 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !4690
  store %struct.ngx_resolver_node_t* %22, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4691, !tbaa !820
  %23 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !4692, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %23, i32 0, i32 1, !dbg !4693
  %24 = load i8*, i8** %data, align 4, !dbg !4693, !tbaa !997
  %25 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4694, !tbaa !820
  %name8 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %25, i32 0, i32 2, !dbg !4695
  %26 = load i8*, i8** %name8, align 4, !dbg !4695, !tbaa !1358
  %27 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !4696, !tbaa !820
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %27, i32 0, i32 0, !dbg !4697
  %28 = load i32, i32* %len, align 4, !dbg !4697, !tbaa !1005
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4698, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %29, i32 0, i32 4, !dbg !4699
  %30 = load i16, i16* %nlen, align 4, !dbg !4699, !tbaa !1365
  %conv = zext i16 %30 to i32, !dbg !4698
  %call = call i32 @ngx_memn2cmp(i8* %24, i8* %26, i32 %28, i32 %conv), !dbg !4700
  store i32 %call, i32* %rc, align 4, !dbg !4701, !tbaa !827
  %31 = load i32, i32* %rc, align 4, !dbg !4702, !tbaa !827
  %cmp9 = icmp eq i32 %31, 0, !dbg !4704
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4705

if.then11:                                        ; preds = %if.end7
  %32 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4706, !tbaa !820
  store %struct.ngx_resolver_node_t* %32, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4708
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4708

if.end12:                                         ; preds = %if.end7
  %33 = load i32, i32* %rc, align 4, !dbg !4709, !tbaa !827
  %cmp13 = icmp slt i32 %33, 0, !dbg !4710
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4711

cond.true:                                        ; preds = %if.end12
  %34 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4712, !tbaa !820
  %left15 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %34, i32 0, i32 1, !dbg !4713
  %35 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left15, align 4, !dbg !4713, !tbaa !1403
  br label %cond.end, !dbg !4711

cond.false:                                       ; preds = %if.end12
  %36 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4714, !tbaa !820
  %right16 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %36, i32 0, i32 2, !dbg !4715
  %37 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right16, align 4, !dbg !4715, !tbaa !1408
  br label %cond.end, !dbg !4711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ngx_rbtree_node_s* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !4711
  store %struct.ngx_rbtree_node_s* %cond, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4716, !tbaa !820
  br label %while.cond, !dbg !4661, !llvm.loop !4677

while.end:                                        ; preds = %while.cond
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4717
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4717

cleanup:                                          ; preds = %while.end, %if.then11
  %38 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %38) #5, !dbg !4718
  %39 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %39) #5, !dbg !4718
  %40 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %40) #5, !dbg !4718
  %41 = bitcast i32* %rc to i8*, !dbg !4718
  call void @llvm.lifetime.end(i64 4, i8* %41) #5, !dbg !4718
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4718
  ret %struct.ngx_resolver_node_t* %42, !dbg !4718
}

; Function Attrs: nounwind
define internal %struct.ngx_resolver_node_t* @ngx_resolver_lookup_name(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i32 %hash) #0 !dbg !4719 {
entry:
  %retval = alloca %struct.ngx_resolver_node_t*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %hash.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  %node = alloca %struct.ngx_rbtree_node_s*, align 4
  %sentinel = alloca %struct.ngx_rbtree_node_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4721, metadata !824), !dbg !4728
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !4722, metadata !824), !dbg !4729
  store i32 %hash, i32* %hash.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !4723, metadata !824), !dbg !4730
  %0 = bitcast i32* %rc to i8*, !dbg !4731
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4731
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4724, metadata !824), !dbg !4732
  %1 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !4733
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %node, metadata !4725, metadata !824), !dbg !4734
  %2 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !4733
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_node_s** %sentinel, metadata !4726, metadata !824), !dbg !4735
  %3 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4736
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !4736
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !4727, metadata !824), !dbg !4737
  %4 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4738, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %4, i32 0, i32 6, !dbg !4739
  %root = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %name_rbtree, i32 0, i32 0, !dbg !4740
  %5 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %root, align 4, !dbg !4740, !tbaa !4741
  store %struct.ngx_rbtree_node_s* %5, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4742, !tbaa !820
  %6 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4743, !tbaa !820
  %name_rbtree1 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %6, i32 0, i32 6, !dbg !4744
  %sentinel2 = getelementptr inbounds %struct.ngx_rbtree_s, %struct.ngx_rbtree_s* %name_rbtree1, i32 0, i32 1, !dbg !4745
  %7 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel2, align 4, !dbg !4745, !tbaa !4746
  store %struct.ngx_rbtree_node_s* %7, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !4747, !tbaa !820
  br label %while.cond, !dbg !4748

while.cond:                                       ; preds = %cond.end, %if.then6, %if.then, %entry
  %8 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4749, !tbaa !820
  %9 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %sentinel, align 4, !dbg !4750, !tbaa !820
  %cmp = icmp ne %struct.ngx_rbtree_node_s* %8, %9, !dbg !4751
  br i1 %cmp, label %while.body, label %while.end, !dbg !4748

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %hash.addr, align 4, !dbg !4752, !tbaa !827
  %11 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4755, !tbaa !820
  %key = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %11, i32 0, i32 0, !dbg !4756
  %12 = load i32, i32* %key, align 4, !dbg !4756, !tbaa !1329
  %cmp3 = icmp ult i32 %10, %12, !dbg !4757
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4758

if.then:                                          ; preds = %while.body
  %13 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4759, !tbaa !820
  %left = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %13, i32 0, i32 1, !dbg !4761
  %14 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left, align 4, !dbg !4761, !tbaa !1403
  store %struct.ngx_rbtree_node_s* %14, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4762, !tbaa !820
  br label %while.cond, !dbg !4763, !llvm.loop !4764

if.end:                                           ; preds = %while.body
  %15 = load i32, i32* %hash.addr, align 4, !dbg !4766, !tbaa !827
  %16 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4768, !tbaa !820
  %key4 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %16, i32 0, i32 0, !dbg !4769
  %17 = load i32, i32* %key4, align 4, !dbg !4769, !tbaa !1329
  %cmp5 = icmp ugt i32 %15, %17, !dbg !4770
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4771

if.then6:                                         ; preds = %if.end
  %18 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4772, !tbaa !820
  %right = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %18, i32 0, i32 2, !dbg !4774
  %19 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right, align 4, !dbg !4774, !tbaa !1408
  store %struct.ngx_rbtree_node_s* %19, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4775, !tbaa !820
  br label %while.cond, !dbg !4776, !llvm.loop !4764

if.end7:                                          ; preds = %if.end
  %20 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4777, !tbaa !820
  %21 = bitcast %struct.ngx_rbtree_node_s* %20 to i8*, !dbg !4777
  %add.ptr = getelementptr inbounds i8, i8* %21, i32 0, !dbg !4777
  %22 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !4777
  store %struct.ngx_resolver_node_t* %22, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4778, !tbaa !820
  %23 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !4779, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %23, i32 0, i32 1, !dbg !4780
  %24 = load i8*, i8** %data, align 4, !dbg !4780, !tbaa !997
  %25 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4781, !tbaa !820
  %name8 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %25, i32 0, i32 2, !dbg !4782
  %26 = load i8*, i8** %name8, align 4, !dbg !4782, !tbaa !1358
  %27 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !4783, !tbaa !820
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %27, i32 0, i32 0, !dbg !4784
  %28 = load i32, i32* %len, align 4, !dbg !4784, !tbaa !1005
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4785, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %29, i32 0, i32 4, !dbg !4786
  %30 = load i16, i16* %nlen, align 4, !dbg !4786, !tbaa !1365
  %conv = zext i16 %30 to i32, !dbg !4785
  %call = call i32 @ngx_memn2cmp(i8* %24, i8* %26, i32 %28, i32 %conv), !dbg !4787
  store i32 %call, i32* %rc, align 4, !dbg !4788, !tbaa !827
  %31 = load i32, i32* %rc, align 4, !dbg !4789, !tbaa !827
  %cmp9 = icmp eq i32 %31, 0, !dbg !4791
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4792

if.then11:                                        ; preds = %if.end7
  %32 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !4793, !tbaa !820
  store %struct.ngx_resolver_node_t* %32, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4795
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4795

if.end12:                                         ; preds = %if.end7
  %33 = load i32, i32* %rc, align 4, !dbg !4796, !tbaa !827
  %cmp13 = icmp slt i32 %33, 0, !dbg !4797
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4798

cond.true:                                        ; preds = %if.end12
  %34 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4799, !tbaa !820
  %left15 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %34, i32 0, i32 1, !dbg !4800
  %35 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %left15, align 4, !dbg !4800, !tbaa !1403
  br label %cond.end, !dbg !4798

cond.false:                                       ; preds = %if.end12
  %36 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4801, !tbaa !820
  %right16 = getelementptr inbounds %struct.ngx_rbtree_node_s, %struct.ngx_rbtree_node_s* %36, i32 0, i32 2, !dbg !4802
  %37 = load %struct.ngx_rbtree_node_s*, %struct.ngx_rbtree_node_s** %right16, align 4, !dbg !4802, !tbaa !1408
  br label %cond.end, !dbg !4798

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ngx_rbtree_node_s* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !4798
  store %struct.ngx_rbtree_node_s* %cond, %struct.ngx_rbtree_node_s** %node, align 4, !dbg !4803, !tbaa !820
  br label %while.cond, !dbg !4748, !llvm.loop !4764

while.end:                                        ; preds = %while.cond
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4804
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4804

cleanup:                                          ; preds = %while.end, %if.then11
  %38 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !4805
  call void @llvm.lifetime.end(i64 4, i8* %38) #5, !dbg !4805
  %39 = bitcast %struct.ngx_rbtree_node_s** %sentinel to i8*, !dbg !4805
  call void @llvm.lifetime.end(i64 4, i8* %39) #5, !dbg !4805
  %40 = bitcast %struct.ngx_rbtree_node_s** %node to i8*, !dbg !4805
  call void @llvm.lifetime.end(i64 4, i8* %40) #5, !dbg !4805
  %41 = bitcast i32* %rc to i8*, !dbg !4805
  call void @llvm.lifetime.end(i64 4, i8* %41) #5, !dbg !4805
  %42 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %retval, align 4, !dbg !4805
  ret %struct.ngx_resolver_node_t* %42, !dbg !4805
}

; Function Attrs: nounwind
define internal %struct.ngx_resolver_addr_t* @ngx_resolver_export(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, i32 %rotate) #0 !dbg !4806 {
entry:
  %retval = alloca %struct.ngx_resolver_addr_t*, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %rotate.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %addr = alloca i32*, align 4
  %sockaddr = alloca %union.ngx_sockaddr_t*, align 4
  %sin = alloca %struct.sockaddr_in*, align 4
  %dst = alloca %struct.ngx_resolver_addr_t*, align 4
  %addr6 = alloca %struct.in6_addr*, align 4
  %sin6 = alloca %struct.sockaddr_in6*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !4810, metadata !824), !dbg !4824
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !4811, metadata !824), !dbg !4825
  store i32 %rotate, i32* %rotate.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %rotate.addr, metadata !4812, metadata !824), !dbg !4826
  %0 = bitcast i32* %d to i8*, !dbg !4827
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %d, metadata !4813, metadata !824), !dbg !4828
  %1 = bitcast i32* %i to i8*, !dbg !4827
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4814, metadata !824), !dbg !4829
  %2 = bitcast i32* %j to i8*, !dbg !4827
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4815, metadata !824), !dbg !4830
  %3 = bitcast i32* %n to i8*, !dbg !4827
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4816, metadata !824), !dbg !4831
  %4 = bitcast i32** %addr to i8*, !dbg !4832
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !4832
  call void @llvm.dbg.declare(metadata i32** %addr, metadata !4817, metadata !824), !dbg !4833
  %5 = bitcast %union.ngx_sockaddr_t** %sockaddr to i8*, !dbg !4834
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !4834
  call void @llvm.dbg.declare(metadata %union.ngx_sockaddr_t** %sockaddr, metadata !4818, metadata !824), !dbg !4835
  %6 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !4836
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !4836
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %sin, metadata !4820, metadata !824), !dbg !4837
  %7 = bitcast %struct.ngx_resolver_addr_t** %dst to i8*, !dbg !4838
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !4838
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_addr_t** %dst, metadata !4821, metadata !824), !dbg !4839
  %8 = bitcast %struct.in6_addr** %addr6 to i8*, !dbg !4840
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !4840
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %addr6, metadata !4822, metadata !824), !dbg !4841
  %9 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !4842
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !4842
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in6** %sin6, metadata !4823, metadata !824), !dbg !4843
  %10 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4844, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %10, i32 0, i32 10, !dbg !4845
  %11 = load i16, i16* %naddrs, align 2, !dbg !4845, !tbaa !2140
  %conv = zext i16 %11 to i32, !dbg !4844
  store i32 %conv, i32* %n, align 4, !dbg !4846, !tbaa !827
  %12 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4847, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %12, i32 0, i32 14, !dbg !4848
  %13 = load i16, i16* %naddrs6, align 4, !dbg !4848, !tbaa !2148
  %conv1 = zext i16 %13 to i32, !dbg !4847
  %14 = load i32, i32* %n, align 4, !dbg !4849, !tbaa !827
  %add = add i32 %14, %conv1, !dbg !4849
  store i32 %add, i32* %n, align 4, !dbg !4849, !tbaa !827
  %15 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4850, !tbaa !820
  %16 = load i32, i32* %n, align 4, !dbg !4851, !tbaa !827
  %mul = mul i32 %16, 20, !dbg !4852
  %call = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %15, i32 %mul), !dbg !4853
  %17 = bitcast i8* %call to %struct.ngx_resolver_addr_t*, !dbg !4853
  store %struct.ngx_resolver_addr_t* %17, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4854, !tbaa !820
  %18 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4855, !tbaa !820
  %cmp = icmp eq %struct.ngx_resolver_addr_t* %18, null, !dbg !4857
  br i1 %cmp, label %if.then, label %if.end, !dbg !4858

if.then:                                          ; preds = %entry
  store %struct.ngx_resolver_addr_t* null, %struct.ngx_resolver_addr_t** %retval, align 4, !dbg !4859
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4859

if.end:                                           ; preds = %entry
  %19 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4861, !tbaa !820
  %20 = load i32, i32* %n, align 4, !dbg !4862, !tbaa !827
  %mul3 = mul i32 %20, 112, !dbg !4863
  %call4 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %19, i32 %mul3), !dbg !4864
  %21 = bitcast i8* %call4 to %union.ngx_sockaddr_t*, !dbg !4864
  store %union.ngx_sockaddr_t* %21, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !4865, !tbaa !820
  %22 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !4866, !tbaa !820
  %cmp5 = icmp eq %union.ngx_sockaddr_t* %22, null, !dbg !4868
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4869

if.then7:                                         ; preds = %if.end
  %23 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !4870, !tbaa !820
  %24 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4872, !tbaa !820
  %25 = bitcast %struct.ngx_resolver_addr_t* %24 to i8*, !dbg !4872
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %23, i8* %25), !dbg !4873
  store %struct.ngx_resolver_addr_t* null, %struct.ngx_resolver_addr_t** %retval, align 4, !dbg !4874
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4874

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4875, !tbaa !827
  %26 = load i32, i32* %rotate.addr, align 4, !dbg !4876, !tbaa !827
  %tobool = icmp ne i32 %26, 0, !dbg !4876
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4876

cond.true:                                        ; preds = %if.end8
  %call9 = call i32 @random(), !dbg !4877
  %27 = load i32, i32* %n, align 4, !dbg !4878, !tbaa !827
  %rem = urem i32 %call9, %27, !dbg !4879
  br label %cond.end, !dbg !4876

cond.false:                                       ; preds = %if.end8
  br label %cond.end, !dbg !4876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %rem, %cond.true ], [ 0, %cond.false ], !dbg !4876
  store i32 %cond, i32* %d, align 4, !dbg !4880, !tbaa !827
  %28 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4881, !tbaa !820
  %naddrs10 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %28, i32 0, i32 10, !dbg !4883
  %29 = load i16, i16* %naddrs10, align 2, !dbg !4883, !tbaa !2140
  %tobool11 = icmp ne i16 %29, 0, !dbg !4881
  br i1 %tobool11, label %if.then12, label %if.end52, !dbg !4884

if.then12:                                        ; preds = %cond.end
  %30 = load i32, i32* %rotate.addr, align 4, !dbg !4885, !tbaa !827
  %tobool13 = icmp ne i32 %30, 0, !dbg !4885
  br i1 %tobool13, label %cond.true14, label %cond.false19, !dbg !4885

cond.true14:                                      ; preds = %if.then12
  %call15 = call i32 @random(), !dbg !4887
  %31 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4888, !tbaa !820
  %naddrs16 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %31, i32 0, i32 10, !dbg !4889
  %32 = load i16, i16* %naddrs16, align 2, !dbg !4889, !tbaa !2140
  %conv17 = zext i16 %32 to i32, !dbg !4888
  %rem18 = srem i32 %call15, %conv17, !dbg !4890
  br label %cond.end20, !dbg !4885

cond.false19:                                     ; preds = %if.then12
  br label %cond.end20, !dbg !4885

cond.end20:                                       ; preds = %cond.false19, %cond.true14
  %cond21 = phi i32 [ %rem18, %cond.true14 ], [ 0, %cond.false19 ], !dbg !4885
  store i32 %cond21, i32* %j, align 4, !dbg !4891, !tbaa !827
  %33 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4892, !tbaa !820
  %naddrs22 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %33, i32 0, i32 10, !dbg !4893
  %34 = load i16, i16* %naddrs22, align 2, !dbg !4893, !tbaa !2140
  %conv23 = zext i16 %34 to i32, !dbg !4892
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !4894
  br i1 %cmp24, label %cond.true26, label %cond.false28, !dbg !4895

cond.true26:                                      ; preds = %cond.end20
  %35 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4896, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %35, i32 0, i32 8, !dbg !4897
  %addr27 = bitcast %union.anon.0* %u to i32*, !dbg !4898
  br label %cond.end30, !dbg !4895

cond.false28:                                     ; preds = %cond.end20
  %36 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4899, !tbaa !820
  %u29 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %36, i32 0, i32 8, !dbg !4900
  %addrs = bitcast %union.anon.0* %u29 to i32**, !dbg !4901
  %37 = load i32*, i32** %addrs, align 4, !dbg !4901, !tbaa !820
  br label %cond.end30, !dbg !4895

cond.end30:                                       ; preds = %cond.false28, %cond.true26
  %cond31 = phi i32* [ %addr27, %cond.true26 ], [ %37, %cond.false28 ], !dbg !4895
  store i32* %cond31, i32** %addr, align 4, !dbg !4902, !tbaa !820
  br label %do.body, !dbg !4903, !llvm.loop !4904

do.body:                                          ; preds = %do.cond, %cond.end30
  %38 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !4906, !tbaa !820
  %39 = load i32, i32* %d, align 4, !dbg !4908, !tbaa !827
  %arrayidx = getelementptr inbounds %union.ngx_sockaddr_t, %union.ngx_sockaddr_t* %38, i32 %39, !dbg !4906
  %sockaddr_in = bitcast %union.ngx_sockaddr_t* %arrayidx to %struct.sockaddr_in*, !dbg !4909
  store %struct.sockaddr_in* %sockaddr_in, %struct.sockaddr_in** %sin, align 4, !dbg !4910, !tbaa !820
  %40 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin, align 4, !dbg !4911, !tbaa !820
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %40, i32 0, i32 0, !dbg !4912
  store i16 2, i16* %sin_family, align 4, !dbg !4913, !tbaa !4914
  %41 = load i32*, i32** %addr, align 4, !dbg !4915, !tbaa !820
  %42 = load i32, i32* %j, align 4, !dbg !4916, !tbaa !827
  %inc = add i32 %42, 1, !dbg !4916
  store i32 %inc, i32* %j, align 4, !dbg !4916, !tbaa !827
  %arrayidx32 = getelementptr inbounds i32, i32* %41, i32 %42, !dbg !4915
  %43 = load i32, i32* %arrayidx32, align 4, !dbg !4915, !tbaa !827
  %44 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin, align 4, !dbg !4917, !tbaa !820
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %44, i32 0, i32 2, !dbg !4918
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !4919
  store i32 %43, i32* %s_addr, align 4, !dbg !4920, !tbaa !3230
  %45 = load %struct.sockaddr_in*, %struct.sockaddr_in** %sin, align 4, !dbg !4921, !tbaa !820
  %46 = bitcast %struct.sockaddr_in* %45 to %struct.sockaddr*, !dbg !4922
  %47 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4923, !tbaa !820
  %48 = load i32, i32* %d, align 4, !dbg !4924, !tbaa !827
  %arrayidx33 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %47, i32 %48, !dbg !4923
  %sockaddr34 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx33, i32 0, i32 0, !dbg !4925
  store %struct.sockaddr* %46, %struct.sockaddr** %sockaddr34, align 4, !dbg !4926, !tbaa !2264
  %49 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4927, !tbaa !820
  %50 = load i32, i32* %d, align 4, !dbg !4928, !tbaa !827
  %inc35 = add i32 %50, 1, !dbg !4928
  store i32 %inc35, i32* %d, align 4, !dbg !4928, !tbaa !827
  %arrayidx36 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %49, i32 %50, !dbg !4927
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx36, i32 0, i32 1, !dbg !4929
  store i32 16, i32* %socklen, align 4, !dbg !4930, !tbaa !4931
  %51 = load i32, i32* %d, align 4, !dbg !4932, !tbaa !827
  %52 = load i32, i32* %n, align 4, !dbg !4934, !tbaa !827
  %cmp37 = icmp eq i32 %51, %52, !dbg !4935
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !4936

if.then39:                                        ; preds = %do.body
  store i32 0, i32* %d, align 4, !dbg !4937, !tbaa !827
  br label %if.end40, !dbg !4939

if.end40:                                         ; preds = %if.then39, %do.body
  %53 = load i32, i32* %j, align 4, !dbg !4940, !tbaa !827
  %54 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4942, !tbaa !820
  %naddrs41 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %54, i32 0, i32 10, !dbg !4943
  %55 = load i16, i16* %naddrs41, align 2, !dbg !4943, !tbaa !2140
  %conv42 = zext i16 %55 to i32, !dbg !4944
  %cmp43 = icmp eq i32 %53, %conv42, !dbg !4945
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !4946

if.then45:                                        ; preds = %if.end40
  store i32 0, i32* %j, align 4, !dbg !4947, !tbaa !827
  br label %if.end46, !dbg !4949

if.end46:                                         ; preds = %if.then45, %if.end40
  br label %do.cond, !dbg !4950

do.cond:                                          ; preds = %if.end46
  %56 = load i32, i32* %i, align 4, !dbg !4951, !tbaa !827
  %inc47 = add i32 %56, 1, !dbg !4951
  store i32 %inc47, i32* %i, align 4, !dbg !4951, !tbaa !827
  %57 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4952, !tbaa !820
  %naddrs48 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %57, i32 0, i32 10, !dbg !4953
  %58 = load i16, i16* %naddrs48, align 2, !dbg !4953, !tbaa !2140
  %conv49 = zext i16 %58 to i32, !dbg !4954
  %cmp50 = icmp ult i32 %inc47, %conv49, !dbg !4955
  br i1 %cmp50, label %do.body, label %do.end, !dbg !4950, !llvm.loop !4904

do.end:                                           ; preds = %do.cond
  br label %if.end52, !dbg !4956

if.end52:                                         ; preds = %do.end, %cond.end
  %59 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4957, !tbaa !820
  %naddrs653 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %59, i32 0, i32 14, !dbg !4959
  %60 = load i16, i16* %naddrs653, align 4, !dbg !4959, !tbaa !2148
  %tobool54 = icmp ne i16 %60, 0, !dbg !4957
  br i1 %tobool54, label %if.then55, label %if.end102, !dbg !4960

if.then55:                                        ; preds = %if.end52
  %61 = load i32, i32* %rotate.addr, align 4, !dbg !4961, !tbaa !827
  %tobool56 = icmp ne i32 %61, 0, !dbg !4961
  br i1 %tobool56, label %cond.true57, label %cond.false62, !dbg !4961

cond.true57:                                      ; preds = %if.then55
  %call58 = call i32 @random(), !dbg !4963
  %62 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4964, !tbaa !820
  %naddrs659 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %62, i32 0, i32 14, !dbg !4965
  %63 = load i16, i16* %naddrs659, align 4, !dbg !4965, !tbaa !2148
  %conv60 = zext i16 %63 to i32, !dbg !4964
  %rem61 = srem i32 %call58, %conv60, !dbg !4966
  br label %cond.end63, !dbg !4961

cond.false62:                                     ; preds = %if.then55
  br label %cond.end63, !dbg !4961

cond.end63:                                       ; preds = %cond.false62, %cond.true57
  %cond64 = phi i32 [ %rem61, %cond.true57 ], [ 0, %cond.false62 ], !dbg !4961
  store i32 %cond64, i32* %j, align 4, !dbg !4967, !tbaa !827
  %64 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4968, !tbaa !820
  %naddrs665 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %64, i32 0, i32 14, !dbg !4969
  %65 = load i16, i16* %naddrs665, align 4, !dbg !4969, !tbaa !2148
  %conv66 = zext i16 %65 to i32, !dbg !4968
  %cmp67 = icmp eq i32 %conv66, 1, !dbg !4970
  br i1 %cmp67, label %cond.true69, label %cond.false71, !dbg !4971

cond.true69:                                      ; preds = %cond.end63
  %66 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4972, !tbaa !820
  %u6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %66, i32 0, i32 13, !dbg !4973
  %addr670 = bitcast %union.anon.1* %u6 to %struct.in6_addr*, !dbg !4974
  br label %cond.end73, !dbg !4971

cond.false71:                                     ; preds = %cond.end63
  %67 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !4975, !tbaa !820
  %u672 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %67, i32 0, i32 13, !dbg !4976
  %addrs6 = bitcast %union.anon.1* %u672 to %struct.in6_addr**, !dbg !4977
  %68 = load %struct.in6_addr*, %struct.in6_addr** %addrs6, align 4, !dbg !4977, !tbaa !820
  br label %cond.end73, !dbg !4971

cond.end73:                                       ; preds = %cond.false71, %cond.true69
  %cond74 = phi %struct.in6_addr* [ %addr670, %cond.true69 ], [ %68, %cond.false71 ], !dbg !4971
  store %struct.in6_addr* %cond74, %struct.in6_addr** %addr6, align 4, !dbg !4978, !tbaa !820
  br label %do.body75, !dbg !4979, !llvm.loop !4980

do.body75:                                        ; preds = %do.cond97, %cond.end73
  %69 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !4982, !tbaa !820
  %70 = load i32, i32* %d, align 4, !dbg !4984, !tbaa !827
  %arrayidx76 = getelementptr inbounds %union.ngx_sockaddr_t, %union.ngx_sockaddr_t* %69, i32 %70, !dbg !4982
  %sockaddr_in6 = bitcast %union.ngx_sockaddr_t* %arrayidx76 to %struct.sockaddr_in6*, !dbg !4985
  store %struct.sockaddr_in6* %sockaddr_in6, %struct.sockaddr_in6** %sin6, align 4, !dbg !4986, !tbaa !820
  %71 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !4987, !tbaa !820
  %sin6_family = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %71, i32 0, i32 0, !dbg !4988
  store i16 10, i16* %sin6_family, align 4, !dbg !4989, !tbaa !4990
  %72 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !4992, !tbaa !820
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 3, !dbg !4992
  %__in6_union = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr, i32 0, i32 0, !dbg !4992
  %__s6_addr = bitcast %union.anon* %__in6_union to [16 x i8]*, !dbg !4992
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr, i32 0, i32 0, !dbg !4992
  %73 = load %struct.in6_addr*, %struct.in6_addr** %addr6, align 4, !dbg !4992, !tbaa !820
  %74 = load i32, i32* %j, align 4, !dbg !4992, !tbaa !827
  %inc77 = add i32 %74, 1, !dbg !4992
  store i32 %inc77, i32* %j, align 4, !dbg !4992, !tbaa !827
  %arrayidx78 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %73, i32 %74, !dbg !4992
  %__in6_union79 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %arrayidx78, i32 0, i32 0, !dbg !4992
  %__s6_addr80 = bitcast %union.anon* %__in6_union79 to [16 x i8]*, !dbg !4992
  %arraydecay81 = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr80, i32 0, i32 0, !dbg !4992
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %arraydecay, i8* %arraydecay81, i32 16, i32 4, i1 false), !dbg !4992
  %75 = load %struct.sockaddr_in6*, %struct.sockaddr_in6** %sin6, align 4, !dbg !4993, !tbaa !820
  %76 = bitcast %struct.sockaddr_in6* %75 to %struct.sockaddr*, !dbg !4994
  %77 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4995, !tbaa !820
  %78 = load i32, i32* %d, align 4, !dbg !4996, !tbaa !827
  %arrayidx82 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %77, i32 %78, !dbg !4995
  %sockaddr83 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx82, i32 0, i32 0, !dbg !4997
  store %struct.sockaddr* %76, %struct.sockaddr** %sockaddr83, align 4, !dbg !4998, !tbaa !2264
  %79 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !4999, !tbaa !820
  %80 = load i32, i32* %d, align 4, !dbg !5000, !tbaa !827
  %inc84 = add i32 %80, 1, !dbg !5000
  store i32 %inc84, i32* %d, align 4, !dbg !5000, !tbaa !827
  %arrayidx85 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %79, i32 %80, !dbg !4999
  %socklen86 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx85, i32 0, i32 1, !dbg !5001
  store i32 28, i32* %socklen86, align 4, !dbg !5002, !tbaa !4931
  %81 = load i32, i32* %d, align 4, !dbg !5003, !tbaa !827
  %82 = load i32, i32* %n, align 4, !dbg !5005, !tbaa !827
  %cmp87 = icmp eq i32 %81, %82, !dbg !5006
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !5007

if.then89:                                        ; preds = %do.body75
  store i32 0, i32* %d, align 4, !dbg !5008, !tbaa !827
  br label %if.end90, !dbg !5010

if.end90:                                         ; preds = %if.then89, %do.body75
  %83 = load i32, i32* %j, align 4, !dbg !5011, !tbaa !827
  %84 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5013, !tbaa !820
  %naddrs691 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %84, i32 0, i32 14, !dbg !5014
  %85 = load i16, i16* %naddrs691, align 4, !dbg !5014, !tbaa !2148
  %conv92 = zext i16 %85 to i32, !dbg !5013
  %cmp93 = icmp eq i32 %83, %conv92, !dbg !5015
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !5016

if.then95:                                        ; preds = %if.end90
  store i32 0, i32* %j, align 4, !dbg !5017, !tbaa !827
  br label %if.end96, !dbg !5019

if.end96:                                         ; preds = %if.then95, %if.end90
  br label %do.cond97, !dbg !5020

do.cond97:                                        ; preds = %if.end96
  %86 = load i32, i32* %i, align 4, !dbg !5021, !tbaa !827
  %inc98 = add i32 %86, 1, !dbg !5021
  store i32 %inc98, i32* %i, align 4, !dbg !5021, !tbaa !827
  %87 = load i32, i32* %n, align 4, !dbg !5022, !tbaa !827
  %cmp99 = icmp ult i32 %inc98, %87, !dbg !5023
  br i1 %cmp99, label %do.body75, label %do.end101, !dbg !5020, !llvm.loop !4980

do.end101:                                        ; preds = %do.cond97
  br label %if.end102, !dbg !5024

if.end102:                                        ; preds = %do.end101, %if.end52
  %88 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %dst, align 4, !dbg !5025, !tbaa !820
  store %struct.ngx_resolver_addr_t* %88, %struct.ngx_resolver_addr_t** %retval, align 4, !dbg !5026
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5026

cleanup:                                          ; preds = %if.end102, %if.then7, %if.then
  %89 = bitcast %struct.sockaddr_in6** %sin6 to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %89) #5, !dbg !5027
  %90 = bitcast %struct.in6_addr** %addr6 to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %90) #5, !dbg !5027
  %91 = bitcast %struct.ngx_resolver_addr_t** %dst to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %91) #5, !dbg !5027
  %92 = bitcast %struct.sockaddr_in** %sin to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %92) #5, !dbg !5027
  %93 = bitcast %union.ngx_sockaddr_t** %sockaddr to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %93) #5, !dbg !5027
  %94 = bitcast i32** %addr to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %94) #5, !dbg !5027
  %95 = bitcast i32* %n to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %95) #5, !dbg !5027
  %96 = bitcast i32* %j to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %96) #5, !dbg !5027
  %97 = bitcast i32* %i to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %97) #5, !dbg !5027
  %98 = bitcast i32* %d to i8*, !dbg !5027
  call void @llvm.lifetime.end(i64 4, i8* %98) #5, !dbg !5027
  %99 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %retval, align 4, !dbg !5027
  ret %struct.ngx_resolver_addr_t* %99, !dbg !5027
}

; Function Attrs: nounwind
define internal void @ngx_resolver_resolve_srv_names(%struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_node_t* %rn) #0 !dbg !5028 {
entry:
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %i = alloca i32, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %cctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %srvs = alloca %struct.ngx_resolver_srv_name_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !5032, metadata !824), !dbg !5038
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !5033, metadata !824), !dbg !5039
  %0 = bitcast i32* %i to i8*, !dbg !5040
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !5040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5034, metadata !824), !dbg !5041
  %1 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !5042
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !5042
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !5035, metadata !824), !dbg !5043
  %2 = bitcast %struct.ngx_resolver_ctx_s** %cctx to i8*, !dbg !5044
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !5044
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %cctx, metadata !5036, metadata !824), !dbg !5045
  %3 = bitcast %struct.ngx_resolver_srv_name_t** %srvs to i8*, !dbg !5046
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !5046
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_name_t** %srvs, metadata !5037, metadata !824), !dbg !5047
  %4 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5048, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %4, i32 0, i32 1, !dbg !5049
  %5 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !5049, !tbaa !1699
  store %struct.ngx_resolver_s* %5, %struct.ngx_resolver_s** %r, align 4, !dbg !5050, !tbaa !820
  %6 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5051, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %6, i32 0, i32 2, !dbg !5052
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %node, align 4, !dbg !5053, !tbaa !2429
  %7 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5054, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %7, i32 0, i32 4, !dbg !5055
  store i32 0, i32* %state, align 4, !dbg !5056, !tbaa !1703
  %8 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5057, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %8, i32 0, i32 16, !dbg !5058
  %9 = load i32, i32* %valid, align 4, !dbg !5058, !tbaa !2121
  %10 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5059, !tbaa !820
  %valid1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %10, i32 0, i32 7, !dbg !5060
  store i32 %9, i32* %valid1, align 4, !dbg !5061, !tbaa !2201
  %11 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5062, !tbaa !820
  %nsrvs = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %11, i32 0, i32 11, !dbg !5063
  %12 = load i16, i16* %nsrvs, align 4, !dbg !5063, !tbaa !2274
  %conv = zext i16 %12 to i32, !dbg !5062
  %13 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5064, !tbaa !820
  %count = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %13, i32 0, i32 12, !dbg !5065
  store i32 %conv, i32* %count, align 4, !dbg !5066, !tbaa !5067
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5068, !tbaa !820
  %15 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5069, !tbaa !820
  %nsrvs2 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %15, i32 0, i32 11, !dbg !5070
  %16 = load i16, i16* %nsrvs2, align 4, !dbg !5070, !tbaa !2274
  %conv3 = zext i16 %16 to i32, !dbg !5069
  %mul = mul i32 %conv3, 32, !dbg !5071
  %call = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %14, i32 %mul), !dbg !5072
  %17 = bitcast i8* %call to %struct.ngx_resolver_srv_name_t*, !dbg !5072
  store %struct.ngx_resolver_srv_name_t* %17, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5073, !tbaa !820
  %18 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5074, !tbaa !820
  %cmp = icmp eq %struct.ngx_resolver_srv_name_t* %18, null, !dbg !5076
  br i1 %cmp, label %if.then, label %if.end, !dbg !5077

if.then:                                          ; preds = %entry
  br label %failed, !dbg !5078

if.end:                                           ; preds = %entry
  %19 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5080, !tbaa !820
  %20 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5081, !tbaa !820
  %srvs5 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %20, i32 0, i32 14, !dbg !5082
  store %struct.ngx_resolver_srv_name_t* %19, %struct.ngx_resolver_srv_name_t** %srvs5, align 4, !dbg !5083, !tbaa !2899
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5084, !tbaa !820
  %nsrvs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 11, !dbg !5085
  %22 = load i16, i16* %nsrvs6, align 4, !dbg !5085, !tbaa !2274
  %conv7 = zext i16 %22 to i32, !dbg !5084
  %23 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5086, !tbaa !820
  %nsrvs8 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %23, i32 0, i32 13, !dbg !5087
  store i32 %conv7, i32* %nsrvs8, align 4, !dbg !5088, !tbaa !2883
  %24 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5089, !tbaa !820
  %event = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %24, i32 0, i32 20, !dbg !5091
  %25 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event, align 4, !dbg !5091, !tbaa !1947
  %tobool = icmp ne %struct.ngx_event_s* %25, null, !dbg !5089
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !5092

land.lhs.true:                                    ; preds = %if.end
  %26 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5093, !tbaa !820
  %event9 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %26, i32 0, i32 20, !dbg !5094
  %27 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event9, align 4, !dbg !5094, !tbaa !1947
  %timer_set = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %27, i32 0, i32 1, !dbg !5095
  %28 = bitcast i24* %timer_set to i32*, !dbg !5095
  %bf.load = load i32, i32* %28, align 4, !dbg !5095
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !5095
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5095
  %tobool10 = icmp ne i32 %bf.clear, 0, !dbg !5093
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !5096

if.then11:                                        ; preds = %land.lhs.true
  %29 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5097, !tbaa !820
  %event12 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %29, i32 0, i32 20, !dbg !5099
  %30 = load %struct.ngx_event_s*, %struct.ngx_event_s** %event12, align 4, !dbg !5099, !tbaa !1947
  call void @ngx_event_del_timer(%struct.ngx_event_s* %30), !dbg !5100
  br label %if.end13, !dbg !5101

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  store i32 0, i32* %i, align 4, !dbg !5102, !tbaa !827
  br label %for.cond, !dbg !5104

for.cond:                                         ; preds = %for.inc, %if.end13
  %31 = load i32, i32* %i, align 4, !dbg !5105, !tbaa !827
  %32 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5107, !tbaa !820
  %nsrvs14 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %32, i32 0, i32 11, !dbg !5108
  %33 = load i16, i16* %nsrvs14, align 4, !dbg !5108, !tbaa !2274
  %conv15 = zext i16 %33 to i32, !dbg !5109
  %cmp16 = icmp ult i32 %31, %conv15, !dbg !5110
  br i1 %cmp16, label %for.body, label %for.end, !dbg !5111

for.body:                                         ; preds = %for.cond
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5112, !tbaa !820
  %35 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5114, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %35, i32 0, i32 8, !dbg !5115
  %srvs18 = bitcast %union.anon.0* %u to %struct.ngx_resolver_srv_t**, !dbg !5116
  %36 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs18, align 4, !dbg !5116, !tbaa !820
  %37 = load i32, i32* %i, align 4, !dbg !5117, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %36, i32 %37, !dbg !5114
  %name = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx, i32 0, i32 0, !dbg !5118
  %len = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !5119
  %38 = load i32, i32* %len, align 4, !dbg !5119, !tbaa !5120
  %call19 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %34, i32 %38), !dbg !5121
  %39 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5122, !tbaa !820
  %40 = load i32, i32* %i, align 4, !dbg !5123, !tbaa !827
  %arrayidx20 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %39, i32 %40, !dbg !5122
  %name21 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx20, i32 0, i32 0, !dbg !5124
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name21, i32 0, i32 1, !dbg !5125
  store i8* %call19, i8** %data, align 4, !dbg !5126, !tbaa !2940
  %41 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5127, !tbaa !820
  %42 = load i32, i32* %i, align 4, !dbg !5129, !tbaa !827
  %arrayidx22 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %41, i32 %42, !dbg !5127
  %name23 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx22, i32 0, i32 0, !dbg !5130
  %data24 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name23, i32 0, i32 1, !dbg !5131
  %43 = load i8*, i8** %data24, align 4, !dbg !5131, !tbaa !2940
  %cmp25 = icmp eq i8* %43, null, !dbg !5132
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !5133

if.then27:                                        ; preds = %for.body
  br label %failed, !dbg !5134

if.end28:                                         ; preds = %for.body
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5136, !tbaa !820
  %u29 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %44, i32 0, i32 8, !dbg !5137
  %srvs30 = bitcast %union.anon.0* %u29 to %struct.ngx_resolver_srv_t**, !dbg !5138
  %45 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs30, align 4, !dbg !5138, !tbaa !820
  %46 = load i32, i32* %i, align 4, !dbg !5139, !tbaa !827
  %arrayidx31 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %45, i32 %46, !dbg !5136
  %name32 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx31, i32 0, i32 0, !dbg !5140
  %len33 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name32, i32 0, i32 0, !dbg !5141
  %47 = load i32, i32* %len33, align 4, !dbg !5141, !tbaa !5120
  %48 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5142, !tbaa !820
  %49 = load i32, i32* %i, align 4, !dbg !5143, !tbaa !827
  %arrayidx34 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %48, i32 %49, !dbg !5142
  %name35 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx34, i32 0, i32 0, !dbg !5144
  %len36 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name35, i32 0, i32 0, !dbg !5145
  store i32 %47, i32* %len36, align 4, !dbg !5146, !tbaa !5147
  %50 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5148, !tbaa !820
  %51 = load i32, i32* %i, align 4, !dbg !5148, !tbaa !827
  %arrayidx37 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %50, i32 %51, !dbg !5148
  %name38 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx37, i32 0, i32 0, !dbg !5148
  %data39 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name38, i32 0, i32 1, !dbg !5148
  %52 = load i8*, i8** %data39, align 4, !dbg !5148, !tbaa !2940
  %53 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5148, !tbaa !820
  %u40 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %53, i32 0, i32 8, !dbg !5148
  %srvs41 = bitcast %union.anon.0* %u40 to %struct.ngx_resolver_srv_t**, !dbg !5148
  %54 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs41, align 4, !dbg !5148, !tbaa !820
  %55 = load i32, i32* %i, align 4, !dbg !5148, !tbaa !827
  %arrayidx42 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %54, i32 %55, !dbg !5148
  %name43 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx42, i32 0, i32 0, !dbg !5148
  %data44 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name43, i32 0, i32 1, !dbg !5148
  %56 = load i8*, i8** %data44, align 4, !dbg !5148, !tbaa !2521
  %57 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5148, !tbaa !820
  %58 = load i32, i32* %i, align 4, !dbg !5148, !tbaa !827
  %arrayidx45 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %57, i32 %58, !dbg !5148
  %name46 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx45, i32 0, i32 0, !dbg !5148
  %len47 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name46, i32 0, i32 0, !dbg !5148
  %59 = load i32, i32* %len47, align 4, !dbg !5148, !tbaa !5147
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %52, i8* %56, i32 %59, i32 1, i1 false), !dbg !5148
  %60 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5149, !tbaa !820
  %call48 = call %struct.ngx_resolver_ctx_s* @ngx_resolve_start(%struct.ngx_resolver_s* %60, %struct.ngx_resolver_ctx_s* null), !dbg !5150
  store %struct.ngx_resolver_ctx_s* %call48, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5151, !tbaa !820
  %61 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5152, !tbaa !820
  %cmp49 = icmp eq %struct.ngx_resolver_ctx_s* %61, null, !dbg !5154
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !5155

if.then51:                                        ; preds = %if.end28
  br label %failed, !dbg !5156

if.end52:                                         ; preds = %if.end28
  %62 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5158, !tbaa !820
  %name53 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %62, i32 0, i32 5, !dbg !5159
  %63 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5160, !tbaa !820
  %64 = load i32, i32* %i, align 4, !dbg !5161, !tbaa !827
  %arrayidx54 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %63, i32 %64, !dbg !5160
  %name55 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx54, i32 0, i32 0, !dbg !5162
  %65 = bitcast %struct.ngx_str_t* %name53 to i8*, !dbg !5162
  %66 = bitcast %struct.ngx_str_t* %name55 to i8*, !dbg !5162
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %65, i8* %66, i32 8, i32 4, i1 false), !dbg !5162, !tbaa.struct !1065
  %67 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5163, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %67, i32 0, i32 15, !dbg !5164
  store void (%struct.ngx_resolver_ctx_s*)* @ngx_resolver_srv_names_handler, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !5165, !tbaa !1844
  %68 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5166, !tbaa !820
  %69 = bitcast %struct.ngx_resolver_ctx_s* %68 to i8*, !dbg !5166
  %70 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5167, !tbaa !820
  %data56 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %70, i32 0, i32 16, !dbg !5168
  store i8* %69, i8** %data56, align 4, !dbg !5169, !tbaa !5170
  %71 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5171, !tbaa !820
  %72 = load i32, i32* %i, align 4, !dbg !5172, !tbaa !827
  %arrayidx57 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %71, i32 %72, !dbg !5171
  %73 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5173, !tbaa !820
  %srvs58 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %73, i32 0, i32 14, !dbg !5174
  store %struct.ngx_resolver_srv_name_t* %arrayidx57, %struct.ngx_resolver_srv_name_t** %srvs58, align 4, !dbg !5175, !tbaa !2899
  %74 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5176, !tbaa !820
  %timeout = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %74, i32 0, i32 17, !dbg !5177
  %75 = load i32, i32* %timeout, align 4, !dbg !5177, !tbaa !2369
  %76 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5178, !tbaa !820
  %timeout59 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %76, i32 0, i32 17, !dbg !5179
  store i32 %75, i32* %timeout59, align 4, !dbg !5180, !tbaa !2369
  %77 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5181, !tbaa !820
  %u60 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %77, i32 0, i32 8, !dbg !5182
  %srvs61 = bitcast %union.anon.0* %u60 to %struct.ngx_resolver_srv_t**, !dbg !5183
  %78 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs61, align 4, !dbg !5183, !tbaa !820
  %79 = load i32, i32* %i, align 4, !dbg !5184, !tbaa !827
  %arrayidx62 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %78, i32 %79, !dbg !5181
  %priority = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx62, i32 0, i32 1, !dbg !5185
  %80 = load i16, i16* %priority, align 4, !dbg !5185, !tbaa !5186
  %81 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5187, !tbaa !820
  %82 = load i32, i32* %i, align 4, !dbg !5188, !tbaa !827
  %arrayidx63 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %81, i32 %82, !dbg !5187
  %priority64 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx63, i32 0, i32 1, !dbg !5189
  store i16 %80, i16* %priority64, align 4, !dbg !5190, !tbaa !5191
  %83 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5192, !tbaa !820
  %u65 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %83, i32 0, i32 8, !dbg !5193
  %srvs66 = bitcast %union.anon.0* %u65 to %struct.ngx_resolver_srv_t**, !dbg !5194
  %84 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs66, align 4, !dbg !5194, !tbaa !820
  %85 = load i32, i32* %i, align 4, !dbg !5195, !tbaa !827
  %arrayidx67 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %84, i32 %85, !dbg !5192
  %weight = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx67, i32 0, i32 2, !dbg !5196
  %86 = load i16, i16* %weight, align 2, !dbg !5196, !tbaa !5197
  %87 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5198, !tbaa !820
  %88 = load i32, i32* %i, align 4, !dbg !5199, !tbaa !827
  %arrayidx68 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %87, i32 %88, !dbg !5198
  %weight69 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx68, i32 0, i32 2, !dbg !5200
  store i16 %86, i16* %weight69, align 2, !dbg !5201, !tbaa !5202
  %89 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5203, !tbaa !820
  %u70 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %89, i32 0, i32 8, !dbg !5204
  %srvs71 = bitcast %union.anon.0* %u70 to %struct.ngx_resolver_srv_t**, !dbg !5205
  %90 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs71, align 4, !dbg !5205, !tbaa !820
  %91 = load i32, i32* %i, align 4, !dbg !5206, !tbaa !827
  %arrayidx72 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %90, i32 %91, !dbg !5203
  %port = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx72, i32 0, i32 3, !dbg !5207
  %92 = load i16, i16* %port, align 4, !dbg !5207, !tbaa !5208
  %93 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5209, !tbaa !820
  %94 = load i32, i32* %i, align 4, !dbg !5210, !tbaa !827
  %arrayidx73 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %93, i32 %94, !dbg !5209
  %port74 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx73, i32 0, i32 3, !dbg !5211
  store i16 %92, i16* %port74, align 4, !dbg !5212, !tbaa !5213
  %95 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5214, !tbaa !820
  %96 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5215, !tbaa !820
  %97 = load i32, i32* %i, align 4, !dbg !5216, !tbaa !827
  %arrayidx75 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %96, i32 %97, !dbg !5215
  %ctx76 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx75, i32 0, i32 4, !dbg !5217
  store %struct.ngx_resolver_ctx_s* %95, %struct.ngx_resolver_ctx_s** %ctx76, align 4, !dbg !5218, !tbaa !2902
  %98 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx, align 4, !dbg !5219, !tbaa !820
  %call77 = call i32 @ngx_resolve_name(%struct.ngx_resolver_ctx_s* %98), !dbg !5221
  %cmp78 = icmp eq i32 %call77, -1, !dbg !5222
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !5223

if.then80:                                        ; preds = %if.end52
  %99 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5224, !tbaa !820
  %100 = load i32, i32* %i, align 4, !dbg !5226, !tbaa !827
  %arrayidx81 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %99, i32 %100, !dbg !5224
  %ctx82 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx81, i32 0, i32 4, !dbg !5227
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %ctx82, align 4, !dbg !5228, !tbaa !2902
  br label %failed, !dbg !5229

if.end83:                                         ; preds = %if.end52
  br label %for.inc, !dbg !5230

for.inc:                                          ; preds = %if.end83
  %101 = load i32, i32* %i, align 4, !dbg !5231, !tbaa !827
  %inc = add i32 %101, 1, !dbg !5231
  store i32 %inc, i32* %i, align 4, !dbg !5231, !tbaa !827
  br label %for.cond, !dbg !5232, !llvm.loop !5233

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5235

failed:                                           ; preds = %if.then80, %if.then51, %if.then27, %if.then
  %102 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5236, !tbaa !820
  %state84 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %102, i32 0, i32 4, !dbg !5237
  store i32 -1, i32* %state84, align 4, !dbg !5238, !tbaa !1703
  %103 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !5239, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %103, i32 0, i32 0, !dbg !5239
  %104 = load volatile i32, i32* %sec, align 4, !dbg !5239, !tbaa !2123
  %105 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5240, !tbaa !820
  %valid85 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %105, i32 0, i32 26, !dbg !5241
  %106 = load i32, i32* %valid85, align 4, !dbg !5241, !tbaa !958
  %tobool86 = icmp ne i32 %106, 0, !dbg !5240
  br i1 %tobool86, label %cond.true, label %cond.false, !dbg !5240

cond.true:                                        ; preds = %failed
  %107 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5242, !tbaa !820
  %valid87 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %107, i32 0, i32 26, !dbg !5243
  %108 = load i32, i32* %valid87, align 4, !dbg !5243, !tbaa !958
  br label %cond.end, !dbg !5240

cond.false:                                       ; preds = %failed
  br label %cond.end, !dbg !5240

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %108, %cond.true ], [ 10, %cond.false ], !dbg !5240
  %add = add nsw i32 %104, %cond, !dbg !5244
  %109 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5245, !tbaa !820
  %valid88 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %109, i32 0, i32 7, !dbg !5246
  store i32 %add, i32* %valid88, align 4, !dbg !5247, !tbaa !2201
  %110 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5248, !tbaa !820
  %handler89 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %110, i32 0, i32 15, !dbg !5249
  %111 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler89, align 4, !dbg !5249, !tbaa !1844
  %112 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5250, !tbaa !820
  call void %111(%struct.ngx_resolver_ctx_s* %112), !dbg !5248
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5251
  br label %cleanup, !dbg !5251

cleanup:                                          ; preds = %cond.end, %for.end
  %113 = bitcast %struct.ngx_resolver_srv_name_t** %srvs to i8*, !dbg !5251
  call void @llvm.lifetime.end(i64 4, i8* %113) #5, !dbg !5251
  %114 = bitcast %struct.ngx_resolver_ctx_s** %cctx to i8*, !dbg !5251
  call void @llvm.lifetime.end(i64 4, i8* %114) #5, !dbg !5251
  %115 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !5251
  call void @llvm.lifetime.end(i64 4, i8* %115) #5, !dbg !5251
  %116 = bitcast i32* %i to i8*, !dbg !5251
  call void @llvm.lifetime.end(i64 4, i8* %116) #5, !dbg !5251
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5251

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_create_srv_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_str_t* %name) #0 !dbg !5252 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %p = alloca i8*, align 4
  %s = alloca i8*, align 4
  %len = alloca i32, align 4
  %nlen = alloca i32, align 4
  %ident = alloca i32, align 4
  %qs = alloca %struct.ngx_resolver_qs_t*, align 4
  %query = alloca %struct.ngx_resolver_hdr_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !5256, metadata !824), !dbg !5266
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !5257, metadata !824), !dbg !5267
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !5258, metadata !824), !dbg !5268
  %0 = bitcast i8** %p to i8*, !dbg !5269
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !5269
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5259, metadata !824), !dbg !5270
  %1 = bitcast i8** %s to i8*, !dbg !5269
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !5269
  call void @llvm.dbg.declare(metadata i8** %s, metadata !5260, metadata !824), !dbg !5271
  %2 = bitcast i32* %len to i8*, !dbg !5272
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5261, metadata !824), !dbg !5273
  %3 = bitcast i32* %nlen to i8*, !dbg !5272
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %nlen, metadata !5262, metadata !824), !dbg !5274
  %4 = bitcast i32* %ident to i8*, !dbg !5275
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !5275
  call void @llvm.dbg.declare(metadata i32* %ident, metadata !5263, metadata !824), !dbg !5276
  %5 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !5277
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !5277
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_qs_t** %qs, metadata !5264, metadata !824), !dbg !5278
  %6 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !5279
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !5279
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_hdr_t** %query, metadata !5265, metadata !824), !dbg !5280
  %7 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5281, !tbaa !820
  %len1 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %7, i32 0, i32 0, !dbg !5282
  %8 = load i32, i32* %len1, align 4, !dbg !5282, !tbaa !1005
  %tobool = icmp ne i32 %8, 0, !dbg !5281
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5281

cond.true:                                        ; preds = %entry
  %9 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5283, !tbaa !820
  %len2 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %9, i32 0, i32 0, !dbg !5284
  %10 = load i32, i32* %len2, align 4, !dbg !5284, !tbaa !1005
  %add = add i32 1, %10, !dbg !5285
  %add3 = add i32 %add, 1, !dbg !5286
  br label %cond.end, !dbg !5281

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5281

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add3, %cond.true ], [ 1, %cond.false ], !dbg !5281
  store i32 %cond, i32* %nlen, align 4, !dbg !5287, !tbaa !827
  %11 = load i32, i32* %nlen, align 4, !dbg !5288, !tbaa !827
  %add4 = add i32 12, %11, !dbg !5289
  %add5 = add i32 %add4, 4, !dbg !5290
  store i32 %add5, i32* %len, align 4, !dbg !5291, !tbaa !827
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5292, !tbaa !820
  %13 = load i32, i32* %len, align 4, !dbg !5293, !tbaa !827
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %12, i32 %13), !dbg !5294
  store i8* %call, i8** %p, align 4, !dbg !5295, !tbaa !820
  %14 = load i8*, i8** %p, align 4, !dbg !5296, !tbaa !820
  %cmp = icmp eq i8* %14, null, !dbg !5298
  br i1 %cmp, label %if.then, label %if.end, !dbg !5299

if.then:                                          ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !5300
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5300

if.end:                                           ; preds = %cond.end
  %15 = load i32, i32* %len, align 4, !dbg !5302, !tbaa !827
  %conv = trunc i32 %15 to i16, !dbg !5303
  %16 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5304, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %16, i32 0, i32 5, !dbg !5305
  store i16 %conv, i16* %qlen, align 2, !dbg !5306, !tbaa !4103
  %17 = load i8*, i8** %p, align 4, !dbg !5307, !tbaa !820
  %18 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5308, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %18, i32 0, i32 6, !dbg !5309
  store i8* %17, i8** %query6, align 4, !dbg !5310, !tbaa !2440
  %19 = load i8*, i8** %p, align 4, !dbg !5311, !tbaa !820
  %20 = bitcast i8* %19 to %struct.ngx_resolver_hdr_t*, !dbg !5312
  store %struct.ngx_resolver_hdr_t* %20, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5313, !tbaa !820
  %call7 = call i32 @random(), !dbg !5314
  store i32 %call7, i32* %ident, align 4, !dbg !5315, !tbaa !827
  %21 = load i32, i32* %ident, align 4, !dbg !5316, !tbaa !827
  %shr = lshr i32 %21, 8, !dbg !5317
  %and = and i32 %shr, 255, !dbg !5318
  %conv8 = trunc i32 %and to i8, !dbg !5319
  %22 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5320, !tbaa !820
  %ident_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %22, i32 0, i32 0, !dbg !5321
  store i8 %conv8, i8* %ident_hi, align 1, !dbg !5322, !tbaa !3964
  %23 = load i32, i32* %ident, align 4, !dbg !5323, !tbaa !827
  %and9 = and i32 %23, 255, !dbg !5324
  %conv10 = trunc i32 %and9 to i8, !dbg !5325
  %24 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5326, !tbaa !820
  %ident_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %24, i32 0, i32 1, !dbg !5327
  store i8 %conv10, i8* %ident_lo, align 1, !dbg !5328, !tbaa !3972
  %25 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5329, !tbaa !820
  %flags_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %25, i32 0, i32 2, !dbg !5330
  store i8 1, i8* %flags_hi, align 1, !dbg !5331, !tbaa !3976
  %26 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5332, !tbaa !820
  %flags_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %26, i32 0, i32 3, !dbg !5333
  store i8 0, i8* %flags_lo, align 1, !dbg !5334, !tbaa !3980
  %27 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5335, !tbaa !820
  %nqs_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %27, i32 0, i32 4, !dbg !5336
  store i8 0, i8* %nqs_hi, align 1, !dbg !5337, !tbaa !3984
  %28 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5338, !tbaa !820
  %nqs_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %28, i32 0, i32 5, !dbg !5339
  store i8 1, i8* %nqs_lo, align 1, !dbg !5340, !tbaa !3988
  %29 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5341, !tbaa !820
  %nan_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %29, i32 0, i32 6, !dbg !5342
  store i8 0, i8* %nan_hi, align 1, !dbg !5343, !tbaa !3992
  %30 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5344, !tbaa !820
  %nan_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %30, i32 0, i32 7, !dbg !5345
  store i8 0, i8* %nan_lo, align 1, !dbg !5346, !tbaa !3996
  %31 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5347, !tbaa !820
  %nns_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %31, i32 0, i32 8, !dbg !5348
  store i8 0, i8* %nns_hi, align 1, !dbg !5349, !tbaa !4000
  %32 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5350, !tbaa !820
  %nns_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %32, i32 0, i32 9, !dbg !5351
  store i8 0, i8* %nns_lo, align 1, !dbg !5352, !tbaa !4004
  %33 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5353, !tbaa !820
  %nar_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %33, i32 0, i32 10, !dbg !5354
  store i8 0, i8* %nar_hi, align 1, !dbg !5355, !tbaa !4008
  %34 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5356, !tbaa !820
  %nar_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %34, i32 0, i32 11, !dbg !5357
  store i8 0, i8* %nar_lo, align 1, !dbg !5358, !tbaa !4012
  %35 = load i32, i32* %nlen, align 4, !dbg !5359, !tbaa !827
  %add11 = add i32 12, %35, !dbg !5360
  %36 = load i8*, i8** %p, align 4, !dbg !5361, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %36, i32 %add11, !dbg !5361
  store i8* %add.ptr, i8** %p, align 4, !dbg !5361, !tbaa !820
  %37 = load i8*, i8** %p, align 4, !dbg !5362, !tbaa !820
  %38 = bitcast i8* %37 to %struct.ngx_resolver_qs_t*, !dbg !5363
  store %struct.ngx_resolver_qs_t* %38, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5364, !tbaa !820
  %39 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5365, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %39, i32 0, i32 0, !dbg !5366
  store i8 0, i8* %type_hi, align 1, !dbg !5367, !tbaa !5368
  %40 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5370, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %40, i32 0, i32 1, !dbg !5371
  store i8 33, i8* %type_lo, align 1, !dbg !5372, !tbaa !5373
  %41 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5374, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %41, i32 0, i32 2, !dbg !5375
  store i8 0, i8* %class_hi, align 1, !dbg !5376, !tbaa !5377
  %42 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5378, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %42, i32 0, i32 3, !dbg !5379
  store i8 1, i8* %class_lo, align 1, !dbg !5380, !tbaa !5381
  store i32 0, i32* %len, align 4, !dbg !5382, !tbaa !827
  %43 = load i8*, i8** %p, align 4, !dbg !5383, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 -1, !dbg !5383
  store i8* %incdec.ptr, i8** %p, align 4, !dbg !5383, !tbaa !820
  %44 = load i8*, i8** %p, align 4, !dbg !5384, !tbaa !820
  %incdec.ptr12 = getelementptr inbounds i8, i8* %44, i32 -1, !dbg !5384
  store i8* %incdec.ptr12, i8** %p, align 4, !dbg !5384, !tbaa !820
  store i8 0, i8* %44, align 1, !dbg !5385, !tbaa !1828
  %45 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5386, !tbaa !820
  %len13 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %45, i32 0, i32 0, !dbg !5388
  %46 = load i32, i32* %len13, align 4, !dbg !5388, !tbaa !1005
  %cmp14 = icmp eq i32 %46, 0, !dbg !5389
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5390

if.then16:                                        ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !5391
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5391

if.end17:                                         ; preds = %if.end
  %47 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5393, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %47, i32 0, i32 1, !dbg !5395
  %48 = load i8*, i8** %data, align 4, !dbg !5395, !tbaa !997
  %49 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5396, !tbaa !820
  %len18 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %49, i32 0, i32 0, !dbg !5397
  %50 = load i32, i32* %len18, align 4, !dbg !5397, !tbaa !1005
  %add.ptr19 = getelementptr inbounds i8, i8* %48, i32 %50, !dbg !5398
  %add.ptr20 = getelementptr inbounds i8, i8* %add.ptr19, i32 -1, !dbg !5399
  store i8* %add.ptr20, i8** %s, align 4, !dbg !5400, !tbaa !820
  br label %for.cond, !dbg !5401

for.cond:                                         ; preds = %for.inc, %if.end17
  %51 = load i8*, i8** %s, align 4, !dbg !5402, !tbaa !820
  %52 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5404, !tbaa !820
  %data21 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %52, i32 0, i32 1, !dbg !5405
  %53 = load i8*, i8** %data21, align 4, !dbg !5405, !tbaa !997
  %cmp22 = icmp uge i8* %51, %53, !dbg !5406
  br i1 %cmp22, label %for.body, label %for.end, !dbg !5407

for.body:                                         ; preds = %for.cond
  %54 = load i8*, i8** %s, align 4, !dbg !5408, !tbaa !820
  %55 = load i8, i8* %54, align 1, !dbg !5411, !tbaa !1828
  %conv24 = zext i8 %55 to i32, !dbg !5411
  %cmp25 = icmp ne i32 %conv24, 46, !dbg !5412
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !5413

if.then27:                                        ; preds = %for.body
  %56 = load i8*, i8** %s, align 4, !dbg !5414, !tbaa !820
  %57 = load i8, i8* %56, align 1, !dbg !5416, !tbaa !1828
  %58 = load i8*, i8** %p, align 4, !dbg !5417, !tbaa !820
  store i8 %57, i8* %58, align 1, !dbg !5418, !tbaa !1828
  %59 = load i32, i32* %len, align 4, !dbg !5419, !tbaa !827
  %inc = add i32 %59, 1, !dbg !5419
  store i32 %inc, i32* %len, align 4, !dbg !5419, !tbaa !827
  br label %if.end35, !dbg !5420

if.else:                                          ; preds = %for.body
  %60 = load i32, i32* %len, align 4, !dbg !5421, !tbaa !827
  %cmp28 = icmp eq i32 %60, 0, !dbg !5424
  br i1 %cmp28, label %if.then32, label %lor.lhs.false, !dbg !5425

lor.lhs.false:                                    ; preds = %if.else
  %61 = load i32, i32* %len, align 4, !dbg !5426, !tbaa !827
  %cmp30 = icmp ugt i32 %61, 255, !dbg !5427
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5428

if.then32:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -5, i32* %retval, align 4, !dbg !5429
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5429

if.end33:                                         ; preds = %lor.lhs.false
  %62 = load i32, i32* %len, align 4, !dbg !5431, !tbaa !827
  %conv34 = trunc i32 %62 to i8, !dbg !5432
  %63 = load i8*, i8** %p, align 4, !dbg !5433, !tbaa !820
  store i8 %conv34, i8* %63, align 1, !dbg !5434, !tbaa !1828
  store i32 0, i32* %len, align 4, !dbg !5435, !tbaa !827
  br label %if.end35

if.end35:                                         ; preds = %if.end33, %if.then27
  %64 = load i8*, i8** %p, align 4, !dbg !5436, !tbaa !820
  %incdec.ptr36 = getelementptr inbounds i8, i8* %64, i32 -1, !dbg !5436
  store i8* %incdec.ptr36, i8** %p, align 4, !dbg !5436, !tbaa !820
  br label %for.inc, !dbg !5437

for.inc:                                          ; preds = %if.end35
  %65 = load i8*, i8** %s, align 4, !dbg !5438, !tbaa !820
  %incdec.ptr37 = getelementptr inbounds i8, i8* %65, i32 -1, !dbg !5438
  store i8* %incdec.ptr37, i8** %s, align 4, !dbg !5438, !tbaa !820
  br label %for.cond, !dbg !5439, !llvm.loop !5440

for.end:                                          ; preds = %for.cond
  %66 = load i32, i32* %len, align 4, !dbg !5442, !tbaa !827
  %cmp38 = icmp eq i32 %66, 0, !dbg !5444
  br i1 %cmp38, label %if.then43, label %lor.lhs.false40, !dbg !5445

lor.lhs.false40:                                  ; preds = %for.end
  %67 = load i32, i32* %len, align 4, !dbg !5446, !tbaa !827
  %cmp41 = icmp ugt i32 %67, 255, !dbg !5447
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5448

if.then43:                                        ; preds = %lor.lhs.false40, %for.end
  store i32 -5, i32* %retval, align 4, !dbg !5449
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5449

if.end44:                                         ; preds = %lor.lhs.false40
  %68 = load i32, i32* %len, align 4, !dbg !5451, !tbaa !827
  %conv45 = trunc i32 %68 to i8, !dbg !5452
  %69 = load i8*, i8** %p, align 4, !dbg !5453, !tbaa !820
  store i8 %conv45, i8* %69, align 1, !dbg !5454, !tbaa !1828
  store i32 0, i32* %retval, align 4, !dbg !5455
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5455

cleanup:                                          ; preds = %if.end44, %if.then43, %if.then32, %if.then16, %if.then
  %70 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %70) #5, !dbg !5456
  %71 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %71) #5, !dbg !5456
  %72 = bitcast i32* %ident to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !5456
  %73 = bitcast i32* %nlen to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !5456
  %74 = bitcast i32* %len to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %74) #5, !dbg !5456
  %75 = bitcast i8** %s to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %75) #5, !dbg !5456
  %76 = bitcast i8** %p to i8*, !dbg !5456
  call void @llvm.lifetime.end(i64 4, i8* %76) #5, !dbg !5456
  %77 = load i32, i32* %retval, align 4, !dbg !5456
  ret i32 %77, !dbg !5456
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_create_name_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_node_t* %rn, %struct.ngx_str_t* %name) #0 !dbg !5457 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rn.addr = alloca %struct.ngx_resolver_node_t*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %p = alloca i8*, align 4
  %s = alloca i8*, align 4
  %len = alloca i32, align 4
  %nlen = alloca i32, align 4
  %ident = alloca i32, align 4
  %qs = alloca %struct.ngx_resolver_qs_t*, align 4
  %query = alloca %struct.ngx_resolver_hdr_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !5459, metadata !824), !dbg !5469
  store %struct.ngx_resolver_node_t* %rn, %struct.ngx_resolver_node_t** %rn.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn.addr, metadata !5460, metadata !824), !dbg !5470
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !5461, metadata !824), !dbg !5471
  %0 = bitcast i8** %p to i8*, !dbg !5472
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !5472
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5462, metadata !824), !dbg !5473
  %1 = bitcast i8** %s to i8*, !dbg !5472
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !5472
  call void @llvm.dbg.declare(metadata i8** %s, metadata !5463, metadata !824), !dbg !5474
  %2 = bitcast i32* %len to i8*, !dbg !5475
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !5475
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5464, metadata !824), !dbg !5476
  %3 = bitcast i32* %nlen to i8*, !dbg !5475
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !5475
  call void @llvm.dbg.declare(metadata i32* %nlen, metadata !5465, metadata !824), !dbg !5477
  %4 = bitcast i32* %ident to i8*, !dbg !5478
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %ident, metadata !5466, metadata !824), !dbg !5479
  %5 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !5480
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !5480
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_qs_t** %qs, metadata !5467, metadata !824), !dbg !5481
  %6 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !5482
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !5482
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_hdr_t** %query, metadata !5468, metadata !824), !dbg !5483
  %7 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5484, !tbaa !820
  %len1 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %7, i32 0, i32 0, !dbg !5485
  %8 = load i32, i32* %len1, align 4, !dbg !5485, !tbaa !1005
  %tobool = icmp ne i32 %8, 0, !dbg !5484
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5484

cond.true:                                        ; preds = %entry
  %9 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5486, !tbaa !820
  %len2 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %9, i32 0, i32 0, !dbg !5487
  %10 = load i32, i32* %len2, align 4, !dbg !5487, !tbaa !1005
  %add = add i32 1, %10, !dbg !5488
  %add3 = add i32 %add, 1, !dbg !5489
  br label %cond.end, !dbg !5484

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add3, %cond.true ], [ 1, %cond.false ], !dbg !5484
  store i32 %cond, i32* %nlen, align 4, !dbg !5490, !tbaa !827
  %11 = load i32, i32* %nlen, align 4, !dbg !5491, !tbaa !827
  %add4 = add i32 12, %11, !dbg !5492
  %add5 = add i32 %add4, 4, !dbg !5493
  store i32 %add5, i32* %len, align 4, !dbg !5494, !tbaa !827
  %12 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5495, !tbaa !820
  %13 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5496, !tbaa !820
  %ipv6 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %13, i32 0, i32 18, !dbg !5497
  %14 = load i32, i32* %ipv6, align 4, !dbg !5497, !tbaa !914
  %tobool6 = icmp ne i32 %14, 0, !dbg !5496
  br i1 %tobool6, label %cond.true7, label %cond.false8, !dbg !5496

cond.true7:                                       ; preds = %cond.end
  %15 = load i32, i32* %len, align 4, !dbg !5498, !tbaa !827
  %mul = mul i32 %15, 2, !dbg !5499
  br label %cond.end9, !dbg !5496

cond.false8:                                      ; preds = %cond.end
  %16 = load i32, i32* %len, align 4, !dbg !5500, !tbaa !827
  br label %cond.end9, !dbg !5496

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ %mul, %cond.true7 ], [ %16, %cond.false8 ], !dbg !5496
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %12, i32 %cond10), !dbg !5501
  store i8* %call, i8** %p, align 4, !dbg !5502, !tbaa !820
  %17 = load i8*, i8** %p, align 4, !dbg !5503, !tbaa !820
  %cmp = icmp eq i8* %17, null, !dbg !5505
  br i1 %cmp, label %if.then, label %if.end, !dbg !5506

if.then:                                          ; preds = %cond.end9
  store i32 -1, i32* %retval, align 4, !dbg !5507
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5507

if.end:                                           ; preds = %cond.end9
  %18 = load i32, i32* %len, align 4, !dbg !5509, !tbaa !827
  %conv = trunc i32 %18 to i16, !dbg !5510
  %19 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5511, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %19, i32 0, i32 5, !dbg !5512
  store i16 %conv, i16* %qlen, align 2, !dbg !5513, !tbaa !4103
  %20 = load i8*, i8** %p, align 4, !dbg !5514, !tbaa !820
  %21 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5515, !tbaa !820
  %query11 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %21, i32 0, i32 6, !dbg !5516
  store i8* %20, i8** %query11, align 4, !dbg !5517, !tbaa !2440
  %22 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5518, !tbaa !820
  %ipv612 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %22, i32 0, i32 18, !dbg !5520
  %23 = load i32, i32* %ipv612, align 4, !dbg !5520, !tbaa !914
  %tobool13 = icmp ne i32 %23, 0, !dbg !5518
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5521

if.then14:                                        ; preds = %if.end
  %24 = load i8*, i8** %p, align 4, !dbg !5522, !tbaa !820
  %25 = load i32, i32* %len, align 4, !dbg !5524, !tbaa !827
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 %25, !dbg !5525
  %26 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5526, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %26, i32 0, i32 7, !dbg !5527
  store i8* %add.ptr, i8** %query6, align 4, !dbg !5528, !tbaa !2453
  br label %if.end15, !dbg !5529

if.end15:                                         ; preds = %if.then14, %if.end
  %27 = load i8*, i8** %p, align 4, !dbg !5530, !tbaa !820
  %28 = bitcast i8* %27 to %struct.ngx_resolver_hdr_t*, !dbg !5531
  store %struct.ngx_resolver_hdr_t* %28, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5532, !tbaa !820
  %call16 = call i32 @random(), !dbg !5533
  store i32 %call16, i32* %ident, align 4, !dbg !5534, !tbaa !827
  %29 = load i32, i32* %ident, align 4, !dbg !5535, !tbaa !827
  %shr = lshr i32 %29, 8, !dbg !5536
  %and = and i32 %shr, 255, !dbg !5537
  %conv17 = trunc i32 %and to i8, !dbg !5538
  %30 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5539, !tbaa !820
  %ident_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %30, i32 0, i32 0, !dbg !5540
  store i8 %conv17, i8* %ident_hi, align 1, !dbg !5541, !tbaa !3964
  %31 = load i32, i32* %ident, align 4, !dbg !5542, !tbaa !827
  %and18 = and i32 %31, 255, !dbg !5543
  %conv19 = trunc i32 %and18 to i8, !dbg !5544
  %32 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5545, !tbaa !820
  %ident_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %32, i32 0, i32 1, !dbg !5546
  store i8 %conv19, i8* %ident_lo, align 1, !dbg !5547, !tbaa !3972
  %33 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5548, !tbaa !820
  %flags_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %33, i32 0, i32 2, !dbg !5549
  store i8 1, i8* %flags_hi, align 1, !dbg !5550, !tbaa !3976
  %34 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5551, !tbaa !820
  %flags_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %34, i32 0, i32 3, !dbg !5552
  store i8 0, i8* %flags_lo, align 1, !dbg !5553, !tbaa !3980
  %35 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5554, !tbaa !820
  %nqs_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %35, i32 0, i32 4, !dbg !5555
  store i8 0, i8* %nqs_hi, align 1, !dbg !5556, !tbaa !3984
  %36 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5557, !tbaa !820
  %nqs_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %36, i32 0, i32 5, !dbg !5558
  store i8 1, i8* %nqs_lo, align 1, !dbg !5559, !tbaa !3988
  %37 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5560, !tbaa !820
  %nan_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %37, i32 0, i32 6, !dbg !5561
  store i8 0, i8* %nan_hi, align 1, !dbg !5562, !tbaa !3992
  %38 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5563, !tbaa !820
  %nan_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %38, i32 0, i32 7, !dbg !5564
  store i8 0, i8* %nan_lo, align 1, !dbg !5565, !tbaa !3996
  %39 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5566, !tbaa !820
  %nns_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %39, i32 0, i32 8, !dbg !5567
  store i8 0, i8* %nns_hi, align 1, !dbg !5568, !tbaa !4000
  %40 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5569, !tbaa !820
  %nns_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %40, i32 0, i32 9, !dbg !5570
  store i8 0, i8* %nns_lo, align 1, !dbg !5571, !tbaa !4004
  %41 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5572, !tbaa !820
  %nar_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %41, i32 0, i32 10, !dbg !5573
  store i8 0, i8* %nar_hi, align 1, !dbg !5574, !tbaa !4008
  %42 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5575, !tbaa !820
  %nar_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %42, i32 0, i32 11, !dbg !5576
  store i8 0, i8* %nar_lo, align 1, !dbg !5577, !tbaa !4012
  %43 = load i32, i32* %nlen, align 4, !dbg !5578, !tbaa !827
  %add20 = add i32 12, %43, !dbg !5579
  %44 = load i8*, i8** %p, align 4, !dbg !5580, !tbaa !820
  %add.ptr21 = getelementptr inbounds i8, i8* %44, i32 %add20, !dbg !5580
  store i8* %add.ptr21, i8** %p, align 4, !dbg !5580, !tbaa !820
  %45 = load i8*, i8** %p, align 4, !dbg !5581, !tbaa !820
  %46 = bitcast i8* %45 to %struct.ngx_resolver_qs_t*, !dbg !5582
  store %struct.ngx_resolver_qs_t* %46, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5583, !tbaa !820
  %47 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5584, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %47, i32 0, i32 0, !dbg !5585
  store i8 0, i8* %type_hi, align 1, !dbg !5586, !tbaa !5368
  %48 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5587, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %48, i32 0, i32 1, !dbg !5588
  store i8 1, i8* %type_lo, align 1, !dbg !5589, !tbaa !5373
  %49 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5590, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %49, i32 0, i32 2, !dbg !5591
  store i8 0, i8* %class_hi, align 1, !dbg !5592, !tbaa !5377
  %50 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5593, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %50, i32 0, i32 3, !dbg !5594
  store i8 1, i8* %class_lo, align 1, !dbg !5595, !tbaa !5381
  store i32 0, i32* %len, align 4, !dbg !5596, !tbaa !827
  %51 = load i8*, i8** %p, align 4, !dbg !5597, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %51, i32 -1, !dbg !5597
  store i8* %incdec.ptr, i8** %p, align 4, !dbg !5597, !tbaa !820
  %52 = load i8*, i8** %p, align 4, !dbg !5598, !tbaa !820
  %incdec.ptr22 = getelementptr inbounds i8, i8* %52, i32 -1, !dbg !5598
  store i8* %incdec.ptr22, i8** %p, align 4, !dbg !5598, !tbaa !820
  store i8 0, i8* %52, align 1, !dbg !5599, !tbaa !1828
  %53 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5600, !tbaa !820
  %len23 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %53, i32 0, i32 0, !dbg !5602
  %54 = load i32, i32* %len23, align 4, !dbg !5602, !tbaa !1005
  %cmp24 = icmp eq i32 %54, 0, !dbg !5603
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !5604

if.then26:                                        ; preds = %if.end15
  store i32 -5, i32* %retval, align 4, !dbg !5605
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5605

if.end27:                                         ; preds = %if.end15
  %55 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5607, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %55, i32 0, i32 1, !dbg !5609
  %56 = load i8*, i8** %data, align 4, !dbg !5609, !tbaa !997
  %57 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5610, !tbaa !820
  %len28 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %57, i32 0, i32 0, !dbg !5611
  %58 = load i32, i32* %len28, align 4, !dbg !5611, !tbaa !1005
  %add.ptr29 = getelementptr inbounds i8, i8* %56, i32 %58, !dbg !5612
  %add.ptr30 = getelementptr inbounds i8, i8* %add.ptr29, i32 -1, !dbg !5613
  store i8* %add.ptr30, i8** %s, align 4, !dbg !5614, !tbaa !820
  br label %for.cond, !dbg !5615

for.cond:                                         ; preds = %for.inc, %if.end27
  %59 = load i8*, i8** %s, align 4, !dbg !5616, !tbaa !820
  %60 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !5618, !tbaa !820
  %data31 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %60, i32 0, i32 1, !dbg !5619
  %61 = load i8*, i8** %data31, align 4, !dbg !5619, !tbaa !997
  %cmp32 = icmp uge i8* %59, %61, !dbg !5620
  br i1 %cmp32, label %for.body, label %for.end, !dbg !5621

for.body:                                         ; preds = %for.cond
  %62 = load i8*, i8** %s, align 4, !dbg !5622, !tbaa !820
  %63 = load i8, i8* %62, align 1, !dbg !5625, !tbaa !1828
  %conv34 = zext i8 %63 to i32, !dbg !5625
  %cmp35 = icmp ne i32 %conv34, 46, !dbg !5626
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !5627

if.then37:                                        ; preds = %for.body
  %64 = load i8*, i8** %s, align 4, !dbg !5628, !tbaa !820
  %65 = load i8, i8* %64, align 1, !dbg !5630, !tbaa !1828
  %66 = load i8*, i8** %p, align 4, !dbg !5631, !tbaa !820
  store i8 %65, i8* %66, align 1, !dbg !5632, !tbaa !1828
  %67 = load i32, i32* %len, align 4, !dbg !5633, !tbaa !827
  %inc = add i32 %67, 1, !dbg !5633
  store i32 %inc, i32* %len, align 4, !dbg !5633, !tbaa !827
  br label %if.end45, !dbg !5634

if.else:                                          ; preds = %for.body
  %68 = load i32, i32* %len, align 4, !dbg !5635, !tbaa !827
  %cmp38 = icmp eq i32 %68, 0, !dbg !5638
  br i1 %cmp38, label %if.then42, label %lor.lhs.false, !dbg !5639

lor.lhs.false:                                    ; preds = %if.else
  %69 = load i32, i32* %len, align 4, !dbg !5640, !tbaa !827
  %cmp40 = icmp ugt i32 %69, 255, !dbg !5641
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !5642

if.then42:                                        ; preds = %lor.lhs.false, %if.else
  store i32 -5, i32* %retval, align 4, !dbg !5643
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5643

if.end43:                                         ; preds = %lor.lhs.false
  %70 = load i32, i32* %len, align 4, !dbg !5645, !tbaa !827
  %conv44 = trunc i32 %70 to i8, !dbg !5646
  %71 = load i8*, i8** %p, align 4, !dbg !5647, !tbaa !820
  store i8 %conv44, i8* %71, align 1, !dbg !5648, !tbaa !1828
  store i32 0, i32* %len, align 4, !dbg !5649, !tbaa !827
  br label %if.end45

if.end45:                                         ; preds = %if.end43, %if.then37
  %72 = load i8*, i8** %p, align 4, !dbg !5650, !tbaa !820
  %incdec.ptr46 = getelementptr inbounds i8, i8* %72, i32 -1, !dbg !5650
  store i8* %incdec.ptr46, i8** %p, align 4, !dbg !5650, !tbaa !820
  br label %for.inc, !dbg !5651

for.inc:                                          ; preds = %if.end45
  %73 = load i8*, i8** %s, align 4, !dbg !5652, !tbaa !820
  %incdec.ptr47 = getelementptr inbounds i8, i8* %73, i32 -1, !dbg !5652
  store i8* %incdec.ptr47, i8** %s, align 4, !dbg !5652, !tbaa !820
  br label %for.cond, !dbg !5653, !llvm.loop !5654

for.end:                                          ; preds = %for.cond
  %74 = load i32, i32* %len, align 4, !dbg !5656, !tbaa !827
  %cmp48 = icmp eq i32 %74, 0, !dbg !5658
  br i1 %cmp48, label %if.then53, label %lor.lhs.false50, !dbg !5659

lor.lhs.false50:                                  ; preds = %for.end
  %75 = load i32, i32* %len, align 4, !dbg !5660, !tbaa !827
  %cmp51 = icmp ugt i32 %75, 255, !dbg !5661
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !5662

if.then53:                                        ; preds = %lor.lhs.false50, %for.end
  store i32 -5, i32* %retval, align 4, !dbg !5663
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5663

if.end54:                                         ; preds = %lor.lhs.false50
  %76 = load i32, i32* %len, align 4, !dbg !5665, !tbaa !827
  %conv55 = trunc i32 %76 to i8, !dbg !5666
  %77 = load i8*, i8** %p, align 4, !dbg !5667, !tbaa !820
  store i8 %conv55, i8* %77, align 1, !dbg !5668, !tbaa !1828
  %78 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5669, !tbaa !820
  %ipv656 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %78, i32 0, i32 18, !dbg !5671
  %79 = load i32, i32* %ipv656, align 4, !dbg !5671, !tbaa !914
  %tobool57 = icmp ne i32 %79, 0, !dbg !5669
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !5672

if.then58:                                        ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !5673
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5673

if.end59:                                         ; preds = %if.end54
  %80 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5675, !tbaa !820
  %query660 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %80, i32 0, i32 7, !dbg !5676
  %81 = load i8*, i8** %query660, align 4, !dbg !5676, !tbaa !2453
  store i8* %81, i8** %p, align 4, !dbg !5677, !tbaa !820
  %82 = load i8*, i8** %p, align 4, !dbg !5678, !tbaa !820
  %83 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5678, !tbaa !820
  %query61 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %83, i32 0, i32 6, !dbg !5678
  %84 = load i8*, i8** %query61, align 4, !dbg !5678, !tbaa !2440
  %85 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn.addr, align 4, !dbg !5678, !tbaa !820
  %qlen62 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %85, i32 0, i32 5, !dbg !5678
  %86 = load i16, i16* %qlen62, align 2, !dbg !5678, !tbaa !4103
  %conv63 = zext i16 %86 to i32, !dbg !5678
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %82, i8* %84, i32 %conv63, i32 1, i1 false), !dbg !5678
  %87 = load i8*, i8** %p, align 4, !dbg !5679, !tbaa !820
  %88 = bitcast i8* %87 to %struct.ngx_resolver_hdr_t*, !dbg !5680
  store %struct.ngx_resolver_hdr_t* %88, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5681, !tbaa !820
  %call64 = call i32 @random(), !dbg !5682
  store i32 %call64, i32* %ident, align 4, !dbg !5683, !tbaa !827
  %89 = load i32, i32* %ident, align 4, !dbg !5684, !tbaa !827
  %shr65 = lshr i32 %89, 8, !dbg !5685
  %and66 = and i32 %shr65, 255, !dbg !5686
  %conv67 = trunc i32 %and66 to i8, !dbg !5687
  %90 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5688, !tbaa !820
  %ident_hi68 = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %90, i32 0, i32 0, !dbg !5689
  store i8 %conv67, i8* %ident_hi68, align 1, !dbg !5690, !tbaa !3964
  %91 = load i32, i32* %ident, align 4, !dbg !5691, !tbaa !827
  %and69 = and i32 %91, 255, !dbg !5692
  %conv70 = trunc i32 %and69 to i8, !dbg !5693
  %92 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %query, align 4, !dbg !5694, !tbaa !820
  %ident_lo71 = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %92, i32 0, i32 1, !dbg !5695
  store i8 %conv70, i8* %ident_lo71, align 1, !dbg !5696, !tbaa !3972
  %93 = load i32, i32* %nlen, align 4, !dbg !5697, !tbaa !827
  %add72 = add i32 12, %93, !dbg !5698
  %94 = load i8*, i8** %p, align 4, !dbg !5699, !tbaa !820
  %add.ptr73 = getelementptr inbounds i8, i8* %94, i32 %add72, !dbg !5699
  store i8* %add.ptr73, i8** %p, align 4, !dbg !5699, !tbaa !820
  %95 = load i8*, i8** %p, align 4, !dbg !5700, !tbaa !820
  %96 = bitcast i8* %95 to %struct.ngx_resolver_qs_t*, !dbg !5701
  store %struct.ngx_resolver_qs_t* %96, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5702, !tbaa !820
  %97 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !5703, !tbaa !820
  %type_lo74 = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %97, i32 0, i32 1, !dbg !5704
  store i8 28, i8* %type_lo74, align 1, !dbg !5705, !tbaa !5373
  store i32 0, i32* %retval, align 4, !dbg !5706
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5706

cleanup:                                          ; preds = %if.end59, %if.then58, %if.then53, %if.then42, %if.then26, %if.then
  %98 = bitcast %struct.ngx_resolver_hdr_t** %query to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %98) #5, !dbg !5707
  %99 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %99) #5, !dbg !5707
  %100 = bitcast i32* %ident to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %100) #5, !dbg !5707
  %101 = bitcast i32* %nlen to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %101) #5, !dbg !5707
  %102 = bitcast i32* %len to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %102) #5, !dbg !5707
  %103 = bitcast i8** %s to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %103) #5, !dbg !5707
  %104 = bitcast i8** %p to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %104) #5, !dbg !5707
  %105 = load i32, i32* %retval, align 4, !dbg !5707
  ret i32 %105, !dbg !5707
}

declare i32 @ngx_memn2cmp(i8*, i8*, i32, i32) #3

declare i32 @random() #3

; Function Attrs: nounwind
define internal void @ngx_resolver_srv_names_handler(%struct.ngx_resolver_ctx_s* %cctx) #0 !dbg !5708 {
entry:
  %cctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %i = alloca i32, align 4
  %addrs = alloca %struct.ngx_addr_t*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %sockaddr = alloca %union.ngx_sockaddr_t*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %srv = alloca %struct.ngx_resolver_srv_name_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_ctx_s* %cctx, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %cctx.addr, metadata !5710, metadata !824), !dbg !5717
  %0 = bitcast i32* %i to i8*, !dbg !5718
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !5718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5711, metadata !824), !dbg !5719
  %1 = bitcast %struct.ngx_addr_t** %addrs to i8*, !dbg !5720
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !5720
  call void @llvm.dbg.declare(metadata %struct.ngx_addr_t** %addrs, metadata !5712, metadata !824), !dbg !5721
  %2 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !5722
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !5722
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !5713, metadata !824), !dbg !5723
  %3 = bitcast %union.ngx_sockaddr_t** %sockaddr to i8*, !dbg !5724
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !5724
  call void @llvm.dbg.declare(metadata %union.ngx_sockaddr_t** %sockaddr, metadata !5714, metadata !824), !dbg !5725
  %4 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !5726
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !5715, metadata !824), !dbg !5727
  %5 = bitcast %struct.ngx_resolver_srv_name_t** %srv to i8*, !dbg !5728
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !5728
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_name_t** %srv, metadata !5716, metadata !824), !dbg !5729
  %6 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5730, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %6, i32 0, i32 1, !dbg !5731
  %7 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !5731, !tbaa !1699
  store %struct.ngx_resolver_s* %7, %struct.ngx_resolver_s** %r, align 4, !dbg !5732, !tbaa !820
  %8 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5733, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %8, i32 0, i32 16, !dbg !5734
  %9 = load i8*, i8** %data, align 4, !dbg !5734, !tbaa !5170
  %10 = bitcast i8* %9 to %struct.ngx_resolver_ctx_s*, !dbg !5733
  store %struct.ngx_resolver_ctx_s* %10, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5735, !tbaa !820
  %11 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5736, !tbaa !820
  %srvs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %11, i32 0, i32 14, !dbg !5737
  %12 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5737, !tbaa !2899
  store %struct.ngx_resolver_srv_name_t* %12, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5738, !tbaa !820
  %13 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5739, !tbaa !820
  %count = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %13, i32 0, i32 12, !dbg !5740
  %14 = load i32, i32* %count, align 4, !dbg !5741, !tbaa !5067
  %dec = add i32 %14, -1, !dbg !5741
  store i32 %dec, i32* %count, align 4, !dbg !5741, !tbaa !5067
  %15 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5742, !tbaa !820
  %ctx1 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %15, i32 0, i32 4, !dbg !5743
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %ctx1, align 4, !dbg !5744, !tbaa !2902
  %16 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5745, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %16, i32 0, i32 4, !dbg !5746
  %17 = load i32, i32* %state, align 4, !dbg !5746, !tbaa !1703
  %18 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5747, !tbaa !820
  %state2 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %18, i32 0, i32 5, !dbg !5748
  store i32 %17, i32* %state2, align 4, !dbg !5749, !tbaa !5750
  %19 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5751, !tbaa !820
  %naddrs = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %19, i32 0, i32 8, !dbg !5753
  %20 = load i32, i32* %naddrs, align 4, !dbg !5753, !tbaa !1707
  %tobool = icmp ne i32 %20, 0, !dbg !5751
  br i1 %tobool, label %if.then, label %if.end57, !dbg !5754

if.then:                                          ; preds = %entry
  %21 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5755, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %21, i32 0, i32 7, !dbg !5755
  %22 = load i32, i32* %valid, align 4, !dbg !5755, !tbaa !2201
  %23 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5755, !tbaa !820
  %valid3 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %23, i32 0, i32 7, !dbg !5755
  %24 = load i32, i32* %valid3, align 4, !dbg !5755, !tbaa !2201
  %cmp = icmp sgt i32 %22, %24, !dbg !5755
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5755

cond.true:                                        ; preds = %if.then
  %25 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5755, !tbaa !820
  %valid4 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %25, i32 0, i32 7, !dbg !5755
  %26 = load i32, i32* %valid4, align 4, !dbg !5755, !tbaa !2201
  br label %cond.end, !dbg !5755

cond.false:                                       ; preds = %if.then
  %27 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5755, !tbaa !820
  %valid5 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %27, i32 0, i32 7, !dbg !5755
  %28 = load i32, i32* %valid5, align 4, !dbg !5755, !tbaa !2201
  br label %cond.end, !dbg !5755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %28, %cond.false ], !dbg !5755
  %29 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5757, !tbaa !820
  %valid6 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %29, i32 0, i32 7, !dbg !5758
  store i32 %cond, i32* %valid6, align 4, !dbg !5759, !tbaa !2201
  %30 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5760, !tbaa !820
  %31 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5761, !tbaa !820
  %naddrs7 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %31, i32 0, i32 8, !dbg !5762
  %32 = load i32, i32* %naddrs7, align 4, !dbg !5762, !tbaa !1707
  %mul = mul i32 %32, 16, !dbg !5763
  %call = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %30, i32 %mul), !dbg !5764
  %33 = bitcast i8* %call to %struct.ngx_addr_t*, !dbg !5764
  store %struct.ngx_addr_t* %33, %struct.ngx_addr_t** %addrs, align 4, !dbg !5765, !tbaa !820
  %34 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5766, !tbaa !820
  %cmp8 = icmp eq %struct.ngx_addr_t* %34, null, !dbg !5768
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !5769

if.then9:                                         ; preds = %cond.end
  %35 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5770, !tbaa !820
  call void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %35), !dbg !5772
  %36 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5773, !tbaa !820
  %state10 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %36, i32 0, i32 4, !dbg !5774
  store i32 -1, i32* %state10, align 4, !dbg !5775, !tbaa !1703
  %37 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !5776, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %37, i32 0, i32 0, !dbg !5776
  %38 = load volatile i32, i32* %sec, align 4, !dbg !5776, !tbaa !2123
  %39 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5777, !tbaa !820
  %valid11 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %39, i32 0, i32 26, !dbg !5778
  %40 = load i32, i32* %valid11, align 4, !dbg !5778, !tbaa !958
  %tobool12 = icmp ne i32 %40, 0, !dbg !5777
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !5777

cond.true13:                                      ; preds = %if.then9
  %41 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5779, !tbaa !820
  %valid14 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %41, i32 0, i32 26, !dbg !5780
  %42 = load i32, i32* %valid14, align 4, !dbg !5780, !tbaa !958
  br label %cond.end16, !dbg !5777

cond.false15:                                     ; preds = %if.then9
  br label %cond.end16, !dbg !5777

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi i32 [ %42, %cond.true13 ], [ 10, %cond.false15 ], !dbg !5777
  %add = add nsw i32 %38, %cond17, !dbg !5781
  %43 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5782, !tbaa !820
  %valid18 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %43, i32 0, i32 7, !dbg !5783
  store i32 %add, i32* %valid18, align 4, !dbg !5784, !tbaa !2201
  %44 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5785, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %44, i32 0, i32 15, !dbg !5786
  %45 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !5786, !tbaa !1844
  %46 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5787, !tbaa !820
  call void %45(%struct.ngx_resolver_ctx_s* %46), !dbg !5785
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5788

if.end:                                           ; preds = %cond.end
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5789, !tbaa !820
  %48 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5790, !tbaa !820
  %naddrs19 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %48, i32 0, i32 8, !dbg !5791
  %49 = load i32, i32* %naddrs19, align 4, !dbg !5791, !tbaa !1707
  %mul20 = mul i32 %49, 112, !dbg !5792
  %call21 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %47, i32 %mul20), !dbg !5793
  %50 = bitcast i8* %call21 to %union.ngx_sockaddr_t*, !dbg !5793
  store %union.ngx_sockaddr_t* %50, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !5794, !tbaa !820
  %51 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !5795, !tbaa !820
  %cmp22 = icmp eq %union.ngx_sockaddr_t* %51, null, !dbg !5797
  br i1 %cmp22, label %if.then23, label %if.end36, !dbg !5798

if.then23:                                        ; preds = %if.end
  %52 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5799, !tbaa !820
  %53 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5801, !tbaa !820
  %54 = bitcast %struct.ngx_addr_t* %53 to i8*, !dbg !5801
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %52, i8* %54), !dbg !5802
  %55 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5803, !tbaa !820
  call void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %55), !dbg !5804
  %56 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5805, !tbaa !820
  %state24 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %56, i32 0, i32 4, !dbg !5806
  store i32 -1, i32* %state24, align 4, !dbg !5807, !tbaa !1703
  %57 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !5808, !tbaa !820
  %sec25 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %57, i32 0, i32 0, !dbg !5808
  %58 = load volatile i32, i32* %sec25, align 4, !dbg !5808, !tbaa !2123
  %59 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5809, !tbaa !820
  %valid26 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %59, i32 0, i32 26, !dbg !5810
  %60 = load i32, i32* %valid26, align 4, !dbg !5810, !tbaa !958
  %tobool27 = icmp ne i32 %60, 0, !dbg !5809
  br i1 %tobool27, label %cond.true28, label %cond.false30, !dbg !5809

cond.true28:                                      ; preds = %if.then23
  %61 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5811, !tbaa !820
  %valid29 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %61, i32 0, i32 26, !dbg !5812
  %62 = load i32, i32* %valid29, align 4, !dbg !5812, !tbaa !958
  br label %cond.end31, !dbg !5809

cond.false30:                                     ; preds = %if.then23
  br label %cond.end31, !dbg !5809

cond.end31:                                       ; preds = %cond.false30, %cond.true28
  %cond32 = phi i32 [ %62, %cond.true28 ], [ 10, %cond.false30 ], !dbg !5809
  %add33 = add nsw i32 %58, %cond32, !dbg !5813
  %63 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5814, !tbaa !820
  %valid34 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %63, i32 0, i32 7, !dbg !5815
  store i32 %add33, i32* %valid34, align 4, !dbg !5816, !tbaa !2201
  %64 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5817, !tbaa !820
  %handler35 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %64, i32 0, i32 15, !dbg !5818
  %65 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler35, align 4, !dbg !5818, !tbaa !1844
  %66 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5819, !tbaa !820
  call void %65(%struct.ngx_resolver_ctx_s* %66), !dbg !5817
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5820

if.end36:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !5821, !tbaa !827
  br label %for.cond, !dbg !5823

for.cond:                                         ; preds = %for.inc, %if.end36
  %67 = load i32, i32* %i, align 4, !dbg !5824, !tbaa !827
  %68 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5826, !tbaa !820
  %naddrs37 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %68, i32 0, i32 8, !dbg !5827
  %69 = load i32, i32* %naddrs37, align 4, !dbg !5827, !tbaa !1707
  %cmp38 = icmp ult i32 %67, %69, !dbg !5828
  br i1 %cmp38, label %for.body, label %for.end, !dbg !5829

for.body:                                         ; preds = %for.cond
  %70 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !5830, !tbaa !820
  %71 = load i32, i32* %i, align 4, !dbg !5832, !tbaa !827
  %arrayidx = getelementptr inbounds %union.ngx_sockaddr_t, %union.ngx_sockaddr_t* %70, i32 %71, !dbg !5830
  %sockaddr39 = bitcast %union.ngx_sockaddr_t* %arrayidx to %struct.sockaddr*, !dbg !5833
  %72 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5834, !tbaa !820
  %73 = load i32, i32* %i, align 4, !dbg !5835, !tbaa !827
  %arrayidx40 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %72, i32 %73, !dbg !5834
  %sockaddr41 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx40, i32 0, i32 0, !dbg !5836
  store %struct.sockaddr* %sockaddr39, %struct.sockaddr** %sockaddr41, align 4, !dbg !5837, !tbaa !1117
  %74 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5838, !tbaa !820
  %addrs42 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %74, i32 0, i32 9, !dbg !5839
  %75 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs42, align 4, !dbg !5839, !tbaa !1713
  %76 = load i32, i32* %i, align 4, !dbg !5840, !tbaa !827
  %arrayidx43 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %75, i32 %76, !dbg !5838
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx43, i32 0, i32 1, !dbg !5841
  %77 = load i32, i32* %socklen, align 4, !dbg !5841, !tbaa !4931
  %78 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5842, !tbaa !820
  %79 = load i32, i32* %i, align 4, !dbg !5843, !tbaa !827
  %arrayidx44 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %78, i32 %79, !dbg !5842
  %socklen45 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx44, i32 0, i32 1, !dbg !5844
  store i32 %77, i32* %socklen45, align 4, !dbg !5845, !tbaa !1130
  %80 = load %union.ngx_sockaddr_t*, %union.ngx_sockaddr_t** %sockaddr, align 4, !dbg !5846, !tbaa !820
  %81 = load i32, i32* %i, align 4, !dbg !5846, !tbaa !827
  %arrayidx46 = getelementptr inbounds %union.ngx_sockaddr_t, %union.ngx_sockaddr_t* %80, i32 %81, !dbg !5846
  %82 = bitcast %union.ngx_sockaddr_t* %arrayidx46 to i8*, !dbg !5846
  %83 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5846, !tbaa !820
  %addrs47 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %83, i32 0, i32 9, !dbg !5846
  %84 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs47, align 4, !dbg !5846, !tbaa !1713
  %85 = load i32, i32* %i, align 4, !dbg !5846, !tbaa !827
  %arrayidx48 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %84, i32 %85, !dbg !5846
  %sockaddr49 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx48, i32 0, i32 0, !dbg !5846
  %86 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr49, align 4, !dbg !5846, !tbaa !2264
  %87 = bitcast %struct.sockaddr* %86 to i8*, !dbg !5846
  %88 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5846, !tbaa !820
  %89 = load i32, i32* %i, align 4, !dbg !5846, !tbaa !827
  %arrayidx50 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %88, i32 %89, !dbg !5846
  %socklen51 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx50, i32 0, i32 1, !dbg !5846
  %90 = load i32, i32* %socklen51, align 4, !dbg !5846, !tbaa !1130
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %82, i8* %87, i32 %90, i32 2, i1 false), !dbg !5846
  %91 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5847, !tbaa !820
  %92 = load i32, i32* %i, align 4, !dbg !5848, !tbaa !827
  %arrayidx52 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %91, i32 %92, !dbg !5847
  %sockaddr53 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx52, i32 0, i32 0, !dbg !5849
  %93 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr53, align 4, !dbg !5849, !tbaa !1117
  %94 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5850, !tbaa !820
  %port = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %94, i32 0, i32 3, !dbg !5851
  %95 = load i16, i16* %port, align 4, !dbg !5851, !tbaa !5213
  call void @ngx_inet_set_port(%struct.sockaddr* %93, i16 zeroext %95), !dbg !5852
  br label %for.inc, !dbg !5853

for.inc:                                          ; preds = %for.body
  %96 = load i32, i32* %i, align 4, !dbg !5854, !tbaa !827
  %inc = add i32 %96, 1, !dbg !5854
  store i32 %inc, i32* %i, align 4, !dbg !5854, !tbaa !827
  br label %for.cond, !dbg !5855, !llvm.loop !5856

for.end:                                          ; preds = %for.cond
  %97 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs, align 4, !dbg !5858, !tbaa !820
  %98 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5859, !tbaa !820
  %addrs54 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %98, i32 0, i32 7, !dbg !5860
  store %struct.ngx_addr_t* %97, %struct.ngx_addr_t** %addrs54, align 4, !dbg !5861, !tbaa !2917
  %99 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5862, !tbaa !820
  %naddrs55 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %99, i32 0, i32 8, !dbg !5863
  %100 = load i32, i32* %naddrs55, align 4, !dbg !5863, !tbaa !1707
  %101 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srv, align 4, !dbg !5864, !tbaa !820
  %naddrs56 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %101, i32 0, i32 6, !dbg !5865
  store i32 %100, i32* %naddrs56, align 4, !dbg !5866, !tbaa !5867
  br label %if.end57, !dbg !5868

if.end57:                                         ; preds = %for.end, %entry
  %102 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %cctx.addr, align 4, !dbg !5869, !tbaa !820
  call void @ngx_resolve_name_done(%struct.ngx_resolver_ctx_s* %102), !dbg !5870
  %103 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5871, !tbaa !820
  %count58 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %103, i32 0, i32 12, !dbg !5873
  %104 = load i32, i32* %count58, align 4, !dbg !5873, !tbaa !5067
  %cmp59 = icmp eq i32 %104, 0, !dbg !5874
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !5875

if.then60:                                        ; preds = %if.end57
  %105 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !5876, !tbaa !820
  %106 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !5878, !tbaa !820
  call void @ngx_resolver_report_srv(%struct.ngx_resolver_s* %105, %struct.ngx_resolver_ctx_s* %106), !dbg !5879
  br label %if.end61, !dbg !5880

if.end61:                                         ; preds = %if.then60, %if.end57
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5881
  br label %cleanup, !dbg !5881

cleanup:                                          ; preds = %if.end61, %cond.end31, %cond.end16
  %107 = bitcast %struct.ngx_resolver_srv_name_t** %srv to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %107) #5, !dbg !5881
  %108 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %108) #5, !dbg !5881
  %109 = bitcast %union.ngx_sockaddr_t** %sockaddr to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %109) #5, !dbg !5881
  %110 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %110) #5, !dbg !5881
  %111 = bitcast %struct.ngx_addr_t** %addrs to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %111) #5, !dbg !5881
  %112 = bitcast i32* %i to i8*, !dbg !5881
  call void @llvm.lifetime.end(i64 4, i8* %112) #5, !dbg !5881
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5881

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @ngx_inet_set_port(%struct.sockaddr*, i16 zeroext) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_report_srv(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_ctx_s* %ctx) #0 !dbg !5882 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %ctx.addr = alloca %struct.ngx_resolver_ctx_s*, align 4
  %naddrs = alloca i32, align 4
  %nsrvs = alloca i32, align 4
  %nw = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %w = alloca i32, align 4
  %addrs = alloca %struct.ngx_resolver_addr_t*, align 4
  %srvs = alloca %struct.ngx_resolver_srv_name_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !5886, metadata !824), !dbg !5900
  store %struct.ngx_resolver_ctx_s* %ctx, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx.addr, metadata !5887, metadata !824), !dbg !5901
  %0 = bitcast i32* %naddrs to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %naddrs, metadata !5888, metadata !824), !dbg !5903
  %1 = bitcast i32* %nsrvs to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %nsrvs, metadata !5889, metadata !824), !dbg !5904
  %2 = bitcast i32* %nw to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %nw, metadata !5890, metadata !824), !dbg !5905
  %3 = bitcast i32* %i to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5891, metadata !824), !dbg !5906
  %4 = bitcast i32* %j to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5892, metadata !824), !dbg !5907
  %5 = bitcast i32* %k to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5893, metadata !824), !dbg !5908
  %6 = bitcast i32* %l to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %l, metadata !5894, metadata !824), !dbg !5909
  %7 = bitcast i32* %m to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5895, metadata !824), !dbg !5910
  %8 = bitcast i32* %n to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5896, metadata !824), !dbg !5911
  %9 = bitcast i32* %w to i8*, !dbg !5902
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5897, metadata !824), !dbg !5912
  %10 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !5913
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !5913
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_addr_t** %addrs, metadata !5898, metadata !824), !dbg !5914
  %11 = bitcast %struct.ngx_resolver_srv_name_t** %srvs to i8*, !dbg !5915
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !5915
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_name_t** %srvs, metadata !5899, metadata !824), !dbg !5916
  store i32 0, i32* %naddrs, align 4, !dbg !5917, !tbaa !827
  store i32 0, i32* %i, align 4, !dbg !5918, !tbaa !827
  br label %for.cond, !dbg !5920

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !5921, !tbaa !827
  %13 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5923, !tbaa !820
  %nsrvs1 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %13, i32 0, i32 13, !dbg !5924
  %14 = load i32, i32* %nsrvs1, align 4, !dbg !5924, !tbaa !2883
  %cmp = icmp ult i32 %12, %14, !dbg !5925
  br i1 %cmp, label %for.body, label %for.end, !dbg !5926

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5927, !tbaa !820
  %srvs2 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %15, i32 0, i32 14, !dbg !5929
  %16 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs2, align 4, !dbg !5929, !tbaa !2899
  %17 = load i32, i32* %i, align 4, !dbg !5930, !tbaa !827
  %arrayidx = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %16, i32 %17, !dbg !5927
  %naddrs3 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx, i32 0, i32 6, !dbg !5931
  %18 = load i32, i32* %naddrs3, align 4, !dbg !5931, !tbaa !5867
  %19 = load i32, i32* %naddrs, align 4, !dbg !5932, !tbaa !827
  %add = add i32 %19, %18, !dbg !5932
  store i32 %add, i32* %naddrs, align 4, !dbg !5932, !tbaa !827
  br label %for.inc, !dbg !5933

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !5934, !tbaa !827
  %inc = add i32 %20, 1, !dbg !5934
  store i32 %inc, i32* %i, align 4, !dbg !5934, !tbaa !827
  br label %for.cond, !dbg !5935, !llvm.loop !5936

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %naddrs, align 4, !dbg !5938, !tbaa !827
  %cmp4 = icmp eq i32 %21, 0, !dbg !5940
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5941

if.then:                                          ; preds = %for.end
  %22 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5942, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %22, i32 0, i32 4, !dbg !5944
  store i32 3, i32* %state, align 4, !dbg !5945, !tbaa !1703
  %23 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !5946, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %23, i32 0, i32 0, !dbg !5946
  %24 = load volatile i32, i32* %sec, align 4, !dbg !5946, !tbaa !2123
  %25 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5947, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %25, i32 0, i32 26, !dbg !5948
  %26 = load i32, i32* %valid, align 4, !dbg !5948, !tbaa !958
  %tobool = icmp ne i32 %26, 0, !dbg !5947
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5947

cond.true:                                        ; preds = %if.then
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5949, !tbaa !820
  %valid5 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %27, i32 0, i32 26, !dbg !5950
  %28 = load i32, i32* %valid5, align 4, !dbg !5950, !tbaa !958
  br label %cond.end, !dbg !5947

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5947

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ 10, %cond.false ], !dbg !5947
  %add6 = add nsw i32 %24, %cond, !dbg !5951
  %29 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5952, !tbaa !820
  %valid7 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %29, i32 0, i32 7, !dbg !5953
  store i32 %add6, i32* %valid7, align 4, !dbg !5954, !tbaa !2201
  %30 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5955, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %30, i32 0, i32 15, !dbg !5956
  %31 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !5956, !tbaa !1844
  %32 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5957, !tbaa !820
  call void %31(%struct.ngx_resolver_ctx_s* %32), !dbg !5955
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5958

if.end:                                           ; preds = %for.end
  %33 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5959, !tbaa !820
  %34 = load i32, i32* %naddrs, align 4, !dbg !5960, !tbaa !827
  %mul = mul i32 %34, 20, !dbg !5961
  %call = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %33, i32 %mul), !dbg !5962
  %35 = bitcast i8* %call to %struct.ngx_resolver_addr_t*, !dbg !5962
  store %struct.ngx_resolver_addr_t* %35, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !5963, !tbaa !820
  %36 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !5964, !tbaa !820
  %cmp8 = icmp eq %struct.ngx_resolver_addr_t* %36, null, !dbg !5966
  br i1 %cmp8, label %if.then9, label %if.end22, !dbg !5967

if.then9:                                         ; preds = %if.end
  %37 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5968, !tbaa !820
  %state10 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %37, i32 0, i32 4, !dbg !5970
  store i32 -1, i32* %state10, align 4, !dbg !5971, !tbaa !1703
  %38 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !5972, !tbaa !820
  %sec11 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %38, i32 0, i32 0, !dbg !5972
  %39 = load volatile i32, i32* %sec11, align 4, !dbg !5972, !tbaa !2123
  %40 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5973, !tbaa !820
  %valid12 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %40, i32 0, i32 26, !dbg !5974
  %41 = load i32, i32* %valid12, align 4, !dbg !5974, !tbaa !958
  %tobool13 = icmp ne i32 %41, 0, !dbg !5973
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !5973

cond.true14:                                      ; preds = %if.then9
  %42 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !5975, !tbaa !820
  %valid15 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %42, i32 0, i32 26, !dbg !5976
  %43 = load i32, i32* %valid15, align 4, !dbg !5976, !tbaa !958
  br label %cond.end17, !dbg !5973

cond.false16:                                     ; preds = %if.then9
  br label %cond.end17, !dbg !5973

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi i32 [ %43, %cond.true14 ], [ 10, %cond.false16 ], !dbg !5973
  %add19 = add nsw i32 %39, %cond18, !dbg !5977
  %44 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5978, !tbaa !820
  %valid20 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %44, i32 0, i32 7, !dbg !5979
  store i32 %add19, i32* %valid20, align 4, !dbg !5980, !tbaa !2201
  %45 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5981, !tbaa !820
  %handler21 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %45, i32 0, i32 15, !dbg !5982
  %46 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler21, align 4, !dbg !5982, !tbaa !1844
  %47 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5983, !tbaa !820
  call void %46(%struct.ngx_resolver_ctx_s* %47), !dbg !5981
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5984

if.end22:                                         ; preds = %if.end
  %48 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5985, !tbaa !820
  %srvs23 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %48, i32 0, i32 14, !dbg !5986
  %49 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs23, align 4, !dbg !5986, !tbaa !2899
  store %struct.ngx_resolver_srv_name_t* %49, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !5987, !tbaa !820
  %50 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !5988, !tbaa !820
  %nsrvs24 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %50, i32 0, i32 13, !dbg !5989
  %51 = load i32, i32* %nsrvs24, align 4, !dbg !5989, !tbaa !2883
  store i32 %51, i32* %nsrvs, align 4, !dbg !5990, !tbaa !827
  store i32 0, i32* %i, align 4, !dbg !5991, !tbaa !827
  store i32 0, i32* %n, align 4, !dbg !5992, !tbaa !827
  br label %do.body, !dbg !5993, !llvm.loop !5994

do.body:                                          ; preds = %do.cond, %if.end22
  store i32 0, i32* %nw, align 4, !dbg !5996, !tbaa !827
  %52 = load i32, i32* %i, align 4, !dbg !5998, !tbaa !827
  store i32 %52, i32* %j, align 4, !dbg !6000, !tbaa !827
  br label %for.cond25, !dbg !6001

for.cond25:                                       ; preds = %for.inc42, %do.body
  %53 = load i32, i32* %j, align 4, !dbg !6002, !tbaa !827
  %54 = load i32, i32* %nsrvs, align 4, !dbg !6004, !tbaa !827
  %cmp26 = icmp ult i32 %53, %54, !dbg !6005
  br i1 %cmp26, label %for.body27, label %for.end44, !dbg !6006

for.body27:                                       ; preds = %for.cond25
  %55 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6007, !tbaa !820
  %56 = load i32, i32* %j, align 4, !dbg !6010, !tbaa !827
  %arrayidx28 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %55, i32 %56, !dbg !6007
  %priority = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx28, i32 0, i32 1, !dbg !6011
  %57 = load i16, i16* %priority, align 4, !dbg !6011, !tbaa !5191
  %conv = zext i16 %57 to i32, !dbg !6007
  %58 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6012, !tbaa !820
  %59 = load i32, i32* %i, align 4, !dbg !6013, !tbaa !827
  %arrayidx29 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %58, i32 %59, !dbg !6012
  %priority30 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx29, i32 0, i32 1, !dbg !6014
  %60 = load i16, i16* %priority30, align 4, !dbg !6014, !tbaa !5191
  %conv31 = zext i16 %60 to i32, !dbg !6012
  %cmp32 = icmp ne i32 %conv, %conv31, !dbg !6015
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !6016

if.then34:                                        ; preds = %for.body27
  br label %for.end44, !dbg !6017

if.end35:                                         ; preds = %for.body27
  %61 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6019, !tbaa !820
  %62 = load i32, i32* %j, align 4, !dbg !6020, !tbaa !827
  %arrayidx36 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %61, i32 %62, !dbg !6019
  %naddrs37 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx36, i32 0, i32 6, !dbg !6021
  %63 = load i32, i32* %naddrs37, align 4, !dbg !6021, !tbaa !5867
  %64 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6022, !tbaa !820
  %65 = load i32, i32* %j, align 4, !dbg !6023, !tbaa !827
  %arrayidx38 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %64, i32 %65, !dbg !6022
  %weight = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx38, i32 0, i32 2, !dbg !6024
  %66 = load i16, i16* %weight, align 2, !dbg !6024, !tbaa !5202
  %conv39 = zext i16 %66 to i32, !dbg !6022
  %mul40 = mul i32 %63, %conv39, !dbg !6025
  %67 = load i32, i32* %nw, align 4, !dbg !6026, !tbaa !827
  %add41 = add i32 %67, %mul40, !dbg !6026
  store i32 %add41, i32* %nw, align 4, !dbg !6026, !tbaa !827
  br label %for.inc42, !dbg !6027

for.inc42:                                        ; preds = %if.end35
  %68 = load i32, i32* %j, align 4, !dbg !6028, !tbaa !827
  %inc43 = add i32 %68, 1, !dbg !6028
  store i32 %inc43, i32* %j, align 4, !dbg !6028, !tbaa !827
  br label %for.cond25, !dbg !6029, !llvm.loop !6030

for.end44:                                        ; preds = %if.then34, %for.cond25
  %69 = load i32, i32* %nw, align 4, !dbg !6032, !tbaa !827
  %cmp45 = icmp eq i32 %69, 0, !dbg !6034
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6035

if.then47:                                        ; preds = %for.end44
  br label %next_srv, !dbg !6036

if.end48:                                         ; preds = %for.end44
  %call49 = call i32 @random(), !dbg !6038
  %70 = load i32, i32* %nw, align 4, !dbg !6039, !tbaa !827
  %rem = urem i32 %call49, %70, !dbg !6040
  store i32 %rem, i32* %w, align 4, !dbg !6041, !tbaa !827
  %71 = load i32, i32* %i, align 4, !dbg !6042, !tbaa !827
  store i32 %71, i32* %k, align 4, !dbg !6044, !tbaa !827
  br label %for.cond50, !dbg !6045

for.cond50:                                       ; preds = %for.inc70, %if.end48
  %72 = load i32, i32* %k, align 4, !dbg !6046, !tbaa !827
  %73 = load i32, i32* %j, align 4, !dbg !6048, !tbaa !827
  %cmp51 = icmp ult i32 %72, %73, !dbg !6049
  br i1 %cmp51, label %for.body53, label %for.end72, !dbg !6050

for.body53:                                       ; preds = %for.cond50
  %74 = load i32, i32* %w, align 4, !dbg !6051, !tbaa !827
  %75 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6054, !tbaa !820
  %76 = load i32, i32* %k, align 4, !dbg !6055, !tbaa !827
  %arrayidx54 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %75, i32 %76, !dbg !6054
  %naddrs55 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx54, i32 0, i32 6, !dbg !6056
  %77 = load i32, i32* %naddrs55, align 4, !dbg !6056, !tbaa !5867
  %78 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6057, !tbaa !820
  %79 = load i32, i32* %k, align 4, !dbg !6058, !tbaa !827
  %arrayidx56 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %78, i32 %79, !dbg !6057
  %weight57 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx56, i32 0, i32 2, !dbg !6059
  %80 = load i16, i16* %weight57, align 2, !dbg !6059, !tbaa !5202
  %conv58 = zext i16 %80 to i32, !dbg !6057
  %mul59 = mul i32 %77, %conv58, !dbg !6060
  %cmp60 = icmp ult i32 %74, %mul59, !dbg !6061
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !6062

if.then62:                                        ; preds = %for.body53
  br label %for.end72, !dbg !6063

if.end63:                                         ; preds = %for.body53
  %81 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6065, !tbaa !820
  %82 = load i32, i32* %k, align 4, !dbg !6066, !tbaa !827
  %arrayidx64 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %81, i32 %82, !dbg !6065
  %naddrs65 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx64, i32 0, i32 6, !dbg !6067
  %83 = load i32, i32* %naddrs65, align 4, !dbg !6067, !tbaa !5867
  %84 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6068, !tbaa !820
  %85 = load i32, i32* %k, align 4, !dbg !6069, !tbaa !827
  %arrayidx66 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %84, i32 %85, !dbg !6068
  %weight67 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx66, i32 0, i32 2, !dbg !6070
  %86 = load i16, i16* %weight67, align 2, !dbg !6070, !tbaa !5202
  %conv68 = zext i16 %86 to i32, !dbg !6068
  %mul69 = mul i32 %83, %conv68, !dbg !6071
  %87 = load i32, i32* %w, align 4, !dbg !6072, !tbaa !827
  %sub = sub i32 %87, %mul69, !dbg !6072
  store i32 %sub, i32* %w, align 4, !dbg !6072, !tbaa !827
  br label %for.inc70, !dbg !6073

for.inc70:                                        ; preds = %if.end63
  %88 = load i32, i32* %k, align 4, !dbg !6074, !tbaa !827
  %inc71 = add i32 %88, 1, !dbg !6074
  store i32 %inc71, i32* %k, align 4, !dbg !6074, !tbaa !827
  br label %for.cond50, !dbg !6075, !llvm.loop !6076

for.end72:                                        ; preds = %if.then62, %for.cond50
  %89 = load i32, i32* %i, align 4, !dbg !6078, !tbaa !827
  store i32 %89, i32* %l, align 4, !dbg !6080, !tbaa !827
  br label %for.cond73, !dbg !6081

for.cond73:                                       ; preds = %for.inc113, %for.end72
  %90 = load i32, i32* %l, align 4, !dbg !6082, !tbaa !827
  %91 = load i32, i32* %j, align 4, !dbg !6084, !tbaa !827
  %cmp74 = icmp ult i32 %90, %91, !dbg !6085
  br i1 %cmp74, label %for.body76, label %for.end115, !dbg !6086

for.body76:                                       ; preds = %for.cond73
  store i32 0, i32* %m, align 4, !dbg !6087, !tbaa !827
  br label %for.cond77, !dbg !6090

for.cond77:                                       ; preds = %for.inc105, %for.body76
  %92 = load i32, i32* %m, align 4, !dbg !6091, !tbaa !827
  %93 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6093, !tbaa !820
  %94 = load i32, i32* %k, align 4, !dbg !6094, !tbaa !827
  %arrayidx78 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %93, i32 %94, !dbg !6093
  %naddrs79 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx78, i32 0, i32 6, !dbg !6095
  %95 = load i32, i32* %naddrs79, align 4, !dbg !6095, !tbaa !5867
  %cmp80 = icmp ult i32 %92, %95, !dbg !6096
  br i1 %cmp80, label %for.body82, label %for.end107, !dbg !6097

for.body82:                                       ; preds = %for.cond77
  %96 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6098, !tbaa !820
  %97 = load i32, i32* %k, align 4, !dbg !6100, !tbaa !827
  %arrayidx83 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %96, i32 %97, !dbg !6098
  %addrs84 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx83, i32 0, i32 7, !dbg !6101
  %98 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs84, align 4, !dbg !6101, !tbaa !2917
  %99 = load i32, i32* %m, align 4, !dbg !6102, !tbaa !827
  %arrayidx85 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %98, i32 %99, !dbg !6098
  %socklen = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx85, i32 0, i32 1, !dbg !6103
  %100 = load i32, i32* %socklen, align 4, !dbg !6103, !tbaa !1130
  %101 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6104, !tbaa !820
  %102 = load i32, i32* %n, align 4, !dbg !6105, !tbaa !827
  %arrayidx86 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %101, i32 %102, !dbg !6104
  %socklen87 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx86, i32 0, i32 1, !dbg !6106
  store i32 %100, i32* %socklen87, align 4, !dbg !6107, !tbaa !4931
  %103 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6108, !tbaa !820
  %104 = load i32, i32* %k, align 4, !dbg !6109, !tbaa !827
  %arrayidx88 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %103, i32 %104, !dbg !6108
  %addrs89 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx88, i32 0, i32 7, !dbg !6110
  %105 = load %struct.ngx_addr_t*, %struct.ngx_addr_t** %addrs89, align 4, !dbg !6110, !tbaa !2917
  %106 = load i32, i32* %m, align 4, !dbg !6111, !tbaa !827
  %arrayidx90 = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %105, i32 %106, !dbg !6108
  %sockaddr = getelementptr inbounds %struct.ngx_addr_t, %struct.ngx_addr_t* %arrayidx90, i32 0, i32 0, !dbg !6112
  %107 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !6112, !tbaa !1117
  %108 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6113, !tbaa !820
  %109 = load i32, i32* %n, align 4, !dbg !6114, !tbaa !827
  %arrayidx91 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %108, i32 %109, !dbg !6113
  %sockaddr92 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx91, i32 0, i32 0, !dbg !6115
  store %struct.sockaddr* %107, %struct.sockaddr** %sockaddr92, align 4, !dbg !6116, !tbaa !2264
  %110 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6117, !tbaa !820
  %111 = load i32, i32* %n, align 4, !dbg !6118, !tbaa !827
  %arrayidx93 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %110, i32 %111, !dbg !6117
  %name = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx93, i32 0, i32 2, !dbg !6119
  %112 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6120, !tbaa !820
  %113 = load i32, i32* %k, align 4, !dbg !6121, !tbaa !827
  %arrayidx94 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %112, i32 %113, !dbg !6120
  %name95 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx94, i32 0, i32 0, !dbg !6122
  %114 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !6122
  %115 = bitcast %struct.ngx_str_t* %name95 to i8*, !dbg !6122
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %114, i8* %115, i32 8, i32 4, i1 false), !dbg !6122, !tbaa.struct !1065
  %116 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6123, !tbaa !820
  %117 = load i32, i32* %k, align 4, !dbg !6124, !tbaa !827
  %arrayidx96 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %116, i32 %117, !dbg !6123
  %priority97 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx96, i32 0, i32 1, !dbg !6125
  %118 = load i16, i16* %priority97, align 4, !dbg !6125, !tbaa !5191
  %119 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6126, !tbaa !820
  %120 = load i32, i32* %n, align 4, !dbg !6127, !tbaa !827
  %arrayidx98 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %119, i32 %120, !dbg !6126
  %priority99 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx98, i32 0, i32 3, !dbg !6128
  store i16 %118, i16* %priority99, align 4, !dbg !6129, !tbaa !6130
  %121 = load %struct.ngx_resolver_srv_name_t*, %struct.ngx_resolver_srv_name_t** %srvs, align 4, !dbg !6131, !tbaa !820
  %122 = load i32, i32* %k, align 4, !dbg !6132, !tbaa !827
  %arrayidx100 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %121, i32 %122, !dbg !6131
  %weight101 = getelementptr inbounds %struct.ngx_resolver_srv_name_t, %struct.ngx_resolver_srv_name_t* %arrayidx100, i32 0, i32 2, !dbg !6133
  %123 = load i16, i16* %weight101, align 2, !dbg !6133, !tbaa !5202
  %124 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6134, !tbaa !820
  %125 = load i32, i32* %n, align 4, !dbg !6135, !tbaa !827
  %arrayidx102 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %124, i32 %125, !dbg !6134
  %weight103 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %arrayidx102, i32 0, i32 4, !dbg !6136
  store i16 %123, i16* %weight103, align 2, !dbg !6137, !tbaa !6138
  %126 = load i32, i32* %n, align 4, !dbg !6139, !tbaa !827
  %inc104 = add i32 %126, 1, !dbg !6139
  store i32 %inc104, i32* %n, align 4, !dbg !6139, !tbaa !827
  br label %for.inc105, !dbg !6140

for.inc105:                                       ; preds = %for.body82
  %127 = load i32, i32* %m, align 4, !dbg !6141, !tbaa !827
  %inc106 = add i32 %127, 1, !dbg !6141
  store i32 %inc106, i32* %m, align 4, !dbg !6141, !tbaa !827
  br label %for.cond77, !dbg !6142, !llvm.loop !6143

for.end107:                                       ; preds = %for.cond77
  %128 = load i32, i32* %k, align 4, !dbg !6145, !tbaa !827
  %inc108 = add i32 %128, 1, !dbg !6145
  store i32 %inc108, i32* %k, align 4, !dbg !6145, !tbaa !827
  %129 = load i32, i32* %j, align 4, !dbg !6147, !tbaa !827
  %cmp109 = icmp eq i32 %inc108, %129, !dbg !6148
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !6149

if.then111:                                       ; preds = %for.end107
  %130 = load i32, i32* %i, align 4, !dbg !6150, !tbaa !827
  store i32 %130, i32* %k, align 4, !dbg !6152, !tbaa !827
  br label %if.end112, !dbg !6153

if.end112:                                        ; preds = %if.then111, %for.end107
  br label %for.inc113, !dbg !6154

for.inc113:                                       ; preds = %if.end112
  %131 = load i32, i32* %l, align 4, !dbg !6155, !tbaa !827
  %inc114 = add i32 %131, 1, !dbg !6155
  store i32 %inc114, i32* %l, align 4, !dbg !6155, !tbaa !827
  br label %for.cond73, !dbg !6156, !llvm.loop !6157

for.end115:                                       ; preds = %for.cond73
  br label %next_srv, !dbg !6158

next_srv:                                         ; preds = %for.end115, %if.then47
  %132 = load i32, i32* %j, align 4, !dbg !6159, !tbaa !827
  store i32 %132, i32* %i, align 4, !dbg !6160, !tbaa !827
  br label %do.cond, !dbg !6161

do.cond:                                          ; preds = %next_srv
  %133 = load i32, i32* %i, align 4, !dbg !6162, !tbaa !827
  %134 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6163, !tbaa !820
  %nsrvs116 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %134, i32 0, i32 13, !dbg !6164
  %135 = load i32, i32* %nsrvs116, align 4, !dbg !6164, !tbaa !2883
  %cmp117 = icmp ult i32 %133, %135, !dbg !6165
  br i1 %cmp117, label %do.body, label %do.end, !dbg !6161, !llvm.loop !5994

do.end:                                           ; preds = %do.cond
  %136 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6166, !tbaa !820
  %state119 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %136, i32 0, i32 4, !dbg !6167
  store i32 0, i32* %state119, align 4, !dbg !6168, !tbaa !1703
  %137 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6169, !tbaa !820
  %138 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6170, !tbaa !820
  %addrs120 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %138, i32 0, i32 9, !dbg !6171
  store %struct.ngx_resolver_addr_t* %137, %struct.ngx_resolver_addr_t** %addrs120, align 4, !dbg !6172, !tbaa !1713
  %139 = load i32, i32* %naddrs, align 4, !dbg !6173, !tbaa !827
  %140 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6174, !tbaa !820
  %naddrs121 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %140, i32 0, i32 8, !dbg !6175
  store i32 %139, i32* %naddrs121, align 4, !dbg !6176, !tbaa !1707
  %141 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6177, !tbaa !820
  %handler122 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %141, i32 0, i32 15, !dbg !6178
  %142 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler122, align 4, !dbg !6178, !tbaa !1844
  %143 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx.addr, align 4, !dbg !6179, !tbaa !820
  call void %142(%struct.ngx_resolver_ctx_s* %143), !dbg !6177
  %144 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6180, !tbaa !820
  %145 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !6181, !tbaa !820
  %146 = bitcast %struct.ngx_resolver_addr_t* %145 to i8*, !dbg !6181
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %144, i8* %146), !dbg !6182
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6183
  br label %cleanup, !dbg !6183

cleanup:                                          ; preds = %do.end, %cond.end17, %cond.end
  %147 = bitcast %struct.ngx_resolver_srv_name_t** %srvs to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %147) #5, !dbg !6183
  %148 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %148) #5, !dbg !6183
  %149 = bitcast i32* %w to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %149) #5, !dbg !6183
  %150 = bitcast i32* %n to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %150) #5, !dbg !6183
  %151 = bitcast i32* %m to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %151) #5, !dbg !6183
  %152 = bitcast i32* %l to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %152) #5, !dbg !6183
  %153 = bitcast i32* %k to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %153) #5, !dbg !6183
  %154 = bitcast i32* %j to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %154) #5, !dbg !6183
  %155 = bitcast i32* %i to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %155) #5, !dbg !6183
  %156 = bitcast i32* %nw to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %156) #5, !dbg !6183
  %157 = bitcast i32* %nsrvs to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %157) #5, !dbg !6183
  %158 = bitcast i32* %naddrs to i8*, !dbg !6183
  call void @llvm.lifetime.end(i64 4, i8* %158) #5, !dbg !6183
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6183

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
define internal i8* @ngx_resolver_log_error(%struct.ngx_log_s* %log, i8* %buf, i32 %len) #0 !dbg !6184 {
entry:
  %log.addr = alloca %struct.ngx_log_s*, align 4
  %buf.addr = alloca i8*, align 4
  %len.addr = alloca i32, align 4
  %p = alloca i8*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  store %struct.ngx_log_s* %log, %struct.ngx_log_s** %log.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_log_s** %log.addr, metadata !6186, metadata !824), !dbg !6191
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6187, metadata !824), !dbg !6192
  store i32 %len, i32* %len.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6188, metadata !824), !dbg !6193
  %0 = bitcast i8** %p to i8*, !dbg !6194
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6194
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6189, metadata !824), !dbg !6195
  %1 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !6196
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !6196
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !6190, metadata !824), !dbg !6197
  %2 = load i8*, i8** %buf.addr, align 4, !dbg !6198, !tbaa !820
  store i8* %2, i8** %p, align 4, !dbg !6199, !tbaa !820
  %3 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log.addr, align 4, !dbg !6200, !tbaa !820
  %action = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %3, i32 0, i32 8, !dbg !6202
  %4 = load i8*, i8** %action, align 4, !dbg !6202, !tbaa !6203
  %tobool = icmp ne i8* %4, null, !dbg !6200
  br i1 %tobool, label %if.then, label %if.end, !dbg !6204

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 4, !dbg !6205, !tbaa !820
  %6 = load i32, i32* %len.addr, align 4, !dbg !6207, !tbaa !827
  %7 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log.addr, align 4, !dbg !6208, !tbaa !820
  %action1 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %7, i32 0, i32 8, !dbg !6209
  %8 = load i8*, i8** %action1, align 4, !dbg !6209, !tbaa !6203
  %call = call i8* (i8*, i32, i8*, ...) @ngx_snprintf(i8* %5, i32 %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* %8), !dbg !6210
  store i8* %call, i8** %p, align 4, !dbg !6211, !tbaa !820
  %9 = load i8*, i8** %p, align 4, !dbg !6212, !tbaa !820
  %10 = load i8*, i8** %buf.addr, align 4, !dbg !6213, !tbaa !820
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i32, !dbg !6214
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i32, !dbg !6214
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6214
  %11 = load i32, i32* %len.addr, align 4, !dbg !6215, !tbaa !827
  %sub = sub i32 %11, %sub.ptr.sub, !dbg !6215
  store i32 %sub, i32* %len.addr, align 4, !dbg !6215, !tbaa !827
  br label %if.end, !dbg !6216

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log.addr, align 4, !dbg !6217, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %12, i32 0, i32 5, !dbg !6218
  %13 = load i8*, i8** %data, align 4, !dbg !6218, !tbaa !6219
  %14 = bitcast i8* %13 to %struct.ngx_resolver_connection_t*, !dbg !6217
  store %struct.ngx_resolver_connection_t* %14, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6220, !tbaa !820
  %15 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6221, !tbaa !820
  %tobool2 = icmp ne %struct.ngx_resolver_connection_t* %15, null, !dbg !6221
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !6223

if.then3:                                         ; preds = %if.end
  %16 = load i8*, i8** %p, align 4, !dbg !6224, !tbaa !820
  %17 = load i32, i32* %len.addr, align 4, !dbg !6226, !tbaa !827
  %18 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6227, !tbaa !820
  %server = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %18, i32 0, i32 4, !dbg !6228
  %call4 = call i8* (i8*, i32, i8*, ...) @ngx_snprintf(i8* %16, i32 %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), %struct.ngx_str_t* %server), !dbg !6229
  store i8* %call4, i8** %p, align 4, !dbg !6230, !tbaa !820
  br label %if.end5, !dbg !6231

if.end5:                                          ; preds = %if.then3, %if.end
  %19 = load i8*, i8** %p, align 4, !dbg !6232, !tbaa !820
  %20 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !6233
  call void @llvm.lifetime.end(i64 4, i8* %20) #5, !dbg !6233
  %21 = bitcast i8** %p to i8*, !dbg !6233
  call void @llvm.lifetime.end(i64 4, i8* %21) #5, !dbg !6233
  ret i8* %19, !dbg !6234
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_connection_t* %rec, i8* %query, i16 zeroext %qlen) #0 !dbg !6235 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rec.addr = alloca %struct.ngx_resolver_connection_t*, align 4
  %query.addr = alloca i8*, align 4
  %qlen.addr = alloca i16, align 2
  %b = alloca %struct.ngx_buf_s*, align 4
  %rc = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !6239, metadata !824), !dbg !6245
  store %struct.ngx_resolver_connection_t* %rec, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec.addr, metadata !6240, metadata !824), !dbg !6246
  store i8* %query, i8** %query.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %query.addr, metadata !6241, metadata !824), !dbg !6247
  store i16 %qlen, i16* %qlen.addr, align 2, !tbaa !6248
  call void @llvm.dbg.declare(metadata i16* %qlen.addr, metadata !6242, metadata !824), !dbg !6249
  %0 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !6250
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6250
  call void @llvm.dbg.declare(metadata %struct.ngx_buf_s** %b, metadata !6243, metadata !824), !dbg !6251
  %1 = bitcast i32* %rc to i8*, !dbg !6252
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6244, metadata !824), !dbg !6253
  store i32 0, i32* %rc, align 4, !dbg !6254, !tbaa !827
  %2 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6255, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %2, i32 0, i32 1, !dbg !6257
  %3 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp, align 4, !dbg !6257, !tbaa !1248
  %cmp = icmp eq %struct.ngx_connection_s* %3, null, !dbg !6258
  br i1 %cmp, label %if.then, label %if.end48, !dbg !6259

if.then:                                          ; preds = %entry
  %4 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6260, !tbaa !820
  %read_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %4, i32 0, i32 6, !dbg !6262
  %5 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %read_buf, align 4, !dbg !6262, !tbaa !1260
  store %struct.ngx_buf_s* %5, %struct.ngx_buf_s** %b, align 4, !dbg !6263, !tbaa !820
  %6 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6264, !tbaa !820
  %cmp1 = icmp eq %struct.ngx_buf_s* %6, null, !dbg !6266
  br i1 %cmp1, label %if.then2, label %if.end12, !dbg !6267

if.then2:                                         ; preds = %if.then
  %7 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6268, !tbaa !820
  %call = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %7, i32 44), !dbg !6270
  %8 = bitcast i8* %call to %struct.ngx_buf_s*, !dbg !6270
  store %struct.ngx_buf_s* %8, %struct.ngx_buf_s** %b, align 4, !dbg !6271, !tbaa !820
  %9 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6272, !tbaa !820
  %cmp3 = icmp eq %struct.ngx_buf_s* %9, null, !dbg !6274
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6275

if.then4:                                         ; preds = %if.then2
  store i32 -1, i32* %retval, align 4, !dbg !6276
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6276

if.end:                                           ; preds = %if.then2
  %10 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6278, !tbaa !820
  %call5 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %10, i32 65537), !dbg !6279
  %11 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6280, !tbaa !820
  %start = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %11, i32 0, i32 4, !dbg !6281
  store i8* %call5, i8** %start, align 4, !dbg !6282, !tbaa !1268
  %12 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6283, !tbaa !820
  %start6 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %12, i32 0, i32 4, !dbg !6285
  %13 = load i8*, i8** %start6, align 4, !dbg !6285, !tbaa !1268
  %cmp7 = icmp eq i8* %13, null, !dbg !6286
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6287

if.then8:                                         ; preds = %if.end
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6288, !tbaa !820
  %15 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6290, !tbaa !820
  %16 = bitcast %struct.ngx_buf_s* %15 to i8*, !dbg !6290
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %14, i8* %16), !dbg !6291
  store i32 -1, i32* %retval, align 4, !dbg !6292
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6292

if.end9:                                          ; preds = %if.end
  %17 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6293, !tbaa !820
  %start10 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %17, i32 0, i32 4, !dbg !6294
  %18 = load i8*, i8** %start10, align 4, !dbg !6294, !tbaa !1268
  %add.ptr = getelementptr inbounds i8, i8* %18, i32 65537, !dbg !6295
  %19 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6296, !tbaa !820
  %end = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %19, i32 0, i32 5, !dbg !6297
  store i8* %add.ptr, i8** %end, align 4, !dbg !6298, !tbaa !6299
  %20 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6300, !tbaa !820
  %21 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6301, !tbaa !820
  %read_buf11 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %21, i32 0, i32 6, !dbg !6302
  store %struct.ngx_buf_s* %20, %struct.ngx_buf_s** %read_buf11, align 4, !dbg !6303, !tbaa !1260
  br label %if.end12, !dbg !6304

if.end12:                                         ; preds = %if.end9, %if.then
  %22 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6305, !tbaa !820
  %start13 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %22, i32 0, i32 4, !dbg !6306
  %23 = load i8*, i8** %start13, align 4, !dbg !6306, !tbaa !1268
  %24 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6307, !tbaa !820
  %pos = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %24, i32 0, i32 0, !dbg !6308
  store i8* %23, i8** %pos, align 4, !dbg !6309, !tbaa !6310
  %25 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6311, !tbaa !820
  %start14 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %25, i32 0, i32 4, !dbg !6312
  %26 = load i8*, i8** %start14, align 4, !dbg !6312, !tbaa !1268
  %27 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6313, !tbaa !820
  %last = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %27, i32 0, i32 1, !dbg !6314
  store i8* %26, i8** %last, align 4, !dbg !6315, !tbaa !6316
  %28 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6317, !tbaa !820
  %write_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %28, i32 0, i32 7, !dbg !6318
  %29 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf, align 4, !dbg !6318, !tbaa !1281
  store %struct.ngx_buf_s* %29, %struct.ngx_buf_s** %b, align 4, !dbg !6319, !tbaa !820
  %30 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6320, !tbaa !820
  %cmp15 = icmp eq %struct.ngx_buf_s* %30, null, !dbg !6322
  br i1 %cmp15, label %if.then16, label %if.end31, !dbg !6323

if.then16:                                        ; preds = %if.end12
  %31 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6324, !tbaa !820
  %call17 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %31, i32 44), !dbg !6326
  %32 = bitcast i8* %call17 to %struct.ngx_buf_s*, !dbg !6326
  store %struct.ngx_buf_s* %32, %struct.ngx_buf_s** %b, align 4, !dbg !6327, !tbaa !820
  %33 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6328, !tbaa !820
  %cmp18 = icmp eq %struct.ngx_buf_s* %33, null, !dbg !6330
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6331

if.then19:                                        ; preds = %if.then16
  store i32 -1, i32* %retval, align 4, !dbg !6332
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6332

if.end20:                                         ; preds = %if.then16
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6334, !tbaa !820
  %call21 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %34, i32 8192), !dbg !6335
  %35 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6336, !tbaa !820
  %start22 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %35, i32 0, i32 4, !dbg !6337
  store i8* %call21, i8** %start22, align 4, !dbg !6338, !tbaa !1268
  %36 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6339, !tbaa !820
  %start23 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %36, i32 0, i32 4, !dbg !6341
  %37 = load i8*, i8** %start23, align 4, !dbg !6341, !tbaa !1268
  %cmp24 = icmp eq i8* %37, null, !dbg !6342
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !6343

if.then25:                                        ; preds = %if.end20
  %38 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6344, !tbaa !820
  %39 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6346, !tbaa !820
  %40 = bitcast %struct.ngx_buf_s* %39 to i8*, !dbg !6346
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %38, i8* %40), !dbg !6347
  store i32 -1, i32* %retval, align 4, !dbg !6348
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6348

if.end26:                                         ; preds = %if.end20
  %41 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6349, !tbaa !820
  %start27 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %41, i32 0, i32 4, !dbg !6350
  %42 = load i8*, i8** %start27, align 4, !dbg !6350, !tbaa !1268
  %add.ptr28 = getelementptr inbounds i8, i8* %42, i32 8192, !dbg !6351
  %43 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6352, !tbaa !820
  %end29 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %43, i32 0, i32 5, !dbg !6353
  store i8* %add.ptr28, i8** %end29, align 4, !dbg !6354, !tbaa !6299
  %44 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6355, !tbaa !820
  %45 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6356, !tbaa !820
  %write_buf30 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %45, i32 0, i32 7, !dbg !6357
  store %struct.ngx_buf_s* %44, %struct.ngx_buf_s** %write_buf30, align 4, !dbg !6358, !tbaa !1281
  br label %if.end31, !dbg !6359

if.end31:                                         ; preds = %if.end26, %if.end12
  %46 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6360, !tbaa !820
  %start32 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %46, i32 0, i32 4, !dbg !6361
  %47 = load i8*, i8** %start32, align 4, !dbg !6361, !tbaa !1268
  %48 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6362, !tbaa !820
  %pos33 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %48, i32 0, i32 0, !dbg !6363
  store i8* %47, i8** %pos33, align 4, !dbg !6364, !tbaa !6310
  %49 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6365, !tbaa !820
  %start34 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %49, i32 0, i32 4, !dbg !6366
  %50 = load i8*, i8** %start34, align 4, !dbg !6366, !tbaa !1268
  %51 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6367, !tbaa !820
  %last35 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %51, i32 0, i32 1, !dbg !6368
  store i8* %50, i8** %last35, align 4, !dbg !6369, !tbaa !6316
  %52 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6370, !tbaa !820
  %call36 = call i32 @ngx_tcp_connect(%struct.ngx_resolver_connection_t* %52), !dbg !6371
  store i32 %call36, i32* %rc, align 4, !dbg !6372, !tbaa !827
  %53 = load i32, i32* %rc, align 4, !dbg !6373, !tbaa !827
  %cmp37 = icmp eq i32 %53, -1, !dbg !6375
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !6376

if.then38:                                        ; preds = %if.end31
  store i32 -1, i32* %retval, align 4, !dbg !6377
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6377

if.end39:                                         ; preds = %if.end31
  %54 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6379, !tbaa !820
  %55 = bitcast %struct.ngx_resolver_connection_t* %54 to i8*, !dbg !6379
  %56 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6380, !tbaa !820
  %tcp40 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %56, i32 0, i32 1, !dbg !6381
  %57 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp40, align 4, !dbg !6381, !tbaa !1248
  %data = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %57, i32 0, i32 0, !dbg !6382
  store i8* %55, i8** %data, align 4, !dbg !6383, !tbaa !6384
  %58 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6386, !tbaa !820
  %tcp41 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %58, i32 0, i32 1, !dbg !6387
  %59 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp41, align 4, !dbg !6387, !tbaa !1248
  %write = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %59, i32 0, i32 2, !dbg !6388
  %60 = load %struct.ngx_event_s*, %struct.ngx_event_s** %write, align 4, !dbg !6388, !tbaa !6389
  %handler = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %60, i32 0, i32 2, !dbg !6390
  store void (%struct.ngx_event_s*)* @ngx_resolver_tcp_write, void (%struct.ngx_event_s*)** %handler, align 4, !dbg !6391, !tbaa !922
  %61 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6392, !tbaa !820
  %tcp42 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %61, i32 0, i32 1, !dbg !6393
  %62 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp42, align 4, !dbg !6393, !tbaa !1248
  %read = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %62, i32 0, i32 1, !dbg !6394
  %63 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read, align 4, !dbg !6394, !tbaa !6395
  %handler43 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %63, i32 0, i32 2, !dbg !6396
  store void (%struct.ngx_event_s*)* @ngx_resolver_tcp_read, void (%struct.ngx_event_s*)** %handler43, align 4, !dbg !6397, !tbaa !922
  %64 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6398, !tbaa !820
  %tcp44 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %64, i32 0, i32 1, !dbg !6399
  %65 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp44, align 4, !dbg !6399, !tbaa !1248
  %read45 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %65, i32 0, i32 1, !dbg !6400
  %66 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read45, align 4, !dbg !6400, !tbaa !6395
  %resolver = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %66, i32 0, i32 1, !dbg !6401
  %67 = bitcast i24* %resolver to i32*, !dbg !6401
  %bf.load = load i32, i32* %67, align 4, !dbg !6402
  %bf.clear = and i32 %bf.load, -262145, !dbg !6402
  %bf.set = or i32 %bf.clear, 262144, !dbg !6402
  store i32 %bf.set, i32* %67, align 4, !dbg !6402
  %68 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6403, !tbaa !820
  %tcp46 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %68, i32 0, i32 1, !dbg !6404
  %69 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp46, align 4, !dbg !6404, !tbaa !1248
  %write47 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %69, i32 0, i32 2, !dbg !6405
  %70 = load %struct.ngx_event_s*, %struct.ngx_event_s** %write47, align 4, !dbg !6405, !tbaa !6389
  %71 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !6406, !tbaa !820
  %tcp_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %71, i32 0, i32 24, !dbg !6407
  %72 = load i32, i32* %tcp_timeout, align 4, !dbg !6407, !tbaa !950
  %mul = mul nsw i32 %72, 1000, !dbg !6408
  call void @ngx_event_add_timer(%struct.ngx_event_s* %70, i32 %mul), !dbg !6409
  br label %if.end48, !dbg !6410

if.end48:                                         ; preds = %if.end39, %entry
  %73 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6411, !tbaa !820
  %write_buf49 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %73, i32 0, i32 7, !dbg !6412
  %74 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf49, align 4, !dbg !6412, !tbaa !1281
  store %struct.ngx_buf_s* %74, %struct.ngx_buf_s** %b, align 4, !dbg !6413, !tbaa !820
  %75 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6414, !tbaa !820
  %end50 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %75, i32 0, i32 5, !dbg !6416
  %76 = load i8*, i8** %end50, align 4, !dbg !6416, !tbaa !6299
  %77 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6417, !tbaa !820
  %last51 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %77, i32 0, i32 1, !dbg !6418
  %78 = load i8*, i8** %last51, align 4, !dbg !6418, !tbaa !6316
  %sub.ptr.lhs.cast = ptrtoint i8* %76 to i32, !dbg !6419
  %sub.ptr.rhs.cast = ptrtoint i8* %78 to i32, !dbg !6419
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6419
  %79 = load i16, i16* %qlen.addr, align 2, !dbg !6420, !tbaa !6248
  %conv = zext i16 %79 to i32, !dbg !6420
  %add = add nsw i32 2, %conv, !dbg !6421
  %cmp52 = icmp slt i32 %sub.ptr.sub, %add, !dbg !6422
  br i1 %cmp52, label %if.then54, label %if.end60, !dbg !6423

if.then54:                                        ; preds = %if.end48
  %80 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6424, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %80, i32 0, i32 5, !dbg !6424
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log, i32 0, i32 0, !dbg !6424
  %81 = load i32, i32* %log_level, align 4, !dbg !6424, !tbaa !2999
  %cmp55 = icmp uge i32 %81, 3, !dbg !6424
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !6427

if.then57:                                        ; preds = %if.then54
  %82 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6424, !tbaa !820
  %log58 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %82, i32 0, i32 5, !dbg !6424
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 3, %struct.ngx_log_s* %log58, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0)), !dbg !6424
  br label %if.end59, !dbg !6424

if.end59:                                         ; preds = %if.then57, %if.then54
  store i32 -1, i32* %retval, align 4, !dbg !6428
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6428

if.end60:                                         ; preds = %if.end48
  %83 = load i16, i16* %qlen.addr, align 2, !dbg !6429, !tbaa !6248
  %conv61 = zext i16 %83 to i32, !dbg !6429
  %shr = ashr i32 %conv61, 8, !dbg !6430
  %conv62 = trunc i32 %shr to i8, !dbg !6431
  %84 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6432, !tbaa !820
  %last63 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %84, i32 0, i32 1, !dbg !6433
  %85 = load i8*, i8** %last63, align 4, !dbg !6434, !tbaa !6316
  %incdec.ptr = getelementptr inbounds i8, i8* %85, i32 1, !dbg !6434
  store i8* %incdec.ptr, i8** %last63, align 4, !dbg !6434, !tbaa !6316
  store i8 %conv62, i8* %85, align 1, !dbg !6435, !tbaa !1828
  %86 = load i16, i16* %qlen.addr, align 2, !dbg !6436, !tbaa !6248
  %conv64 = trunc i16 %86 to i8, !dbg !6437
  %87 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6438, !tbaa !820
  %last65 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %87, i32 0, i32 1, !dbg !6439
  %88 = load i8*, i8** %last65, align 4, !dbg !6440, !tbaa !6316
  %incdec.ptr66 = getelementptr inbounds i8, i8* %88, i32 1, !dbg !6440
  store i8* %incdec.ptr66, i8** %last65, align 4, !dbg !6440, !tbaa !6316
  store i8 %conv64, i8* %88, align 1, !dbg !6441, !tbaa !1828
  %89 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6442, !tbaa !820
  %last67 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %89, i32 0, i32 1, !dbg !6442
  %90 = load i8*, i8** %last67, align 4, !dbg !6442, !tbaa !6316
  %91 = load i8*, i8** %query.addr, align 4, !dbg !6442, !tbaa !820
  %92 = load i16, i16* %qlen.addr, align 2, !dbg !6442, !tbaa !6248
  %conv68 = zext i16 %92 to i32, !dbg !6442
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %90, i8* %91, i32 %conv68, i32 1, i1 false), !dbg !6442
  %93 = load i16, i16* %qlen.addr, align 2, !dbg !6442, !tbaa !6248
  %conv69 = zext i16 %93 to i32, !dbg !6442
  %add.ptr70 = getelementptr inbounds i8, i8* %90, i32 %conv69, !dbg !6442
  %94 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6443, !tbaa !820
  %last71 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %94, i32 0, i32 1, !dbg !6444
  store i8* %add.ptr70, i8** %last71, align 4, !dbg !6445, !tbaa !6316
  %95 = load i32, i32* %rc, align 4, !dbg !6446, !tbaa !827
  %cmp72 = icmp eq i32 %95, 0, !dbg !6448
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !6449

if.then74:                                        ; preds = %if.end60
  %96 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6450, !tbaa !820
  %tcp75 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %96, i32 0, i32 1, !dbg !6452
  %97 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %tcp75, align 4, !dbg !6452, !tbaa !1248
  %write76 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %97, i32 0, i32 2, !dbg !6453
  %98 = load %struct.ngx_event_s*, %struct.ngx_event_s** %write76, align 4, !dbg !6453, !tbaa !6389
  call void @ngx_resolver_tcp_write(%struct.ngx_event_s* %98), !dbg !6454
  br label %if.end77, !dbg !6455

if.end77:                                         ; preds = %if.then74, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !6456
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6456

cleanup:                                          ; preds = %if.end77, %if.end59, %if.then38, %if.then25, %if.then19, %if.then8, %if.then4
  %99 = bitcast i32* %rc to i8*, !dbg !6457
  call void @llvm.lifetime.end(i64 4, i8* %99) #5, !dbg !6457
  %100 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !6457
  call void @llvm.lifetime.end(i64 4, i8* %100) #5, !dbg !6457
  %101 = load i32, i32* %retval, align 4, !dbg !6457
  ret i32 %101, !dbg !6457
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_send_udp_query(%struct.ngx_resolver_s* %r, %struct.ngx_resolver_connection_t* %rec, i8* %query, i16 zeroext %qlen) #0 !dbg !6458 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %rec.addr = alloca %struct.ngx_resolver_connection_t*, align 4
  %query.addr = alloca i8*, align 4
  %qlen.addr = alloca i16, align 2
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !6460, metadata !824), !dbg !6465
  store %struct.ngx_resolver_connection_t* %rec, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec.addr, metadata !6461, metadata !824), !dbg !6466
  store i8* %query, i8** %query.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %query.addr, metadata !6462, metadata !824), !dbg !6467
  store i16 %qlen, i16* %qlen.addr, align 2, !tbaa !6248
  call void @llvm.dbg.declare(metadata i16* %qlen.addr, metadata !6463, metadata !824), !dbg !6468
  %0 = bitcast i32* %n to i8*, !dbg !6469
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6464, metadata !824), !dbg !6470
  %1 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6471, !tbaa !820
  %udp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %1, i32 0, i32 0, !dbg !6473
  %2 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp, align 4, !dbg !6473, !tbaa !1236
  %cmp = icmp eq %struct.ngx_connection_s* %2, null, !dbg !6474
  br i1 %cmp, label %if.then, label %if.end7, !dbg !6475

if.then:                                          ; preds = %entry
  %3 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6476, !tbaa !820
  %call = call i32 @ngx_udp_connect(%struct.ngx_resolver_connection_t* %3), !dbg !6479
  %cmp1 = icmp ne i32 %call, 0, !dbg !6480
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6481

if.then2:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !6482
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6482

if.end:                                           ; preds = %if.then
  %4 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6484, !tbaa !820
  %5 = bitcast %struct.ngx_resolver_connection_t* %4 to i8*, !dbg !6484
  %6 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6485, !tbaa !820
  %udp3 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %6, i32 0, i32 0, !dbg !6486
  %7 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp3, align 4, !dbg !6486, !tbaa !1236
  %data = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %7, i32 0, i32 0, !dbg !6487
  store i8* %5, i8** %data, align 4, !dbg !6488, !tbaa !6384
  %8 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6489, !tbaa !820
  %udp4 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %8, i32 0, i32 0, !dbg !6490
  %9 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp4, align 4, !dbg !6490, !tbaa !1236
  %read = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %9, i32 0, i32 1, !dbg !6491
  %10 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read, align 4, !dbg !6491, !tbaa !6395
  %handler = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %10, i32 0, i32 2, !dbg !6492
  store void (%struct.ngx_event_s*)* @ngx_resolver_udp_read, void (%struct.ngx_event_s*)** %handler, align 4, !dbg !6493, !tbaa !922
  %11 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6494, !tbaa !820
  %udp5 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %11, i32 0, i32 0, !dbg !6495
  %12 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp5, align 4, !dbg !6495, !tbaa !1236
  %read6 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %12, i32 0, i32 1, !dbg !6496
  %13 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read6, align 4, !dbg !6496, !tbaa !6395
  %resolver = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %13, i32 0, i32 1, !dbg !6497
  %14 = bitcast i24* %resolver to i32*, !dbg !6497
  %bf.load = load i32, i32* %14, align 4, !dbg !6498
  %bf.clear = and i32 %bf.load, -262145, !dbg !6498
  %bf.set = or i32 %bf.clear, 262144, !dbg !6498
  store i32 %bf.set, i32* %14, align 4, !dbg !6498
  br label %if.end7, !dbg !6499

if.end7:                                          ; preds = %if.end, %entry
  %15 = load i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)** getelementptr inbounds (%struct.ngx_os_io_t, %struct.ngx_os_io_t* @ngx_io, i32 0, i32 3), align 4, !dbg !6500, !tbaa !6501
  %16 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6503, !tbaa !820
  %udp8 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %16, i32 0, i32 0, !dbg !6504
  %17 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %udp8, align 4, !dbg !6504, !tbaa !1236
  %18 = load i8*, i8** %query.addr, align 4, !dbg !6505, !tbaa !820
  %19 = load i16, i16* %qlen.addr, align 2, !dbg !6506, !tbaa !6248
  %conv = zext i16 %19 to i32, !dbg !6506
  %call9 = call i32 %15(%struct.ngx_connection_s* %17, i8* %18, i32 %conv), !dbg !6500
  store i32 %call9, i32* %n, align 4, !dbg !6507, !tbaa !827
  %20 = load i32, i32* %n, align 4, !dbg !6508, !tbaa !827
  %cmp10 = icmp eq i32 %20, -1, !dbg !6510
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6511

if.then12:                                        ; preds = %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !6512
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6512

if.end13:                                         ; preds = %if.end7
  %21 = load i32, i32* %n, align 4, !dbg !6514, !tbaa !827
  %22 = load i16, i16* %qlen.addr, align 2, !dbg !6516, !tbaa !6248
  %conv14 = zext i16 %22 to i32, !dbg !6517
  %cmp15 = icmp ne i32 %21, %conv14, !dbg !6518
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !6519

if.then17:                                        ; preds = %if.end13
  %23 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6520, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %23, i32 0, i32 5, !dbg !6520
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log, i32 0, i32 0, !dbg !6520
  %24 = load i32, i32* %log_level, align 4, !dbg !6520, !tbaa !2999
  %cmp18 = icmp uge i32 %24, 3, !dbg !6520
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !6523

if.then20:                                        ; preds = %if.then17
  %25 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6520, !tbaa !820
  %log21 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %25, i32 0, i32 5, !dbg !6520
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 3, %struct.ngx_log_s* %log21, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0)), !dbg !6520
  br label %if.end22, !dbg !6520

if.end22:                                         ; preds = %if.then20, %if.then17
  store i32 -1, i32* %retval, align 4, !dbg !6524
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6524

if.end23:                                         ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !6525
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6525

cleanup:                                          ; preds = %if.end23, %if.end22, %if.then12, %if.then2
  %26 = bitcast i32* %n to i8*, !dbg !6526
  call void @llvm.lifetime.end(i64 4, i8* %26) #5, !dbg !6526
  %27 = load i32, i32* %retval, align 4, !dbg !6526
  ret i32 %27, !dbg !6526
}

declare i8* @ngx_snprintf(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind
define internal i32 @ngx_tcp_connect(%struct.ngx_resolver_connection_t* %rec) #0 !dbg !6527 {
entry:
  %retval = alloca i32, align 4
  %rec.addr = alloca %struct.ngx_resolver_connection_t*, align 4
  %rc = alloca i32, align 4
  %event = alloca i32, align 4
  %err = alloca i32, align 4
  %level = alloca i32, align 4
  %s = alloca i32, align 4
  %rev = alloca %struct.ngx_event_s*, align 4
  %wev = alloca %struct.ngx_event_s*, align 4
  %c = alloca %struct.ngx_connection_s*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_connection_t* %rec, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec.addr, metadata !6531, metadata !824), !dbg !6542
  %0 = bitcast i32* %rc to i8*, !dbg !6543
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6532, metadata !824), !dbg !6544
  %1 = bitcast i32* %event to i8*, !dbg !6545
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !6545
  call void @llvm.dbg.declare(metadata i32* %event, metadata !6533, metadata !824), !dbg !6546
  %2 = bitcast i32* %err to i8*, !dbg !6547
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !6547
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6534, metadata !824), !dbg !6548
  %3 = bitcast i32* %level to i8*, !dbg !6549
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6537, metadata !824), !dbg !6550
  %4 = bitcast i32* %s to i8*, !dbg !6551
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !6551
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6538, metadata !824), !dbg !6552
  %5 = bitcast %struct.ngx_event_s** %rev to i8*, !dbg !6553
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !6553
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %rev, metadata !6539, metadata !824), !dbg !6554
  %6 = bitcast %struct.ngx_event_s** %wev to i8*, !dbg !6553
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !6553
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %wev, metadata !6540, metadata !824), !dbg !6555
  %7 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !6556
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !6556
  call void @llvm.dbg.declare(metadata %struct.ngx_connection_s** %c, metadata !6541, metadata !824), !dbg !6557
  %8 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6558, !tbaa !820
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %8, i32 0, i32 2, !dbg !6559
  %9 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !6559, !tbaa !1123
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %9, i32 0, i32 0, !dbg !6560
  %10 = load i16, i16* %sa_family, align 2, !dbg !6560, !tbaa !3192
  %conv = zext i16 %10 to i32, !dbg !6558
  %call = call i32 @socket(i32 %conv, i32 1, i32 0), !dbg !6561
  store i32 %call, i32* %s, align 4, !dbg !6562, !tbaa !827
  %11 = load i32, i32* %s, align 4, !dbg !6563, !tbaa !827
  %cmp = icmp eq i32 %11, -1, !dbg !6565
  br i1 %cmp, label %if.then, label %if.end7, !dbg !6566

if.then:                                          ; preds = %entry
  %12 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6567, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %12, i32 0, i32 5, !dbg !6567
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log, i32 0, i32 0, !dbg !6567
  %13 = load i32, i32* %log_level, align 4, !dbg !6567, !tbaa !2999
  %cmp2 = icmp uge i32 %13, 2, !dbg !6567
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !6570

if.then4:                                         ; preds = %if.then
  %14 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6567, !tbaa !820
  %log5 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %14, i32 0, i32 5, !dbg !6567
  %call6 = call i32* @__errno_location(), !dbg !6567
  %15 = load i32, i32* %call6, align 4, !dbg !6567, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log5, i32 %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !6567
  br label %if.end, !dbg !6567

if.end:                                           ; preds = %if.then4, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !6571
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6571

if.end7:                                          ; preds = %entry
  %16 = load i32, i32* %s, align 4, !dbg !6572, !tbaa !827
  %17 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6573, !tbaa !820
  %log8 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %17, i32 0, i32 5, !dbg !6574
  %call9 = call %struct.ngx_connection_s* @ngx_get_connection(i32 %16, %struct.ngx_log_s* %log8), !dbg !6575
  store %struct.ngx_connection_s* %call9, %struct.ngx_connection_s** %c, align 4, !dbg !6576, !tbaa !820
  %18 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6577, !tbaa !820
  %cmp10 = icmp eq %struct.ngx_connection_s* %18, null, !dbg !6579
  br i1 %cmp10, label %if.then12, label %if.end26, !dbg !6580

if.then12:                                        ; preds = %if.end7
  %19 = load i32, i32* %s, align 4, !dbg !6581, !tbaa !827
  %call13 = call i32 @close(i32 %19), !dbg !6584
  %cmp14 = icmp eq i32 %call13, -1, !dbg !6585
  br i1 %cmp14, label %if.then16, label %if.end25, !dbg !6586

if.then16:                                        ; preds = %if.then12
  %20 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6587, !tbaa !820
  %log17 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %20, i32 0, i32 5, !dbg !6587
  %log_level18 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log17, i32 0, i32 0, !dbg !6587
  %21 = load i32, i32* %log_level18, align 4, !dbg !6587, !tbaa !2999
  %cmp19 = icmp uge i32 %21, 2, !dbg !6587
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !6590

if.then21:                                        ; preds = %if.then16
  %22 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6587, !tbaa !820
  %log22 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %22, i32 0, i32 5, !dbg !6587
  %call23 = call i32* @__errno_location(), !dbg !6587
  %23 = load i32, i32* %call23, align 4, !dbg !6587, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log22, i32 %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0)), !dbg !6587
  br label %if.end24, !dbg !6587

if.end24:                                         ; preds = %if.then21, %if.then16
  br label %if.end25, !dbg !6591

if.end25:                                         ; preds = %if.end24, %if.then12
  store i32 -1, i32* %retval, align 4, !dbg !6592
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6592

if.end26:                                         ; preds = %if.end7
  %24 = load i32, i32* %s, align 4, !dbg !6593, !tbaa !827
  %call27 = call i32 @ngx_nonblocking(i32 %24), !dbg !6595
  %cmp28 = icmp eq i32 %call27, -1, !dbg !6596
  br i1 %cmp28, label %if.then30, label %if.end39, !dbg !6597

if.then30:                                        ; preds = %if.end26
  %25 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6598, !tbaa !820
  %log31 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %25, i32 0, i32 5, !dbg !6598
  %log_level32 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log31, i32 0, i32 0, !dbg !6598
  %26 = load i32, i32* %log_level32, align 4, !dbg !6598, !tbaa !2999
  %cmp33 = icmp uge i32 %26, 2, !dbg !6598
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !6601

if.then35:                                        ; preds = %if.then30
  %27 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6598, !tbaa !820
  %log36 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %27, i32 0, i32 5, !dbg !6598
  %call37 = call i32* @__errno_location(), !dbg !6598
  %28 = load i32, i32* %call37, align 4, !dbg !6598, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log36, i32 %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0)), !dbg !6598
  br label %if.end38, !dbg !6598

if.end38:                                         ; preds = %if.then35, %if.then30
  br label %failed, !dbg !6602

if.end39:                                         ; preds = %if.end26
  %29 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6603, !tbaa !820
  %read = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %29, i32 0, i32 1, !dbg !6604
  %30 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read, align 4, !dbg !6604, !tbaa !6395
  store %struct.ngx_event_s* %30, %struct.ngx_event_s** %rev, align 4, !dbg !6605, !tbaa !820
  %31 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6606, !tbaa !820
  %write = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %31, i32 0, i32 2, !dbg !6607
  %32 = load %struct.ngx_event_s*, %struct.ngx_event_s** %write, align 4, !dbg !6607, !tbaa !6389
  store %struct.ngx_event_s* %32, %struct.ngx_event_s** %wev, align 4, !dbg !6608, !tbaa !820
  %33 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6609, !tbaa !820
  %log40 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %33, i32 0, i32 5, !dbg !6610
  %34 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev, align 4, !dbg !6611, !tbaa !820
  %log41 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %34, i32 0, i32 4, !dbg !6612
  store %struct.ngx_log_s* %log40, %struct.ngx_log_s** %log41, align 4, !dbg !6613, !tbaa !938
  %35 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6614, !tbaa !820
  %log42 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %35, i32 0, i32 5, !dbg !6615
  %36 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !6616, !tbaa !820
  %log43 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %36, i32 0, i32 4, !dbg !6617
  store %struct.ngx_log_s* %log42, %struct.ngx_log_s** %log43, align 4, !dbg !6618, !tbaa !938
  %37 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6619, !tbaa !820
  %38 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6620, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %38, i32 0, i32 1, !dbg !6621
  store %struct.ngx_connection_s* %37, %struct.ngx_connection_s** %tcp, align 4, !dbg !6622, !tbaa !1248
  %39 = load i32*, i32** @ngx_connection_counter, align 4, !dbg !6623, !tbaa !820
  %40 = atomicrmw add i32* %39, i32 1 seq_cst, !dbg !6623
  %41 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6624, !tbaa !820
  %number = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %41, i32 0, i32 22, !dbg !6625
  store i32 %40, i32* %number, align 4, !dbg !6626, !tbaa !6627
  %42 = load i32 (%struct.ngx_connection_s*)*, i32 (%struct.ngx_connection_s*)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 4), align 4, !dbg !6628, !tbaa !6630
  %tobool = icmp ne i32 (%struct.ngx_connection_s*)* %42, null, !dbg !6628
  br i1 %tobool, label %if.then44, label %if.end50, !dbg !6632

if.then44:                                        ; preds = %if.end39
  %43 = load i32 (%struct.ngx_connection_s*)*, i32 (%struct.ngx_connection_s*)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 4), align 4, !dbg !6633, !tbaa !6630
  %44 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6636, !tbaa !820
  %call45 = call i32 %43(%struct.ngx_connection_s* %44), !dbg !6633
  %cmp46 = icmp eq i32 %call45, -1, !dbg !6637
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6638

if.then48:                                        ; preds = %if.then44
  br label %failed, !dbg !6639

if.end49:                                         ; preds = %if.then44
  br label %if.end50, !dbg !6641

if.end50:                                         ; preds = %if.end49, %if.end39
  %45 = load i32, i32* %s, align 4, !dbg !6642, !tbaa !827
  %46 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6643, !tbaa !820
  %sockaddr51 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %46, i32 0, i32 2, !dbg !6644
  %47 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr51, align 4, !dbg !6644, !tbaa !1123
  %48 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6645, !tbaa !820
  %socklen = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %48, i32 0, i32 3, !dbg !6646
  %49 = load i32, i32* %socklen, align 4, !dbg !6646, !tbaa !1135
  %call52 = call i32 @connect(i32 %45, %struct.sockaddr* %47, i32 %49), !dbg !6647
  store i32 %call52, i32* %rc, align 4, !dbg !6648, !tbaa !827
  %50 = load i32, i32* %rc, align 4, !dbg !6649, !tbaa !827
  %cmp53 = icmp eq i32 %50, -1, !dbg !6651
  br i1 %cmp53, label %if.then55, label %if.end90, !dbg !6652

if.then55:                                        ; preds = %if.end50
  %call56 = call i32* @__errno_location(), !dbg !6653
  %51 = load i32, i32* %call56, align 4, !dbg !6653, !tbaa !827
  store i32 %51, i32* %err, align 4, !dbg !6655, !tbaa !827
  %52 = load i32, i32* %err, align 4, !dbg !6656, !tbaa !827
  %cmp57 = icmp ne i32 %52, 115, !dbg !6658
  br i1 %cmp57, label %if.then59, label %if.end89, !dbg !6659

if.then59:                                        ; preds = %if.then55
  %53 = load i32, i32* %err, align 4, !dbg !6660, !tbaa !827
  %cmp60 = icmp eq i32 %53, 111, !dbg !6663
  br i1 %cmp60, label %if.then79, label %lor.lhs.false, !dbg !6664

lor.lhs.false:                                    ; preds = %if.then59
  %54 = load i32, i32* %err, align 4, !dbg !6665, !tbaa !827
  %cmp62 = icmp eq i32 %54, 11, !dbg !6666
  br i1 %cmp62, label %if.then79, label %lor.lhs.false64, !dbg !6667

lor.lhs.false64:                                  ; preds = %lor.lhs.false
  %55 = load i32, i32* %err, align 4, !dbg !6668, !tbaa !827
  %cmp65 = icmp eq i32 %55, 104, !dbg !6669
  br i1 %cmp65, label %if.then79, label %lor.lhs.false67, !dbg !6670

lor.lhs.false67:                                  ; preds = %lor.lhs.false64
  %56 = load i32, i32* %err, align 4, !dbg !6671, !tbaa !827
  %cmp68 = icmp eq i32 %56, 100, !dbg !6672
  br i1 %cmp68, label %if.then79, label %lor.lhs.false70, !dbg !6673

lor.lhs.false70:                                  ; preds = %lor.lhs.false67
  %57 = load i32, i32* %err, align 4, !dbg !6674, !tbaa !827
  %cmp71 = icmp eq i32 %57, 101, !dbg !6675
  br i1 %cmp71, label %if.then79, label %lor.lhs.false73, !dbg !6676

lor.lhs.false73:                                  ; preds = %lor.lhs.false70
  %58 = load i32, i32* %err, align 4, !dbg !6677, !tbaa !827
  %cmp74 = icmp eq i32 %58, 112, !dbg !6678
  br i1 %cmp74, label %if.then79, label %lor.lhs.false76, !dbg !6679

lor.lhs.false76:                                  ; preds = %lor.lhs.false73
  %59 = load i32, i32* %err, align 4, !dbg !6680, !tbaa !827
  %cmp77 = icmp eq i32 %59, 113, !dbg !6681
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !6682

if.then79:                                        ; preds = %lor.lhs.false76, %lor.lhs.false73, %lor.lhs.false70, %lor.lhs.false67, %lor.lhs.false64, %lor.lhs.false, %if.then59
  store i32 4, i32* %level, align 4, !dbg !6683, !tbaa !827
  br label %if.end80, !dbg !6685

if.else:                                          ; preds = %lor.lhs.false76
  store i32 3, i32* %level, align 4, !dbg !6686, !tbaa !827
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then79
  %60 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6688, !tbaa !820
  %log81 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %60, i32 0, i32 10, !dbg !6688
  %61 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log81, align 4, !dbg !6688, !tbaa !6690
  %log_level82 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %61, i32 0, i32 0, !dbg !6688
  %62 = load i32, i32* %log_level82, align 4, !dbg !6688, !tbaa !2999
  %63 = load i32, i32* %level, align 4, !dbg !6688, !tbaa !827
  %cmp83 = icmp uge i32 %62, %63, !dbg !6688
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !6691

if.then85:                                        ; preds = %if.end80
  %64 = load i32, i32* %level, align 4, !dbg !6688, !tbaa !827
  %65 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6688, !tbaa !820
  %log86 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %65, i32 0, i32 10, !dbg !6688
  %66 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log86, align 4, !dbg !6688, !tbaa !6690
  %67 = load i32, i32* %err, align 4, !dbg !6688, !tbaa !827
  %68 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6688, !tbaa !820
  %server = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %68, i32 0, i32 4, !dbg !6688
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %64, %struct.ngx_log_s* %66, i32 %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i32 0, i32 0), %struct.ngx_str_t* %server), !dbg !6688
  br label %if.end87, !dbg !6688

if.end87:                                         ; preds = %if.then85, %if.end80
  %69 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6692, !tbaa !820
  call void @ngx_close_connection(%struct.ngx_connection_s* %69), !dbg !6693
  %70 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6694, !tbaa !820
  %tcp88 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %70, i32 0, i32 1, !dbg !6695
  store %struct.ngx_connection_s* null, %struct.ngx_connection_s** %tcp88, align 4, !dbg !6696, !tbaa !1248
  store i32 -1, i32* %retval, align 4, !dbg !6697
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6697

if.end89:                                         ; preds = %if.then55
  br label %if.end90, !dbg !6698

if.end90:                                         ; preds = %if.end89, %if.end50
  %71 = load i32 (%struct.ngx_connection_s*)*, i32 (%struct.ngx_connection_s*)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 4), align 4, !dbg !6699, !tbaa !6630
  %tobool91 = icmp ne i32 (%struct.ngx_connection_s*)* %71, null, !dbg !6699
  br i1 %tobool91, label %if.then92, label %if.end97, !dbg !6701

if.then92:                                        ; preds = %if.end90
  %72 = load i32, i32* %rc, align 4, !dbg !6702, !tbaa !827
  %cmp93 = icmp eq i32 %72, -1, !dbg !6705
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !6706

if.then95:                                        ; preds = %if.then92
  store i32 -2, i32* %retval, align 4, !dbg !6707
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6707

if.end96:                                         ; preds = %if.then92
  %73 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !6709, !tbaa !820
  %ready = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %73, i32 0, i32 1, !dbg !6710
  %74 = bitcast i24* %ready to i32*, !dbg !6710
  %bf.load = load i32, i32* %74, align 4, !dbg !6711
  %bf.clear = and i32 %bf.load, -33, !dbg !6711
  %bf.set = or i32 %bf.clear, 32, !dbg !6711
  store i32 %bf.set, i32* %74, align 4, !dbg !6711
  store i32 0, i32* %retval, align 4, !dbg !6712
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6712

if.end97:                                         ; preds = %if.end90
  %75 = load i32, i32* @ngx_event_flags, align 4, !dbg !6713, !tbaa !827
  %and = and i32 %75, 512, !dbg !6715
  %tobool98 = icmp ne i32 %and, 0, !dbg !6715
  br i1 %tobool98, label %if.then99, label %if.end121, !dbg !6716

if.then99:                                        ; preds = %if.end97
  %76 = load i32, i32* %s, align 4, !dbg !6717, !tbaa !827
  %call100 = call i32 @ngx_blocking(i32 %76), !dbg !6720
  %cmp101 = icmp eq i32 %call100, -1, !dbg !6721
  br i1 %cmp101, label %if.then103, label %if.end112, !dbg !6722

if.then103:                                       ; preds = %if.then99
  %77 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6723, !tbaa !820
  %log104 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %77, i32 0, i32 5, !dbg !6723
  %log_level105 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log104, i32 0, i32 0, !dbg !6723
  %78 = load i32, i32* %log_level105, align 4, !dbg !6723, !tbaa !2999
  %cmp106 = icmp uge i32 %78, 2, !dbg !6723
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !6726

if.then108:                                       ; preds = %if.then103
  %79 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6723, !tbaa !820
  %log109 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %79, i32 0, i32 5, !dbg !6723
  %call110 = call i32* @__errno_location(), !dbg !6723
  %80 = load i32, i32* %call110, align 4, !dbg !6723, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log109, i32 %80, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i32 0, i32 0)), !dbg !6723
  br label %if.end111, !dbg !6723

if.end111:                                        ; preds = %if.then108, %if.then103
  br label %failed, !dbg !6727

if.end112:                                        ; preds = %if.then99
  %81 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev, align 4, !dbg !6728, !tbaa !820
  %ready113 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %81, i32 0, i32 1, !dbg !6729
  %82 = bitcast i24* %ready113 to i32*, !dbg !6729
  %bf.load114 = load i32, i32* %82, align 4, !dbg !6730
  %bf.clear115 = and i32 %bf.load114, -33, !dbg !6730
  %bf.set116 = or i32 %bf.clear115, 32, !dbg !6730
  store i32 %bf.set116, i32* %82, align 4, !dbg !6730
  %83 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !6731, !tbaa !820
  %ready117 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %83, i32 0, i32 1, !dbg !6732
  %84 = bitcast i24* %ready117 to i32*, !dbg !6732
  %bf.load118 = load i32, i32* %84, align 4, !dbg !6733
  %bf.clear119 = and i32 %bf.load118, -33, !dbg !6733
  %bf.set120 = or i32 %bf.clear119, 32, !dbg !6733
  store i32 %bf.set120, i32* %84, align 4, !dbg !6733
  store i32 0, i32* %retval, align 4, !dbg !6734
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6734

if.end121:                                        ; preds = %if.end97
  %85 = load i32, i32* @ngx_event_flags, align 4, !dbg !6735, !tbaa !827
  %and122 = and i32 %85, 4, !dbg !6737
  %tobool123 = icmp ne i32 %and122, 0, !dbg !6737
  br i1 %tobool123, label %if.then124, label %if.else125, !dbg !6738

if.then124:                                       ; preds = %if.end121
  store i32 0, i32* %event, align 4, !dbg !6739, !tbaa !827
  br label %if.end126, !dbg !6741

if.else125:                                       ; preds = %if.end121
  store i32 0, i32* %event, align 4, !dbg !6742, !tbaa !827
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then124
  %86 = load i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 0), align 4, !dbg !6744, !tbaa !6746
  %87 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev, align 4, !dbg !6747, !tbaa !820
  %88 = load i32, i32* %event, align 4, !dbg !6748, !tbaa !827
  %call127 = call i32 %86(%struct.ngx_event_s* %87, i32 0, i32 %88), !dbg !6744
  %cmp128 = icmp ne i32 %call127, 0, !dbg !6749
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !6750

if.then130:                                       ; preds = %if.end126
  br label %failed, !dbg !6751

if.end131:                                        ; preds = %if.end126
  %89 = load i32, i32* %rc, align 4, !dbg !6753, !tbaa !827
  %cmp132 = icmp eq i32 %89, -1, !dbg !6755
  br i1 %cmp132, label %if.then134, label %if.end140, !dbg !6756

if.then134:                                       ; preds = %if.end131
  %90 = load i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 0), align 4, !dbg !6757, !tbaa !6746
  %91 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !6760, !tbaa !820
  %92 = load i32, i32* %event, align 4, !dbg !6761, !tbaa !827
  %call135 = call i32 %90(%struct.ngx_event_s* %91, i32 1, i32 %92), !dbg !6757
  %cmp136 = icmp ne i32 %call135, 0, !dbg !6762
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !6763

if.then138:                                       ; preds = %if.then134
  br label %failed, !dbg !6764

if.end139:                                        ; preds = %if.then134
  store i32 -2, i32* %retval, align 4, !dbg !6766
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6766

if.end140:                                        ; preds = %if.end131
  %93 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !6767, !tbaa !820
  %ready141 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %93, i32 0, i32 1, !dbg !6768
  %94 = bitcast i24* %ready141 to i32*, !dbg !6768
  %bf.load142 = load i32, i32* %94, align 4, !dbg !6769
  %bf.clear143 = and i32 %bf.load142, -33, !dbg !6769
  %bf.set144 = or i32 %bf.clear143, 32, !dbg !6769
  store i32 %bf.set144, i32* %94, align 4, !dbg !6769
  store i32 0, i32* %retval, align 4, !dbg !6770
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6770

failed:                                           ; preds = %if.then138, %if.then130, %if.end111, %if.then48, %if.end38
  %95 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6771, !tbaa !820
  call void @ngx_close_connection(%struct.ngx_connection_s* %95), !dbg !6772
  %96 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !6773, !tbaa !820
  %tcp145 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %96, i32 0, i32 1, !dbg !6774
  store %struct.ngx_connection_s* null, %struct.ngx_connection_s** %tcp145, align 4, !dbg !6775, !tbaa !1248
  store i32 -1, i32* %retval, align 4, !dbg !6776
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6776

cleanup:                                          ; preds = %failed, %if.end140, %if.end139, %if.end112, %if.end96, %if.then95, %if.end87, %if.end25, %if.end
  %97 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %97) #5, !dbg !6777
  %98 = bitcast %struct.ngx_event_s** %wev to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %98) #5, !dbg !6777
  %99 = bitcast %struct.ngx_event_s** %rev to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %99) #5, !dbg !6777
  %100 = bitcast i32* %s to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %100) #5, !dbg !6777
  %101 = bitcast i32* %level to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %101) #5, !dbg !6777
  %102 = bitcast i32* %err to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %102) #5, !dbg !6777
  %103 = bitcast i32* %event to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %103) #5, !dbg !6777
  %104 = bitcast i32* %rc to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %104) #5, !dbg !6777
  %105 = load i32, i32* %retval, align 4, !dbg !6777
  ret i32 %105, !dbg !6777
}

; Function Attrs: nounwind
define internal void @ngx_resolver_tcp_write(%struct.ngx_event_s* %wev) #0 !dbg !6778 {
entry:
  %wev.addr = alloca %struct.ngx_event_s*, align 4
  %sent = alloca i32, align 4
  %n = alloca i32, align 4
  %b = alloca %struct.ngx_buf_s*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %c = alloca %struct.ngx_connection_s*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_event_s* %wev, %struct.ngx_event_s** %wev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %wev.addr, metadata !6780, metadata !824), !dbg !6787
  %0 = bitcast i32* %sent to i8*, !dbg !6788
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6788
  call void @llvm.dbg.declare(metadata i32* %sent, metadata !6781, metadata !824), !dbg !6789
  %1 = bitcast i32* %n to i8*, !dbg !6790
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !6790
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6782, metadata !824), !dbg !6791
  %2 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !6792
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !6792
  call void @llvm.dbg.declare(metadata %struct.ngx_buf_s** %b, metadata !6783, metadata !824), !dbg !6793
  %3 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !6794
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !6794
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !6784, metadata !824), !dbg !6795
  %4 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !6796
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !6796
  call void @llvm.dbg.declare(metadata %struct.ngx_connection_s** %c, metadata !6785, metadata !824), !dbg !6797
  %5 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !6798
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !6798
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !6786, metadata !824), !dbg !6799
  %6 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev.addr, align 4, !dbg !6800, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %6, i32 0, i32 0, !dbg !6801
  %7 = load i8*, i8** %data, align 4, !dbg !6801, !tbaa !929
  %8 = bitcast i8* %7 to %struct.ngx_connection_s*, !dbg !6800
  store %struct.ngx_connection_s* %8, %struct.ngx_connection_s** %c, align 4, !dbg !6802, !tbaa !820
  %9 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6803, !tbaa !820
  %data1 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %9, i32 0, i32 0, !dbg !6804
  %10 = load i8*, i8** %data1, align 4, !dbg !6804, !tbaa !6384
  %11 = bitcast i8* %10 to %struct.ngx_resolver_connection_t*, !dbg !6803
  store %struct.ngx_resolver_connection_t* %11, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6805, !tbaa !820
  %12 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6806, !tbaa !820
  %write_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %12, i32 0, i32 7, !dbg !6807
  %13 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %write_buf, align 4, !dbg !6807, !tbaa !1281
  store %struct.ngx_buf_s* %13, %struct.ngx_buf_s** %b, align 4, !dbg !6808, !tbaa !820
  %14 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6809, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %14, i32 0, i32 8, !dbg !6810
  %15 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !6810, !tbaa !1148
  store %struct.ngx_resolver_s* %15, %struct.ngx_resolver_s** %r, align 4, !dbg !6811, !tbaa !820
  %16 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev.addr, align 4, !dbg !6812, !tbaa !820
  %timedout = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %16, i32 0, i32 1, !dbg !6814
  %17 = bitcast i24* %timedout to i32*, !dbg !6814
  %bf.load = load i32, i32* %17, align 4, !dbg !6814
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !6814
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6814
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !6812
  br i1 %tobool, label %if.then, label %if.end, !dbg !6815

if.then:                                          ; preds = %entry
  br label %failed, !dbg !6816

if.end:                                           ; preds = %entry
  %18 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6818, !tbaa !820
  %sent2 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %18, i32 0, i32 9, !dbg !6819
  %19 = load i32, i32* %sent2, align 4, !dbg !6819, !tbaa !6820
  store i32 %19, i32* %sent, align 4, !dbg !6821, !tbaa !827
  br label %while.cond, !dbg !6822

while.cond:                                       ; preds = %if.end15, %if.end
  %20 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev.addr, align 4, !dbg !6823, !tbaa !820
  %ready = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %20, i32 0, i32 1, !dbg !6824
  %21 = bitcast i24* %ready to i32*, !dbg !6824
  %bf.load3 = load i32, i32* %21, align 4, !dbg !6824
  %bf.lshr4 = lshr i32 %bf.load3, 5, !dbg !6824
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !6824
  %tobool6 = icmp ne i32 %bf.clear5, 0, !dbg !6823
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !6825

land.rhs:                                         ; preds = %while.cond
  %22 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6826, !tbaa !820
  %pos = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %22, i32 0, i32 0, !dbg !6827
  %23 = load i8*, i8** %pos, align 4, !dbg !6827, !tbaa !6310
  %24 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6828, !tbaa !820
  %last = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %24, i32 0, i32 1, !dbg !6829
  %25 = load i8*, i8** %last, align 4, !dbg !6829, !tbaa !6316
  %cmp = icmp ult i8* %23, %25, !dbg !6830
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %26 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %26, label %while.body, label %while.end, !dbg !6822

while.body:                                       ; preds = %land.end
  %27 = load i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)** getelementptr inbounds (%struct.ngx_os_io_t, %struct.ngx_os_io_t* @ngx_io, i32 0, i32 3), align 4, !dbg !6831, !tbaa !6501
  %28 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6833, !tbaa !820
  %29 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6834, !tbaa !820
  %pos7 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %29, i32 0, i32 0, !dbg !6835
  %30 = load i8*, i8** %pos7, align 4, !dbg !6835, !tbaa !6310
  %31 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6836, !tbaa !820
  %last8 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %31, i32 0, i32 1, !dbg !6837
  %32 = load i8*, i8** %last8, align 4, !dbg !6837, !tbaa !6316
  %33 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6838, !tbaa !820
  %pos9 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %33, i32 0, i32 0, !dbg !6839
  %34 = load i8*, i8** %pos9, align 4, !dbg !6839, !tbaa !6310
  %sub.ptr.lhs.cast = ptrtoint i8* %32 to i32, !dbg !6840
  %sub.ptr.rhs.cast = ptrtoint i8* %34 to i32, !dbg !6840
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6840
  %call = call i32 %27(%struct.ngx_connection_s* %28, i8* %30, i32 %sub.ptr.sub), !dbg !6831
  store i32 %call, i32* %n, align 4, !dbg !6841, !tbaa !827
  %35 = load i32, i32* %n, align 4, !dbg !6842, !tbaa !827
  %cmp10 = icmp eq i32 %35, -2, !dbg !6844
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !6845

if.then11:                                        ; preds = %while.body
  br label %while.end, !dbg !6846

if.end12:                                         ; preds = %while.body
  %36 = load i32, i32* %n, align 4, !dbg !6848, !tbaa !827
  %cmp13 = icmp eq i32 %36, -1, !dbg !6850
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !6851

if.then14:                                        ; preds = %if.end12
  br label %failed, !dbg !6852

if.end15:                                         ; preds = %if.end12
  %37 = load i32, i32* %n, align 4, !dbg !6854, !tbaa !827
  %38 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6855, !tbaa !820
  %pos16 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %38, i32 0, i32 0, !dbg !6856
  %39 = load i8*, i8** %pos16, align 4, !dbg !6857, !tbaa !6310
  %add.ptr = getelementptr inbounds i8, i8* %39, i32 %37, !dbg !6857
  store i8* %add.ptr, i8** %pos16, align 4, !dbg !6857, !tbaa !6310
  br label %while.cond, !dbg !6822, !llvm.loop !6858

while.end:                                        ; preds = %if.then11, %land.end
  %40 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6860, !tbaa !820
  %pos17 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %40, i32 0, i32 0, !dbg !6862
  %41 = load i8*, i8** %pos17, align 4, !dbg !6862, !tbaa !6310
  %42 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6863, !tbaa !820
  %start = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %42, i32 0, i32 4, !dbg !6864
  %43 = load i8*, i8** %start, align 4, !dbg !6864, !tbaa !1268
  %cmp18 = icmp ne i8* %41, %43, !dbg !6865
  br i1 %cmp18, label %if.then19, label %if.end36, !dbg !6866

if.then19:                                        ; preds = %while.end
  %44 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %start20 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %44, i32 0, i32 4, !dbg !6867
  %45 = load i8*, i8** %start20, align 4, !dbg !6867, !tbaa !1268
  %46 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %pos21 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %46, i32 0, i32 0, !dbg !6867
  %47 = load i8*, i8** %pos21, align 4, !dbg !6867, !tbaa !6310
  %48 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %last22 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %48, i32 0, i32 1, !dbg !6867
  %49 = load i8*, i8** %last22, align 4, !dbg !6867, !tbaa !6316
  %50 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %pos23 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %50, i32 0, i32 0, !dbg !6867
  %51 = load i8*, i8** %pos23, align 4, !dbg !6867, !tbaa !6310
  %sub.ptr.lhs.cast24 = ptrtoint i8* %49 to i32, !dbg !6867
  %sub.ptr.rhs.cast25 = ptrtoint i8* %51 to i32, !dbg !6867
  %sub.ptr.sub26 = sub i32 %sub.ptr.lhs.cast24, %sub.ptr.rhs.cast25, !dbg !6867
  call void @llvm.memmove.p0i8.p0i8.i32(i8* %45, i8* %47, i32 %sub.ptr.sub26, i32 1, i1 false), !dbg !6867
  %52 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %last27 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %52, i32 0, i32 1, !dbg !6867
  %53 = load i8*, i8** %last27, align 4, !dbg !6867, !tbaa !6316
  %54 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6867, !tbaa !820
  %pos28 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %54, i32 0, i32 0, !dbg !6867
  %55 = load i8*, i8** %pos28, align 4, !dbg !6867, !tbaa !6310
  %sub.ptr.lhs.cast29 = ptrtoint i8* %53 to i32, !dbg !6867
  %sub.ptr.rhs.cast30 = ptrtoint i8* %55 to i32, !dbg !6867
  %sub.ptr.sub31 = sub i32 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30, !dbg !6867
  %add.ptr32 = getelementptr inbounds i8, i8* %45, i32 %sub.ptr.sub31, !dbg !6867
  %56 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6869, !tbaa !820
  %last33 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %56, i32 0, i32 1, !dbg !6870
  store i8* %add.ptr32, i8** %last33, align 4, !dbg !6871, !tbaa !6316
  %57 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6872, !tbaa !820
  %start34 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %57, i32 0, i32 4, !dbg !6873
  %58 = load i8*, i8** %start34, align 4, !dbg !6873, !tbaa !1268
  %59 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6874, !tbaa !820
  %pos35 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %59, i32 0, i32 0, !dbg !6875
  store i8* %58, i8** %pos35, align 4, !dbg !6876, !tbaa !6310
  br label %if.end36, !dbg !6877

if.end36:                                         ; preds = %if.then19, %while.end
  %60 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6878, !tbaa !820
  %sent37 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %60, i32 0, i32 9, !dbg !6880
  %61 = load i32, i32* %sent37, align 4, !dbg !6880, !tbaa !6820
  %62 = load i32, i32* %sent, align 4, !dbg !6881, !tbaa !827
  %cmp38 = icmp ne i32 %61, %62, !dbg !6882
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !6883

if.then39:                                        ; preds = %if.end36
  %63 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev.addr, align 4, !dbg !6884, !tbaa !820
  %64 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !6886, !tbaa !820
  %tcp_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %64, i32 0, i32 24, !dbg !6887
  %65 = load i32, i32* %tcp_timeout, align 4, !dbg !6887, !tbaa !950
  %mul = mul nsw i32 %65, 1000, !dbg !6888
  call void @ngx_event_add_timer(%struct.ngx_event_s* %63, i32 %mul), !dbg !6889
  br label %if.end40, !dbg !6890

if.end40:                                         ; preds = %if.then39, %if.end36
  %66 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev.addr, align 4, !dbg !6891, !tbaa !820
  %call41 = call i32 @ngx_handle_write_event(%struct.ngx_event_s* %66, i32 0), !dbg !6893
  %cmp42 = icmp ne i32 %call41, 0, !dbg !6894
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !6895

if.then43:                                        ; preds = %if.end40
  br label %failed, !dbg !6896

if.end44:                                         ; preds = %if.end40
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6898

failed:                                           ; preds = %if.then43, %if.then14, %if.then
  %67 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6899, !tbaa !820
  call void @ngx_close_connection(%struct.ngx_connection_s* %67), !dbg !6900
  %68 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6901, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %68, i32 0, i32 1, !dbg !6902
  store %struct.ngx_connection_s* null, %struct.ngx_connection_s** %tcp, align 4, !dbg !6903, !tbaa !1248
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6904
  br label %cleanup, !dbg !6904

cleanup:                                          ; preds = %failed, %if.end44
  %69 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %69) #5, !dbg !6904
  %70 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %70) #5, !dbg !6904
  %71 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %71) #5, !dbg !6904
  %72 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !6904
  %73 = bitcast i32* %n to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !6904
  %74 = bitcast i32* %sent to i8*, !dbg !6904
  call void @llvm.lifetime.end(i64 4, i8* %74) #5, !dbg !6904
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !6904

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
define internal void @ngx_resolver_tcp_read(%struct.ngx_event_s* %rev) #0 !dbg !6905 {
entry:
  %rev.addr = alloca %struct.ngx_event_s*, align 4
  %p = alloca i8*, align 4
  %size = alloca i32, align 4
  %n = alloca i32, align 4
  %qlen = alloca i16, align 2
  %b = alloca %struct.ngx_buf_s*, align 4
  %r = alloca %struct.ngx_resolver_s*, align 4
  %c = alloca %struct.ngx_connection_s*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_event_s* %rev, %struct.ngx_event_s** %rev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %rev.addr, metadata !6907, metadata !824), !dbg !6916
  %0 = bitcast i8** %p to i8*, !dbg !6917
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !6917
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6908, metadata !824), !dbg !6918
  %1 = bitcast i32* %size to i8*, !dbg !6919
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !6919
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6909, metadata !824), !dbg !6920
  %2 = bitcast i32* %n to i8*, !dbg !6921
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !6921
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6910, metadata !824), !dbg !6922
  %3 = bitcast i16* %qlen to i8*, !dbg !6923
  call void @llvm.lifetime.start(i64 2, i8* %3) #5, !dbg !6923
  call void @llvm.dbg.declare(metadata i16* %qlen, metadata !6911, metadata !824), !dbg !6924
  %4 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !6925
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !6925
  call void @llvm.dbg.declare(metadata %struct.ngx_buf_s** %b, metadata !6912, metadata !824), !dbg !6926
  %5 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !6927
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !6927
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r, metadata !6913, metadata !824), !dbg !6928
  %6 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !6929
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !6929
  call void @llvm.dbg.declare(metadata %struct.ngx_connection_s** %c, metadata !6914, metadata !824), !dbg !6930
  %7 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !6931
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !6931
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !6915, metadata !824), !dbg !6932
  %8 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev.addr, align 4, !dbg !6933, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %8, i32 0, i32 0, !dbg !6934
  %9 = load i8*, i8** %data, align 4, !dbg !6934, !tbaa !929
  %10 = bitcast i8* %9 to %struct.ngx_connection_s*, !dbg !6933
  store %struct.ngx_connection_s* %10, %struct.ngx_connection_s** %c, align 4, !dbg !6935, !tbaa !820
  %11 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6936, !tbaa !820
  %data1 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %11, i32 0, i32 0, !dbg !6937
  %12 = load i8*, i8** %data1, align 4, !dbg !6937, !tbaa !6384
  %13 = bitcast i8* %12 to %struct.ngx_resolver_connection_t*, !dbg !6936
  store %struct.ngx_resolver_connection_t* %13, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6938, !tbaa !820
  %14 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6939, !tbaa !820
  %read_buf = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %14, i32 0, i32 6, !dbg !6940
  %15 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %read_buf, align 4, !dbg !6940, !tbaa !1260
  store %struct.ngx_buf_s* %15, %struct.ngx_buf_s** %b, align 4, !dbg !6941, !tbaa !820
  %16 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !6942, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %16, i32 0, i32 8, !dbg !6943
  %17 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !6943, !tbaa !1148
  store %struct.ngx_resolver_s* %17, %struct.ngx_resolver_s** %r, align 4, !dbg !6944, !tbaa !820
  br label %while.cond, !dbg !6945

while.cond:                                       ; preds = %if.end52, %entry
  %18 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev.addr, align 4, !dbg !6946, !tbaa !820
  %ready = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %18, i32 0, i32 1, !dbg !6947
  %19 = bitcast i24* %ready to i32*, !dbg !6947
  %bf.load = load i32, i32* %19, align 4, !dbg !6947
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !6947
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6947
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !6945
  br i1 %tobool, label %while.body, label %while.end, !dbg !6945

while.body:                                       ; preds = %while.cond
  %20 = load i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)** getelementptr inbounds (%struct.ngx_os_io_t, %struct.ngx_os_io_t* @ngx_io, i32 0, i32 0), align 4, !dbg !6948, !tbaa !6950
  %21 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !6951, !tbaa !820
  %22 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6952, !tbaa !820
  %last = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %22, i32 0, i32 1, !dbg !6953
  %23 = load i8*, i8** %last, align 4, !dbg !6953, !tbaa !6316
  %24 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6954, !tbaa !820
  %end = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %24, i32 0, i32 5, !dbg !6955
  %25 = load i8*, i8** %end, align 4, !dbg !6955, !tbaa !6299
  %26 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6956, !tbaa !820
  %last2 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %26, i32 0, i32 1, !dbg !6957
  %27 = load i8*, i8** %last2, align 4, !dbg !6957, !tbaa !6316
  %sub.ptr.lhs.cast = ptrtoint i8* %25 to i32, !dbg !6958
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i32, !dbg !6958
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6958
  %call = call i32 %20(%struct.ngx_connection_s* %21, i8* %23, i32 %sub.ptr.sub), !dbg !6948
  store i32 %call, i32* %n, align 4, !dbg !6959, !tbaa !827
  %28 = load i32, i32* %n, align 4, !dbg !6960, !tbaa !827
  %cmp = icmp eq i32 %28, -2, !dbg !6962
  br i1 %cmp, label %if.then, label %if.end, !dbg !6963

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !6964

if.end:                                           ; preds = %while.body
  %29 = load i32, i32* %n, align 4, !dbg !6966, !tbaa !827
  %cmp3 = icmp eq i32 %29, -1, !dbg !6968
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !6969

lor.lhs.false:                                    ; preds = %if.end
  %30 = load i32, i32* %n, align 4, !dbg !6970, !tbaa !827
  %cmp4 = icmp eq i32 %30, 0, !dbg !6971
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6972

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %failed, !dbg !6973

if.end6:                                          ; preds = %lor.lhs.false
  %31 = load i32, i32* %n, align 4, !dbg !6975, !tbaa !827
  %32 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6976, !tbaa !820
  %last7 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %32, i32 0, i32 1, !dbg !6977
  %33 = load i8*, i8** %last7, align 4, !dbg !6978, !tbaa !6316
  %add.ptr = getelementptr inbounds i8, i8* %33, i32 %31, !dbg !6978
  store i8* %add.ptr, i8** %last7, align 4, !dbg !6978, !tbaa !6316
  br label %for.cond, !dbg !6979

for.cond:                                         ; preds = %if.end26, %if.end6
  %34 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6980, !tbaa !820
  %pos = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %34, i32 0, i32 0, !dbg !6984
  %35 = load i8*, i8** %pos, align 4, !dbg !6984, !tbaa !6310
  store i8* %35, i8** %p, align 4, !dbg !6985, !tbaa !820
  %36 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !6986, !tbaa !820
  %last8 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %36, i32 0, i32 1, !dbg !6987
  %37 = load i8*, i8** %last8, align 4, !dbg !6987, !tbaa !6316
  %38 = load i8*, i8** %p, align 4, !dbg !6988, !tbaa !820
  %sub.ptr.lhs.cast9 = ptrtoint i8* %37 to i32, !dbg !6989
  %sub.ptr.rhs.cast10 = ptrtoint i8* %38 to i32, !dbg !6989
  %sub.ptr.sub11 = sub i32 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10, !dbg !6989
  store i32 %sub.ptr.sub11, i32* %size, align 4, !dbg !6990, !tbaa !827
  %39 = load i32, i32* %size, align 4, !dbg !6991, !tbaa !827
  %cmp12 = icmp ult i32 %39, 2, !dbg !6993
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6994

if.then13:                                        ; preds = %for.cond
  br label %for.end, !dbg !6995

if.end14:                                         ; preds = %for.cond
  %40 = load i8*, i8** %p, align 4, !dbg !6997, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6997
  store i8* %incdec.ptr, i8** %p, align 4, !dbg !6997, !tbaa !820
  %41 = load i8, i8* %40, align 1, !dbg !6998, !tbaa !1828
  %conv = zext i8 %41 to i16, !dbg !6999
  %conv15 = zext i16 %conv to i32, !dbg !6999
  %shl = shl i32 %conv15, 8, !dbg !7000
  %conv16 = trunc i32 %shl to i16, !dbg !6999
  store i16 %conv16, i16* %qlen, align 2, !dbg !7001, !tbaa !6248
  %42 = load i8*, i8** %p, align 4, !dbg !7002, !tbaa !820
  %incdec.ptr17 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !7002
  store i8* %incdec.ptr17, i8** %p, align 4, !dbg !7002, !tbaa !820
  %43 = load i8, i8* %42, align 1, !dbg !7003, !tbaa !1828
  %conv18 = zext i8 %43 to i32, !dbg !7003
  %44 = load i16, i16* %qlen, align 2, !dbg !7004, !tbaa !6248
  %conv19 = zext i16 %44 to i32, !dbg !7004
  %add = add nsw i32 %conv19, %conv18, !dbg !7004
  %conv20 = trunc i32 %add to i16, !dbg !7004
  store i16 %conv20, i16* %qlen, align 2, !dbg !7004, !tbaa !6248
  %45 = load i32, i32* %size, align 4, !dbg !7005, !tbaa !827
  %46 = load i16, i16* %qlen, align 2, !dbg !7007, !tbaa !6248
  %conv21 = zext i16 %46 to i32, !dbg !7007
  %add22 = add nsw i32 2, %conv21, !dbg !7008
  %cmp23 = icmp ult i32 %45, %add22, !dbg !7009
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7010

if.then25:                                        ; preds = %if.end14
  br label %for.end, !dbg !7011

if.end26:                                         ; preds = %if.end14
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r, align 4, !dbg !7013, !tbaa !820
  %48 = load i8*, i8** %p, align 4, !dbg !7014, !tbaa !820
  %49 = load i16, i16* %qlen, align 2, !dbg !7015, !tbaa !6248
  %conv27 = zext i16 %49 to i32, !dbg !7015
  call void @ngx_resolver_process_response(%struct.ngx_resolver_s* %47, i8* %48, i32 %conv27, i32 1), !dbg !7016
  %50 = load i16, i16* %qlen, align 2, !dbg !7017, !tbaa !6248
  %conv28 = zext i16 %50 to i32, !dbg !7017
  %add29 = add nsw i32 2, %conv28, !dbg !7018
  %51 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7019, !tbaa !820
  %pos30 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %51, i32 0, i32 0, !dbg !7020
  %52 = load i8*, i8** %pos30, align 4, !dbg !7021, !tbaa !6310
  %add.ptr31 = getelementptr inbounds i8, i8* %52, i32 %add29, !dbg !7021
  store i8* %add.ptr31, i8** %pos30, align 4, !dbg !7021, !tbaa !6310
  br label %for.cond, !dbg !7022, !llvm.loop !7023

for.end:                                          ; preds = %if.then25, %if.then13
  %53 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7026, !tbaa !820
  %pos32 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %53, i32 0, i32 0, !dbg !7028
  %54 = load i8*, i8** %pos32, align 4, !dbg !7028, !tbaa !6310
  %55 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7029, !tbaa !820
  %start = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %55, i32 0, i32 4, !dbg !7030
  %56 = load i8*, i8** %start, align 4, !dbg !7030, !tbaa !1268
  %cmp33 = icmp ne i8* %54, %56, !dbg !7031
  br i1 %cmp33, label %if.then35, label %if.end52, !dbg !7032

if.then35:                                        ; preds = %for.end
  %57 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %start36 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %57, i32 0, i32 4, !dbg !7033
  %58 = load i8*, i8** %start36, align 4, !dbg !7033, !tbaa !1268
  %59 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %pos37 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %59, i32 0, i32 0, !dbg !7033
  %60 = load i8*, i8** %pos37, align 4, !dbg !7033, !tbaa !6310
  %61 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %last38 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %61, i32 0, i32 1, !dbg !7033
  %62 = load i8*, i8** %last38, align 4, !dbg !7033, !tbaa !6316
  %63 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %pos39 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %63, i32 0, i32 0, !dbg !7033
  %64 = load i8*, i8** %pos39, align 4, !dbg !7033, !tbaa !6310
  %sub.ptr.lhs.cast40 = ptrtoint i8* %62 to i32, !dbg !7033
  %sub.ptr.rhs.cast41 = ptrtoint i8* %64 to i32, !dbg !7033
  %sub.ptr.sub42 = sub i32 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !7033
  call void @llvm.memmove.p0i8.p0i8.i32(i8* %58, i8* %60, i32 %sub.ptr.sub42, i32 1, i1 false), !dbg !7033
  %65 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %last43 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %65, i32 0, i32 1, !dbg !7033
  %66 = load i8*, i8** %last43, align 4, !dbg !7033, !tbaa !6316
  %67 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7033, !tbaa !820
  %pos44 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %67, i32 0, i32 0, !dbg !7033
  %68 = load i8*, i8** %pos44, align 4, !dbg !7033, !tbaa !6310
  %sub.ptr.lhs.cast45 = ptrtoint i8* %66 to i32, !dbg !7033
  %sub.ptr.rhs.cast46 = ptrtoint i8* %68 to i32, !dbg !7033
  %sub.ptr.sub47 = sub i32 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46, !dbg !7033
  %add.ptr48 = getelementptr inbounds i8, i8* %58, i32 %sub.ptr.sub47, !dbg !7033
  %69 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7035, !tbaa !820
  %last49 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %69, i32 0, i32 1, !dbg !7036
  store i8* %add.ptr48, i8** %last49, align 4, !dbg !7037, !tbaa !6316
  %70 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7038, !tbaa !820
  %start50 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %70, i32 0, i32 4, !dbg !7039
  %71 = load i8*, i8** %start50, align 4, !dbg !7039, !tbaa !1268
  %72 = load %struct.ngx_buf_s*, %struct.ngx_buf_s** %b, align 4, !dbg !7040, !tbaa !820
  %pos51 = getelementptr inbounds %struct.ngx_buf_s, %struct.ngx_buf_s* %72, i32 0, i32 0, !dbg !7041
  store i8* %71, i8** %pos51, align 4, !dbg !7042, !tbaa !6310
  br label %if.end52, !dbg !7043

if.end52:                                         ; preds = %if.then35, %for.end
  br label %while.cond, !dbg !6945, !llvm.loop !7044

while.end:                                        ; preds = %if.then, %while.cond
  %73 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev.addr, align 4, !dbg !7046, !tbaa !820
  %call53 = call i32 @ngx_handle_read_event(%struct.ngx_event_s* %73, i32 0), !dbg !7048
  %cmp54 = icmp ne i32 %call53, 0, !dbg !7049
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7050

if.then56:                                        ; preds = %while.end
  br label %failed, !dbg !7051

if.end57:                                         ; preds = %while.end
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7053

failed:                                           ; preds = %if.then56, %if.then5
  %74 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !7054, !tbaa !820
  call void @ngx_close_connection(%struct.ngx_connection_s* %74), !dbg !7055
  %75 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7056, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %75, i32 0, i32 1, !dbg !7057
  store %struct.ngx_connection_s* null, %struct.ngx_connection_s** %tcp, align 4, !dbg !7058, !tbaa !1248
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !7059
  br label %cleanup, !dbg !7059

cleanup:                                          ; preds = %failed, %if.end57
  %76 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %76) #5, !dbg !7059
  %77 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %77) #5, !dbg !7059
  %78 = bitcast %struct.ngx_resolver_s** %r to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %78) #5, !dbg !7059
  %79 = bitcast %struct.ngx_buf_s** %b to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %79) #5, !dbg !7059
  %80 = bitcast i16* %qlen to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 2, i8* %80) #5, !dbg !7059
  %81 = bitcast i32* %n to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %81) #5, !dbg !7059
  %82 = bitcast i32* %size to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %82) #5, !dbg !7059
  %83 = bitcast i8** %p to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %83) #5, !dbg !7059
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7059

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @socket(i32, i32, i32) #3

declare i32* @__errno_location() #3

declare %struct.ngx_connection_s* @ngx_get_connection(i32, %struct.ngx_log_s*) #3

declare i32 @close(i32) #3

declare i32 @ngx_nonblocking(i32) #3

declare i32 @connect(i32, %struct.sockaddr*, i32) #3

declare i32 @ngx_blocking(i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2

declare i32 @ngx_handle_write_event(%struct.ngx_event_s*, i32) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_process_response(%struct.ngx_resolver_s* %r, i8* %buf, i32 %n, i32 %tcp) #0 !dbg !7060 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %buf.addr = alloca i8*, align 4
  %n.addr = alloca i32, align 4
  %tcp.addr = alloca i32, align 4
  %err = alloca i8*, align 4
  %i = alloca i32, align 4
  %times = alloca i32, align 4
  %ident = alloca i32, align 4
  %qident = alloca i32, align 4
  %flags = alloca i32, align 4
  %code = alloca i32, align 4
  %nqs = alloca i32, align 4
  %nan = alloca i32, align 4
  %trunc = alloca i32, align 4
  %qtype = alloca i32, align 4
  %qclass = alloca i32, align 4
  %qident6 = alloca i32, align 4
  %q = alloca %struct.ngx_queue_s*, align 4
  %qs = alloca %struct.ngx_resolver_qs_t*, align 4
  %response = alloca %struct.ngx_resolver_hdr_t*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !7064, metadata !824), !dbg !7085
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7065, metadata !824), !dbg !7086
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7066, metadata !824), !dbg !7087
  store i32 %tcp, i32* %tcp.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %tcp.addr, metadata !7067, metadata !824), !dbg !7088
  %0 = bitcast i8** %err to i8*, !dbg !7089
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !7089
  call void @llvm.dbg.declare(metadata i8** %err, metadata !7068, metadata !824), !dbg !7090
  %1 = bitcast i32* %i to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7069, metadata !824), !dbg !7092
  %2 = bitcast i32* %times to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %times, metadata !7070, metadata !824), !dbg !7093
  %3 = bitcast i32* %ident to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %ident, metadata !7071, metadata !824), !dbg !7094
  %4 = bitcast i32* %qident to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %qident, metadata !7072, metadata !824), !dbg !7095
  %5 = bitcast i32* %flags to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7073, metadata !824), !dbg !7096
  %6 = bitcast i32* %code to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7074, metadata !824), !dbg !7097
  %7 = bitcast i32* %nqs to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %nqs, metadata !7075, metadata !824), !dbg !7098
  %8 = bitcast i32* %nan to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %nan, metadata !7076, metadata !824), !dbg !7099
  %9 = bitcast i32* %trunc to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %trunc, metadata !7077, metadata !824), !dbg !7100
  %10 = bitcast i32* %qtype to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %qtype, metadata !7078, metadata !824), !dbg !7101
  %11 = bitcast i32* %qclass to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %qclass, metadata !7079, metadata !824), !dbg !7102
  %12 = bitcast i32* %qident6 to i8*, !dbg !7103
  call void @llvm.lifetime.start(i64 4, i8* %12) #5, !dbg !7103
  call void @llvm.dbg.declare(metadata i32* %qident6, metadata !7080, metadata !824), !dbg !7104
  %13 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !7105
  call void @llvm.lifetime.start(i64 4, i8* %13) #5, !dbg !7105
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %q, metadata !7081, metadata !824), !dbg !7106
  %14 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !7107
  call void @llvm.lifetime.start(i64 4, i8* %14) #5, !dbg !7107
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_qs_t** %qs, metadata !7082, metadata !824), !dbg !7108
  %15 = bitcast %struct.ngx_resolver_hdr_t** %response to i8*, !dbg !7109
  call void @llvm.lifetime.start(i64 4, i8* %15) #5, !dbg !7109
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_hdr_t** %response, metadata !7083, metadata !824), !dbg !7110
  %16 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !7111
  call void @llvm.lifetime.start(i64 4, i8* %16) #5, !dbg !7111
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !7084, metadata !824), !dbg !7112
  %17 = load i32, i32* %n.addr, align 4, !dbg !7113, !tbaa !827
  %cmp = icmp ult i32 %17, 12, !dbg !7115
  br i1 %cmp, label %if.then, label %if.end, !dbg !7116

if.then:                                          ; preds = %entry
  br label %short_response, !dbg !7117

if.end:                                           ; preds = %entry
  %18 = load i8*, i8** %buf.addr, align 4, !dbg !7119, !tbaa !820
  %19 = bitcast i8* %18 to %struct.ngx_resolver_hdr_t*, !dbg !7120
  store %struct.ngx_resolver_hdr_t* %19, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7121, !tbaa !820
  %20 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7122, !tbaa !820
  %ident_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %20, i32 0, i32 0, !dbg !7123
  %21 = load i8, i8* %ident_hi, align 1, !dbg !7123, !tbaa !3964
  %conv = zext i8 %21 to i32, !dbg !7122
  %shl = shl i32 %conv, 8, !dbg !7124
  %22 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7125, !tbaa !820
  %ident_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %22, i32 0, i32 1, !dbg !7126
  %23 = load i8, i8* %ident_lo, align 1, !dbg !7126, !tbaa !3972
  %conv1 = zext i8 %23 to i32, !dbg !7125
  %add = add nsw i32 %shl, %conv1, !dbg !7127
  store i32 %add, i32* %ident, align 4, !dbg !7128, !tbaa !827
  %24 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7129, !tbaa !820
  %flags_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %24, i32 0, i32 2, !dbg !7130
  %25 = load i8, i8* %flags_hi, align 1, !dbg !7130, !tbaa !3976
  %conv2 = zext i8 %25 to i32, !dbg !7129
  %shl3 = shl i32 %conv2, 8, !dbg !7131
  %26 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7132, !tbaa !820
  %flags_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %26, i32 0, i32 3, !dbg !7133
  %27 = load i8, i8* %flags_lo, align 1, !dbg !7133, !tbaa !3980
  %conv4 = zext i8 %27 to i32, !dbg !7132
  %add5 = add nsw i32 %shl3, %conv4, !dbg !7134
  store i32 %add5, i32* %flags, align 4, !dbg !7135, !tbaa !827
  %28 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7136, !tbaa !820
  %nqs_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %28, i32 0, i32 4, !dbg !7137
  %29 = load i8, i8* %nqs_hi, align 1, !dbg !7137, !tbaa !3984
  %conv6 = zext i8 %29 to i32, !dbg !7136
  %shl7 = shl i32 %conv6, 8, !dbg !7138
  %30 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7139, !tbaa !820
  %nqs_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %30, i32 0, i32 5, !dbg !7140
  %31 = load i8, i8* %nqs_lo, align 1, !dbg !7140, !tbaa !3988
  %conv8 = zext i8 %31 to i32, !dbg !7139
  %add9 = add nsw i32 %shl7, %conv8, !dbg !7141
  store i32 %add9, i32* %nqs, align 4, !dbg !7142, !tbaa !827
  %32 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7143, !tbaa !820
  %nan_hi = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %32, i32 0, i32 6, !dbg !7144
  %33 = load i8, i8* %nan_hi, align 1, !dbg !7144, !tbaa !3992
  %conv10 = zext i8 %33 to i32, !dbg !7143
  %shl11 = shl i32 %conv10, 8, !dbg !7145
  %34 = load %struct.ngx_resolver_hdr_t*, %struct.ngx_resolver_hdr_t** %response, align 4, !dbg !7146, !tbaa !820
  %nan_lo = getelementptr inbounds %struct.ngx_resolver_hdr_t, %struct.ngx_resolver_hdr_t* %34, i32 0, i32 7, !dbg !7147
  %35 = load i8, i8* %nan_lo, align 1, !dbg !7147, !tbaa !3996
  %conv12 = zext i8 %35 to i32, !dbg !7146
  %add13 = add nsw i32 %shl11, %conv12, !dbg !7148
  store i32 %add13, i32* %nan, align 4, !dbg !7149, !tbaa !827
  %36 = load i32, i32* %flags, align 4, !dbg !7150, !tbaa !827
  %and = and i32 %36, 512, !dbg !7151
  store i32 %and, i32* %trunc, align 4, !dbg !7152, !tbaa !827
  %37 = load i32, i32* %flags, align 4, !dbg !7153, !tbaa !827
  %and14 = and i32 %37, 63600, !dbg !7155
  %cmp15 = icmp ne i32 %and14, 32768, !dbg !7156
  br i1 %cmp15, label %if.then18, label %lor.lhs.false, !dbg !7157

lor.lhs.false:                                    ; preds = %if.end
  %38 = load i32, i32* %trunc, align 4, !dbg !7158, !tbaa !827
  %tobool = icmp ne i32 %38, 0, !dbg !7158
  br i1 %tobool, label %land.lhs.true, label %if.end27, !dbg !7159

land.lhs.true:                                    ; preds = %lor.lhs.false
  %39 = load i32, i32* %tcp.addr, align 4, !dbg !7160, !tbaa !827
  %tobool17 = icmp ne i32 %39, 0, !dbg !7160
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !7161

if.then18:                                        ; preds = %land.lhs.true, %if.end
  %40 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7162, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %40, i32 0, i32 2, !dbg !7162
  %41 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !7162, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %41, i32 0, i32 0, !dbg !7162
  %42 = load i32, i32* %log_level, align 4, !dbg !7162, !tbaa !2999
  %43 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7162, !tbaa !820
  %log_level19 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %43, i32 0, i32 27, !dbg !7162
  %44 = load i32, i32* %log_level19, align 4, !dbg !7162, !tbaa !969
  %cmp20 = icmp uge i32 %42, %44, !dbg !7162
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !7165

if.then22:                                        ; preds = %if.then18
  %45 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7162, !tbaa !820
  %log_level23 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %45, i32 0, i32 27, !dbg !7162
  %46 = load i32, i32* %log_level23, align 4, !dbg !7162, !tbaa !969
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7162, !tbaa !820
  %log24 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %47, i32 0, i32 2, !dbg !7162
  %48 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log24, align 4, !dbg !7162, !tbaa !965
  %49 = load i32, i32* %tcp.addr, align 4, !dbg !7162, !tbaa !827
  %tobool25 = icmp ne i32 %49, 0, !dbg !7162
  %cond = select i1 %tobool25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), !dbg !7162
  %50 = load i32, i32* %ident, align 4, !dbg !7162, !tbaa !827
  %51 = load i32, i32* %flags, align 4, !dbg !7162, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %46, %struct.ngx_log_s* %48, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i32 0, i32 0), i8* %cond, i32 %50, i32 %51), !dbg !7162
  br label %if.end26, !dbg !7162

if.end26:                                         ; preds = %if.then22, %if.then18
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7166

if.end27:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %52 = load i32, i32* %flags, align 4, !dbg !7167, !tbaa !827
  %and28 = and i32 %52, 15, !dbg !7168
  store i32 %and28, i32* %code, align 4, !dbg !7169, !tbaa !827
  %53 = load i32, i32* %code, align 4, !dbg !7170, !tbaa !827
  %cmp29 = icmp eq i32 %53, 1, !dbg !7172
  br i1 %cmp29, label %if.then31, label %if.end63, !dbg !7173

if.then31:                                        ; preds = %if.end27
  store i32 0, i32* %times, align 4, !dbg !7174, !tbaa !827
  %54 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7176, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %54, i32 0, i32 12, !dbg !7176
  %next = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue, i32 0, i32 1, !dbg !7176
  %55 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next, align 4, !dbg !7176, !tbaa !905
  store %struct.ngx_queue_s* %55, %struct.ngx_queue_s** %q, align 4, !dbg !7178, !tbaa !820
  br label %for.cond, !dbg !7179

for.cond:                                         ; preds = %for.inc, %if.then31
  %56 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !7180, !tbaa !820
  %57 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7182, !tbaa !820
  %name_resend_queue32 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %57, i32 0, i32 12, !dbg !7182
  %cmp33 = icmp ne %struct.ngx_queue_s* %56, %name_resend_queue32, !dbg !7183
  br i1 %cmp33, label %land.rhs, label %land.end, !dbg !7184

land.rhs:                                         ; preds = %for.cond
  %58 = load i32, i32* %times, align 4, !dbg !7185, !tbaa !827
  %inc = add i32 %58, 1, !dbg !7185
  store i32 %inc, i32* %times, align 4, !dbg !7185, !tbaa !827
  %cmp35 = icmp ult i32 %58, 100, !dbg !7186
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %59 = phi i1 [ false, %for.cond ], [ %cmp35, %land.rhs ]
  br i1 %59, label %for.body, label %for.end, !dbg !7187

for.body:                                         ; preds = %land.end
  %60 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !7188, !tbaa !820
  %61 = bitcast %struct.ngx_queue_s* %60 to i8*, !dbg !7188
  %add.ptr = getelementptr inbounds i8, i8* %61, i32 -20, !dbg !7188
  %62 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !7188
  store %struct.ngx_resolver_node_t* %62, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7190, !tbaa !820
  %63 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7191, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %63, i32 0, i32 6, !dbg !7192
  %64 = load i8*, i8** %query, align 4, !dbg !7192, !tbaa !2440
  %arrayidx = getelementptr inbounds i8, i8* %64, i32 0, !dbg !7191
  %65 = load i8, i8* %arrayidx, align 1, !dbg !7191, !tbaa !1828
  %conv37 = zext i8 %65 to i32, !dbg !7191
  %shl38 = shl i32 %conv37, 8, !dbg !7193
  %66 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7194, !tbaa !820
  %query39 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %66, i32 0, i32 6, !dbg !7195
  %67 = load i8*, i8** %query39, align 4, !dbg !7195, !tbaa !2440
  %arrayidx40 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7194
  %68 = load i8, i8* %arrayidx40, align 1, !dbg !7194, !tbaa !1828
  %conv41 = zext i8 %68 to i32, !dbg !7194
  %add42 = add nsw i32 %shl38, %conv41, !dbg !7196
  store i32 %add42, i32* %qident, align 4, !dbg !7197, !tbaa !827
  %69 = load i32, i32* %qident, align 4, !dbg !7198, !tbaa !827
  %70 = load i32, i32* %ident, align 4, !dbg !7200, !tbaa !827
  %cmp43 = icmp eq i32 %69, %70, !dbg !7201
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !7202

if.then45:                                        ; preds = %for.body
  br label %dns_error_name, !dbg !7203

if.end46:                                         ; preds = %for.body
  %71 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7205, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %71, i32 0, i32 7, !dbg !7207
  %72 = load i8*, i8** %query6, align 4, !dbg !7207, !tbaa !2453
  %tobool47 = icmp ne i8* %72, null, !dbg !7205
  br i1 %tobool47, label %if.then48, label %if.end61, !dbg !7208

if.then48:                                        ; preds = %if.end46
  %73 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7209, !tbaa !820
  %query649 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %73, i32 0, i32 7, !dbg !7211
  %74 = load i8*, i8** %query649, align 4, !dbg !7211, !tbaa !2453
  %arrayidx50 = getelementptr inbounds i8, i8* %74, i32 0, !dbg !7209
  %75 = load i8, i8* %arrayidx50, align 1, !dbg !7209, !tbaa !1828
  %conv51 = zext i8 %75 to i32, !dbg !7209
  %shl52 = shl i32 %conv51, 8, !dbg !7212
  %76 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7213, !tbaa !820
  %query653 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %76, i32 0, i32 7, !dbg !7214
  %77 = load i8*, i8** %query653, align 4, !dbg !7214, !tbaa !2453
  %arrayidx54 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !7213
  %78 = load i8, i8* %arrayidx54, align 1, !dbg !7213, !tbaa !1828
  %conv55 = zext i8 %78 to i32, !dbg !7213
  %add56 = add nsw i32 %shl52, %conv55, !dbg !7215
  store i32 %add56, i32* %qident6, align 4, !dbg !7216, !tbaa !827
  %79 = load i32, i32* %qident6, align 4, !dbg !7217, !tbaa !827
  %80 = load i32, i32* %ident, align 4, !dbg !7219, !tbaa !827
  %cmp57 = icmp eq i32 %79, %80, !dbg !7220
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !7221

if.then59:                                        ; preds = %if.then48
  br label %dns_error_name, !dbg !7222

if.end60:                                         ; preds = %if.then48
  br label %if.end61, !dbg !7224

if.end61:                                         ; preds = %if.end60, %if.end46
  br label %for.inc, !dbg !7225

for.inc:                                          ; preds = %if.end61
  %81 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !7226, !tbaa !820
  %next62 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %81, i32 0, i32 1, !dbg !7226
  %82 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next62, align 4, !dbg !7226, !tbaa !905
  store %struct.ngx_queue_s* %82, %struct.ngx_queue_s** %q, align 4, !dbg !7227, !tbaa !820
  br label %for.cond, !dbg !7228, !llvm.loop !7229

for.end:                                          ; preds = %land.end
  br label %dns_error, !dbg !7231

if.end63:                                         ; preds = %if.end27
  %83 = load i32, i32* %code, align 4, !dbg !7232, !tbaa !827
  %cmp64 = icmp ugt i32 %83, 5, !dbg !7234
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !7235

if.then66:                                        ; preds = %if.end63
  br label %dns_error, !dbg !7236

if.end67:                                         ; preds = %if.end63
  %84 = load i32, i32* %nqs, align 4, !dbg !7238, !tbaa !827
  %cmp68 = icmp ne i32 %84, 1, !dbg !7240
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !7241

if.then70:                                        ; preds = %if.end67
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i32 0, i32 0), i8** %err, align 4, !dbg !7242, !tbaa !820
  br label %done, !dbg !7244

if.end71:                                         ; preds = %if.end67
  store i32 12, i32* %i, align 4, !dbg !7245, !tbaa !827
  br label %while.cond, !dbg !7246

while.cond:                                       ; preds = %if.end79, %if.end71
  %85 = load i32, i32* %i, align 4, !dbg !7247, !tbaa !827
  %86 = load i32, i32* %n.addr, align 4, !dbg !7248, !tbaa !827
  %cmp72 = icmp ult i32 %85, %86, !dbg !7249
  br i1 %cmp72, label %while.body, label %while.end, !dbg !7246

while.body:                                       ; preds = %while.cond
  %87 = load i8*, i8** %buf.addr, align 4, !dbg !7250, !tbaa !820
  %88 = load i32, i32* %i, align 4, !dbg !7253, !tbaa !827
  %arrayidx74 = getelementptr inbounds i8, i8* %87, i32 %88, !dbg !7250
  %89 = load i8, i8* %arrayidx74, align 1, !dbg !7250, !tbaa !1828
  %conv75 = zext i8 %89 to i32, !dbg !7250
  %cmp76 = icmp eq i32 %conv75, 0, !dbg !7254
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !7255

if.then78:                                        ; preds = %while.body
  br label %found, !dbg !7256

if.end79:                                         ; preds = %while.body
  %90 = load i8*, i8** %buf.addr, align 4, !dbg !7258, !tbaa !820
  %91 = load i32, i32* %i, align 4, !dbg !7259, !tbaa !827
  %arrayidx80 = getelementptr inbounds i8, i8* %90, i32 %91, !dbg !7258
  %92 = load i8, i8* %arrayidx80, align 1, !dbg !7258, !tbaa !1828
  %conv81 = zext i8 %92 to i32, !dbg !7258
  %add82 = add nsw i32 1, %conv81, !dbg !7260
  %93 = load i32, i32* %i, align 4, !dbg !7261, !tbaa !827
  %add83 = add i32 %93, %add82, !dbg !7261
  store i32 %add83, i32* %i, align 4, !dbg !7261, !tbaa !827
  br label %while.cond, !dbg !7246, !llvm.loop !7262

while.end:                                        ; preds = %while.cond
  br label %short_response, !dbg !7264

found:                                            ; preds = %if.then78
  %94 = load i32, i32* %i, align 4, !dbg !7265, !tbaa !827
  %inc84 = add i32 %94, 1, !dbg !7265
  store i32 %inc84, i32* %i, align 4, !dbg !7265, !tbaa !827
  %cmp85 = icmp eq i32 %94, 12, !dbg !7267
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !7268

if.then87:                                        ; preds = %found
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i32 0, i32 0), i8** %err, align 4, !dbg !7269, !tbaa !820
  br label %done, !dbg !7271

if.end88:                                         ; preds = %found
  %95 = load i32, i32* %i, align 4, !dbg !7272, !tbaa !827
  %add89 = add i32 %95, 4, !dbg !7274
  %96 = load i32, i32* %nan, align 4, !dbg !7275, !tbaa !827
  %mul = mul i32 %96, 12, !dbg !7276
  %add90 = add i32 %add89, %mul, !dbg !7277
  %97 = load i32, i32* %n.addr, align 4, !dbg !7278, !tbaa !827
  %cmp91 = icmp ugt i32 %add90, %97, !dbg !7279
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !7280

if.then93:                                        ; preds = %if.end88
  br label %short_response, !dbg !7281

if.end94:                                         ; preds = %if.end88
  %98 = load i8*, i8** %buf.addr, align 4, !dbg !7283, !tbaa !820
  %99 = load i32, i32* %i, align 4, !dbg !7284, !tbaa !827
  %arrayidx95 = getelementptr inbounds i8, i8* %98, i32 %99, !dbg !7283
  %100 = bitcast i8* %arrayidx95 to %struct.ngx_resolver_qs_t*, !dbg !7285
  store %struct.ngx_resolver_qs_t* %100, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !7286, !tbaa !820
  %101 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !7287, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %101, i32 0, i32 0, !dbg !7288
  %102 = load i8, i8* %type_hi, align 1, !dbg !7288, !tbaa !5368
  %conv96 = zext i8 %102 to i32, !dbg !7287
  %shl97 = shl i32 %conv96, 8, !dbg !7289
  %103 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !7290, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %103, i32 0, i32 1, !dbg !7291
  %104 = load i8, i8* %type_lo, align 1, !dbg !7291, !tbaa !5373
  %conv98 = zext i8 %104 to i32, !dbg !7290
  %add99 = add nsw i32 %shl97, %conv98, !dbg !7292
  store i32 %add99, i32* %qtype, align 4, !dbg !7293, !tbaa !827
  %105 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !7294, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %105, i32 0, i32 2, !dbg !7295
  %106 = load i8, i8* %class_hi, align 1, !dbg !7295, !tbaa !5377
  %conv100 = zext i8 %106 to i32, !dbg !7294
  %shl101 = shl i32 %conv100, 8, !dbg !7296
  %107 = load %struct.ngx_resolver_qs_t*, %struct.ngx_resolver_qs_t** %qs, align 4, !dbg !7297, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_qs_t, %struct.ngx_resolver_qs_t* %107, i32 0, i32 3, !dbg !7298
  %108 = load i8, i8* %class_lo, align 1, !dbg !7298, !tbaa !5381
  %conv102 = zext i8 %108 to i32, !dbg !7297
  %add103 = add nsw i32 %shl101, %conv102, !dbg !7299
  store i32 %add103, i32* %qclass, align 4, !dbg !7300, !tbaa !827
  %109 = load i32, i32* %qclass, align 4, !dbg !7301, !tbaa !827
  %cmp104 = icmp ne i32 %109, 1, !dbg !7303
  br i1 %cmp104, label %if.then106, label %if.end116, !dbg !7304

if.then106:                                       ; preds = %if.end94
  %110 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7305, !tbaa !820
  %log107 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %110, i32 0, i32 2, !dbg !7305
  %111 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log107, align 4, !dbg !7305, !tbaa !965
  %log_level108 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %111, i32 0, i32 0, !dbg !7305
  %112 = load i32, i32* %log_level108, align 4, !dbg !7305, !tbaa !2999
  %113 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7305, !tbaa !820
  %log_level109 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %113, i32 0, i32 27, !dbg !7305
  %114 = load i32, i32* %log_level109, align 4, !dbg !7305, !tbaa !969
  %cmp110 = icmp uge i32 %112, %114, !dbg !7305
  br i1 %cmp110, label %if.then112, label %if.end115, !dbg !7308

if.then112:                                       ; preds = %if.then106
  %115 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7305, !tbaa !820
  %log_level113 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %115, i32 0, i32 27, !dbg !7305
  %116 = load i32, i32* %log_level113, align 4, !dbg !7305, !tbaa !969
  %117 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7305, !tbaa !820
  %log114 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %117, i32 0, i32 2, !dbg !7305
  %118 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log114, align 4, !dbg !7305, !tbaa !965
  %119 = load i32, i32* %qclass, align 4, !dbg !7305, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %116, %struct.ngx_log_s* %118, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i32 0, i32 0), i32 %119), !dbg !7305
  br label %if.end115, !dbg !7305

if.end115:                                        ; preds = %if.then112, %if.then106
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7309

if.end116:                                        ; preds = %if.end94
  %120 = load i32, i32* %qtype, align 4, !dbg !7310, !tbaa !827
  switch i32 %120, label %sw.default [
    i32 1, label %sw.bb
    i32 28, label %sw.bb
    i32 33, label %sw.bb118
    i32 12, label %sw.bb120
  ], !dbg !7311

sw.bb:                                            ; preds = %if.end116, %if.end116
  %121 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7312, !tbaa !820
  %122 = load i8*, i8** %buf.addr, align 4, !dbg !7314, !tbaa !820
  %123 = load i32, i32* %n.addr, align 4, !dbg !7315, !tbaa !827
  %124 = load i32, i32* %ident, align 4, !dbg !7316, !tbaa !827
  %125 = load i32, i32* %code, align 4, !dbg !7317, !tbaa !827
  %126 = load i32, i32* %qtype, align 4, !dbg !7318, !tbaa !827
  %127 = load i32, i32* %nan, align 4, !dbg !7319, !tbaa !827
  %128 = load i32, i32* %trunc, align 4, !dbg !7320, !tbaa !827
  %129 = load i32, i32* %i, align 4, !dbg !7321, !tbaa !827
  %add117 = add i32 %129, 4, !dbg !7322
  call void @ngx_resolver_process_a(%struct.ngx_resolver_s* %121, i8* %122, i32 %123, i32 %124, i32 %125, i32 %126, i32 %127, i32 %128, i32 %add117), !dbg !7323
  br label %sw.epilog, !dbg !7324

sw.bb118:                                         ; preds = %if.end116
  %130 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7325, !tbaa !820
  %131 = load i8*, i8** %buf.addr, align 4, !dbg !7326, !tbaa !820
  %132 = load i32, i32* %n.addr, align 4, !dbg !7327, !tbaa !827
  %133 = load i32, i32* %ident, align 4, !dbg !7328, !tbaa !827
  %134 = load i32, i32* %code, align 4, !dbg !7329, !tbaa !827
  %135 = load i32, i32* %nan, align 4, !dbg !7330, !tbaa !827
  %136 = load i32, i32* %trunc, align 4, !dbg !7331, !tbaa !827
  %137 = load i32, i32* %i, align 4, !dbg !7332, !tbaa !827
  %add119 = add i32 %137, 4, !dbg !7333
  call void @ngx_resolver_process_srv(%struct.ngx_resolver_s* %130, i8* %131, i32 %132, i32 %133, i32 %134, i32 %135, i32 %136, i32 %add119), !dbg !7334
  br label %sw.epilog, !dbg !7335

sw.bb120:                                         ; preds = %if.end116
  %138 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7336, !tbaa !820
  %139 = load i8*, i8** %buf.addr, align 4, !dbg !7337, !tbaa !820
  %140 = load i32, i32* %n.addr, align 4, !dbg !7338, !tbaa !827
  %141 = load i32, i32* %ident, align 4, !dbg !7339, !tbaa !827
  %142 = load i32, i32* %code, align 4, !dbg !7340, !tbaa !827
  %143 = load i32, i32* %nan, align 4, !dbg !7341, !tbaa !827
  call void @ngx_resolver_process_ptr(%struct.ngx_resolver_s* %138, i8* %139, i32 %140, i32 %141, i32 %142, i32 %143), !dbg !7342
  br label %sw.epilog, !dbg !7343

sw.default:                                       ; preds = %if.end116
  %144 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7344, !tbaa !820
  %log121 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %144, i32 0, i32 2, !dbg !7344
  %145 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log121, align 4, !dbg !7344, !tbaa !965
  %log_level122 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %145, i32 0, i32 0, !dbg !7344
  %146 = load i32, i32* %log_level122, align 4, !dbg !7344, !tbaa !2999
  %147 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7344, !tbaa !820
  %log_level123 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %147, i32 0, i32 27, !dbg !7344
  %148 = load i32, i32* %log_level123, align 4, !dbg !7344, !tbaa !969
  %cmp124 = icmp uge i32 %146, %148, !dbg !7344
  br i1 %cmp124, label %if.then126, label %if.end129, !dbg !7346

if.then126:                                       ; preds = %sw.default
  %149 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7344, !tbaa !820
  %log_level127 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %149, i32 0, i32 27, !dbg !7344
  %150 = load i32, i32* %log_level127, align 4, !dbg !7344, !tbaa !969
  %151 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7344, !tbaa !820
  %log128 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %151, i32 0, i32 2, !dbg !7344
  %152 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log128, align 4, !dbg !7344, !tbaa !965
  %153 = load i32, i32* %qtype, align 4, !dbg !7344, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %150, %struct.ngx_log_s* %152, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.31, i32 0, i32 0), i32 %153), !dbg !7344
  br label %if.end129, !dbg !7344

if.end129:                                        ; preds = %if.then126, %sw.default
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7347

sw.epilog:                                        ; preds = %sw.bb120, %sw.bb118, %sw.bb
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7348

short_response:                                   ; preds = %if.then93, %while.end, %if.then
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8** %err, align 4, !dbg !7349, !tbaa !820
  br label %done, !dbg !7350

done:                                             ; preds = %short_response, %if.then87, %if.then70
  %154 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7351, !tbaa !820
  %log130 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %154, i32 0, i32 2, !dbg !7351
  %155 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log130, align 4, !dbg !7351, !tbaa !965
  %log_level131 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %155, i32 0, i32 0, !dbg !7351
  %156 = load i32, i32* %log_level131, align 4, !dbg !7351, !tbaa !2999
  %157 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7351, !tbaa !820
  %log_level132 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %157, i32 0, i32 27, !dbg !7351
  %158 = load i32, i32* %log_level132, align 4, !dbg !7351, !tbaa !969
  %cmp133 = icmp uge i32 %156, %158, !dbg !7351
  br i1 %cmp133, label %if.then135, label %if.end138, !dbg !7353

if.then135:                                       ; preds = %done
  %159 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7351, !tbaa !820
  %log_level136 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %159, i32 0, i32 27, !dbg !7351
  %160 = load i32, i32* %log_level136, align 4, !dbg !7351, !tbaa !969
  %161 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7351, !tbaa !820
  %log137 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %161, i32 0, i32 2, !dbg !7351
  %162 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log137, align 4, !dbg !7351, !tbaa !965
  %163 = load i8*, i8** %err, align 4, !dbg !7351, !tbaa !820
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %160, %struct.ngx_log_s* %162, i32 0, i8* %163), !dbg !7351
  br label %if.end138, !dbg !7351

if.end138:                                        ; preds = %if.then135, %done
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7354

dns_error_name:                                   ; preds = %if.then59, %if.then45
  %164 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7355, !tbaa !820
  %log139 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %164, i32 0, i32 2, !dbg !7355
  %165 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log139, align 4, !dbg !7355, !tbaa !965
  %log_level140 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %165, i32 0, i32 0, !dbg !7355
  %166 = load i32, i32* %log_level140, align 4, !dbg !7355, !tbaa !2999
  %167 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7355, !tbaa !820
  %log_level141 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %167, i32 0, i32 27, !dbg !7355
  %168 = load i32, i32* %log_level141, align 4, !dbg !7355, !tbaa !969
  %cmp142 = icmp uge i32 %166, %168, !dbg !7355
  br i1 %cmp142, label %if.then144, label %if.end148, !dbg !7357

if.then144:                                       ; preds = %dns_error_name
  %169 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7355, !tbaa !820
  %log_level145 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %169, i32 0, i32 27, !dbg !7355
  %170 = load i32, i32* %log_level145, align 4, !dbg !7355, !tbaa !969
  %171 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7355, !tbaa !820
  %log146 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %171, i32 0, i32 2, !dbg !7355
  %172 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log146, align 4, !dbg !7355, !tbaa !965
  %173 = load i32, i32* %code, align 4, !dbg !7355, !tbaa !827
  %174 = load i32, i32* %code, align 4, !dbg !7355, !tbaa !827
  %call = call i8* @ngx_resolver_strerror(i32 %174), !dbg !7355
  %175 = load i32, i32* %ident, align 4, !dbg !7355, !tbaa !827
  %176 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7355, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %176, i32 0, i32 4, !dbg !7355
  %177 = load i16, i16* %nlen, align 4, !dbg !7355, !tbaa !1365
  %conv147 = zext i16 %177 to i32, !dbg !7355
  %178 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7355, !tbaa !820
  %name = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %178, i32 0, i32 2, !dbg !7355
  %179 = load i8*, i8** %name, align 4, !dbg !7355, !tbaa !1358
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %170, %struct.ngx_log_s* %172, i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i32 0, i32 0), i32 %173, i8* %call, i32 %175, i32 %conv147, i8* %179), !dbg !7355
  br label %if.end148, !dbg !7355

if.end148:                                        ; preds = %if.then144, %dns_error_name
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7358

dns_error:                                        ; preds = %if.then66, %for.end
  %180 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7359, !tbaa !820
  %log149 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %180, i32 0, i32 2, !dbg !7359
  %181 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log149, align 4, !dbg !7359, !tbaa !965
  %log_level150 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %181, i32 0, i32 0, !dbg !7359
  %182 = load i32, i32* %log_level150, align 4, !dbg !7359, !tbaa !2999
  %183 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7359, !tbaa !820
  %log_level151 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %183, i32 0, i32 27, !dbg !7359
  %184 = load i32, i32* %log_level151, align 4, !dbg !7359, !tbaa !969
  %cmp152 = icmp uge i32 %182, %184, !dbg !7359
  br i1 %cmp152, label %if.then154, label %if.end158, !dbg !7361

if.then154:                                       ; preds = %dns_error
  %185 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7359, !tbaa !820
  %log_level155 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %185, i32 0, i32 27, !dbg !7359
  %186 = load i32, i32* %log_level155, align 4, !dbg !7359, !tbaa !969
  %187 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7359, !tbaa !820
  %log156 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %187, i32 0, i32 2, !dbg !7359
  %188 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log156, align 4, !dbg !7359, !tbaa !965
  %189 = load i32, i32* %code, align 4, !dbg !7359, !tbaa !827
  %190 = load i32, i32* %code, align 4, !dbg !7359, !tbaa !827
  %call157 = call i8* @ngx_resolver_strerror(i32 %190), !dbg !7359
  %191 = load i32, i32* %ident, align 4, !dbg !7359, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %186, %struct.ngx_log_s* %188, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i32 0, i32 0), i32 %189, i8* %call157, i32 %191), !dbg !7359
  br label %if.end158, !dbg !7359

if.end158:                                        ; preds = %if.then154, %dns_error
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7362

cleanup:                                          ; preds = %if.end158, %if.end148, %if.end138, %sw.epilog, %if.end129, %if.end115, %if.end26
  %192 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %192) #5, !dbg !7363
  %193 = bitcast %struct.ngx_resolver_hdr_t** %response to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %193) #5, !dbg !7363
  %194 = bitcast %struct.ngx_resolver_qs_t** %qs to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %194) #5, !dbg !7363
  %195 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %195) #5, !dbg !7363
  %196 = bitcast i32* %qident6 to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %196) #5, !dbg !7363
  %197 = bitcast i32* %qclass to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %197) #5, !dbg !7363
  %198 = bitcast i32* %qtype to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %198) #5, !dbg !7363
  %199 = bitcast i32* %trunc to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %199) #5, !dbg !7363
  %200 = bitcast i32* %nan to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %200) #5, !dbg !7363
  %201 = bitcast i32* %nqs to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %201) #5, !dbg !7363
  %202 = bitcast i32* %code to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %202) #5, !dbg !7363
  %203 = bitcast i32* %flags to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %203) #5, !dbg !7363
  %204 = bitcast i32* %qident to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %204) #5, !dbg !7363
  %205 = bitcast i32* %ident to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %205) #5, !dbg !7363
  %206 = bitcast i32* %times to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %206) #5, !dbg !7363
  %207 = bitcast i32* %i to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %207) #5, !dbg !7363
  %208 = bitcast i8** %err to i8*, !dbg !7363
  call void @llvm.lifetime.end(i64 4, i8* %208) #5, !dbg !7363
  ret void, !dbg !7363
}

declare i32 @ngx_handle_read_event(%struct.ngx_event_s*, i32) #3

; Function Attrs: nounwind
define internal void @ngx_resolver_process_a(%struct.ngx_resolver_s* %r, i8* %buf, i32 %n, i32 %ident, i32 %code, i32 %qtype, i32 %nan, i32 %trunc, i32 %ans) #0 !dbg !7364 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %buf.addr = alloca i8*, align 4
  %n.addr = alloca i32, align 4
  %ident.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %qtype.addr = alloca i32, align 4
  %nan.addr = alloca i32, align 4
  %trunc.addr = alloca i32, align 4
  %ans.addr = alloca i32, align 4
  %err = alloca i8*, align 4
  %cname = alloca i8*, align 4
  %len = alloca i32, align 4
  %ttl = alloca i32, align 4
  %hash = alloca i32, align 4
  %addr = alloca i32*, align 4
  %name = alloca %struct.ngx_str_t, align 4
  %type = alloca i32, align 4
  %class = alloca i32, align 4
  %qident = alloca i32, align 4
  %naddrs = alloca i32, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %start = alloca i32, align 4
  %addr6 = alloca %struct.in6_addr*, align 4
  %an = alloca %struct.ngx_resolver_an_t*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %next = alloca %struct.ngx_resolver_ctx_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %addrs = alloca %struct.ngx_resolver_addr_t*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !7368, metadata !824), !dbg !7400
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7369, metadata !824), !dbg !7401
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7370, metadata !824), !dbg !7402
  store i32 %ident, i32* %ident.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %ident.addr, metadata !7371, metadata !824), !dbg !7403
  store i32 %code, i32* %code.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7372, metadata !824), !dbg !7404
  store i32 %qtype, i32* %qtype.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %qtype.addr, metadata !7373, metadata !824), !dbg !7405
  store i32 %nan, i32* %nan.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %nan.addr, metadata !7374, metadata !824), !dbg !7406
  store i32 %trunc, i32* %trunc.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %trunc.addr, metadata !7375, metadata !824), !dbg !7407
  store i32 %ans, i32* %ans.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %ans.addr, metadata !7376, metadata !824), !dbg !7408
  %0 = bitcast i8** %err to i8*, !dbg !7409
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !7409
  call void @llvm.dbg.declare(metadata i8** %err, metadata !7377, metadata !824), !dbg !7410
  %1 = bitcast i8** %cname to i8*, !dbg !7411
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !7411
  call void @llvm.dbg.declare(metadata i8** %cname, metadata !7378, metadata !824), !dbg !7412
  %2 = bitcast i32* %len to i8*, !dbg !7413
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7379, metadata !824), !dbg !7414
  %3 = bitcast i32* %ttl to i8*, !dbg !7415
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !7380, metadata !824), !dbg !7416
  %4 = bitcast i32* %hash to i8*, !dbg !7417
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !7417
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !7382, metadata !824), !dbg !7418
  %5 = bitcast i32** %addr to i8*, !dbg !7419
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !7419
  call void @llvm.dbg.declare(metadata i32** %addr, metadata !7383, metadata !824), !dbg !7420
  %6 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !7421
  call void @llvm.lifetime.start(i64 8, i8* %6) #5, !dbg !7421
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %name, metadata !7384, metadata !824), !dbg !7422
  %7 = bitcast i32* %type to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7385, metadata !824), !dbg !7424
  %8 = bitcast i32* %class to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %class, metadata !7386, metadata !824), !dbg !7425
  %9 = bitcast i32* %qident to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %qident, metadata !7387, metadata !824), !dbg !7426
  %10 = bitcast i32* %naddrs to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %naddrs, metadata !7388, metadata !824), !dbg !7427
  %11 = bitcast i32* %a to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7389, metadata !824), !dbg !7428
  %12 = bitcast i32* %i to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %12) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7390, metadata !824), !dbg !7429
  %13 = bitcast i32* %j to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %13) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7391, metadata !824), !dbg !7430
  %14 = bitcast i32* %start to i8*, !dbg !7423
  call void @llvm.lifetime.start(i64 4, i8* %14) #5, !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7392, metadata !824), !dbg !7431
  %15 = bitcast %struct.in6_addr** %addr6 to i8*, !dbg !7432
  call void @llvm.lifetime.start(i64 4, i8* %15) #5, !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.in6_addr** %addr6, metadata !7393, metadata !824), !dbg !7433
  %16 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !7434
  call void @llvm.lifetime.start(i64 4, i8* %16) #5, !dbg !7434
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_an_t** %an, metadata !7394, metadata !824), !dbg !7435
  %17 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !7436
  call void @llvm.lifetime.start(i64 4, i8* %17) #5, !dbg !7436
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !7395, metadata !824), !dbg !7437
  %18 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !7436
  call void @llvm.lifetime.start(i64 4, i8* %18) #5, !dbg !7436
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %next, metadata !7396, metadata !824), !dbg !7438
  %19 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !7439
  call void @llvm.lifetime.start(i64 4, i8* %19) #5, !dbg !7439
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !7397, metadata !824), !dbg !7440
  %20 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !7441
  call void @llvm.lifetime.start(i64 4, i8* %20) #5, !dbg !7441
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_addr_t** %addrs, metadata !7398, metadata !824), !dbg !7442
  %21 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !7443
  call void @llvm.lifetime.start(i64 4, i8* %21) #5, !dbg !7443
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !7399, metadata !824), !dbg !7444
  %22 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7445, !tbaa !820
  %23 = load i8*, i8** %buf.addr, align 4, !dbg !7447, !tbaa !820
  %24 = load i8*, i8** %buf.addr, align 4, !dbg !7448, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 12, !dbg !7449
  %25 = load i8*, i8** %buf.addr, align 4, !dbg !7450, !tbaa !820
  %26 = load i32, i32* %n.addr, align 4, !dbg !7451, !tbaa !827
  %add.ptr1 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !7452
  %call = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %22, %struct.ngx_str_t* %name, i8* %23, i8* %add.ptr, i8* %add.ptr1), !dbg !7453
  %cmp = icmp ne i32 %call, 0, !dbg !7454
  br i1 %cmp, label %if.then, label %if.end, !dbg !7455

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7456

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7458
  %27 = load i8*, i8** %data, align 4, !dbg !7458, !tbaa !997
  %len2 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !7459
  %28 = load i32, i32* %len2, align 4, !dbg !7459, !tbaa !1005
  %call3 = call i32 @ngx_crc32_short(i8* %27, i32 %28), !dbg !7460
  store i32 %call3, i32* %hash, align 4, !dbg !7461, !tbaa !827
  %29 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7462, !tbaa !820
  %30 = load i32, i32* %hash, align 4, !dbg !7463, !tbaa !827
  %call4 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_name(%struct.ngx_resolver_s* %29, %struct.ngx_str_t* %name, i32 %30), !dbg !7464
  store %struct.ngx_resolver_node_t* %call4, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7465, !tbaa !820
  %31 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7466, !tbaa !820
  %cmp5 = icmp eq %struct.ngx_resolver_node_t* %31, null, !dbg !7468
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !7469

if.then6:                                         ; preds = %if.end
  %32 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7470, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %32, i32 0, i32 2, !dbg !7470
  %33 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !7470, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %33, i32 0, i32 0, !dbg !7470
  %34 = load i32, i32* %log_level, align 4, !dbg !7470, !tbaa !2999
  %35 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7470, !tbaa !820
  %log_level7 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %35, i32 0, i32 27, !dbg !7470
  %36 = load i32, i32* %log_level7, align 4, !dbg !7470, !tbaa !969
  %cmp8 = icmp uge i32 %34, %36, !dbg !7470
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !7473

if.then9:                                         ; preds = %if.then6
  %37 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7470, !tbaa !820
  %log_level10 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %37, i32 0, i32 27, !dbg !7470
  %38 = load i32, i32* %log_level10, align 4, !dbg !7470, !tbaa !969
  %39 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7470, !tbaa !820
  %log11 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %39, i32 0, i32 2, !dbg !7470
  %40 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log11, align 4, !dbg !7470, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %38, %struct.ngx_log_s* %40, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i32 0, i32 0), %struct.ngx_str_t* %name), !dbg !7470
  br label %if.end12, !dbg !7470

if.end12:                                         ; preds = %if.then9, %if.then6
  %41 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7474, !tbaa !820
  %data13 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7475
  %42 = load i8*, i8** %data13, align 4, !dbg !7475, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %41, i8* %42), !dbg !7476
  br label %failed, !dbg !7477

if.end14:                                         ; preds = %if.end
  %43 = load i32, i32* %qtype.addr, align 4, !dbg !7478, !tbaa !827
  switch i32 %43, label %sw.default [
    i32 28, label %sw.bb
  ], !dbg !7479

sw.bb:                                            ; preds = %if.end14
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7480, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %44, i32 0, i32 7, !dbg !7483
  %45 = load i8*, i8** %query6, align 4, !dbg !7483, !tbaa !2453
  %cmp15 = icmp eq i8* %45, null, !dbg !7484
  br i1 %cmp15, label %if.then18, label %lor.lhs.false, !dbg !7485

lor.lhs.false:                                    ; preds = %sw.bb
  %46 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7486, !tbaa !820
  %naddrs6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %46, i32 0, i32 14, !dbg !7487
  %47 = load i16, i16* %naddrs6, align 4, !dbg !7487, !tbaa !2148
  %conv = zext i16 %47 to i32, !dbg !7486
  %cmp16 = icmp ne i32 %conv, 65535, !dbg !7488
  br i1 %cmp16, label %if.then18, label %if.end29, !dbg !7489

if.then18:                                        ; preds = %lor.lhs.false, %sw.bb
  %48 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7490, !tbaa !820
  %log19 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %48, i32 0, i32 2, !dbg !7490
  %49 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log19, align 4, !dbg !7490, !tbaa !965
  %log_level20 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %49, i32 0, i32 0, !dbg !7490
  %50 = load i32, i32* %log_level20, align 4, !dbg !7490, !tbaa !2999
  %51 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7490, !tbaa !820
  %log_level21 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %51, i32 0, i32 27, !dbg !7490
  %52 = load i32, i32* %log_level21, align 4, !dbg !7490, !tbaa !969
  %cmp22 = icmp uge i32 %50, %52, !dbg !7490
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !7493

if.then24:                                        ; preds = %if.then18
  %53 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7490, !tbaa !820
  %log_level25 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %53, i32 0, i32 27, !dbg !7490
  %54 = load i32, i32* %log_level25, align 4, !dbg !7490, !tbaa !969
  %55 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7490, !tbaa !820
  %log26 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %55, i32 0, i32 2, !dbg !7490
  %56 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log26, align 4, !dbg !7490, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %54, %struct.ngx_log_s* %56, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i32 0, i32 0), %struct.ngx_str_t* %name), !dbg !7490
  br label %if.end27, !dbg !7490

if.end27:                                         ; preds = %if.then24, %if.then18
  %57 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7494, !tbaa !820
  %data28 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7495
  %58 = load i8*, i8** %data28, align 4, !dbg !7495, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %57, i8* %58), !dbg !7496
  br label %failed, !dbg !7497

if.end29:                                         ; preds = %lor.lhs.false
  %59 = load i32, i32* %trunc.addr, align 4, !dbg !7498, !tbaa !827
  %tobool = icmp ne i32 %59, 0, !dbg !7498
  br i1 %tobool, label %land.lhs.true, label %if.end33, !dbg !7500

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7501, !tbaa !820
  %tcp6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %60, i32 0, i32 18, !dbg !7502
  %bf.load = load i8, i8* %tcp6, align 4, !dbg !7502
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !7502
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7502
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7502
  %tobool30 = icmp ne i32 %bf.cast, 0, !dbg !7501
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !7503

if.then31:                                        ; preds = %land.lhs.true
  %61 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7504, !tbaa !820
  %data32 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7506
  %62 = load i8*, i8** %data32, align 4, !dbg !7506, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %61, i8* %62), !dbg !7507
  br label %failed, !dbg !7508

if.end33:                                         ; preds = %land.lhs.true, %if.end29
  %63 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7509, !tbaa !820
  %query634 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %63, i32 0, i32 7, !dbg !7510
  %64 = load i8*, i8** %query634, align 4, !dbg !7510, !tbaa !2453
  %arrayidx = getelementptr inbounds i8, i8* %64, i32 0, !dbg !7509
  %65 = load i8, i8* %arrayidx, align 1, !dbg !7509, !tbaa !1828
  %conv35 = zext i8 %65 to i32, !dbg !7509
  %shl = shl i32 %conv35, 8, !dbg !7511
  %66 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7512, !tbaa !820
  %query636 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %66, i32 0, i32 7, !dbg !7513
  %67 = load i8*, i8** %query636, align 4, !dbg !7513, !tbaa !2453
  %arrayidx37 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7512
  %68 = load i8, i8* %arrayidx37, align 1, !dbg !7512, !tbaa !1828
  %conv38 = zext i8 %68 to i32, !dbg !7512
  %add = add nsw i32 %shl, %conv38, !dbg !7514
  store i32 %add, i32* %qident, align 4, !dbg !7515, !tbaa !827
  br label %sw.epilog, !dbg !7516

sw.default:                                       ; preds = %if.end14
  %69 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7517, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %69, i32 0, i32 6, !dbg !7519
  %70 = load i8*, i8** %query, align 4, !dbg !7519, !tbaa !2440
  %cmp39 = icmp eq i8* %70, null, !dbg !7520
  br i1 %cmp39, label %if.then46, label %lor.lhs.false41, !dbg !7521

lor.lhs.false41:                                  ; preds = %sw.default
  %71 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7522, !tbaa !820
  %naddrs42 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %71, i32 0, i32 10, !dbg !7523
  %72 = load i16, i16* %naddrs42, align 2, !dbg !7523, !tbaa !2140
  %conv43 = zext i16 %72 to i32, !dbg !7522
  %cmp44 = icmp ne i32 %conv43, 65535, !dbg !7524
  br i1 %cmp44, label %if.then46, label %if.end57, !dbg !7525

if.then46:                                        ; preds = %lor.lhs.false41, %sw.default
  %73 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7526, !tbaa !820
  %log47 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %73, i32 0, i32 2, !dbg !7526
  %74 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log47, align 4, !dbg !7526, !tbaa !965
  %log_level48 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %74, i32 0, i32 0, !dbg !7526
  %75 = load i32, i32* %log_level48, align 4, !dbg !7526, !tbaa !2999
  %76 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7526, !tbaa !820
  %log_level49 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %76, i32 0, i32 27, !dbg !7526
  %77 = load i32, i32* %log_level49, align 4, !dbg !7526, !tbaa !969
  %cmp50 = icmp uge i32 %75, %77, !dbg !7526
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !7529

if.then52:                                        ; preds = %if.then46
  %78 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7526, !tbaa !820
  %log_level53 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %78, i32 0, i32 27, !dbg !7526
  %79 = load i32, i32* %log_level53, align 4, !dbg !7526, !tbaa !969
  %80 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7526, !tbaa !820
  %log54 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %80, i32 0, i32 2, !dbg !7526
  %81 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log54, align 4, !dbg !7526, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %79, %struct.ngx_log_s* %81, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i32 0, i32 0), %struct.ngx_str_t* %name), !dbg !7526
  br label %if.end55, !dbg !7526

if.end55:                                         ; preds = %if.then52, %if.then46
  %82 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7530, !tbaa !820
  %data56 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7531
  %83 = load i8*, i8** %data56, align 4, !dbg !7531, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %82, i8* %83), !dbg !7532
  br label %failed, !dbg !7533

if.end57:                                         ; preds = %lor.lhs.false41
  %84 = load i32, i32* %trunc.addr, align 4, !dbg !7534, !tbaa !827
  %tobool58 = icmp ne i32 %84, 0, !dbg !7534
  br i1 %tobool58, label %land.lhs.true59, label %if.end66, !dbg !7536

land.lhs.true59:                                  ; preds = %if.end57
  %85 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7537, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %85, i32 0, i32 18, !dbg !7538
  %bf.load60 = load i8, i8* %tcp, align 4, !dbg !7538
  %bf.clear61 = and i8 %bf.load60, 1, !dbg !7538
  %bf.cast62 = zext i8 %bf.clear61 to i32, !dbg !7538
  %tobool63 = icmp ne i32 %bf.cast62, 0, !dbg !7537
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !7539

if.then64:                                        ; preds = %land.lhs.true59
  %86 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7540, !tbaa !820
  %data65 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7542
  %87 = load i8*, i8** %data65, align 4, !dbg !7542, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %86, i8* %87), !dbg !7543
  br label %failed, !dbg !7544

if.end66:                                         ; preds = %land.lhs.true59, %if.end57
  %88 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7545, !tbaa !820
  %query67 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %88, i32 0, i32 6, !dbg !7546
  %89 = load i8*, i8** %query67, align 4, !dbg !7546, !tbaa !2440
  %arrayidx68 = getelementptr inbounds i8, i8* %89, i32 0, !dbg !7545
  %90 = load i8, i8* %arrayidx68, align 1, !dbg !7545, !tbaa !1828
  %conv69 = zext i8 %90 to i32, !dbg !7545
  %shl70 = shl i32 %conv69, 8, !dbg !7547
  %91 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7548, !tbaa !820
  %query71 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %91, i32 0, i32 6, !dbg !7549
  %92 = load i8*, i8** %query71, align 4, !dbg !7549, !tbaa !2440
  %arrayidx72 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !7548
  %93 = load i8, i8* %arrayidx72, align 1, !dbg !7548, !tbaa !1828
  %conv73 = zext i8 %93 to i32, !dbg !7548
  %add74 = add nsw i32 %shl70, %conv73, !dbg !7550
  store i32 %add74, i32* %qident, align 4, !dbg !7551, !tbaa !827
  br label %sw.epilog, !dbg !7552

sw.epilog:                                        ; preds = %if.end66, %if.end33
  %94 = load i32, i32* %ident.addr, align 4, !dbg !7553, !tbaa !827
  %95 = load i32, i32* %qident, align 4, !dbg !7555, !tbaa !827
  %cmp75 = icmp ne i32 %94, %95, !dbg !7556
  br i1 %cmp75, label %if.then77, label %if.end88, !dbg !7557

if.then77:                                        ; preds = %sw.epilog
  %96 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7558, !tbaa !820
  %log78 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %96, i32 0, i32 2, !dbg !7558
  %97 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log78, align 4, !dbg !7558, !tbaa !965
  %log_level79 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %97, i32 0, i32 0, !dbg !7558
  %98 = load i32, i32* %log_level79, align 4, !dbg !7558, !tbaa !2999
  %99 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7558, !tbaa !820
  %log_level80 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %99, i32 0, i32 27, !dbg !7558
  %100 = load i32, i32* %log_level80, align 4, !dbg !7558, !tbaa !969
  %cmp81 = icmp uge i32 %98, %100, !dbg !7558
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !7561

if.then83:                                        ; preds = %if.then77
  %101 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7558, !tbaa !820
  %log_level84 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %101, i32 0, i32 27, !dbg !7558
  %102 = load i32, i32* %log_level84, align 4, !dbg !7558, !tbaa !969
  %103 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7558, !tbaa !820
  %log85 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %103, i32 0, i32 2, !dbg !7558
  %104 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log85, align 4, !dbg !7558, !tbaa !965
  %105 = load i32, i32* %ident.addr, align 4, !dbg !7558, !tbaa !827
  %106 = load i32, i32* %qident, align 4, !dbg !7558, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %102, %struct.ngx_log_s* %104, i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0), i32 %105, %struct.ngx_str_t* %name, i32 %106), !dbg !7558
  br label %if.end86, !dbg !7558

if.end86:                                         ; preds = %if.then83, %if.then77
  %107 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7562, !tbaa !820
  %data87 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7563
  %108 = load i8*, i8** %data87, align 4, !dbg !7563, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %107, i8* %108), !dbg !7564
  br label %failed, !dbg !7565

if.end88:                                         ; preds = %sw.epilog
  %109 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7566, !tbaa !820
  %data89 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !7567
  %110 = load i8*, i8** %data89, align 4, !dbg !7567, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %109, i8* %110), !dbg !7568
  %111 = load i32, i32* %trunc.addr, align 4, !dbg !7569, !tbaa !827
  %tobool90 = icmp ne i32 %111, 0, !dbg !7569
  br i1 %tobool90, label %if.then91, label %if.end134, !dbg !7571

if.then91:                                        ; preds = %if.end88
  %112 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7572, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %112, i32 0, i32 1, !dbg !7572
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !7572
  %113 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !7572, !tbaa !904
  %114 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7572, !tbaa !820
  %queue92 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %114, i32 0, i32 1, !dbg !7572
  %next93 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue92, i32 0, i32 1, !dbg !7572
  %115 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next93, align 4, !dbg !7572, !tbaa !905
  %prev94 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %115, i32 0, i32 0, !dbg !7572
  store %struct.ngx_queue_s* %113, %struct.ngx_queue_s** %prev94, align 4, !dbg !7572, !tbaa !904
  %116 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7572, !tbaa !820
  %queue95 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %116, i32 0, i32 1, !dbg !7572
  %next96 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue95, i32 0, i32 1, !dbg !7572
  %117 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next96, align 4, !dbg !7572, !tbaa !905
  %118 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7572, !tbaa !820
  %queue97 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %118, i32 0, i32 1, !dbg !7572
  %prev98 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue97, i32 0, i32 0, !dbg !7572
  %119 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev98, align 4, !dbg !7572, !tbaa !904
  %next99 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %119, i32 0, i32 1, !dbg !7572
  store %struct.ngx_queue_s* %117, %struct.ngx_queue_s** %next99, align 4, !dbg !7572, !tbaa !905
  %120 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7574, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %120, i32 0, i32 20, !dbg !7576
  %121 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !7576, !tbaa !2182
  %cmp100 = icmp eq %struct.ngx_resolver_ctx_s* %121, null, !dbg !7577
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !7578

if.then102:                                       ; preds = %if.then91
  %122 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7579, !tbaa !820
  %name_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %122, i32 0, i32 6, !dbg !7581
  %123 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7582, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %123, i32 0, i32 0, !dbg !7583
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %name_rbtree, %struct.ngx_rbtree_node_s* %node), !dbg !7584
  %124 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7585, !tbaa !820
  %125 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7586, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %124, %struct.ngx_resolver_node_t* %125), !dbg !7587
  br label %next724, !dbg !7588

if.end103:                                        ; preds = %if.then91
  %126 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7589, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %126, i32 0, i32 4, !dbg !7590
  %elts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 0, !dbg !7591
  %127 = load i8*, i8** %elts, align 4, !dbg !7591, !tbaa !1218
  %128 = bitcast i8* %127 to %struct.ngx_resolver_connection_t*, !dbg !7589
  store %struct.ngx_resolver_connection_t* %128, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7592, !tbaa !820
  %129 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7593, !tbaa !820
  %130 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7594, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %130, i32 0, i32 19, !dbg !7595
  %131 = load i32, i32* %last_connection, align 4, !dbg !7595, !tbaa !2666
  %arrayidx104 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %129, i32 %131, !dbg !7593
  store %struct.ngx_resolver_connection_t* %arrayidx104, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7596, !tbaa !820
  %132 = load i32, i32* %qtype.addr, align 4, !dbg !7597, !tbaa !827
  switch i32 %132, label %sw.default111 [
    i32 28, label %sw.bb105
  ], !dbg !7598

sw.bb105:                                         ; preds = %if.end103
  %133 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7599, !tbaa !820
  %tcp6106 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %133, i32 0, i32 18, !dbg !7601
  %bf.load107 = load i8, i8* %tcp6106, align 4, !dbg !7602
  %bf.clear108 = and i8 %bf.load107, -3, !dbg !7602
  %bf.set = or i8 %bf.clear108, 2, !dbg !7602
  store i8 %bf.set, i8* %tcp6106, align 4, !dbg !7602
  %134 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7603, !tbaa !820
  %135 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7604, !tbaa !820
  %136 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7605, !tbaa !820
  %query6109 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %136, i32 0, i32 7, !dbg !7606
  %137 = load i8*, i8** %query6109, align 4, !dbg !7606, !tbaa !2453
  %138 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7607, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %138, i32 0, i32 5, !dbg !7608
  %139 = load i16, i16* %qlen, align 2, !dbg !7608, !tbaa !4103
  %call110 = call i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %134, %struct.ngx_resolver_connection_t* %135, i8* %137, i16 zeroext %139), !dbg !7609
  br label %sw.epilog119, !dbg !7610

sw.default111:                                    ; preds = %if.end103
  %140 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7611, !tbaa !820
  %tcp112 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %140, i32 0, i32 18, !dbg !7612
  %bf.load113 = load i8, i8* %tcp112, align 4, !dbg !7613
  %bf.clear114 = and i8 %bf.load113, -2, !dbg !7613
  %bf.set115 = or i8 %bf.clear114, 1, !dbg !7613
  store i8 %bf.set115, i8* %tcp112, align 4, !dbg !7613
  %141 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7614, !tbaa !820
  %142 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !7615, !tbaa !820
  %143 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7616, !tbaa !820
  %query116 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %143, i32 0, i32 6, !dbg !7617
  %144 = load i8*, i8** %query116, align 4, !dbg !7617, !tbaa !2440
  %145 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7618, !tbaa !820
  %qlen117 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %145, i32 0, i32 5, !dbg !7619
  %146 = load i16, i16* %qlen117, align 2, !dbg !7619, !tbaa !4103
  %call118 = call i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %141, %struct.ngx_resolver_connection_t* %142, i8* %144, i16 zeroext %146), !dbg !7620
  br label %sw.epilog119, !dbg !7621

sw.epilog119:                                     ; preds = %sw.default111, %sw.bb105
  %147 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !7622, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %147, i32 0, i32 0, !dbg !7622
  %148 = load volatile i32, i32* %sec, align 4, !dbg !7622, !tbaa !2123
  %149 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7623, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %149, i32 0, i32 23, !dbg !7624
  %150 = load i32, i32* %resend_timeout, align 4, !dbg !7624, !tbaa !946
  %add120 = add nsw i32 %148, %150, !dbg !7625
  %151 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7626, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %151, i32 0, i32 15, !dbg !7627
  store i32 %add120, i32* %expire, align 4, !dbg !7628, !tbaa !2136
  %152 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7629, !tbaa !820
  %name_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %152, i32 0, i32 12, !dbg !7629
  %next121 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue, i32 0, i32 1, !dbg !7629
  %153 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next121, align 4, !dbg !7629, !tbaa !905
  %154 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7629, !tbaa !820
  %queue122 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %154, i32 0, i32 1, !dbg !7629
  %next123 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue122, i32 0, i32 1, !dbg !7629
  store %struct.ngx_queue_s* %153, %struct.ngx_queue_s** %next123, align 4, !dbg !7629, !tbaa !905
  %155 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7629, !tbaa !820
  %queue124 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %155, i32 0, i32 1, !dbg !7629
  %156 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7629, !tbaa !820
  %queue125 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %156, i32 0, i32 1, !dbg !7629
  %next126 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue125, i32 0, i32 1, !dbg !7629
  %157 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next126, align 4, !dbg !7629, !tbaa !905
  %prev127 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %157, i32 0, i32 0, !dbg !7629
  store %struct.ngx_queue_s* %queue124, %struct.ngx_queue_s** %prev127, align 4, !dbg !7629, !tbaa !904
  %158 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7629, !tbaa !820
  %name_resend_queue128 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %158, i32 0, i32 12, !dbg !7629
  %159 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7629, !tbaa !820
  %queue129 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %159, i32 0, i32 1, !dbg !7629
  %prev130 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue129, i32 0, i32 0, !dbg !7629
  store %struct.ngx_queue_s* %name_resend_queue128, %struct.ngx_queue_s** %prev130, align 4, !dbg !7629, !tbaa !904
  %160 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7629, !tbaa !820
  %queue131 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %160, i32 0, i32 1, !dbg !7629
  %161 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7629, !tbaa !820
  %name_resend_queue132 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %161, i32 0, i32 12, !dbg !7629
  %next133 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_resend_queue132, i32 0, i32 1, !dbg !7629
  store %struct.ngx_queue_s* %queue131, %struct.ngx_queue_s** %next133, align 4, !dbg !7629, !tbaa !905
  br label %next724, !dbg !7630

if.end134:                                        ; preds = %if.end88
  %162 = load i32, i32* %code.addr, align 4, !dbg !7631, !tbaa !827
  %cmp135 = icmp eq i32 %162, 0, !dbg !7633
  br i1 %cmp135, label %land.lhs.true137, label %if.end144, !dbg !7634

land.lhs.true137:                                 ; preds = %if.end134
  %163 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7635, !tbaa !820
  %code138 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %163, i32 0, i32 9, !dbg !7636
  %164 = load i8, i8* %code138, align 4, !dbg !7636, !tbaa !2773
  %conv139 = zext i8 %164 to i32, !dbg !7635
  %tobool140 = icmp ne i32 %conv139, 0, !dbg !7635
  br i1 %tobool140, label %if.then141, label %if.end144, !dbg !7637

if.then141:                                       ; preds = %land.lhs.true137
  %165 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7638, !tbaa !820
  %code142 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %165, i32 0, i32 9, !dbg !7640
  %166 = load i8, i8* %code142, align 4, !dbg !7640, !tbaa !2773
  %conv143 = zext i8 %166 to i32, !dbg !7638
  store i32 %conv143, i32* %code.addr, align 4, !dbg !7641, !tbaa !827
  br label %if.end144, !dbg !7642

if.end144:                                        ; preds = %if.then141, %land.lhs.true137, %if.end134
  %167 = load i32, i32* %code.addr, align 4, !dbg !7643, !tbaa !827
  %cmp145 = icmp eq i32 %167, 0, !dbg !7645
  br i1 %cmp145, label %land.lhs.true147, label %if.end176, !dbg !7646

land.lhs.true147:                                 ; preds = %if.end144
  %168 = load i32, i32* %nan.addr, align 4, !dbg !7647, !tbaa !827
  %cmp148 = icmp eq i32 %168, 0, !dbg !7648
  br i1 %cmp148, label %if.then150, label %if.end176, !dbg !7649

if.then150:                                       ; preds = %land.lhs.true147
  %169 = load i32, i32* %qtype.addr, align 4, !dbg !7650, !tbaa !827
  switch i32 %169, label %sw.default163 [
    i32 28, label %sw.bb151
  ], !dbg !7652

sw.bb151:                                         ; preds = %if.then150
  %170 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7653, !tbaa !820
  %naddrs6152 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %170, i32 0, i32 14, !dbg !7655
  store i16 0, i16* %naddrs6152, align 4, !dbg !7656, !tbaa !2148
  %171 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7657, !tbaa !820
  %naddrs153 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %171, i32 0, i32 10, !dbg !7659
  %172 = load i16, i16* %naddrs153, align 2, !dbg !7659, !tbaa !2140
  %conv154 = zext i16 %172 to i32, !dbg !7657
  %cmp155 = icmp eq i32 %conv154, 65535, !dbg !7660
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !7661

if.then157:                                       ; preds = %sw.bb151
  br label %next724, !dbg !7662

if.end158:                                        ; preds = %sw.bb151
  %173 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7664, !tbaa !820
  %naddrs159 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %173, i32 0, i32 10, !dbg !7666
  %174 = load i16, i16* %naddrs159, align 2, !dbg !7666, !tbaa !2140
  %tobool160 = icmp ne i16 %174, 0, !dbg !7664
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !7667

if.then161:                                       ; preds = %if.end158
  br label %export, !dbg !7668

if.end162:                                        ; preds = %if.end158
  br label %sw.epilog175, !dbg !7670

sw.default163:                                    ; preds = %if.then150
  %175 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7671, !tbaa !820
  %naddrs164 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %175, i32 0, i32 10, !dbg !7672
  store i16 0, i16* %naddrs164, align 2, !dbg !7673, !tbaa !2140
  %176 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7674, !tbaa !820
  %naddrs6165 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %176, i32 0, i32 14, !dbg !7676
  %177 = load i16, i16* %naddrs6165, align 4, !dbg !7676, !tbaa !2148
  %conv166 = zext i16 %177 to i32, !dbg !7674
  %cmp167 = icmp eq i32 %conv166, 65535, !dbg !7677
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !7678

if.then169:                                       ; preds = %sw.default163
  br label %next724, !dbg !7679

if.end170:                                        ; preds = %sw.default163
  %178 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7681, !tbaa !820
  %naddrs6171 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %178, i32 0, i32 14, !dbg !7683
  %179 = load i16, i16* %naddrs6171, align 4, !dbg !7683, !tbaa !2148
  %tobool172 = icmp ne i16 %179, 0, !dbg !7681
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !7684

if.then173:                                       ; preds = %if.end170
  br label %export, !dbg !7685

if.end174:                                        ; preds = %if.end170
  br label %sw.epilog175, !dbg !7687

sw.epilog175:                                     ; preds = %if.end174, %if.end162
  store i32 3, i32* %code.addr, align 4, !dbg !7688, !tbaa !827
  br label %if.end176, !dbg !7689

if.end176:                                        ; preds = %sw.epilog175, %land.lhs.true147, %if.end144
  %180 = load i32, i32* %code.addr, align 4, !dbg !7690, !tbaa !827
  %tobool177 = icmp ne i32 %180, 0, !dbg !7690
  br i1 %tobool177, label %if.then178, label %if.end221, !dbg !7692

if.then178:                                       ; preds = %if.end176
  %181 = load i32, i32* %qtype.addr, align 4, !dbg !7693, !tbaa !827
  switch i32 %181, label %sw.default189 [
    i32 28, label %sw.bb179
  ], !dbg !7695

sw.bb179:                                         ; preds = %if.then178
  %182 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7696, !tbaa !820
  %naddrs6180 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %182, i32 0, i32 14, !dbg !7698
  store i16 0, i16* %naddrs6180, align 4, !dbg !7699, !tbaa !2148
  %183 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7700, !tbaa !820
  %naddrs181 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %183, i32 0, i32 10, !dbg !7702
  %184 = load i16, i16* %naddrs181, align 2, !dbg !7702, !tbaa !2140
  %conv182 = zext i16 %184 to i32, !dbg !7700
  %cmp183 = icmp eq i32 %conv182, 65535, !dbg !7703
  br i1 %cmp183, label %if.then185, label %if.end188, !dbg !7704

if.then185:                                       ; preds = %sw.bb179
  %185 = load i32, i32* %code.addr, align 4, !dbg !7705, !tbaa !827
  %conv186 = trunc i32 %185 to i8, !dbg !7707
  %186 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7708, !tbaa !820
  %code187 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %186, i32 0, i32 9, !dbg !7709
  store i8 %conv186, i8* %code187, align 4, !dbg !7710, !tbaa !2773
  br label %next724, !dbg !7711

if.end188:                                        ; preds = %sw.bb179
  br label %sw.epilog199, !dbg !7712

sw.default189:                                    ; preds = %if.then178
  %187 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7713, !tbaa !820
  %naddrs190 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %187, i32 0, i32 10, !dbg !7714
  store i16 0, i16* %naddrs190, align 2, !dbg !7715, !tbaa !2140
  %188 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7716, !tbaa !820
  %naddrs6191 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %188, i32 0, i32 14, !dbg !7718
  %189 = load i16, i16* %naddrs6191, align 4, !dbg !7718, !tbaa !2148
  %conv192 = zext i16 %189 to i32, !dbg !7716
  %cmp193 = icmp eq i32 %conv192, 65535, !dbg !7719
  br i1 %cmp193, label %if.then195, label %if.end198, !dbg !7720

if.then195:                                       ; preds = %sw.default189
  %190 = load i32, i32* %code.addr, align 4, !dbg !7721, !tbaa !827
  %conv196 = trunc i32 %190 to i8, !dbg !7723
  %191 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7724, !tbaa !820
  %code197 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %191, i32 0, i32 9, !dbg !7725
  store i8 %conv196, i8* %code197, align 4, !dbg !7726, !tbaa !2773
  br label %next724, !dbg !7727

if.end198:                                        ; preds = %sw.default189
  br label %sw.epilog199, !dbg !7728

sw.epilog199:                                     ; preds = %if.end198, %if.end188
  %192 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7729, !tbaa !820
  %waiting200 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %192, i32 0, i32 20, !dbg !7730
  %193 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting200, align 4, !dbg !7730, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %193, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !7731, !tbaa !820
  %194 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7732, !tbaa !820
  %waiting201 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %194, i32 0, i32 20, !dbg !7733
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting201, align 4, !dbg !7734, !tbaa !2182
  %195 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7735, !tbaa !820
  %queue202 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %195, i32 0, i32 1, !dbg !7735
  %prev203 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue202, i32 0, i32 0, !dbg !7735
  %196 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev203, align 4, !dbg !7735, !tbaa !904
  %197 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7735, !tbaa !820
  %queue204 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %197, i32 0, i32 1, !dbg !7735
  %next205 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue204, i32 0, i32 1, !dbg !7735
  %198 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next205, align 4, !dbg !7735, !tbaa !905
  %prev206 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %198, i32 0, i32 0, !dbg !7735
  store %struct.ngx_queue_s* %196, %struct.ngx_queue_s** %prev206, align 4, !dbg !7735, !tbaa !904
  %199 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7735, !tbaa !820
  %queue207 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %199, i32 0, i32 1, !dbg !7735
  %next208 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue207, i32 0, i32 1, !dbg !7735
  %200 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next208, align 4, !dbg !7735, !tbaa !905
  %201 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7735, !tbaa !820
  %queue209 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %201, i32 0, i32 1, !dbg !7735
  %prev210 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue209, i32 0, i32 0, !dbg !7735
  %202 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev210, align 4, !dbg !7735, !tbaa !904
  %next211 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %202, i32 0, i32 1, !dbg !7735
  store %struct.ngx_queue_s* %200, %struct.ngx_queue_s** %next211, align 4, !dbg !7735, !tbaa !905
  %203 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7736, !tbaa !820
  %name_rbtree212 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %203, i32 0, i32 6, !dbg !7737
  %204 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7738, !tbaa !820
  %node213 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %204, i32 0, i32 0, !dbg !7739
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %name_rbtree212, %struct.ngx_rbtree_node_s* %node213), !dbg !7740
  br label %while.cond, !dbg !7741

while.cond:                                       ; preds = %cond.end, %sw.epilog199
  %205 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !7742, !tbaa !820
  %tobool214 = icmp ne %struct.ngx_resolver_ctx_s* %205, null, !dbg !7741
  br i1 %tobool214, label %while.body, label %while.end, !dbg !7741

while.body:                                       ; preds = %while.cond
  %206 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !7743, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %206, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7745, !tbaa !820
  %207 = load i32, i32* %code.addr, align 4, !dbg !7746, !tbaa !827
  %208 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7747, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %208, i32 0, i32 4, !dbg !7748
  store i32 %207, i32* %state, align 4, !dbg !7749, !tbaa !1703
  %209 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !7750, !tbaa !820
  %sec215 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %209, i32 0, i32 0, !dbg !7750
  %210 = load volatile i32, i32* %sec215, align 4, !dbg !7750, !tbaa !2123
  %211 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7751, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %211, i32 0, i32 26, !dbg !7752
  %212 = load i32, i32* %valid, align 4, !dbg !7752, !tbaa !958
  %tobool216 = icmp ne i32 %212, 0, !dbg !7751
  br i1 %tobool216, label %cond.true, label %cond.false, !dbg !7751

cond.true:                                        ; preds = %while.body
  %213 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7753, !tbaa !820
  %valid217 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %213, i32 0, i32 26, !dbg !7754
  %214 = load i32, i32* %valid217, align 4, !dbg !7754, !tbaa !958
  br label %cond.end, !dbg !7751

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !7751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %214, %cond.true ], [ 10, %cond.false ], !dbg !7751
  %add218 = add nsw i32 %210, %cond, !dbg !7755
  %215 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7756, !tbaa !820
  %valid219 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %215, i32 0, i32 7, !dbg !7757
  store i32 %add218, i32* %valid219, align 4, !dbg !7758, !tbaa !2201
  %216 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7759, !tbaa !820
  %next220 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %216, i32 0, i32 0, !dbg !7760
  %217 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next220, align 4, !dbg !7760, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %217, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !7761, !tbaa !820
  %218 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7762, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %218, i32 0, i32 15, !dbg !7763
  %219 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !7763, !tbaa !1844
  %220 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !7764, !tbaa !820
  call void %219(%struct.ngx_resolver_ctx_s* %220), !dbg !7762
  br label %while.cond, !dbg !7741, !llvm.loop !7765

while.end:                                        ; preds = %while.cond
  %221 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7767, !tbaa !820
  %222 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7768, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %221, %struct.ngx_resolver_node_t* %222), !dbg !7769
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7770

if.end221:                                        ; preds = %if.end176
  %223 = load i32, i32* %ans.addr, align 4, !dbg !7771, !tbaa !827
  store i32 %223, i32* %i, align 4, !dbg !7772, !tbaa !827
  store i32 0, i32* %naddrs, align 4, !dbg !7773, !tbaa !827
  store i8* null, i8** %cname, align 4, !dbg !7774, !tbaa !820
  store i32 0, i32* %a, align 4, !dbg !7775, !tbaa !827
  br label %for.cond, !dbg !7777

for.cond:                                         ; preds = %for.inc, %if.end221
  %224 = load i32, i32* %a, align 4, !dbg !7778, !tbaa !827
  %225 = load i32, i32* %nan.addr, align 4, !dbg !7780, !tbaa !827
  %cmp222 = icmp ult i32 %224, %225, !dbg !7781
  br i1 %cmp222, label %for.body, label %for.end, !dbg !7782

for.body:                                         ; preds = %for.cond
  %226 = load i32, i32* %i, align 4, !dbg !7783, !tbaa !827
  store i32 %226, i32* %start, align 4, !dbg !7785, !tbaa !827
  br label %while.cond224, !dbg !7786

while.cond224:                                    ; preds = %if.end239, %for.body
  %227 = load i32, i32* %i, align 4, !dbg !7787, !tbaa !827
  %228 = load i32, i32* %n.addr, align 4, !dbg !7788, !tbaa !827
  %cmp225 = icmp ult i32 %227, %228, !dbg !7789
  br i1 %cmp225, label %while.body227, label %while.end244, !dbg !7786

while.body227:                                    ; preds = %while.cond224
  %229 = load i8*, i8** %buf.addr, align 4, !dbg !7790, !tbaa !820
  %230 = load i32, i32* %i, align 4, !dbg !7793, !tbaa !827
  %arrayidx228 = getelementptr inbounds i8, i8* %229, i32 %230, !dbg !7790
  %231 = load i8, i8* %arrayidx228, align 1, !dbg !7790, !tbaa !1828
  %conv229 = zext i8 %231 to i32, !dbg !7790
  %and = and i32 %conv229, 192, !dbg !7794
  %tobool230 = icmp ne i32 %and, 0, !dbg !7794
  br i1 %tobool230, label %if.then231, label %if.end233, !dbg !7795

if.then231:                                       ; preds = %while.body227
  %232 = load i32, i32* %i, align 4, !dbg !7796, !tbaa !827
  %add232 = add i32 %232, 2, !dbg !7796
  store i32 %add232, i32* %i, align 4, !dbg !7796, !tbaa !827
  br label %found, !dbg !7798

if.end233:                                        ; preds = %while.body227
  %233 = load i8*, i8** %buf.addr, align 4, !dbg !7799, !tbaa !820
  %234 = load i32, i32* %i, align 4, !dbg !7801, !tbaa !827
  %arrayidx234 = getelementptr inbounds i8, i8* %233, i32 %234, !dbg !7799
  %235 = load i8, i8* %arrayidx234, align 1, !dbg !7799, !tbaa !1828
  %conv235 = zext i8 %235 to i32, !dbg !7799
  %cmp236 = icmp eq i32 %conv235, 0, !dbg !7802
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !7803

if.then238:                                       ; preds = %if.end233
  %236 = load i32, i32* %i, align 4, !dbg !7804, !tbaa !827
  %inc = add i32 %236, 1, !dbg !7804
  store i32 %inc, i32* %i, align 4, !dbg !7804, !tbaa !827
  br label %test_length, !dbg !7806

if.end239:                                        ; preds = %if.end233
  %237 = load i8*, i8** %buf.addr, align 4, !dbg !7807, !tbaa !820
  %238 = load i32, i32* %i, align 4, !dbg !7808, !tbaa !827
  %arrayidx240 = getelementptr inbounds i8, i8* %237, i32 %238, !dbg !7807
  %239 = load i8, i8* %arrayidx240, align 1, !dbg !7807, !tbaa !1828
  %conv241 = zext i8 %239 to i32, !dbg !7807
  %add242 = add nsw i32 1, %conv241, !dbg !7809
  %240 = load i32, i32* %i, align 4, !dbg !7810, !tbaa !827
  %add243 = add i32 %240, %add242, !dbg !7810
  store i32 %add243, i32* %i, align 4, !dbg !7810, !tbaa !827
  br label %while.cond224, !dbg !7786, !llvm.loop !7811

while.end244:                                     ; preds = %while.cond224
  br label %short_response, !dbg !7813

test_length:                                      ; preds = %if.then238
  %241 = load i32, i32* %i, align 4, !dbg !7814, !tbaa !827
  %242 = load i32, i32* %start, align 4, !dbg !7816, !tbaa !827
  %sub = sub i32 %241, %242, !dbg !7817
  %cmp245 = icmp ult i32 %sub, 2, !dbg !7818
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !7819

if.then247:                                       ; preds = %test_length
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8** %err, align 4, !dbg !7820, !tbaa !820
  br label %invalid, !dbg !7822

if.end248:                                        ; preds = %test_length
  br label %found, !dbg !7823

found:                                            ; preds = %if.end248, %if.then231
  %243 = load i32, i32* %i, align 4, !dbg !7824, !tbaa !827
  %add249 = add i32 %243, 10, !dbg !7826
  %244 = load i32, i32* %n.addr, align 4, !dbg !7827, !tbaa !827
  %cmp250 = icmp uge i32 %add249, %244, !dbg !7828
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !7829

if.then252:                                       ; preds = %found
  br label %short_response, !dbg !7830

if.end253:                                        ; preds = %found
  %245 = load i8*, i8** %buf.addr, align 4, !dbg !7832, !tbaa !820
  %246 = load i32, i32* %i, align 4, !dbg !7833, !tbaa !827
  %arrayidx254 = getelementptr inbounds i8, i8* %245, i32 %246, !dbg !7832
  %247 = bitcast i8* %arrayidx254 to %struct.ngx_resolver_an_t*, !dbg !7834
  store %struct.ngx_resolver_an_t* %247, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7835, !tbaa !820
  %248 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7836, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %248, i32 0, i32 0, !dbg !7837
  %249 = load i8, i8* %type_hi, align 1, !dbg !7837, !tbaa !7838
  %conv255 = zext i8 %249 to i32, !dbg !7836
  %shl256 = shl i32 %conv255, 8, !dbg !7840
  %250 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7841, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %250, i32 0, i32 1, !dbg !7842
  %251 = load i8, i8* %type_lo, align 1, !dbg !7842, !tbaa !7843
  %conv257 = zext i8 %251 to i32, !dbg !7841
  %add258 = add nsw i32 %shl256, %conv257, !dbg !7844
  store i32 %add258, i32* %type, align 4, !dbg !7845, !tbaa !827
  %252 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7846, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %252, i32 0, i32 2, !dbg !7847
  %253 = load i8, i8* %class_hi, align 1, !dbg !7847, !tbaa !7848
  %conv259 = zext i8 %253 to i32, !dbg !7846
  %shl260 = shl i32 %conv259, 8, !dbg !7849
  %254 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7850, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %254, i32 0, i32 3, !dbg !7851
  %255 = load i8, i8* %class_lo, align 1, !dbg !7851, !tbaa !7852
  %conv261 = zext i8 %255 to i32, !dbg !7850
  %add262 = add nsw i32 %shl260, %conv261, !dbg !7853
  store i32 %add262, i32* %class, align 4, !dbg !7854, !tbaa !827
  %256 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7855, !tbaa !820
  %len_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %256, i32 0, i32 5, !dbg !7856
  %257 = load i8, i8* %len_hi, align 1, !dbg !7856, !tbaa !7857
  %conv263 = zext i8 %257 to i32, !dbg !7855
  %shl264 = shl i32 %conv263, 8, !dbg !7858
  %258 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7859, !tbaa !820
  %len_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %258, i32 0, i32 6, !dbg !7860
  %259 = load i8, i8* %len_lo, align 1, !dbg !7860, !tbaa !7861
  %conv265 = zext i8 %259 to i32, !dbg !7859
  %add266 = add nsw i32 %shl264, %conv265, !dbg !7862
  store i32 %add266, i32* %len, align 4, !dbg !7863, !tbaa !827
  %260 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7864, !tbaa !820
  %ttl267 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %260, i32 0, i32 4, !dbg !7865
  %arrayidx268 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl267, i32 0, i32 0, !dbg !7864
  %261 = load i8, i8* %arrayidx268, align 1, !dbg !7864, !tbaa !1828
  %conv269 = zext i8 %261 to i32, !dbg !7864
  %shl270 = shl i32 %conv269, 24, !dbg !7866
  %262 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7867, !tbaa !820
  %ttl271 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %262, i32 0, i32 4, !dbg !7868
  %arrayidx272 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl271, i32 0, i32 1, !dbg !7867
  %263 = load i8, i8* %arrayidx272, align 1, !dbg !7867, !tbaa !1828
  %conv273 = zext i8 %263 to i32, !dbg !7867
  %shl274 = shl i32 %conv273, 16, !dbg !7869
  %add275 = add nsw i32 %shl270, %shl274, !dbg !7870
  %264 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7871, !tbaa !820
  %ttl276 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %264, i32 0, i32 4, !dbg !7872
  %arrayidx277 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl276, i32 0, i32 2, !dbg !7871
  %265 = load i8, i8* %arrayidx277, align 1, !dbg !7871, !tbaa !1828
  %conv278 = zext i8 %265 to i32, !dbg !7871
  %shl279 = shl i32 %conv278, 8, !dbg !7873
  %add280 = add nsw i32 %add275, %shl279, !dbg !7874
  %266 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !7875, !tbaa !820
  %ttl281 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %266, i32 0, i32 4, !dbg !7876
  %arrayidx282 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl281, i32 0, i32 3, !dbg !7875
  %267 = load i8, i8* %arrayidx282, align 1, !dbg !7875, !tbaa !1828
  %conv283 = zext i8 %267 to i32, !dbg !7877
  %add284 = add nsw i32 %add280, %conv283, !dbg !7878
  store i32 %add284, i32* %ttl, align 4, !dbg !7879, !tbaa !827
  %268 = load i32, i32* %class, align 4, !dbg !7880, !tbaa !827
  %cmp285 = icmp ne i32 %268, 1, !dbg !7882
  br i1 %cmp285, label %if.then287, label %if.end297, !dbg !7883

if.then287:                                       ; preds = %if.end253
  %269 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7884, !tbaa !820
  %log288 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %269, i32 0, i32 2, !dbg !7884
  %270 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log288, align 4, !dbg !7884, !tbaa !965
  %log_level289 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %270, i32 0, i32 0, !dbg !7884
  %271 = load i32, i32* %log_level289, align 4, !dbg !7884, !tbaa !2999
  %272 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7884, !tbaa !820
  %log_level290 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %272, i32 0, i32 27, !dbg !7884
  %273 = load i32, i32* %log_level290, align 4, !dbg !7884, !tbaa !969
  %cmp291 = icmp uge i32 %271, %273, !dbg !7884
  br i1 %cmp291, label %if.then293, label %if.end296, !dbg !7887

if.then293:                                       ; preds = %if.then287
  %274 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7884, !tbaa !820
  %log_level294 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %274, i32 0, i32 27, !dbg !7884
  %275 = load i32, i32* %log_level294, align 4, !dbg !7884, !tbaa !969
  %276 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7884, !tbaa !820
  %log295 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %276, i32 0, i32 2, !dbg !7884
  %277 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log295, align 4, !dbg !7884, !tbaa !965
  %278 = load i32, i32* %class, align 4, !dbg !7884, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %275, %struct.ngx_log_s* %277, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), i32 %278), !dbg !7884
  br label %if.end296, !dbg !7884

if.end296:                                        ; preds = %if.then293, %if.then287
  br label %failed, !dbg !7888

if.end297:                                        ; preds = %if.end253
  %279 = load i32, i32* %ttl, align 4, !dbg !7889, !tbaa !827
  %cmp298 = icmp slt i32 %279, 0, !dbg !7891
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !7892

if.then300:                                       ; preds = %if.end297
  store i32 0, i32* %ttl, align 4, !dbg !7893, !tbaa !827
  br label %if.end301, !dbg !7895

if.end301:                                        ; preds = %if.then300, %if.end297
  %280 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7896, !tbaa !820
  %ttl302 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %280, i32 0, i32 17, !dbg !7896
  %281 = load i32, i32* %ttl302, align 4, !dbg !7896, !tbaa !2783
  %282 = load i32, i32* %ttl, align 4, !dbg !7896, !tbaa !827
  %cmp303 = icmp ugt i32 %281, %282, !dbg !7896
  br i1 %cmp303, label %cond.true305, label %cond.false306, !dbg !7896

cond.true305:                                     ; preds = %if.end301
  %283 = load i32, i32* %ttl, align 4, !dbg !7896, !tbaa !827
  br label %cond.end308, !dbg !7896

cond.false306:                                    ; preds = %if.end301
  %284 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7896, !tbaa !820
  %ttl307 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %284, i32 0, i32 17, !dbg !7896
  %285 = load i32, i32* %ttl307, align 4, !dbg !7896, !tbaa !2783
  br label %cond.end308, !dbg !7896

cond.end308:                                      ; preds = %cond.false306, %cond.true305
  %cond309 = phi i32 [ %283, %cond.true305 ], [ %285, %cond.false306 ], !dbg !7896
  %286 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7897, !tbaa !820
  %ttl310 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %286, i32 0, i32 17, !dbg !7898
  store i32 %cond309, i32* %ttl310, align 4, !dbg !7899, !tbaa !2783
  %287 = load i32, i32* %i, align 4, !dbg !7900, !tbaa !827
  %add311 = add i32 %287, 10, !dbg !7900
  store i32 %add311, i32* %i, align 4, !dbg !7900, !tbaa !827
  %288 = load i32, i32* %type, align 4, !dbg !7901, !tbaa !827
  switch i32 %288, label %sw.default344 [
    i32 1, label %sw.bb312
    i32 28, label %sw.bb327
    i32 5, label %sw.bb342
    i32 39, label %sw.epilog354
  ], !dbg !7902

sw.bb312:                                         ; preds = %cond.end308
  %289 = load i32, i32* %qtype.addr, align 4, !dbg !7903, !tbaa !827
  %cmp313 = icmp ne i32 %289, 1, !dbg !7906
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !7907

if.then315:                                       ; preds = %sw.bb312
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.39, i32 0, i32 0), i8** %err, align 4, !dbg !7908, !tbaa !820
  br label %invalid, !dbg !7910

if.end316:                                        ; preds = %sw.bb312
  %290 = load i32, i32* %len, align 4, !dbg !7911, !tbaa !827
  %cmp317 = icmp ne i32 %290, 4, !dbg !7913
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !7914

if.then319:                                       ; preds = %if.end316
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i32 0, i32 0), i8** %err, align 4, !dbg !7915, !tbaa !820
  br label %invalid, !dbg !7917

if.end320:                                        ; preds = %if.end316
  %291 = load i32, i32* %i, align 4, !dbg !7918, !tbaa !827
  %add321 = add i32 %291, 4, !dbg !7920
  %292 = load i32, i32* %n.addr, align 4, !dbg !7921, !tbaa !827
  %cmp322 = icmp ugt i32 %add321, %292, !dbg !7922
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !7923

if.then324:                                       ; preds = %if.end320
  br label %short_response, !dbg !7924

if.end325:                                        ; preds = %if.end320
  %293 = load i32, i32* %naddrs, align 4, !dbg !7926, !tbaa !827
  %inc326 = add i32 %293, 1, !dbg !7926
  store i32 %inc326, i32* %naddrs, align 4, !dbg !7926, !tbaa !827
  br label %sw.epilog354, !dbg !7927

sw.bb327:                                         ; preds = %cond.end308
  %294 = load i32, i32* %qtype.addr, align 4, !dbg !7928, !tbaa !827
  %cmp328 = icmp ne i32 %294, 28, !dbg !7930
  br i1 %cmp328, label %if.then330, label %if.end331, !dbg !7931

if.then330:                                       ; preds = %sw.bb327
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.41, i32 0, i32 0), i8** %err, align 4, !dbg !7932, !tbaa !820
  br label %invalid, !dbg !7934

if.end331:                                        ; preds = %sw.bb327
  %295 = load i32, i32* %len, align 4, !dbg !7935, !tbaa !827
  %cmp332 = icmp ne i32 %295, 16, !dbg !7937
  br i1 %cmp332, label %if.then334, label %if.end335, !dbg !7938

if.then334:                                       ; preds = %if.end331
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.42, i32 0, i32 0), i8** %err, align 4, !dbg !7939, !tbaa !820
  br label %invalid, !dbg !7941

if.end335:                                        ; preds = %if.end331
  %296 = load i32, i32* %i, align 4, !dbg !7942, !tbaa !827
  %add336 = add i32 %296, 16, !dbg !7944
  %297 = load i32, i32* %n.addr, align 4, !dbg !7945, !tbaa !827
  %cmp337 = icmp ugt i32 %add336, %297, !dbg !7946
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !7947

if.then339:                                       ; preds = %if.end335
  br label %short_response, !dbg !7948

if.end340:                                        ; preds = %if.end335
  %298 = load i32, i32* %naddrs, align 4, !dbg !7950, !tbaa !827
  %inc341 = add i32 %298, 1, !dbg !7950
  store i32 %inc341, i32* %naddrs, align 4, !dbg !7950, !tbaa !827
  br label %sw.epilog354, !dbg !7951

sw.bb342:                                         ; preds = %cond.end308
  %299 = load i8*, i8** %buf.addr, align 4, !dbg !7952, !tbaa !820
  %300 = load i32, i32* %i, align 4, !dbg !7953, !tbaa !827
  %arrayidx343 = getelementptr inbounds i8, i8* %299, i32 %300, !dbg !7952
  store i8* %arrayidx343, i8** %cname, align 4, !dbg !7954, !tbaa !820
  br label %sw.epilog354, !dbg !7955

sw.default344:                                    ; preds = %cond.end308
  %301 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7956, !tbaa !820
  %log345 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %301, i32 0, i32 2, !dbg !7956
  %302 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log345, align 4, !dbg !7956, !tbaa !965
  %log_level346 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %302, i32 0, i32 0, !dbg !7956
  %303 = load i32, i32* %log_level346, align 4, !dbg !7956, !tbaa !2999
  %304 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7956, !tbaa !820
  %log_level347 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %304, i32 0, i32 27, !dbg !7956
  %305 = load i32, i32* %log_level347, align 4, !dbg !7956, !tbaa !969
  %cmp348 = icmp uge i32 %303, %305, !dbg !7956
  br i1 %cmp348, label %if.then350, label %if.end353, !dbg !7958

if.then350:                                       ; preds = %sw.default344
  %306 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7956, !tbaa !820
  %log_level351 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %306, i32 0, i32 27, !dbg !7956
  %307 = load i32, i32* %log_level351, align 4, !dbg !7956, !tbaa !969
  %308 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7956, !tbaa !820
  %log352 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %308, i32 0, i32 2, !dbg !7956
  %309 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log352, align 4, !dbg !7956, !tbaa !965
  %310 = load i32, i32* %type, align 4, !dbg !7956, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %307, %struct.ngx_log_s* %309, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i32 %310), !dbg !7956
  br label %if.end353, !dbg !7956

if.end353:                                        ; preds = %if.then350, %sw.default344
  br label %sw.epilog354, !dbg !7959

sw.epilog354:                                     ; preds = %if.end353, %cond.end308, %sw.bb342, %if.end340, %if.end325
  %311 = load i32, i32* %len, align 4, !dbg !7960, !tbaa !827
  %312 = load i32, i32* %i, align 4, !dbg !7961, !tbaa !827
  %add355 = add i32 %312, %311, !dbg !7961
  store i32 %add355, i32* %i, align 4, !dbg !7961, !tbaa !827
  br label %for.inc, !dbg !7962

for.inc:                                          ; preds = %sw.epilog354
  %313 = load i32, i32* %a, align 4, !dbg !7963, !tbaa !827
  %inc356 = add i32 %313, 1, !dbg !7963
  store i32 %inc356, i32* %a, align 4, !dbg !7963, !tbaa !827
  br label %for.cond, !dbg !7964, !llvm.loop !7965

for.end:                                          ; preds = %for.cond
  %314 = load i32, i32* %naddrs, align 4, !dbg !7967, !tbaa !827
  %tobool357 = icmp ne i32 %314, 0, !dbg !7967
  br i1 %tobool357, label %if.then358, label %if.end487, !dbg !7969

if.then358:                                       ; preds = %for.end
  %315 = load i32, i32* %qtype.addr, align 4, !dbg !7970, !tbaa !827
  switch i32 %315, label %sw.default374 [
    i32 28, label %sw.bb359
  ], !dbg !7972

sw.bb359:                                         ; preds = %if.then358
  %316 = load i32, i32* %naddrs, align 4, !dbg !7973, !tbaa !827
  %cmp360 = icmp eq i32 %316, 1, !dbg !7976
  br i1 %cmp360, label %if.then362, label %if.else, !dbg !7977

if.then362:                                       ; preds = %sw.bb359
  %317 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7978, !tbaa !820
  %u6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %317, i32 0, i32 13, !dbg !7980
  %addr6363 = bitcast %union.anon.1* %u6 to %struct.in6_addr*, !dbg !7981
  store %struct.in6_addr* %addr6363, %struct.in6_addr** %addr6, align 4, !dbg !7982, !tbaa !820
  %318 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !7983, !tbaa !820
  %naddrs6364 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %318, i32 0, i32 14, !dbg !7984
  store i16 1, i16* %naddrs6364, align 4, !dbg !7985, !tbaa !2148
  br label %if.end373, !dbg !7986

if.else:                                          ; preds = %sw.bb359
  %319 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !7987, !tbaa !820
  %320 = load i32, i32* %naddrs, align 4, !dbg !7989, !tbaa !827
  %mul = mul i32 %320, 16, !dbg !7990
  %call365 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %319, i32 %mul), !dbg !7991
  %321 = bitcast i8* %call365 to %struct.in6_addr*, !dbg !7991
  store %struct.in6_addr* %321, %struct.in6_addr** %addr6, align 4, !dbg !7992, !tbaa !820
  %322 = load %struct.in6_addr*, %struct.in6_addr** %addr6, align 4, !dbg !7993, !tbaa !820
  %cmp366 = icmp eq %struct.in6_addr* %322, null, !dbg !7995
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !7996

if.then368:                                       ; preds = %if.else
  br label %failed, !dbg !7997

if.end369:                                        ; preds = %if.else
  %323 = load %struct.in6_addr*, %struct.in6_addr** %addr6, align 4, !dbg !7999, !tbaa !820
  %324 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8000, !tbaa !820
  %u6370 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %324, i32 0, i32 13, !dbg !8001
  %addrs6 = bitcast %union.anon.1* %u6370 to %struct.in6_addr**, !dbg !8002
  store %struct.in6_addr* %323, %struct.in6_addr** %addrs6, align 4, !dbg !8003, !tbaa !820
  %325 = load i32, i32* %naddrs, align 4, !dbg !8004, !tbaa !827
  %conv371 = trunc i32 %325 to i16, !dbg !8005
  %326 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8006, !tbaa !820
  %naddrs6372 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %326, i32 0, i32 14, !dbg !8007
  store i16 %conv371, i16* %naddrs6372, align 4, !dbg !8008, !tbaa !2148
  br label %if.end373

if.end373:                                        ; preds = %if.end369, %if.then362
  store i32* null, i32** %addr, align 4, !dbg !8009, !tbaa !820
  br label %sw.epilog392, !dbg !8010

sw.default374:                                    ; preds = %if.then358
  %327 = load i32, i32* %naddrs, align 4, !dbg !8011, !tbaa !827
  %cmp375 = icmp eq i32 %327, 1, !dbg !8013
  br i1 %cmp375, label %if.then377, label %if.else380, !dbg !8014

if.then377:                                       ; preds = %sw.default374
  %328 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8015, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %328, i32 0, i32 8, !dbg !8017
  %addr378 = bitcast %union.anon.0* %u to i32*, !dbg !8018
  store i32* %addr378, i32** %addr, align 4, !dbg !8019, !tbaa !820
  %329 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8020, !tbaa !820
  %naddrs379 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %329, i32 0, i32 10, !dbg !8021
  store i16 1, i16* %naddrs379, align 2, !dbg !8022, !tbaa !2140
  br label %if.end391, !dbg !8023

if.else380:                                       ; preds = %sw.default374
  %330 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8024, !tbaa !820
  %331 = load i32, i32* %naddrs, align 4, !dbg !8026, !tbaa !827
  %mul381 = mul i32 %331, 4, !dbg !8027
  %call382 = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %330, i32 %mul381), !dbg !8028
  %332 = bitcast i8* %call382 to i32*, !dbg !8028
  store i32* %332, i32** %addr, align 4, !dbg !8029, !tbaa !820
  %333 = load i32*, i32** %addr, align 4, !dbg !8030, !tbaa !820
  %cmp383 = icmp eq i32* %333, null, !dbg !8032
  br i1 %cmp383, label %if.then385, label %if.end386, !dbg !8033

if.then385:                                       ; preds = %if.else380
  br label %failed, !dbg !8034

if.end386:                                        ; preds = %if.else380
  %334 = load i32*, i32** %addr, align 4, !dbg !8036, !tbaa !820
  %335 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8037, !tbaa !820
  %u387 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %335, i32 0, i32 8, !dbg !8038
  %addrs388 = bitcast %union.anon.0* %u387 to i32**, !dbg !8039
  store i32* %334, i32** %addrs388, align 4, !dbg !8040, !tbaa !820
  %336 = load i32, i32* %naddrs, align 4, !dbg !8041, !tbaa !827
  %conv389 = trunc i32 %336 to i16, !dbg !8042
  %337 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8043, !tbaa !820
  %naddrs390 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %337, i32 0, i32 10, !dbg !8044
  store i16 %conv389, i16* %naddrs390, align 2, !dbg !8045, !tbaa !2140
  br label %if.end391

if.end391:                                        ; preds = %if.end386, %if.then377
  store %struct.in6_addr* null, %struct.in6_addr** %addr6, align 4, !dbg !8046, !tbaa !820
  br label %sw.epilog392, !dbg !8047

sw.epilog392:                                     ; preds = %if.end391, %if.end373
  store i32 0, i32* %j, align 4, !dbg !8048, !tbaa !827
  %338 = load i32, i32* %ans.addr, align 4, !dbg !8049, !tbaa !827
  store i32 %338, i32* %i, align 4, !dbg !8050, !tbaa !827
  store i32 0, i32* %a, align 4, !dbg !8051, !tbaa !827
  br label %for.cond393, !dbg !8053

for.cond393:                                      ; preds = %for.inc484, %sw.epilog392
  %339 = load i32, i32* %a, align 4, !dbg !8054, !tbaa !827
  %340 = load i32, i32* %nan.addr, align 4, !dbg !8056, !tbaa !827
  %cmp394 = icmp ult i32 %339, %340, !dbg !8057
  br i1 %cmp394, label %for.body396, label %for.end486, !dbg !8058

for.body396:                                      ; preds = %for.cond393
  br label %for.cond397, !dbg !8059

for.cond397:                                      ; preds = %if.end411, %for.body396
  %341 = load i8*, i8** %buf.addr, align 4, !dbg !8061, !tbaa !820
  %342 = load i32, i32* %i, align 4, !dbg !8066, !tbaa !827
  %arrayidx398 = getelementptr inbounds i8, i8* %341, i32 %342, !dbg !8061
  %343 = load i8, i8* %arrayidx398, align 1, !dbg !8061, !tbaa !1828
  %conv399 = zext i8 %343 to i32, !dbg !8061
  %and400 = and i32 %conv399, 192, !dbg !8067
  %tobool401 = icmp ne i32 %and400, 0, !dbg !8067
  br i1 %tobool401, label %if.then402, label %if.end404, !dbg !8068

if.then402:                                       ; preds = %for.cond397
  %344 = load i32, i32* %i, align 4, !dbg !8069, !tbaa !827
  %add403 = add i32 %344, 2, !dbg !8069
  store i32 %add403, i32* %i, align 4, !dbg !8069, !tbaa !827
  br label %for.end416, !dbg !8071

if.end404:                                        ; preds = %for.cond397
  %345 = load i8*, i8** %buf.addr, align 4, !dbg !8072, !tbaa !820
  %346 = load i32, i32* %i, align 4, !dbg !8074, !tbaa !827
  %arrayidx405 = getelementptr inbounds i8, i8* %345, i32 %346, !dbg !8072
  %347 = load i8, i8* %arrayidx405, align 1, !dbg !8072, !tbaa !1828
  %conv406 = zext i8 %347 to i32, !dbg !8072
  %cmp407 = icmp eq i32 %conv406, 0, !dbg !8075
  br i1 %cmp407, label %if.then409, label %if.end411, !dbg !8076

if.then409:                                       ; preds = %if.end404
  %348 = load i32, i32* %i, align 4, !dbg !8077, !tbaa !827
  %inc410 = add i32 %348, 1, !dbg !8077
  store i32 %inc410, i32* %i, align 4, !dbg !8077, !tbaa !827
  br label %for.end416, !dbg !8079

if.end411:                                        ; preds = %if.end404
  %349 = load i8*, i8** %buf.addr, align 4, !dbg !8080, !tbaa !820
  %350 = load i32, i32* %i, align 4, !dbg !8081, !tbaa !827
  %arrayidx412 = getelementptr inbounds i8, i8* %349, i32 %350, !dbg !8080
  %351 = load i8, i8* %arrayidx412, align 1, !dbg !8080, !tbaa !1828
  %conv413 = zext i8 %351 to i32, !dbg !8080
  %add414 = add nsw i32 1, %conv413, !dbg !8082
  %352 = load i32, i32* %i, align 4, !dbg !8083, !tbaa !827
  %add415 = add i32 %352, %add414, !dbg !8083
  store i32 %add415, i32* %i, align 4, !dbg !8083, !tbaa !827
  br label %for.cond397, !dbg !8084, !llvm.loop !8085

for.end416:                                       ; preds = %if.then409, %if.then402
  %353 = load i8*, i8** %buf.addr, align 4, !dbg !8088, !tbaa !820
  %354 = load i32, i32* %i, align 4, !dbg !8089, !tbaa !827
  %arrayidx417 = getelementptr inbounds i8, i8* %353, i32 %354, !dbg !8088
  %355 = bitcast i8* %arrayidx417 to %struct.ngx_resolver_an_t*, !dbg !8090
  store %struct.ngx_resolver_an_t* %355, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8091, !tbaa !820
  %356 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8092, !tbaa !820
  %type_hi418 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %356, i32 0, i32 0, !dbg !8093
  %357 = load i8, i8* %type_hi418, align 1, !dbg !8093, !tbaa !7838
  %conv419 = zext i8 %357 to i32, !dbg !8092
  %shl420 = shl i32 %conv419, 8, !dbg !8094
  %358 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8095, !tbaa !820
  %type_lo421 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %358, i32 0, i32 1, !dbg !8096
  %359 = load i8, i8* %type_lo421, align 1, !dbg !8096, !tbaa !7843
  %conv422 = zext i8 %359 to i32, !dbg !8095
  %add423 = add nsw i32 %shl420, %conv422, !dbg !8097
  store i32 %add423, i32* %type, align 4, !dbg !8098, !tbaa !827
  %360 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8099, !tbaa !820
  %len_hi424 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %360, i32 0, i32 5, !dbg !8100
  %361 = load i8, i8* %len_hi424, align 1, !dbg !8100, !tbaa !7857
  %conv425 = zext i8 %361 to i32, !dbg !8099
  %shl426 = shl i32 %conv425, 8, !dbg !8101
  %362 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8102, !tbaa !820
  %len_lo427 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %362, i32 0, i32 6, !dbg !8103
  %363 = load i8, i8* %len_lo427, align 1, !dbg !8103, !tbaa !7861
  %conv428 = zext i8 %363 to i32, !dbg !8102
  %add429 = add nsw i32 %shl426, %conv428, !dbg !8104
  store i32 %add429, i32* %len, align 4, !dbg !8105, !tbaa !827
  %364 = load i32, i32* %i, align 4, !dbg !8106, !tbaa !827
  %add430 = add i32 %364, 10, !dbg !8106
  store i32 %add430, i32* %i, align 4, !dbg !8106, !tbaa !827
  %365 = load i32, i32* %type, align 4, !dbg !8107, !tbaa !827
  %cmp431 = icmp eq i32 %365, 1, !dbg !8109
  br i1 %cmp431, label %if.then433, label %if.else464, !dbg !8110

if.then433:                                       ; preds = %for.end416
  %366 = load i8*, i8** %buf.addr, align 4, !dbg !8111, !tbaa !820
  %367 = load i32, i32* %i, align 4, !dbg !8113, !tbaa !827
  %arrayidx434 = getelementptr inbounds i8, i8* %366, i32 %367, !dbg !8111
  %368 = load i8, i8* %arrayidx434, align 1, !dbg !8111, !tbaa !1828
  %conv435 = zext i8 %368 to i32, !dbg !8111
  %shl436 = shl i32 %conv435, 24, !dbg !8114
  %369 = load i8*, i8** %buf.addr, align 4, !dbg !8115, !tbaa !820
  %370 = load i32, i32* %i, align 4, !dbg !8116, !tbaa !827
  %add437 = add i32 %370, 1, !dbg !8117
  %arrayidx438 = getelementptr inbounds i8, i8* %369, i32 %add437, !dbg !8115
  %371 = load i8, i8* %arrayidx438, align 1, !dbg !8115, !tbaa !1828
  %conv439 = zext i8 %371 to i32, !dbg !8115
  %shl440 = shl i32 %conv439, 16, !dbg !8118
  %add441 = add nsw i32 %shl436, %shl440, !dbg !8119
  %372 = load i8*, i8** %buf.addr, align 4, !dbg !8120, !tbaa !820
  %373 = load i32, i32* %i, align 4, !dbg !8121, !tbaa !827
  %add442 = add i32 %373, 2, !dbg !8122
  %arrayidx443 = getelementptr inbounds i8, i8* %372, i32 %add442, !dbg !8120
  %374 = load i8, i8* %arrayidx443, align 1, !dbg !8120, !tbaa !1828
  %conv444 = zext i8 %374 to i32, !dbg !8120
  %shl445 = shl i32 %conv444, 8, !dbg !8123
  %add446 = add nsw i32 %add441, %shl445, !dbg !8124
  %375 = load i8*, i8** %buf.addr, align 4, !dbg !8125, !tbaa !820
  %376 = load i32, i32* %i, align 4, !dbg !8126, !tbaa !827
  %add447 = add i32 %376, 3, !dbg !8127
  %arrayidx448 = getelementptr inbounds i8, i8* %375, i32 %add447, !dbg !8125
  %377 = load i8, i8* %arrayidx448, align 1, !dbg !8125, !tbaa !1828
  %conv449 = zext i8 %377 to i32, !dbg !8128
  %add450 = add nsw i32 %add446, %conv449, !dbg !8129
  %call451 = call i32 @htonl(i32 %add450), !dbg !8130
  %378 = load i32*, i32** %addr, align 4, !dbg !8131, !tbaa !820
  %379 = load i32, i32* %j, align 4, !dbg !8132, !tbaa !827
  %arrayidx452 = getelementptr inbounds i32, i32* %378, i32 %379, !dbg !8131
  store i32 %call451, i32* %arrayidx452, align 4, !dbg !8133, !tbaa !827
  %380 = load i32, i32* %j, align 4, !dbg !8134, !tbaa !827
  %inc453 = add i32 %380, 1, !dbg !8134
  store i32 %inc453, i32* %j, align 4, !dbg !8134, !tbaa !827
  %381 = load i32, i32* %naddrs, align 4, !dbg !8136, !tbaa !827
  %cmp454 = icmp eq i32 %inc453, %381, !dbg !8137
  br i1 %cmp454, label %if.then456, label %if.end463, !dbg !8138

if.then456:                                       ; preds = %if.then433
  %382 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8139, !tbaa !820
  %naddrs6457 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %382, i32 0, i32 14, !dbg !8142
  %383 = load i16, i16* %naddrs6457, align 4, !dbg !8142, !tbaa !2148
  %conv458 = zext i16 %383 to i32, !dbg !8139
  %cmp459 = icmp eq i32 %conv458, 65535, !dbg !8143
  br i1 %cmp459, label %if.then461, label %if.end462, !dbg !8144

if.then461:                                       ; preds = %if.then456
  br label %next724, !dbg !8145

if.end462:                                        ; preds = %if.then456
  br label %for.end486, !dbg !8147

if.end463:                                        ; preds = %if.then433
  br label %if.end482, !dbg !8148

if.else464:                                       ; preds = %for.end416
  %384 = load i32, i32* %type, align 4, !dbg !8149, !tbaa !827
  %cmp465 = icmp eq i32 %384, 28, !dbg !8151
  br i1 %cmp465, label %if.then467, label %if.end481, !dbg !8152

if.then467:                                       ; preds = %if.else464
  %385 = load %struct.in6_addr*, %struct.in6_addr** %addr6, align 4, !dbg !8153, !tbaa !820
  %386 = load i32, i32* %j, align 4, !dbg !8153, !tbaa !827
  %arrayidx468 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %385, i32 %386, !dbg !8153
  %__in6_union = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %arrayidx468, i32 0, i32 0, !dbg !8153
  %__s6_addr = bitcast %union.anon* %__in6_union to [16 x i8]*, !dbg !8153
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr, i32 0, i32 0, !dbg !8153
  %387 = load i8*, i8** %buf.addr, align 4, !dbg !8153, !tbaa !820
  %388 = load i32, i32* %i, align 4, !dbg !8153, !tbaa !827
  %arrayidx469 = getelementptr inbounds i8, i8* %387, i32 %388, !dbg !8153
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %arraydecay, i8* %arrayidx469, i32 16, i32 1, i1 false), !dbg !8153
  %389 = load i32, i32* %j, align 4, !dbg !8155, !tbaa !827
  %inc470 = add i32 %389, 1, !dbg !8155
  store i32 %inc470, i32* %j, align 4, !dbg !8155, !tbaa !827
  %390 = load i32, i32* %naddrs, align 4, !dbg !8157, !tbaa !827
  %cmp471 = icmp eq i32 %inc470, %390, !dbg !8158
  br i1 %cmp471, label %if.then473, label %if.end480, !dbg !8159

if.then473:                                       ; preds = %if.then467
  %391 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8160, !tbaa !820
  %naddrs474 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %391, i32 0, i32 10, !dbg !8163
  %392 = load i16, i16* %naddrs474, align 2, !dbg !8163, !tbaa !2140
  %conv475 = zext i16 %392 to i32, !dbg !8160
  %cmp476 = icmp eq i32 %conv475, 65535, !dbg !8164
  br i1 %cmp476, label %if.then478, label %if.end479, !dbg !8165

if.then478:                                       ; preds = %if.then473
  br label %next724, !dbg !8166

if.end479:                                        ; preds = %if.then473
  br label %for.end486, !dbg !8168

if.end480:                                        ; preds = %if.then467
  br label %if.end481, !dbg !8169

if.end481:                                        ; preds = %if.end480, %if.else464
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.end463
  %393 = load i32, i32* %len, align 4, !dbg !8170, !tbaa !827
  %394 = load i32, i32* %i, align 4, !dbg !8171, !tbaa !827
  %add483 = add i32 %394, %393, !dbg !8171
  store i32 %add483, i32* %i, align 4, !dbg !8171, !tbaa !827
  br label %for.inc484, !dbg !8172

for.inc484:                                       ; preds = %if.end482
  %395 = load i32, i32* %a, align 4, !dbg !8173, !tbaa !827
  %inc485 = add i32 %395, 1, !dbg !8173
  store i32 %inc485, i32* %a, align 4, !dbg !8173, !tbaa !827
  br label %for.cond393, !dbg !8174, !llvm.loop !8175

for.end486:                                       ; preds = %if.end479, %if.end462, %for.cond393
  br label %if.end487, !dbg !8177

if.end487:                                        ; preds = %for.end486, %for.end
  %396 = load i32, i32* %qtype.addr, align 4, !dbg !8178, !tbaa !827
  switch i32 %396, label %sw.default496 [
    i32 28, label %sw.bb488
  ], !dbg !8179

sw.bb488:                                         ; preds = %if.end487
  %397 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8180, !tbaa !820
  %naddrs6489 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %397, i32 0, i32 14, !dbg !8183
  %398 = load i16, i16* %naddrs6489, align 4, !dbg !8183, !tbaa !2148
  %conv490 = zext i16 %398 to i32, !dbg !8180
  %cmp491 = icmp eq i32 %conv490, 65535, !dbg !8184
  br i1 %cmp491, label %if.then493, label %if.end495, !dbg !8185

if.then493:                                       ; preds = %sw.bb488
  %399 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8186, !tbaa !820
  %naddrs6494 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %399, i32 0, i32 14, !dbg !8188
  store i16 0, i16* %naddrs6494, align 4, !dbg !8189, !tbaa !2148
  br label %if.end495, !dbg !8190

if.end495:                                        ; preds = %if.then493, %sw.bb488
  br label %sw.epilog504, !dbg !8191

sw.default496:                                    ; preds = %if.end487
  %400 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8192, !tbaa !820
  %naddrs497 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %400, i32 0, i32 10, !dbg !8194
  %401 = load i16, i16* %naddrs497, align 2, !dbg !8194, !tbaa !2140
  %conv498 = zext i16 %401 to i32, !dbg !8192
  %cmp499 = icmp eq i32 %conv498, 65535, !dbg !8195
  br i1 %cmp499, label %if.then501, label %if.end503, !dbg !8196

if.then501:                                       ; preds = %sw.default496
  %402 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8197, !tbaa !820
  %naddrs502 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %402, i32 0, i32 10, !dbg !8199
  store i16 0, i16* %naddrs502, align 2, !dbg !8200, !tbaa !2140
  br label %if.end503, !dbg !8201

if.end503:                                        ; preds = %if.then501, %sw.default496
  br label %sw.epilog504, !dbg !8202

sw.epilog504:                                     ; preds = %if.end503, %if.end495
  %403 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8203, !tbaa !820
  %naddrs505 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %403, i32 0, i32 10, !dbg !8205
  %404 = load i16, i16* %naddrs505, align 2, !dbg !8205, !tbaa !2140
  %conv506 = zext i16 %404 to i32, !dbg !8203
  %cmp507 = icmp ne i32 %conv506, 65535, !dbg !8206
  br i1 %cmp507, label %land.lhs.true509, label %if.end616, !dbg !8207

land.lhs.true509:                                 ; preds = %sw.epilog504
  %405 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8208, !tbaa !820
  %naddrs6510 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %405, i32 0, i32 14, !dbg !8209
  %406 = load i16, i16* %naddrs6510, align 4, !dbg !8209, !tbaa !2148
  %conv511 = zext i16 %406 to i32, !dbg !8208
  %cmp512 = icmp ne i32 %conv511, 65535, !dbg !8210
  br i1 %cmp512, label %land.lhs.true514, label %if.end616, !dbg !8211

land.lhs.true514:                                 ; preds = %land.lhs.true509
  %407 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8212, !tbaa !820
  %naddrs515 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %407, i32 0, i32 10, !dbg !8213
  %408 = load i16, i16* %naddrs515, align 2, !dbg !8213, !tbaa !2140
  %conv516 = zext i16 %408 to i32, !dbg !8212
  %409 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8214, !tbaa !820
  %naddrs6517 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %409, i32 0, i32 14, !dbg !8215
  %410 = load i16, i16* %naddrs6517, align 4, !dbg !8215, !tbaa !2148
  %conv518 = zext i16 %410 to i32, !dbg !8214
  %add519 = add nsw i32 %conv516, %conv518, !dbg !8216
  %cmp520 = icmp sgt i32 %add519, 0, !dbg !8217
  br i1 %cmp520, label %if.then522, label %if.end616, !dbg !8218

if.then522:                                       ; preds = %land.lhs.true514
  br label %export, !dbg !8219

export:                                           ; preds = %if.then522, %if.then173, %if.then161
  %411 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8220, !tbaa !820
  %naddrs523 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %411, i32 0, i32 10, !dbg !8222
  %412 = load i16, i16* %naddrs523, align 2, !dbg !8222, !tbaa !2140
  %conv524 = zext i16 %412 to i32, !dbg !8220
  store i32 %conv524, i32* %naddrs, align 4, !dbg !8223, !tbaa !827
  %413 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8224, !tbaa !820
  %naddrs6525 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %413, i32 0, i32 14, !dbg !8225
  %414 = load i16, i16* %naddrs6525, align 4, !dbg !8225, !tbaa !2148
  %conv526 = zext i16 %414 to i32, !dbg !8224
  %415 = load i32, i32* %naddrs, align 4, !dbg !8226, !tbaa !827
  %add527 = add i32 %415, %conv526, !dbg !8226
  store i32 %add527, i32* %naddrs, align 4, !dbg !8226, !tbaa !827
  %416 = load i32, i32* %naddrs, align 4, !dbg !8227, !tbaa !827
  %cmp528 = icmp eq i32 %416, 1, !dbg !8229
  br i1 %cmp528, label %land.lhs.true530, label %if.else536, !dbg !8230

land.lhs.true530:                                 ; preds = %export
  %417 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8231, !tbaa !820
  %naddrs531 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %417, i32 0, i32 10, !dbg !8232
  %418 = load i16, i16* %naddrs531, align 2, !dbg !8232, !tbaa !2140
  %conv532 = zext i16 %418 to i32, !dbg !8231
  %cmp533 = icmp eq i32 %conv532, 1, !dbg !8233
  br i1 %cmp533, label %if.then535, label %if.else536, !dbg !8234

if.then535:                                       ; preds = %land.lhs.true530
  store %struct.ngx_resolver_addr_t* null, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8235, !tbaa !820
  br label %if.end542, !dbg !8237

if.else536:                                       ; preds = %land.lhs.true530, %export
  %419 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8238, !tbaa !820
  %420 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8240, !tbaa !820
  %call537 = call %struct.ngx_resolver_addr_t* @ngx_resolver_export(%struct.ngx_resolver_s* %419, %struct.ngx_resolver_node_t* %420, i32 0), !dbg !8241
  store %struct.ngx_resolver_addr_t* %call537, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8242, !tbaa !820
  %421 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8243, !tbaa !820
  %cmp538 = icmp eq %struct.ngx_resolver_addr_t* %421, null, !dbg !8245
  br i1 %cmp538, label %if.then540, label %if.end541, !dbg !8246

if.then540:                                       ; preds = %if.else536
  br label %failed, !dbg !8247

if.end541:                                        ; preds = %if.else536
  br label %if.end542

if.end542:                                        ; preds = %if.end541, %if.then535
  %422 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8249, !tbaa !820
  %queue543 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %422, i32 0, i32 1, !dbg !8249
  %prev544 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue543, i32 0, i32 0, !dbg !8249
  %423 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev544, align 4, !dbg !8249, !tbaa !904
  %424 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8249, !tbaa !820
  %queue545 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %424, i32 0, i32 1, !dbg !8249
  %next546 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue545, i32 0, i32 1, !dbg !8249
  %425 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next546, align 4, !dbg !8249, !tbaa !905
  %prev547 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %425, i32 0, i32 0, !dbg !8249
  store %struct.ngx_queue_s* %423, %struct.ngx_queue_s** %prev547, align 4, !dbg !8249, !tbaa !904
  %426 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8249, !tbaa !820
  %queue548 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %426, i32 0, i32 1, !dbg !8249
  %next549 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue548, i32 0, i32 1, !dbg !8249
  %427 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next549, align 4, !dbg !8249, !tbaa !905
  %428 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8249, !tbaa !820
  %queue550 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %428, i32 0, i32 1, !dbg !8249
  %prev551 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue550, i32 0, i32 0, !dbg !8249
  %429 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev551, align 4, !dbg !8249, !tbaa !904
  %next552 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %429, i32 0, i32 1, !dbg !8249
  store %struct.ngx_queue_s* %427, %struct.ngx_queue_s** %next552, align 4, !dbg !8249, !tbaa !905
  %430 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8250, !tbaa !820
  %sec553 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %430, i32 0, i32 0, !dbg !8250
  %431 = load volatile i32, i32* %sec553, align 4, !dbg !8250, !tbaa !2123
  %432 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8251, !tbaa !820
  %valid554 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %432, i32 0, i32 26, !dbg !8252
  %433 = load i32, i32* %valid554, align 4, !dbg !8252, !tbaa !958
  %tobool555 = icmp ne i32 %433, 0, !dbg !8251
  br i1 %tobool555, label %cond.true556, label %cond.false558, !dbg !8251

cond.true556:                                     ; preds = %if.end542
  %434 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8253, !tbaa !820
  %valid557 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %434, i32 0, i32 26, !dbg !8254
  %435 = load i32, i32* %valid557, align 4, !dbg !8254, !tbaa !958
  br label %cond.end560, !dbg !8251

cond.false558:                                    ; preds = %if.end542
  %436 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8255, !tbaa !820
  %ttl559 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %436, i32 0, i32 17, !dbg !8256
  %437 = load i32, i32* %ttl559, align 4, !dbg !8256, !tbaa !2783
  br label %cond.end560, !dbg !8251

cond.end560:                                      ; preds = %cond.false558, %cond.true556
  %cond561 = phi i32 [ %435, %cond.true556 ], [ %437, %cond.false558 ], !dbg !8251
  %add562 = add nsw i32 %431, %cond561, !dbg !8257
  %438 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8258, !tbaa !820
  %valid563 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %438, i32 0, i32 16, !dbg !8259
  store i32 %add562, i32* %valid563, align 4, !dbg !8260, !tbaa !2121
  %439 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8261, !tbaa !820
  %sec564 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %439, i32 0, i32 0, !dbg !8261
  %440 = load volatile i32, i32* %sec564, align 4, !dbg !8261, !tbaa !2123
  %441 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8262, !tbaa !820
  %expire565 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %441, i32 0, i32 25, !dbg !8263
  %442 = load i32, i32* %expire565, align 4, !dbg !8263, !tbaa !954
  %add566 = add nsw i32 %440, %442, !dbg !8264
  %443 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8265, !tbaa !820
  %expire567 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %443, i32 0, i32 15, !dbg !8266
  store i32 %add566, i32* %expire567, align 4, !dbg !8267, !tbaa !2136
  %444 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8268, !tbaa !820
  %name_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %444, i32 0, i32 15, !dbg !8268
  %next568 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue, i32 0, i32 1, !dbg !8268
  %445 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next568, align 4, !dbg !8268, !tbaa !905
  %446 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8268, !tbaa !820
  %queue569 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %446, i32 0, i32 1, !dbg !8268
  %next570 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue569, i32 0, i32 1, !dbg !8268
  store %struct.ngx_queue_s* %445, %struct.ngx_queue_s** %next570, align 4, !dbg !8268, !tbaa !905
  %447 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8268, !tbaa !820
  %queue571 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %447, i32 0, i32 1, !dbg !8268
  %448 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8268, !tbaa !820
  %queue572 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %448, i32 0, i32 1, !dbg !8268
  %next573 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue572, i32 0, i32 1, !dbg !8268
  %449 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next573, align 4, !dbg !8268, !tbaa !905
  %prev574 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %449, i32 0, i32 0, !dbg !8268
  store %struct.ngx_queue_s* %queue571, %struct.ngx_queue_s** %prev574, align 4, !dbg !8268, !tbaa !904
  %450 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8268, !tbaa !820
  %name_expire_queue575 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %450, i32 0, i32 15, !dbg !8268
  %451 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8268, !tbaa !820
  %queue576 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %451, i32 0, i32 1, !dbg !8268
  %prev577 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue576, i32 0, i32 0, !dbg !8268
  store %struct.ngx_queue_s* %name_expire_queue575, %struct.ngx_queue_s** %prev577, align 4, !dbg !8268, !tbaa !904
  %452 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8268, !tbaa !820
  %queue578 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %452, i32 0, i32 1, !dbg !8268
  %453 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8268, !tbaa !820
  %name_expire_queue579 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %453, i32 0, i32 15, !dbg !8268
  %next580 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue579, i32 0, i32 1, !dbg !8268
  store %struct.ngx_queue_s* %queue578, %struct.ngx_queue_s** %next580, align 4, !dbg !8268, !tbaa !905
  %454 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8269, !tbaa !820
  %waiting581 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %454, i32 0, i32 20, !dbg !8270
  %455 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting581, align 4, !dbg !8270, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %455, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8271, !tbaa !820
  %456 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8272, !tbaa !820
  %waiting582 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %456, i32 0, i32 20, !dbg !8273
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting582, align 4, !dbg !8274, !tbaa !2182
  br label %while.cond583, !dbg !8275

while.cond583:                                    ; preds = %if.end604, %cond.end560
  %457 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8276, !tbaa !820
  %tobool584 = icmp ne %struct.ngx_resolver_ctx_s* %457, null, !dbg !8275
  br i1 %tobool584, label %while.body585, label %while.end607, !dbg !8275

while.body585:                                    ; preds = %while.cond583
  %458 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8277, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %458, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8279, !tbaa !820
  %459 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8280, !tbaa !820
  %state586 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %459, i32 0, i32 4, !dbg !8281
  store i32 0, i32* %state586, align 4, !dbg !8282, !tbaa !1703
  %460 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8283, !tbaa !820
  %valid587 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %460, i32 0, i32 16, !dbg !8284
  %461 = load i32, i32* %valid587, align 4, !dbg !8284, !tbaa !2121
  %462 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8285, !tbaa !820
  %valid588 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %462, i32 0, i32 7, !dbg !8286
  store i32 %461, i32* %valid588, align 4, !dbg !8287, !tbaa !2201
  %463 = load i32, i32* %naddrs, align 4, !dbg !8288, !tbaa !827
  %464 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8289, !tbaa !820
  %naddrs589 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %464, i32 0, i32 8, !dbg !8290
  store i32 %463, i32* %naddrs589, align 4, !dbg !8291, !tbaa !1707
  %465 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8292, !tbaa !820
  %cmp590 = icmp eq %struct.ngx_resolver_addr_t* %465, null, !dbg !8294
  br i1 %cmp590, label %if.then592, label %if.else602, !dbg !8295

if.then592:                                       ; preds = %while.body585
  %466 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8296, !tbaa !820
  %addr593 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %466, i32 0, i32 10, !dbg !8298
  %467 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8299, !tbaa !820
  %addrs594 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %467, i32 0, i32 9, !dbg !8300
  store %struct.ngx_resolver_addr_t* %addr593, %struct.ngx_resolver_addr_t** %addrs594, align 4, !dbg !8301, !tbaa !1713
  %468 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8302, !tbaa !820
  %sin = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %468, i32 0, i32 11, !dbg !8303
  %469 = bitcast %struct.sockaddr_in* %sin to %struct.sockaddr*, !dbg !8304
  %470 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8305, !tbaa !820
  %addr595 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %470, i32 0, i32 10, !dbg !8306
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr595, i32 0, i32 0, !dbg !8307
  store %struct.sockaddr* %469, %struct.sockaddr** %sockaddr, align 4, !dbg !8308, !tbaa !1721
  %471 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8309, !tbaa !820
  %addr596 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %471, i32 0, i32 10, !dbg !8310
  %socklen = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %addr596, i32 0, i32 1, !dbg !8311
  store i32 16, i32* %socklen, align 4, !dbg !8312, !tbaa !1726
  %472 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8313, !tbaa !820
  %sin597 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %472, i32 0, i32 11, !dbg !8313
  %473 = bitcast %struct.sockaddr_in* %sin597 to i8*, !dbg !8313
  call void @llvm.memset.p0i8.i32(i8* %473, i8 0, i32 16, i32 4, i1 false), !dbg !8313
  %474 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8314, !tbaa !820
  %sin598 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %474, i32 0, i32 11, !dbg !8315
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin598, i32 0, i32 0, !dbg !8316
  store i16 2, i16* %sin_family, align 4, !dbg !8317, !tbaa !1732
  %475 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8318, !tbaa !820
  %u599 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %475, i32 0, i32 8, !dbg !8319
  %addr600 = bitcast %union.anon.0* %u599 to i32*, !dbg !8320
  %476 = load i32, i32* %addr600, align 4, !dbg !8320, !tbaa !827
  %477 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8321, !tbaa !820
  %sin601 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %477, i32 0, i32 11, !dbg !8322
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %sin601, i32 0, i32 2, !dbg !8323
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %sin_addr, i32 0, i32 0, !dbg !8324
  store i32 %476, i32* %s_addr, align 4, !dbg !8325, !tbaa !1739
  br label %if.end604, !dbg !8326

if.else602:                                       ; preds = %while.body585
  %478 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8327, !tbaa !820
  %479 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8329, !tbaa !820
  %addrs603 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %479, i32 0, i32 9, !dbg !8330
  store %struct.ngx_resolver_addr_t* %478, %struct.ngx_resolver_addr_t** %addrs603, align 4, !dbg !8331, !tbaa !1713
  br label %if.end604

if.end604:                                        ; preds = %if.else602, %if.then592
  %480 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8332, !tbaa !820
  %next605 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %480, i32 0, i32 0, !dbg !8333
  %481 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next605, align 4, !dbg !8333, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %481, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8334, !tbaa !820
  %482 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8335, !tbaa !820
  %handler606 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %482, i32 0, i32 15, !dbg !8336
  %483 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler606, align 4, !dbg !8336, !tbaa !1844
  %484 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8337, !tbaa !820
  call void %483(%struct.ngx_resolver_ctx_s* %484), !dbg !8335
  br label %while.cond583, !dbg !8275, !llvm.loop !8338

while.end607:                                     ; preds = %while.cond583
  %485 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8340, !tbaa !820
  %cmp608 = icmp ne %struct.ngx_resolver_addr_t* %485, null, !dbg !8342
  br i1 %cmp608, label %if.then610, label %if.end612, !dbg !8343

if.then610:                                       ; preds = %while.end607
  %486 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8344, !tbaa !820
  %487 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8346, !tbaa !820
  %sockaddr611 = getelementptr inbounds %struct.ngx_resolver_addr_t, %struct.ngx_resolver_addr_t* %487, i32 0, i32 0, !dbg !8347
  %488 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr611, align 4, !dbg !8347, !tbaa !2264
  %489 = bitcast %struct.sockaddr* %488 to i8*, !dbg !8346
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %486, i8* %489), !dbg !8348
  %490 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8349, !tbaa !820
  %491 = load %struct.ngx_resolver_addr_t*, %struct.ngx_resolver_addr_t** %addrs, align 4, !dbg !8350, !tbaa !820
  %492 = bitcast %struct.ngx_resolver_addr_t* %491 to i8*, !dbg !8350
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %490, i8* %492), !dbg !8351
  br label %if.end612, !dbg !8352

if.end612:                                        ; preds = %if.then610, %while.end607
  %493 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8353, !tbaa !820
  %494 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8354, !tbaa !820
  %query613 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %494, i32 0, i32 6, !dbg !8355
  %495 = load i8*, i8** %query613, align 4, !dbg !8355, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %493, i8* %495), !dbg !8356
  %496 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8357, !tbaa !820
  %query614 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %496, i32 0, i32 6, !dbg !8358
  store i8* null, i8** %query614, align 4, !dbg !8359, !tbaa !2440
  %497 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8360, !tbaa !820
  %query6615 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %497, i32 0, i32 7, !dbg !8361
  store i8* null, i8** %query6615, align 4, !dbg !8362, !tbaa !2453
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8363

if.end616:                                        ; preds = %land.lhs.true514, %land.lhs.true509, %sw.epilog504
  %498 = load i8*, i8** %cname, align 4, !dbg !8364, !tbaa !820
  %tobool617 = icmp ne i8* %498, null, !dbg !8364
  br i1 %tobool617, label %if.then618, label %if.end705, !dbg !8366

if.then618:                                       ; preds = %if.end616
  %499 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8367, !tbaa !820
  %naddrs619 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %499, i32 0, i32 10, !dbg !8370
  %500 = load i16, i16* %naddrs619, align 2, !dbg !8370, !tbaa !2140
  %conv620 = zext i16 %500 to i32, !dbg !8367
  %cmp621 = icmp eq i32 %conv620, 65535, !dbg !8371
  br i1 %cmp621, label %if.then628, label %lor.lhs.false623, !dbg !8372

lor.lhs.false623:                                 ; preds = %if.then618
  %501 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8373, !tbaa !820
  %naddrs6624 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %501, i32 0, i32 14, !dbg !8374
  %502 = load i16, i16* %naddrs6624, align 4, !dbg !8374, !tbaa !2148
  %conv625 = zext i16 %502 to i32, !dbg !8373
  %cmp626 = icmp eq i32 %conv625, 65535, !dbg !8375
  br i1 %cmp626, label %if.then628, label %if.end629, !dbg !8376

if.then628:                                       ; preds = %lor.lhs.false623, %if.then618
  br label %next724, !dbg !8377

if.end629:                                        ; preds = %lor.lhs.false623
  %503 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8379, !tbaa !820
  %504 = load i8*, i8** %buf.addr, align 4, !dbg !8381, !tbaa !820
  %505 = load i8*, i8** %cname, align 4, !dbg !8382, !tbaa !820
  %506 = load i8*, i8** %buf.addr, align 4, !dbg !8383, !tbaa !820
  %507 = load i32, i32* %n.addr, align 4, !dbg !8384, !tbaa !827
  %add.ptr630 = getelementptr inbounds i8, i8* %506, i32 %507, !dbg !8385
  %call631 = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %503, %struct.ngx_str_t* %name, i8* %504, i8* %505, i8* %add.ptr630), !dbg !8386
  %cmp632 = icmp ne i32 %call631, 0, !dbg !8387
  br i1 %cmp632, label %if.then634, label %if.end635, !dbg !8388

if.then634:                                       ; preds = %if.end629
  br label %failed, !dbg !8389

if.end635:                                        ; preds = %if.end629
  %508 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8391, !tbaa !820
  %queue636 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %508, i32 0, i32 1, !dbg !8391
  %prev637 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue636, i32 0, i32 0, !dbg !8391
  %509 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev637, align 4, !dbg !8391, !tbaa !904
  %510 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8391, !tbaa !820
  %queue638 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %510, i32 0, i32 1, !dbg !8391
  %next639 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue638, i32 0, i32 1, !dbg !8391
  %511 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next639, align 4, !dbg !8391, !tbaa !905
  %prev640 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %511, i32 0, i32 0, !dbg !8391
  store %struct.ngx_queue_s* %509, %struct.ngx_queue_s** %prev640, align 4, !dbg !8391, !tbaa !904
  %512 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8391, !tbaa !820
  %queue641 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %512, i32 0, i32 1, !dbg !8391
  %next642 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue641, i32 0, i32 1, !dbg !8391
  %513 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next642, align 4, !dbg !8391, !tbaa !905
  %514 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8391, !tbaa !820
  %queue643 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %514, i32 0, i32 1, !dbg !8391
  %prev644 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue643, i32 0, i32 0, !dbg !8391
  %515 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev644, align 4, !dbg !8391, !tbaa !904
  %next645 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %515, i32 0, i32 1, !dbg !8391
  store %struct.ngx_queue_s* %513, %struct.ngx_queue_s** %next645, align 4, !dbg !8391, !tbaa !905
  %len646 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !8392
  %516 = load i32, i32* %len646, align 4, !dbg !8392, !tbaa !1005
  %conv647 = trunc i32 %516 to i16, !dbg !8393
  %517 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8394, !tbaa !820
  %cnlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %517, i32 0, i32 12, !dbg !8395
  store i16 %conv647, i16* %cnlen, align 2, !dbg !8396, !tbaa !2310
  %data648 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8397
  %518 = load i8*, i8** %data648, align 4, !dbg !8397, !tbaa !997
  %519 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8398, !tbaa !820
  %u649 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %519, i32 0, i32 8, !dbg !8399
  %cname650 = bitcast %union.anon.0* %u649 to i8**, !dbg !8400
  store i8* %518, i8** %cname650, align 4, !dbg !8401, !tbaa !820
  %520 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8402, !tbaa !820
  %sec651 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %520, i32 0, i32 0, !dbg !8402
  %521 = load volatile i32, i32* %sec651, align 4, !dbg !8402, !tbaa !2123
  %522 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8403, !tbaa !820
  %valid652 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %522, i32 0, i32 26, !dbg !8404
  %523 = load i32, i32* %valid652, align 4, !dbg !8404, !tbaa !958
  %tobool653 = icmp ne i32 %523, 0, !dbg !8403
  br i1 %tobool653, label %cond.true654, label %cond.false656, !dbg !8403

cond.true654:                                     ; preds = %if.end635
  %524 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8405, !tbaa !820
  %valid655 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %524, i32 0, i32 26, !dbg !8406
  %525 = load i32, i32* %valid655, align 4, !dbg !8406, !tbaa !958
  br label %cond.end658, !dbg !8403

cond.false656:                                    ; preds = %if.end635
  %526 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8407, !tbaa !820
  %ttl657 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %526, i32 0, i32 17, !dbg !8408
  %527 = load i32, i32* %ttl657, align 4, !dbg !8408, !tbaa !2783
  br label %cond.end658, !dbg !8403

cond.end658:                                      ; preds = %cond.false656, %cond.true654
  %cond659 = phi i32 [ %525, %cond.true654 ], [ %527, %cond.false656 ], !dbg !8403
  %add660 = add nsw i32 %521, %cond659, !dbg !8409
  %528 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8410, !tbaa !820
  %valid661 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %528, i32 0, i32 16, !dbg !8411
  store i32 %add660, i32* %valid661, align 4, !dbg !8412, !tbaa !2121
  %529 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8413, !tbaa !820
  %sec662 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %529, i32 0, i32 0, !dbg !8413
  %530 = load volatile i32, i32* %sec662, align 4, !dbg !8413, !tbaa !2123
  %531 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8414, !tbaa !820
  %expire663 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %531, i32 0, i32 25, !dbg !8415
  %532 = load i32, i32* %expire663, align 4, !dbg !8415, !tbaa !954
  %add664 = add nsw i32 %530, %532, !dbg !8416
  %533 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8417, !tbaa !820
  %expire665 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %533, i32 0, i32 15, !dbg !8418
  store i32 %add664, i32* %expire665, align 4, !dbg !8419, !tbaa !2136
  %534 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8420, !tbaa !820
  %name_expire_queue666 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %534, i32 0, i32 15, !dbg !8420
  %next667 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue666, i32 0, i32 1, !dbg !8420
  %535 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next667, align 4, !dbg !8420, !tbaa !905
  %536 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8420, !tbaa !820
  %queue668 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %536, i32 0, i32 1, !dbg !8420
  %next669 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue668, i32 0, i32 1, !dbg !8420
  store %struct.ngx_queue_s* %535, %struct.ngx_queue_s** %next669, align 4, !dbg !8420, !tbaa !905
  %537 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8420, !tbaa !820
  %queue670 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %537, i32 0, i32 1, !dbg !8420
  %538 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8420, !tbaa !820
  %queue671 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %538, i32 0, i32 1, !dbg !8420
  %next672 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue671, i32 0, i32 1, !dbg !8420
  %539 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next672, align 4, !dbg !8420, !tbaa !905
  %prev673 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %539, i32 0, i32 0, !dbg !8420
  store %struct.ngx_queue_s* %queue670, %struct.ngx_queue_s** %prev673, align 4, !dbg !8420, !tbaa !904
  %540 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8420, !tbaa !820
  %name_expire_queue674 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %540, i32 0, i32 15, !dbg !8420
  %541 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8420, !tbaa !820
  %queue675 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %541, i32 0, i32 1, !dbg !8420
  %prev676 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue675, i32 0, i32 0, !dbg !8420
  store %struct.ngx_queue_s* %name_expire_queue674, %struct.ngx_queue_s** %prev676, align 4, !dbg !8420, !tbaa !904
  %542 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8420, !tbaa !820
  %queue677 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %542, i32 0, i32 1, !dbg !8420
  %543 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8420, !tbaa !820
  %name_expire_queue678 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %543, i32 0, i32 15, !dbg !8420
  %next679 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %name_expire_queue678, i32 0, i32 1, !dbg !8420
  store %struct.ngx_queue_s* %queue677, %struct.ngx_queue_s** %next679, align 4, !dbg !8420, !tbaa !905
  %544 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8421, !tbaa !820
  %545 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8422, !tbaa !820
  %query680 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %545, i32 0, i32 6, !dbg !8423
  %546 = load i8*, i8** %query680, align 4, !dbg !8423, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %544, i8* %546), !dbg !8424
  %547 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8425, !tbaa !820
  %query681 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %547, i32 0, i32 6, !dbg !8426
  store i8* null, i8** %query681, align 4, !dbg !8427, !tbaa !2440
  %548 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8428, !tbaa !820
  %query6682 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %548, i32 0, i32 7, !dbg !8429
  store i8* null, i8** %query6682, align 4, !dbg !8430, !tbaa !2453
  %549 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8431, !tbaa !820
  %waiting683 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %549, i32 0, i32 20, !dbg !8432
  %550 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting683, align 4, !dbg !8432, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %550, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8433, !tbaa !820
  %551 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8434, !tbaa !820
  %waiting684 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %551, i32 0, i32 20, !dbg !8435
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting684, align 4, !dbg !8436, !tbaa !2182
  %552 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8437, !tbaa !820
  %tobool685 = icmp ne %struct.ngx_resolver_ctx_s* %552, null, !dbg !8437
  br i1 %tobool685, label %if.then686, label %if.end704, !dbg !8439

if.then686:                                       ; preds = %cond.end658
  %553 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8440, !tbaa !820
  %recursion = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %553, i32 0, i32 19, !dbg !8443
  %554 = load i32, i32* %recursion, align 4, !dbg !8444, !tbaa !2304
  %inc687 = add i32 %554, 1, !dbg !8444
  store i32 %inc687, i32* %recursion, align 4, !dbg !8444, !tbaa !2304
  %cmp688 = icmp uge i32 %554, 50, !dbg !8445
  br i1 %cmp688, label %if.then690, label %if.end695, !dbg !8446

if.then690:                                       ; preds = %if.then686
  br label %do.body, !dbg !8447, !llvm.loop !8449

do.body:                                          ; preds = %do.cond, %if.then690
  %555 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8451, !tbaa !820
  %state691 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %555, i32 0, i32 4, !dbg !8453
  store i32 3, i32* %state691, align 4, !dbg !8454, !tbaa !1703
  %556 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8455, !tbaa !820
  %next692 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %556, i32 0, i32 0, !dbg !8456
  %557 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next692, align 4, !dbg !8456, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %557, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8457, !tbaa !820
  %558 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8458, !tbaa !820
  %handler693 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %558, i32 0, i32 15, !dbg !8459
  %559 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler693, align 4, !dbg !8459, !tbaa !1844
  %560 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8460, !tbaa !820
  call void %559(%struct.ngx_resolver_ctx_s* %560), !dbg !8458
  %561 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8461, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %561, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8462, !tbaa !820
  br label %do.cond, !dbg !8463

do.cond:                                          ; preds = %do.body
  %562 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8464, !tbaa !820
  %tobool694 = icmp ne %struct.ngx_resolver_ctx_s* %562, null, !dbg !8463
  br i1 %tobool694, label %do.body, label %do.end, !dbg !8463, !llvm.loop !8449

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8465

if.end695:                                        ; preds = %if.then686
  %563 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8466, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %563, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8468, !tbaa !820
  br label %for.cond696, !dbg !8469

for.cond696:                                      ; preds = %for.inc700, %if.end695
  %564 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8470, !tbaa !820
  %tobool697 = icmp ne %struct.ngx_resolver_ctx_s* %564, null, !dbg !8472
  br i1 %tobool697, label %for.body698, label %for.end702, !dbg !8472

for.body698:                                      ; preds = %for.cond696
  %565 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8473, !tbaa !820
  %node699 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %565, i32 0, i32 2, !dbg !8475
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %node699, align 4, !dbg !8476, !tbaa !2429
  br label %for.inc700, !dbg !8477

for.inc700:                                       ; preds = %for.body698
  %566 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8478, !tbaa !820
  %next701 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %566, i32 0, i32 0, !dbg !8479
  %567 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next701, align 4, !dbg !8479, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %567, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8480, !tbaa !820
  br label %for.cond696, !dbg !8481, !llvm.loop !8482

for.end702:                                       ; preds = %for.cond696
  %568 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8484, !tbaa !820
  %569 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8485, !tbaa !820
  %call703 = call i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %568, %struct.ngx_resolver_ctx_s* %569, %struct.ngx_str_t* %name), !dbg !8486
  br label %if.end704, !dbg !8487

if.end704:                                        ; preds = %for.end702, %cond.end658
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8488

if.end705:                                        ; preds = %if.end616
  %570 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8489, !tbaa !820
  %log706 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %570, i32 0, i32 2, !dbg !8489
  %571 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log706, align 4, !dbg !8489, !tbaa !965
  %log_level707 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %571, i32 0, i32 0, !dbg !8489
  %572 = load i32, i32* %log_level707, align 4, !dbg !8489, !tbaa !2999
  %573 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8489, !tbaa !820
  %log_level708 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %573, i32 0, i32 27, !dbg !8489
  %574 = load i32, i32* %log_level708, align 4, !dbg !8489, !tbaa !969
  %cmp709 = icmp uge i32 %572, %574, !dbg !8489
  br i1 %cmp709, label %if.then711, label %if.end714, !dbg !8491

if.then711:                                       ; preds = %if.end705
  %575 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8489, !tbaa !820
  %log_level712 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %575, i32 0, i32 27, !dbg !8489
  %576 = load i32, i32* %log_level712, align 4, !dbg !8489, !tbaa !969
  %577 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8489, !tbaa !820
  %log713 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %577, i32 0, i32 2, !dbg !8489
  %578 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log713, align 4, !dbg !8489, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %576, %struct.ngx_log_s* %578, i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i32 0, i32 0)), !dbg !8489
  br label %if.end714, !dbg !8489

if.end714:                                        ; preds = %if.then711, %if.end705
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8492

short_response:                                   ; preds = %if.then339, %if.then324, %if.then252, %while.end244
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8** %err, align 4, !dbg !8493, !tbaa !820
  br label %invalid, !dbg !8494

invalid:                                          ; preds = %short_response, %if.then334, %if.then330, %if.then319, %if.then315, %if.then247
  %579 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8495, !tbaa !820
  %log715 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %579, i32 0, i32 2, !dbg !8495
  %580 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log715, align 4, !dbg !8495, !tbaa !965
  %log_level716 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %580, i32 0, i32 0, !dbg !8495
  %581 = load i32, i32* %log_level716, align 4, !dbg !8495, !tbaa !2999
  %582 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8495, !tbaa !820
  %log_level717 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %582, i32 0, i32 27, !dbg !8495
  %583 = load i32, i32* %log_level717, align 4, !dbg !8495, !tbaa !969
  %cmp718 = icmp uge i32 %581, %583, !dbg !8495
  br i1 %cmp718, label %if.then720, label %if.end723, !dbg !8497

if.then720:                                       ; preds = %invalid
  %584 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8495, !tbaa !820
  %log_level721 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %584, i32 0, i32 27, !dbg !8495
  %585 = load i32, i32* %log_level721, align 4, !dbg !8495, !tbaa !969
  %586 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8495, !tbaa !820
  %log722 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %586, i32 0, i32 2, !dbg !8495
  %587 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log722, align 4, !dbg !8495, !tbaa !965
  %588 = load i8*, i8** %err, align 4, !dbg !8495, !tbaa !820
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %585, %struct.ngx_log_s* %587, i32 0, i8* %588), !dbg !8495
  br label %if.end723, !dbg !8495

if.end723:                                        ; preds = %if.then720, %invalid
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8498

failed:                                           ; preds = %if.then634, %if.then540, %if.then385, %if.then368, %if.end296, %if.end86, %if.then64, %if.end55, %if.then31, %if.end27, %if.end12
  br label %next724, !dbg !8498

next724:                                          ; preds = %failed, %if.then628, %if.then478, %if.then461, %if.then195, %if.then185, %if.then169, %if.then157, %sw.epilog119, %if.then102
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8499

cleanup:                                          ; preds = %next724, %if.end723, %if.end714, %if.end704, %do.end, %if.end612, %while.end, %if.then
  %589 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %589) #5, !dbg !8500
  %590 = bitcast %struct.ngx_resolver_addr_t** %addrs to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %590) #5, !dbg !8500
  %591 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %591) #5, !dbg !8500
  %592 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %592) #5, !dbg !8500
  %593 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %593) #5, !dbg !8500
  %594 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %594) #5, !dbg !8500
  %595 = bitcast %struct.in6_addr** %addr6 to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %595) #5, !dbg !8500
  %596 = bitcast i32* %start to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %596) #5, !dbg !8500
  %597 = bitcast i32* %j to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %597) #5, !dbg !8500
  %598 = bitcast i32* %i to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %598) #5, !dbg !8500
  %599 = bitcast i32* %a to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %599) #5, !dbg !8500
  %600 = bitcast i32* %naddrs to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %600) #5, !dbg !8500
  %601 = bitcast i32* %qident to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %601) #5, !dbg !8500
  %602 = bitcast i32* %class to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %602) #5, !dbg !8500
  %603 = bitcast i32* %type to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %603) #5, !dbg !8500
  %604 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 8, i8* %604) #5, !dbg !8500
  %605 = bitcast i32** %addr to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %605) #5, !dbg !8500
  %606 = bitcast i32* %hash to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %606) #5, !dbg !8500
  %607 = bitcast i32* %ttl to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %607) #5, !dbg !8500
  %608 = bitcast i32* %len to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %608) #5, !dbg !8500
  %609 = bitcast i8** %cname to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %609) #5, !dbg !8500
  %610 = bitcast i8** %err to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 4, i8* %610) #5, !dbg !8500
  ret void, !dbg !8500
}

; Function Attrs: nounwind
define internal void @ngx_resolver_process_srv(%struct.ngx_resolver_s* %r, i8* %buf, i32 %n, i32 %ident, i32 %code, i32 %nan, i32 %trunc, i32 %ans) #0 !dbg !8501 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %buf.addr = alloca i8*, align 4
  %n.addr = alloca i32, align 4
  %ident.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %nan.addr = alloca i32, align 4
  %trunc.addr = alloca i32, align 4
  %ans.addr = alloca i32, align 4
  %err = alloca i8*, align 4
  %cname = alloca i8*, align 4
  %len = alloca i32, align 4
  %ttl = alloca i32, align 4
  %hash = alloca i32, align 4
  %name = alloca %struct.ngx_str_t, align 4
  %type = alloca i32, align 4
  %qident = alloca i32, align 4
  %class = alloca i32, align 4
  %start = alloca i32, align 4
  %nsrvs = alloca i32, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %an = alloca %struct.ngx_resolver_an_t*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %next = alloca %struct.ngx_resolver_ctx_s*, align 4
  %srvs = alloca %struct.ngx_resolver_srv_t*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !8505, metadata !824), !dbg !8533
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8506, metadata !824), !dbg !8534
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8507, metadata !824), !dbg !8535
  store i32 %ident, i32* %ident.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %ident.addr, metadata !8508, metadata !824), !dbg !8536
  store i32 %code, i32* %code.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !8509, metadata !824), !dbg !8537
  store i32 %nan, i32* %nan.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %nan.addr, metadata !8510, metadata !824), !dbg !8538
  store i32 %trunc, i32* %trunc.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %trunc.addr, metadata !8511, metadata !824), !dbg !8539
  store i32 %ans, i32* %ans.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %ans.addr, metadata !8512, metadata !824), !dbg !8540
  %0 = bitcast i8** %err to i8*, !dbg !8541
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !8541
  call void @llvm.dbg.declare(metadata i8** %err, metadata !8513, metadata !824), !dbg !8542
  %1 = bitcast i8** %cname to i8*, !dbg !8543
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !8543
  call void @llvm.dbg.declare(metadata i8** %cname, metadata !8514, metadata !824), !dbg !8544
  %2 = bitcast i32* %len to i8*, !dbg !8545
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !8545
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8515, metadata !824), !dbg !8546
  %3 = bitcast i32* %ttl to i8*, !dbg !8547
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !8547
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !8516, metadata !824), !dbg !8548
  %4 = bitcast i32* %hash to i8*, !dbg !8549
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !8549
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !8517, metadata !824), !dbg !8550
  %5 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !8551
  call void @llvm.lifetime.start(i64 8, i8* %5) #5, !dbg !8551
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %name, metadata !8518, metadata !824), !dbg !8552
  %6 = bitcast i32* %type to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8519, metadata !824), !dbg !8554
  %7 = bitcast i32* %qident to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %qident, metadata !8520, metadata !824), !dbg !8555
  %8 = bitcast i32* %class to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %class, metadata !8521, metadata !824), !dbg !8556
  %9 = bitcast i32* %start to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8522, metadata !824), !dbg !8557
  %10 = bitcast i32* %nsrvs to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %nsrvs, metadata !8523, metadata !824), !dbg !8558
  %11 = bitcast i32* %a to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8524, metadata !824), !dbg !8559
  %12 = bitcast i32* %i to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %12) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8525, metadata !824), !dbg !8560
  %13 = bitcast i32* %j to i8*, !dbg !8553
  call void @llvm.lifetime.start(i64 4, i8* %13) #5, !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8526, metadata !824), !dbg !8561
  %14 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !8562
  call void @llvm.lifetime.start(i64 4, i8* %14) #5, !dbg !8562
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_an_t** %an, metadata !8527, metadata !824), !dbg !8563
  %15 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !8564
  call void @llvm.lifetime.start(i64 4, i8* %15) #5, !dbg !8564
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !8528, metadata !824), !dbg !8565
  %16 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !8564
  call void @llvm.lifetime.start(i64 4, i8* %16) #5, !dbg !8564
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %next, metadata !8529, metadata !824), !dbg !8566
  %17 = bitcast %struct.ngx_resolver_srv_t** %srvs to i8*, !dbg !8567
  call void @llvm.lifetime.start(i64 4, i8* %17) #5, !dbg !8567
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_t** %srvs, metadata !8530, metadata !824), !dbg !8568
  %18 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !8569
  call void @llvm.lifetime.start(i64 4, i8* %18) #5, !dbg !8569
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !8531, metadata !824), !dbg !8570
  %19 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !8571
  call void @llvm.lifetime.start(i64 4, i8* %19) #5, !dbg !8571
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !8532, metadata !824), !dbg !8572
  %20 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8573, !tbaa !820
  %21 = load i8*, i8** %buf.addr, align 4, !dbg !8575, !tbaa !820
  %22 = load i8*, i8** %buf.addr, align 4, !dbg !8576, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %22, i32 12, !dbg !8577
  %23 = load i8*, i8** %buf.addr, align 4, !dbg !8578, !tbaa !820
  %24 = load i32, i32* %n.addr, align 4, !dbg !8579, !tbaa !827
  %add.ptr1 = getelementptr inbounds i8, i8* %23, i32 %24, !dbg !8580
  %call = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %20, %struct.ngx_str_t* %name, i8* %21, i8* %add.ptr, i8* %add.ptr1), !dbg !8581
  %cmp = icmp ne i32 %call, 0, !dbg !8582
  br i1 %cmp, label %if.then, label %if.end, !dbg !8583

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8584

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8586
  %25 = load i8*, i8** %data, align 4, !dbg !8586, !tbaa !997
  %len2 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !8587
  %26 = load i32, i32* %len2, align 4, !dbg !8587, !tbaa !1005
  %call3 = call i32 @ngx_crc32_short(i8* %25, i32 %26), !dbg !8588
  store i32 %call3, i32* %hash, align 4, !dbg !8589, !tbaa !827
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8590, !tbaa !820
  %28 = load i32, i32* %hash, align 4, !dbg !8591, !tbaa !827
  %call4 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_srv(%struct.ngx_resolver_s* %27, %struct.ngx_str_t* %name, i32 %28), !dbg !8592
  store %struct.ngx_resolver_node_t* %call4, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8593, !tbaa !820
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8594, !tbaa !820
  %cmp5 = icmp eq %struct.ngx_resolver_node_t* %29, null, !dbg !8596
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !8597

lor.lhs.false:                                    ; preds = %if.end
  %30 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8598, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %30, i32 0, i32 6, !dbg !8599
  %31 = load i8*, i8** %query, align 4, !dbg !8599, !tbaa !2440
  %cmp6 = icmp eq i8* %31, null, !dbg !8600
  br i1 %cmp6, label %if.then7, label %if.end15, !dbg !8601

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %32 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8602, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %32, i32 0, i32 2, !dbg !8602
  %33 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !8602, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %33, i32 0, i32 0, !dbg !8602
  %34 = load i32, i32* %log_level, align 4, !dbg !8602, !tbaa !2999
  %35 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8602, !tbaa !820
  %log_level8 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %35, i32 0, i32 27, !dbg !8602
  %36 = load i32, i32* %log_level8, align 4, !dbg !8602, !tbaa !969
  %cmp9 = icmp uge i32 %34, %36, !dbg !8602
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !8605

if.then10:                                        ; preds = %if.then7
  %37 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8602, !tbaa !820
  %log_level11 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %37, i32 0, i32 27, !dbg !8602
  %38 = load i32, i32* %log_level11, align 4, !dbg !8602, !tbaa !969
  %39 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8602, !tbaa !820
  %log12 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %39, i32 0, i32 2, !dbg !8602
  %40 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log12, align 4, !dbg !8602, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %38, %struct.ngx_log_s* %40, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i32 0, i32 0), %struct.ngx_str_t* %name), !dbg !8602
  br label %if.end13, !dbg !8602

if.end13:                                         ; preds = %if.then10, %if.then7
  %41 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8606, !tbaa !820
  %data14 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8607
  %42 = load i8*, i8** %data14, align 4, !dbg !8607, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %41, i8* %42), !dbg !8608
  br label %failed, !dbg !8609

if.end15:                                         ; preds = %lor.lhs.false
  %43 = load i32, i32* %trunc.addr, align 4, !dbg !8610, !tbaa !827
  %tobool = icmp ne i32 %43, 0, !dbg !8610
  br i1 %tobool, label %land.lhs.true, label %if.end19, !dbg !8612

land.lhs.true:                                    ; preds = %if.end15
  %44 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8613, !tbaa !820
  %tcp = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %44, i32 0, i32 18, !dbg !8614
  %bf.load = load i8, i8* %tcp, align 4, !dbg !8614
  %bf.clear = and i8 %bf.load, 1, !dbg !8614
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8614
  %tobool16 = icmp ne i32 %bf.cast, 0, !dbg !8613
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !8615

if.then17:                                        ; preds = %land.lhs.true
  %45 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8616, !tbaa !820
  %data18 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8618
  %46 = load i8*, i8** %data18, align 4, !dbg !8618, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %45, i8* %46), !dbg !8619
  br label %failed, !dbg !8620

if.end19:                                         ; preds = %land.lhs.true, %if.end15
  %47 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8621, !tbaa !820
  %query20 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %47, i32 0, i32 6, !dbg !8622
  %48 = load i8*, i8** %query20, align 4, !dbg !8622, !tbaa !2440
  %arrayidx = getelementptr inbounds i8, i8* %48, i32 0, !dbg !8621
  %49 = load i8, i8* %arrayidx, align 1, !dbg !8621, !tbaa !1828
  %conv = zext i8 %49 to i32, !dbg !8621
  %shl = shl i32 %conv, 8, !dbg !8623
  %50 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8624, !tbaa !820
  %query21 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %50, i32 0, i32 6, !dbg !8625
  %51 = load i8*, i8** %query21, align 4, !dbg !8625, !tbaa !2440
  %arrayidx22 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !8624
  %52 = load i8, i8* %arrayidx22, align 1, !dbg !8624, !tbaa !1828
  %conv23 = zext i8 %52 to i32, !dbg !8624
  %add = add nsw i32 %shl, %conv23, !dbg !8626
  store i32 %add, i32* %qident, align 4, !dbg !8627, !tbaa !827
  %53 = load i32, i32* %ident.addr, align 4, !dbg !8628, !tbaa !827
  %54 = load i32, i32* %qident, align 4, !dbg !8630, !tbaa !827
  %cmp24 = icmp ne i32 %53, %54, !dbg !8631
  br i1 %cmp24, label %if.then26, label %if.end37, !dbg !8632

if.then26:                                        ; preds = %if.end19
  %55 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8633, !tbaa !820
  %log27 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %55, i32 0, i32 2, !dbg !8633
  %56 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log27, align 4, !dbg !8633, !tbaa !965
  %log_level28 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %56, i32 0, i32 0, !dbg !8633
  %57 = load i32, i32* %log_level28, align 4, !dbg !8633, !tbaa !2999
  %58 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8633, !tbaa !820
  %log_level29 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %58, i32 0, i32 27, !dbg !8633
  %59 = load i32, i32* %log_level29, align 4, !dbg !8633, !tbaa !969
  %cmp30 = icmp uge i32 %57, %59, !dbg !8633
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !8636

if.then32:                                        ; preds = %if.then26
  %60 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8633, !tbaa !820
  %log_level33 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %60, i32 0, i32 27, !dbg !8633
  %61 = load i32, i32* %log_level33, align 4, !dbg !8633, !tbaa !969
  %62 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8633, !tbaa !820
  %log34 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %62, i32 0, i32 2, !dbg !8633
  %63 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log34, align 4, !dbg !8633, !tbaa !965
  %64 = load i32, i32* %ident.addr, align 4, !dbg !8633, !tbaa !827
  %65 = load i32, i32* %qident, align 4, !dbg !8633, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %61, %struct.ngx_log_s* %63, i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0), i32 %64, %struct.ngx_str_t* %name, i32 %65), !dbg !8633
  br label %if.end35, !dbg !8633

if.end35:                                         ; preds = %if.then32, %if.then26
  %66 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8637, !tbaa !820
  %data36 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8638
  %67 = load i8*, i8** %data36, align 4, !dbg !8638, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %66, i8* %67), !dbg !8639
  br label %failed, !dbg !8640

if.end37:                                         ; preds = %if.end19
  %68 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8641, !tbaa !820
  %data38 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !8642
  %69 = load i8*, i8** %data38, align 4, !dbg !8642, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %68, i8* %69), !dbg !8643
  %70 = load i32, i32* %trunc.addr, align 4, !dbg !8644, !tbaa !827
  %tobool39 = icmp ne i32 %70, 0, !dbg !8644
  br i1 %tobool39, label %if.then40, label %if.end73, !dbg !8646

if.then40:                                        ; preds = %if.end37
  %71 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8647, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %71, i32 0, i32 1, !dbg !8647
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !8647
  %72 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !8647, !tbaa !904
  %73 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8647, !tbaa !820
  %queue41 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %73, i32 0, i32 1, !dbg !8647
  %next42 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue41, i32 0, i32 1, !dbg !8647
  %74 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next42, align 4, !dbg !8647, !tbaa !905
  %prev43 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %74, i32 0, i32 0, !dbg !8647
  store %struct.ngx_queue_s* %72, %struct.ngx_queue_s** %prev43, align 4, !dbg !8647, !tbaa !904
  %75 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8647, !tbaa !820
  %queue44 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %75, i32 0, i32 1, !dbg !8647
  %next45 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue44, i32 0, i32 1, !dbg !8647
  %76 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next45, align 4, !dbg !8647, !tbaa !905
  %77 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8647, !tbaa !820
  %queue46 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %77, i32 0, i32 1, !dbg !8647
  %prev47 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue46, i32 0, i32 0, !dbg !8647
  %78 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev47, align 4, !dbg !8647, !tbaa !904
  %next48 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %78, i32 0, i32 1, !dbg !8647
  store %struct.ngx_queue_s* %76, %struct.ngx_queue_s** %next48, align 4, !dbg !8647, !tbaa !905
  %79 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8649, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %79, i32 0, i32 20, !dbg !8651
  %80 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !8651, !tbaa !2182
  %cmp49 = icmp eq %struct.ngx_resolver_ctx_s* %80, null, !dbg !8652
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !8653

if.then51:                                        ; preds = %if.then40
  %81 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8654, !tbaa !820
  %srv_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %81, i32 0, i32 8, !dbg !8656
  %82 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8657, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %82, i32 0, i32 0, !dbg !8658
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %srv_rbtree, %struct.ngx_rbtree_node_s* %node), !dbg !8659
  %83 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8660, !tbaa !820
  %84 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8661, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %83, %struct.ngx_resolver_node_t* %84), !dbg !8662
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8663

if.end52:                                         ; preds = %if.then40
  %85 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8664, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %85, i32 0, i32 4, !dbg !8665
  %elts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 0, !dbg !8666
  %86 = load i8*, i8** %elts, align 4, !dbg !8666, !tbaa !1218
  %87 = bitcast i8* %86 to %struct.ngx_resolver_connection_t*, !dbg !8664
  store %struct.ngx_resolver_connection_t* %87, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !8667, !tbaa !820
  %88 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !8668, !tbaa !820
  %89 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8669, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %89, i32 0, i32 19, !dbg !8670
  %90 = load i32, i32* %last_connection, align 4, !dbg !8670, !tbaa !2666
  %arrayidx53 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %88, i32 %90, !dbg !8668
  store %struct.ngx_resolver_connection_t* %arrayidx53, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !8671, !tbaa !820
  %91 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8672, !tbaa !820
  %tcp54 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %91, i32 0, i32 18, !dbg !8673
  %bf.load55 = load i8, i8* %tcp54, align 4, !dbg !8674
  %bf.clear56 = and i8 %bf.load55, -2, !dbg !8674
  %bf.set = or i8 %bf.clear56, 1, !dbg !8674
  store i8 %bf.set, i8* %tcp54, align 4, !dbg !8674
  %92 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8675, !tbaa !820
  %93 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !8676, !tbaa !820
  %94 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8677, !tbaa !820
  %query57 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %94, i32 0, i32 6, !dbg !8678
  %95 = load i8*, i8** %query57, align 4, !dbg !8678, !tbaa !2440
  %96 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8679, !tbaa !820
  %qlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %96, i32 0, i32 5, !dbg !8680
  %97 = load i16, i16* %qlen, align 2, !dbg !8680, !tbaa !4103
  %call58 = call i32 @ngx_resolver_send_tcp_query(%struct.ngx_resolver_s* %92, %struct.ngx_resolver_connection_t* %93, i8* %95, i16 zeroext %97), !dbg !8681
  %98 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8682, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %98, i32 0, i32 0, !dbg !8682
  %99 = load volatile i32, i32* %sec, align 4, !dbg !8682, !tbaa !2123
  %100 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8683, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %100, i32 0, i32 23, !dbg !8684
  %101 = load i32, i32* %resend_timeout, align 4, !dbg !8684, !tbaa !946
  %add59 = add nsw i32 %99, %101, !dbg !8685
  %102 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8686, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %102, i32 0, i32 15, !dbg !8687
  store i32 %add59, i32* %expire, align 4, !dbg !8688, !tbaa !2136
  %103 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8689, !tbaa !820
  %srv_resend_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %103, i32 0, i32 13, !dbg !8689
  %next60 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_resend_queue, i32 0, i32 1, !dbg !8689
  %104 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next60, align 4, !dbg !8689, !tbaa !905
  %105 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8689, !tbaa !820
  %queue61 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %105, i32 0, i32 1, !dbg !8689
  %next62 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue61, i32 0, i32 1, !dbg !8689
  store %struct.ngx_queue_s* %104, %struct.ngx_queue_s** %next62, align 4, !dbg !8689, !tbaa !905
  %106 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8689, !tbaa !820
  %queue63 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %106, i32 0, i32 1, !dbg !8689
  %107 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8689, !tbaa !820
  %queue64 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %107, i32 0, i32 1, !dbg !8689
  %next65 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue64, i32 0, i32 1, !dbg !8689
  %108 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next65, align 4, !dbg !8689, !tbaa !905
  %prev66 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %108, i32 0, i32 0, !dbg !8689
  store %struct.ngx_queue_s* %queue63, %struct.ngx_queue_s** %prev66, align 4, !dbg !8689, !tbaa !904
  %109 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8689, !tbaa !820
  %srv_resend_queue67 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %109, i32 0, i32 13, !dbg !8689
  %110 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8689, !tbaa !820
  %queue68 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %110, i32 0, i32 1, !dbg !8689
  %prev69 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue68, i32 0, i32 0, !dbg !8689
  store %struct.ngx_queue_s* %srv_resend_queue67, %struct.ngx_queue_s** %prev69, align 4, !dbg !8689, !tbaa !904
  %111 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8689, !tbaa !820
  %queue70 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %111, i32 0, i32 1, !dbg !8689
  %112 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8689, !tbaa !820
  %srv_resend_queue71 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %112, i32 0, i32 13, !dbg !8689
  %next72 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_resend_queue71, i32 0, i32 1, !dbg !8689
  store %struct.ngx_queue_s* %queue70, %struct.ngx_queue_s** %next72, align 4, !dbg !8689, !tbaa !905
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8690

if.end73:                                         ; preds = %if.end37
  %113 = load i32, i32* %code.addr, align 4, !dbg !8691, !tbaa !827
  %cmp74 = icmp eq i32 %113, 0, !dbg !8693
  br i1 %cmp74, label %land.lhs.true76, label %if.end83, !dbg !8694

land.lhs.true76:                                  ; preds = %if.end73
  %114 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8695, !tbaa !820
  %code77 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %114, i32 0, i32 9, !dbg !8696
  %115 = load i8, i8* %code77, align 4, !dbg !8696, !tbaa !2773
  %conv78 = zext i8 %115 to i32, !dbg !8695
  %tobool79 = icmp ne i32 %conv78, 0, !dbg !8695
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !8697

if.then80:                                        ; preds = %land.lhs.true76
  %116 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8698, !tbaa !820
  %code81 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %116, i32 0, i32 9, !dbg !8700
  %117 = load i8, i8* %code81, align 4, !dbg !8700, !tbaa !2773
  %conv82 = zext i8 %117 to i32, !dbg !8698
  store i32 %conv82, i32* %code.addr, align 4, !dbg !8701, !tbaa !827
  br label %if.end83, !dbg !8702

if.end83:                                         ; preds = %if.then80, %land.lhs.true76, %if.end73
  %118 = load i32, i32* %code.addr, align 4, !dbg !8703, !tbaa !827
  %cmp84 = icmp eq i32 %118, 0, !dbg !8705
  br i1 %cmp84, label %land.lhs.true86, label %if.end90, !dbg !8706

land.lhs.true86:                                  ; preds = %if.end83
  %119 = load i32, i32* %nan.addr, align 4, !dbg !8707, !tbaa !827
  %cmp87 = icmp eq i32 %119, 0, !dbg !8708
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !8709

if.then89:                                        ; preds = %land.lhs.true86
  store i32 3, i32* %code.addr, align 4, !dbg !8710, !tbaa !827
  br label %if.end90, !dbg !8712

if.end90:                                         ; preds = %if.then89, %land.lhs.true86, %if.end83
  %120 = load i32, i32* %code.addr, align 4, !dbg !8713, !tbaa !827
  %tobool91 = icmp ne i32 %120, 0, !dbg !8713
  br i1 %tobool91, label %if.then92, label %if.end114, !dbg !8715

if.then92:                                        ; preds = %if.end90
  %121 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8716, !tbaa !820
  %waiting93 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %121, i32 0, i32 20, !dbg !8718
  %122 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting93, align 4, !dbg !8718, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %122, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8719, !tbaa !820
  %123 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8720, !tbaa !820
  %waiting94 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %123, i32 0, i32 20, !dbg !8721
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting94, align 4, !dbg !8722, !tbaa !2182
  %124 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8723, !tbaa !820
  %queue95 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %124, i32 0, i32 1, !dbg !8723
  %prev96 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue95, i32 0, i32 0, !dbg !8723
  %125 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev96, align 4, !dbg !8723, !tbaa !904
  %126 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8723, !tbaa !820
  %queue97 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %126, i32 0, i32 1, !dbg !8723
  %next98 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue97, i32 0, i32 1, !dbg !8723
  %127 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next98, align 4, !dbg !8723, !tbaa !905
  %prev99 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %127, i32 0, i32 0, !dbg !8723
  store %struct.ngx_queue_s* %125, %struct.ngx_queue_s** %prev99, align 4, !dbg !8723, !tbaa !904
  %128 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8723, !tbaa !820
  %queue100 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %128, i32 0, i32 1, !dbg !8723
  %next101 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue100, i32 0, i32 1, !dbg !8723
  %129 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next101, align 4, !dbg !8723, !tbaa !905
  %130 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8723, !tbaa !820
  %queue102 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %130, i32 0, i32 1, !dbg !8723
  %prev103 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue102, i32 0, i32 0, !dbg !8723
  %131 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev103, align 4, !dbg !8723, !tbaa !904
  %next104 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %131, i32 0, i32 1, !dbg !8723
  store %struct.ngx_queue_s* %129, %struct.ngx_queue_s** %next104, align 4, !dbg !8723, !tbaa !905
  %132 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8724, !tbaa !820
  %srv_rbtree105 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %132, i32 0, i32 8, !dbg !8725
  %133 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8726, !tbaa !820
  %node106 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %133, i32 0, i32 0, !dbg !8727
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %srv_rbtree105, %struct.ngx_rbtree_node_s* %node106), !dbg !8728
  br label %while.cond, !dbg !8729

while.cond:                                       ; preds = %cond.end, %if.then92
  %134 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8730, !tbaa !820
  %tobool107 = icmp ne %struct.ngx_resolver_ctx_s* %134, null, !dbg !8729
  br i1 %tobool107, label %while.body, label %while.end, !dbg !8729

while.body:                                       ; preds = %while.cond
  %135 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8731, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %135, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8733, !tbaa !820
  %136 = load i32, i32* %code.addr, align 4, !dbg !8734, !tbaa !827
  %137 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8735, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %137, i32 0, i32 4, !dbg !8736
  store i32 %136, i32* %state, align 4, !dbg !8737, !tbaa !1703
  %138 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !8738, !tbaa !820
  %sec108 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %138, i32 0, i32 0, !dbg !8738
  %139 = load volatile i32, i32* %sec108, align 4, !dbg !8738, !tbaa !2123
  %140 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8739, !tbaa !820
  %valid = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %140, i32 0, i32 26, !dbg !8740
  %141 = load i32, i32* %valid, align 4, !dbg !8740, !tbaa !958
  %tobool109 = icmp ne i32 %141, 0, !dbg !8739
  br i1 %tobool109, label %cond.true, label %cond.false, !dbg !8739

cond.true:                                        ; preds = %while.body
  %142 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8741, !tbaa !820
  %valid110 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %142, i32 0, i32 26, !dbg !8742
  %143 = load i32, i32* %valid110, align 4, !dbg !8742, !tbaa !958
  br label %cond.end, !dbg !8739

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !8739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %143, %cond.true ], [ 10, %cond.false ], !dbg !8739
  %add111 = add nsw i32 %139, %cond, !dbg !8743
  %144 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8744, !tbaa !820
  %valid112 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %144, i32 0, i32 7, !dbg !8745
  store i32 %add111, i32* %valid112, align 4, !dbg !8746, !tbaa !2201
  %145 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8747, !tbaa !820
  %next113 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %145, i32 0, i32 0, !dbg !8748
  %146 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next113, align 4, !dbg !8748, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %146, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !8749, !tbaa !820
  %147 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8750, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %147, i32 0, i32 15, !dbg !8751
  %148 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !8751, !tbaa !1844
  %149 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !8752, !tbaa !820
  call void %148(%struct.ngx_resolver_ctx_s* %149), !dbg !8750
  br label %while.cond, !dbg !8729, !llvm.loop !8753

while.end:                                        ; preds = %while.cond
  %150 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8755, !tbaa !820
  %151 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8756, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %150, %struct.ngx_resolver_node_t* %151), !dbg !8757
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8758

if.end114:                                        ; preds = %if.end90
  %152 = load i32, i32* %ans.addr, align 4, !dbg !8759, !tbaa !827
  store i32 %152, i32* %i, align 4, !dbg !8760, !tbaa !827
  store i32 0, i32* %nsrvs, align 4, !dbg !8761, !tbaa !827
  store i8* null, i8** %cname, align 4, !dbg !8762, !tbaa !820
  store i32 0, i32* %a, align 4, !dbg !8763, !tbaa !827
  br label %for.cond, !dbg !8765

for.cond:                                         ; preds = %for.inc, %if.end114
  %153 = load i32, i32* %a, align 4, !dbg !8766, !tbaa !827
  %154 = load i32, i32* %nan.addr, align 4, !dbg !8768, !tbaa !827
  %cmp115 = icmp ult i32 %153, %154, !dbg !8769
  br i1 %cmp115, label %for.body, label %for.end, !dbg !8770

for.body:                                         ; preds = %for.cond
  %155 = load i32, i32* %i, align 4, !dbg !8771, !tbaa !827
  store i32 %155, i32* %start, align 4, !dbg !8773, !tbaa !827
  br label %while.cond117, !dbg !8774

while.cond117:                                    ; preds = %if.end132, %for.body
  %156 = load i32, i32* %i, align 4, !dbg !8775, !tbaa !827
  %157 = load i32, i32* %n.addr, align 4, !dbg !8776, !tbaa !827
  %cmp118 = icmp ult i32 %156, %157, !dbg !8777
  br i1 %cmp118, label %while.body120, label %while.end137, !dbg !8774

while.body120:                                    ; preds = %while.cond117
  %158 = load i8*, i8** %buf.addr, align 4, !dbg !8778, !tbaa !820
  %159 = load i32, i32* %i, align 4, !dbg !8781, !tbaa !827
  %arrayidx121 = getelementptr inbounds i8, i8* %158, i32 %159, !dbg !8778
  %160 = load i8, i8* %arrayidx121, align 1, !dbg !8778, !tbaa !1828
  %conv122 = zext i8 %160 to i32, !dbg !8778
  %and = and i32 %conv122, 192, !dbg !8782
  %tobool123 = icmp ne i32 %and, 0, !dbg !8782
  br i1 %tobool123, label %if.then124, label %if.end126, !dbg !8783

if.then124:                                       ; preds = %while.body120
  %161 = load i32, i32* %i, align 4, !dbg !8784, !tbaa !827
  %add125 = add i32 %161, 2, !dbg !8784
  store i32 %add125, i32* %i, align 4, !dbg !8784, !tbaa !827
  br label %found, !dbg !8786

if.end126:                                        ; preds = %while.body120
  %162 = load i8*, i8** %buf.addr, align 4, !dbg !8787, !tbaa !820
  %163 = load i32, i32* %i, align 4, !dbg !8789, !tbaa !827
  %arrayidx127 = getelementptr inbounds i8, i8* %162, i32 %163, !dbg !8787
  %164 = load i8, i8* %arrayidx127, align 1, !dbg !8787, !tbaa !1828
  %conv128 = zext i8 %164 to i32, !dbg !8787
  %cmp129 = icmp eq i32 %conv128, 0, !dbg !8790
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !8791

if.then131:                                       ; preds = %if.end126
  %165 = load i32, i32* %i, align 4, !dbg !8792, !tbaa !827
  %inc = add i32 %165, 1, !dbg !8792
  store i32 %inc, i32* %i, align 4, !dbg !8792, !tbaa !827
  br label %test_length, !dbg !8794

if.end132:                                        ; preds = %if.end126
  %166 = load i8*, i8** %buf.addr, align 4, !dbg !8795, !tbaa !820
  %167 = load i32, i32* %i, align 4, !dbg !8796, !tbaa !827
  %arrayidx133 = getelementptr inbounds i8, i8* %166, i32 %167, !dbg !8795
  %168 = load i8, i8* %arrayidx133, align 1, !dbg !8795, !tbaa !1828
  %conv134 = zext i8 %168 to i32, !dbg !8795
  %add135 = add nsw i32 1, %conv134, !dbg !8797
  %169 = load i32, i32* %i, align 4, !dbg !8798, !tbaa !827
  %add136 = add i32 %169, %add135, !dbg !8798
  store i32 %add136, i32* %i, align 4, !dbg !8798, !tbaa !827
  br label %while.cond117, !dbg !8774, !llvm.loop !8799

while.end137:                                     ; preds = %while.cond117
  br label %short_response, !dbg !8801

test_length:                                      ; preds = %if.then131
  %170 = load i32, i32* %i, align 4, !dbg !8802, !tbaa !827
  %171 = load i32, i32* %start, align 4, !dbg !8804, !tbaa !827
  %sub = sub i32 %170, %171, !dbg !8805
  %cmp138 = icmp ult i32 %sub, 2, !dbg !8806
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !8807

if.then140:                                       ; preds = %test_length
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i32 0, i32 0), i8** %err, align 4, !dbg !8808, !tbaa !820
  br label %invalid, !dbg !8810

if.end141:                                        ; preds = %test_length
  br label %found, !dbg !8811

found:                                            ; preds = %if.end141, %if.then124
  %172 = load i32, i32* %i, align 4, !dbg !8812, !tbaa !827
  %add142 = add i32 %172, 10, !dbg !8814
  %173 = load i32, i32* %n.addr, align 4, !dbg !8815, !tbaa !827
  %cmp143 = icmp uge i32 %add142, %173, !dbg !8816
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !8817

if.then145:                                       ; preds = %found
  br label %short_response, !dbg !8818

if.end146:                                        ; preds = %found
  %174 = load i8*, i8** %buf.addr, align 4, !dbg !8820, !tbaa !820
  %175 = load i32, i32* %i, align 4, !dbg !8821, !tbaa !827
  %arrayidx147 = getelementptr inbounds i8, i8* %174, i32 %175, !dbg !8820
  %176 = bitcast i8* %arrayidx147 to %struct.ngx_resolver_an_t*, !dbg !8822
  store %struct.ngx_resolver_an_t* %176, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8823, !tbaa !820
  %177 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8824, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %177, i32 0, i32 0, !dbg !8825
  %178 = load i8, i8* %type_hi, align 1, !dbg !8825, !tbaa !7838
  %conv148 = zext i8 %178 to i32, !dbg !8824
  %shl149 = shl i32 %conv148, 8, !dbg !8826
  %179 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8827, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %179, i32 0, i32 1, !dbg !8828
  %180 = load i8, i8* %type_lo, align 1, !dbg !8828, !tbaa !7843
  %conv150 = zext i8 %180 to i32, !dbg !8827
  %add151 = add nsw i32 %shl149, %conv150, !dbg !8829
  store i32 %add151, i32* %type, align 4, !dbg !8830, !tbaa !827
  %181 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8831, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %181, i32 0, i32 2, !dbg !8832
  %182 = load i8, i8* %class_hi, align 1, !dbg !8832, !tbaa !7848
  %conv152 = zext i8 %182 to i32, !dbg !8831
  %shl153 = shl i32 %conv152, 8, !dbg !8833
  %183 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8834, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %183, i32 0, i32 3, !dbg !8835
  %184 = load i8, i8* %class_lo, align 1, !dbg !8835, !tbaa !7852
  %conv154 = zext i8 %184 to i32, !dbg !8834
  %add155 = add nsw i32 %shl153, %conv154, !dbg !8836
  store i32 %add155, i32* %class, align 4, !dbg !8837, !tbaa !827
  %185 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8838, !tbaa !820
  %len_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %185, i32 0, i32 5, !dbg !8839
  %186 = load i8, i8* %len_hi, align 1, !dbg !8839, !tbaa !7857
  %conv156 = zext i8 %186 to i32, !dbg !8838
  %shl157 = shl i32 %conv156, 8, !dbg !8840
  %187 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8841, !tbaa !820
  %len_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %187, i32 0, i32 6, !dbg !8842
  %188 = load i8, i8* %len_lo, align 1, !dbg !8842, !tbaa !7861
  %conv158 = zext i8 %188 to i32, !dbg !8841
  %add159 = add nsw i32 %shl157, %conv158, !dbg !8843
  store i32 %add159, i32* %len, align 4, !dbg !8844, !tbaa !827
  %189 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8845, !tbaa !820
  %ttl160 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %189, i32 0, i32 4, !dbg !8846
  %arrayidx161 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl160, i32 0, i32 0, !dbg !8845
  %190 = load i8, i8* %arrayidx161, align 1, !dbg !8845, !tbaa !1828
  %conv162 = zext i8 %190 to i32, !dbg !8845
  %shl163 = shl i32 %conv162, 24, !dbg !8847
  %191 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8848, !tbaa !820
  %ttl164 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %191, i32 0, i32 4, !dbg !8849
  %arrayidx165 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl164, i32 0, i32 1, !dbg !8848
  %192 = load i8, i8* %arrayidx165, align 1, !dbg !8848, !tbaa !1828
  %conv166 = zext i8 %192 to i32, !dbg !8848
  %shl167 = shl i32 %conv166, 16, !dbg !8850
  %add168 = add nsw i32 %shl163, %shl167, !dbg !8851
  %193 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8852, !tbaa !820
  %ttl169 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %193, i32 0, i32 4, !dbg !8853
  %arrayidx170 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl169, i32 0, i32 2, !dbg !8852
  %194 = load i8, i8* %arrayidx170, align 1, !dbg !8852, !tbaa !1828
  %conv171 = zext i8 %194 to i32, !dbg !8852
  %shl172 = shl i32 %conv171, 8, !dbg !8854
  %add173 = add nsw i32 %add168, %shl172, !dbg !8855
  %195 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8856, !tbaa !820
  %ttl174 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %195, i32 0, i32 4, !dbg !8857
  %arrayidx175 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl174, i32 0, i32 3, !dbg !8856
  %196 = load i8, i8* %arrayidx175, align 1, !dbg !8856, !tbaa !1828
  %conv176 = zext i8 %196 to i32, !dbg !8858
  %add177 = add nsw i32 %add173, %conv176, !dbg !8859
  store i32 %add177, i32* %ttl, align 4, !dbg !8860, !tbaa !827
  %197 = load i32, i32* %class, align 4, !dbg !8861, !tbaa !827
  %cmp178 = icmp ne i32 %197, 1, !dbg !8863
  br i1 %cmp178, label %if.then180, label %if.end190, !dbg !8864

if.then180:                                       ; preds = %if.end146
  %198 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8865, !tbaa !820
  %log181 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %198, i32 0, i32 2, !dbg !8865
  %199 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log181, align 4, !dbg !8865, !tbaa !965
  %log_level182 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %199, i32 0, i32 0, !dbg !8865
  %200 = load i32, i32* %log_level182, align 4, !dbg !8865, !tbaa !2999
  %201 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8865, !tbaa !820
  %log_level183 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %201, i32 0, i32 27, !dbg !8865
  %202 = load i32, i32* %log_level183, align 4, !dbg !8865, !tbaa !969
  %cmp184 = icmp uge i32 %200, %202, !dbg !8865
  br i1 %cmp184, label %if.then186, label %if.end189, !dbg !8868

if.then186:                                       ; preds = %if.then180
  %203 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8865, !tbaa !820
  %log_level187 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %203, i32 0, i32 27, !dbg !8865
  %204 = load i32, i32* %log_level187, align 4, !dbg !8865, !tbaa !969
  %205 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8865, !tbaa !820
  %log188 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %205, i32 0, i32 2, !dbg !8865
  %206 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log188, align 4, !dbg !8865, !tbaa !965
  %207 = load i32, i32* %class, align 4, !dbg !8865, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %204, %struct.ngx_log_s* %206, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), i32 %207), !dbg !8865
  br label %if.end189, !dbg !8865

if.end189:                                        ; preds = %if.then186, %if.then180
  br label %failed, !dbg !8869

if.end190:                                        ; preds = %if.end146
  %208 = load i32, i32* %ttl, align 4, !dbg !8870, !tbaa !827
  %cmp191 = icmp slt i32 %208, 0, !dbg !8872
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !8873

if.then193:                                       ; preds = %if.end190
  store i32 0, i32* %ttl, align 4, !dbg !8874, !tbaa !827
  br label %if.end194, !dbg !8876

if.end194:                                        ; preds = %if.then193, %if.end190
  %209 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8877, !tbaa !820
  %ttl195 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %209, i32 0, i32 17, !dbg !8877
  %210 = load i32, i32* %ttl195, align 4, !dbg !8877, !tbaa !2783
  %211 = load i32, i32* %ttl, align 4, !dbg !8877, !tbaa !827
  %cmp196 = icmp ugt i32 %210, %211, !dbg !8877
  br i1 %cmp196, label %cond.true198, label %cond.false199, !dbg !8877

cond.true198:                                     ; preds = %if.end194
  %212 = load i32, i32* %ttl, align 4, !dbg !8877, !tbaa !827
  br label %cond.end201, !dbg !8877

cond.false199:                                    ; preds = %if.end194
  %213 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8877, !tbaa !820
  %ttl200 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %213, i32 0, i32 17, !dbg !8877
  %214 = load i32, i32* %ttl200, align 4, !dbg !8877, !tbaa !2783
  br label %cond.end201, !dbg !8877

cond.end201:                                      ; preds = %cond.false199, %cond.true198
  %cond202 = phi i32 [ %212, %cond.true198 ], [ %214, %cond.false199 ], !dbg !8877
  %215 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8878, !tbaa !820
  %ttl203 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %215, i32 0, i32 17, !dbg !8879
  store i32 %cond202, i32* %ttl203, align 4, !dbg !8880, !tbaa !2783
  %216 = load i32, i32* %i, align 4, !dbg !8881, !tbaa !827
  %add204 = add i32 %216, 10, !dbg !8881
  store i32 %add204, i32* %i, align 4, !dbg !8881, !tbaa !827
  %217 = load i32, i32* %type, align 4, !dbg !8882, !tbaa !827
  switch i32 %217, label %sw.default [
    i32 33, label %sw.bb
    i32 5, label %sw.bb219
    i32 39, label %sw.epilog
  ], !dbg !8883

sw.bb:                                            ; preds = %cond.end201
  %218 = load i32, i32* %i, align 4, !dbg !8884, !tbaa !827
  %add205 = add i32 %218, 6, !dbg !8887
  %219 = load i32, i32* %n.addr, align 4, !dbg !8888, !tbaa !827
  %cmp206 = icmp ugt i32 %add205, %219, !dbg !8889
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !8890

if.then208:                                       ; preds = %sw.bb
  br label %short_response, !dbg !8891

if.end209:                                        ; preds = %sw.bb
  %220 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8893, !tbaa !820
  %221 = load i8*, i8** %buf.addr, align 4, !dbg !8895, !tbaa !820
  %222 = load i8*, i8** %buf.addr, align 4, !dbg !8896, !tbaa !820
  %223 = load i32, i32* %i, align 4, !dbg !8897, !tbaa !827
  %add210 = add i32 %223, 6, !dbg !8898
  %arrayidx211 = getelementptr inbounds i8, i8* %222, i32 %add210, !dbg !8896
  %224 = load i8*, i8** %buf.addr, align 4, !dbg !8899, !tbaa !820
  %225 = load i32, i32* %n.addr, align 4, !dbg !8900, !tbaa !827
  %add.ptr212 = getelementptr inbounds i8, i8* %224, i32 %225, !dbg !8901
  %call213 = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %220, %struct.ngx_str_t* null, i8* %221, i8* %arrayidx211, i8* %add.ptr212), !dbg !8902
  %cmp214 = icmp ne i32 %call213, 0, !dbg !8903
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !8904

if.then216:                                       ; preds = %if.end209
  br label %failed, !dbg !8905

if.end217:                                        ; preds = %if.end209
  %226 = load i32, i32* %nsrvs, align 4, !dbg !8907, !tbaa !827
  %inc218 = add i32 %226, 1, !dbg !8907
  store i32 %inc218, i32* %nsrvs, align 4, !dbg !8907, !tbaa !827
  br label %sw.epilog, !dbg !8908

sw.bb219:                                         ; preds = %cond.end201
  %227 = load i8*, i8** %buf.addr, align 4, !dbg !8909, !tbaa !820
  %228 = load i32, i32* %i, align 4, !dbg !8910, !tbaa !827
  %arrayidx220 = getelementptr inbounds i8, i8* %227, i32 %228, !dbg !8909
  store i8* %arrayidx220, i8** %cname, align 4, !dbg !8911, !tbaa !820
  br label %sw.epilog, !dbg !8912

sw.default:                                       ; preds = %cond.end201
  %229 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8913, !tbaa !820
  %log221 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %229, i32 0, i32 2, !dbg !8913
  %230 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log221, align 4, !dbg !8913, !tbaa !965
  %log_level222 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %230, i32 0, i32 0, !dbg !8913
  %231 = load i32, i32* %log_level222, align 4, !dbg !8913, !tbaa !2999
  %232 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8913, !tbaa !820
  %log_level223 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %232, i32 0, i32 27, !dbg !8913
  %233 = load i32, i32* %log_level223, align 4, !dbg !8913, !tbaa !969
  %cmp224 = icmp uge i32 %231, %233, !dbg !8913
  br i1 %cmp224, label %if.then226, label %if.end229, !dbg !8915

if.then226:                                       ; preds = %sw.default
  %234 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8913, !tbaa !820
  %log_level227 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %234, i32 0, i32 27, !dbg !8913
  %235 = load i32, i32* %log_level227, align 4, !dbg !8913, !tbaa !969
  %236 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8913, !tbaa !820
  %log228 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %236, i32 0, i32 2, !dbg !8913
  %237 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log228, align 4, !dbg !8913, !tbaa !965
  %238 = load i32, i32* %type, align 4, !dbg !8913, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %235, %struct.ngx_log_s* %237, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i32 %238), !dbg !8913
  br label %if.end229, !dbg !8913

if.end229:                                        ; preds = %if.then226, %sw.default
  br label %sw.epilog, !dbg !8916

sw.epilog:                                        ; preds = %if.end229, %cond.end201, %sw.bb219, %if.end217
  %239 = load i32, i32* %len, align 4, !dbg !8917, !tbaa !827
  %240 = load i32, i32* %i, align 4, !dbg !8918, !tbaa !827
  %add230 = add i32 %240, %239, !dbg !8918
  store i32 %add230, i32* %i, align 4, !dbg !8918, !tbaa !827
  br label %for.inc, !dbg !8919

for.inc:                                          ; preds = %sw.epilog
  %241 = load i32, i32* %a, align 4, !dbg !8920, !tbaa !827
  %inc231 = add i32 %241, 1, !dbg !8920
  store i32 %inc231, i32* %a, align 4, !dbg !8920, !tbaa !827
  br label %for.cond, !dbg !8921, !llvm.loop !8922

for.end:                                          ; preds = %for.cond
  %242 = load i32, i32* %nsrvs, align 4, !dbg !8924, !tbaa !827
  %tobool232 = icmp ne i32 %242, 0, !dbg !8924
  br i1 %tobool232, label %if.then233, label %if.end384, !dbg !8926

if.then233:                                       ; preds = %for.end
  %243 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !8927, !tbaa !820
  %244 = load i32, i32* %nsrvs, align 4, !dbg !8929, !tbaa !827
  %mul = mul i32 %244, 16, !dbg !8930
  %call234 = call i8* @ngx_resolver_calloc(%struct.ngx_resolver_s* %243, i32 %mul), !dbg !8931
  %245 = bitcast i8* %call234 to %struct.ngx_resolver_srv_t*, !dbg !8931
  store %struct.ngx_resolver_srv_t* %245, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !8932, !tbaa !820
  %246 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !8933, !tbaa !820
  %cmp235 = icmp eq %struct.ngx_resolver_srv_t* %246, null, !dbg !8935
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !8936

if.then237:                                       ; preds = %if.then233
  br label %failed, !dbg !8937

if.end238:                                        ; preds = %if.then233
  %247 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !8939, !tbaa !820
  %248 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8940, !tbaa !820
  %u = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %248, i32 0, i32 8, !dbg !8941
  %srvs239 = bitcast %union.anon.0* %u to %struct.ngx_resolver_srv_t**, !dbg !8942
  store %struct.ngx_resolver_srv_t* %247, %struct.ngx_resolver_srv_t** %srvs239, align 4, !dbg !8943, !tbaa !820
  %249 = load i32, i32* %nsrvs, align 4, !dbg !8944, !tbaa !827
  %conv240 = trunc i32 %249 to i16, !dbg !8945
  %250 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !8946, !tbaa !820
  %nsrvs241 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %250, i32 0, i32 11, !dbg !8947
  store i16 %conv240, i16* %nsrvs241, align 4, !dbg !8948, !tbaa !2274
  store i32 0, i32* %j, align 4, !dbg !8949, !tbaa !827
  %251 = load i32, i32* %ans.addr, align 4, !dbg !8950, !tbaa !827
  store i32 %251, i32* %i, align 4, !dbg !8951, !tbaa !827
  store i32 0, i32* %a, align 4, !dbg !8952, !tbaa !827
  br label %for.cond242, !dbg !8954

for.cond242:                                      ; preds = %for.inc334, %if.end238
  %252 = load i32, i32* %a, align 4, !dbg !8955, !tbaa !827
  %253 = load i32, i32* %nan.addr, align 4, !dbg !8957, !tbaa !827
  %cmp243 = icmp ult i32 %252, %253, !dbg !8958
  br i1 %cmp243, label %for.body245, label %for.end336, !dbg !8959

for.body245:                                      ; preds = %for.cond242
  br label %for.cond246, !dbg !8960

for.cond246:                                      ; preds = %if.end260, %for.body245
  %254 = load i8*, i8** %buf.addr, align 4, !dbg !8962, !tbaa !820
  %255 = load i32, i32* %i, align 4, !dbg !8967, !tbaa !827
  %arrayidx247 = getelementptr inbounds i8, i8* %254, i32 %255, !dbg !8962
  %256 = load i8, i8* %arrayidx247, align 1, !dbg !8962, !tbaa !1828
  %conv248 = zext i8 %256 to i32, !dbg !8962
  %and249 = and i32 %conv248, 192, !dbg !8968
  %tobool250 = icmp ne i32 %and249, 0, !dbg !8968
  br i1 %tobool250, label %if.then251, label %if.end253, !dbg !8969

if.then251:                                       ; preds = %for.cond246
  %257 = load i32, i32* %i, align 4, !dbg !8970, !tbaa !827
  %add252 = add i32 %257, 2, !dbg !8970
  store i32 %add252, i32* %i, align 4, !dbg !8970, !tbaa !827
  br label %for.end265, !dbg !8972

if.end253:                                        ; preds = %for.cond246
  %258 = load i8*, i8** %buf.addr, align 4, !dbg !8973, !tbaa !820
  %259 = load i32, i32* %i, align 4, !dbg !8975, !tbaa !827
  %arrayidx254 = getelementptr inbounds i8, i8* %258, i32 %259, !dbg !8973
  %260 = load i8, i8* %arrayidx254, align 1, !dbg !8973, !tbaa !1828
  %conv255 = zext i8 %260 to i32, !dbg !8973
  %cmp256 = icmp eq i32 %conv255, 0, !dbg !8976
  br i1 %cmp256, label %if.then258, label %if.end260, !dbg !8977

if.then258:                                       ; preds = %if.end253
  %261 = load i32, i32* %i, align 4, !dbg !8978, !tbaa !827
  %inc259 = add i32 %261, 1, !dbg !8978
  store i32 %inc259, i32* %i, align 4, !dbg !8978, !tbaa !827
  br label %for.end265, !dbg !8980

if.end260:                                        ; preds = %if.end253
  %262 = load i8*, i8** %buf.addr, align 4, !dbg !8981, !tbaa !820
  %263 = load i32, i32* %i, align 4, !dbg !8982, !tbaa !827
  %arrayidx261 = getelementptr inbounds i8, i8* %262, i32 %263, !dbg !8981
  %264 = load i8, i8* %arrayidx261, align 1, !dbg !8981, !tbaa !1828
  %conv262 = zext i8 %264 to i32, !dbg !8981
  %add263 = add nsw i32 1, %conv262, !dbg !8983
  %265 = load i32, i32* %i, align 4, !dbg !8984, !tbaa !827
  %add264 = add i32 %265, %add263, !dbg !8984
  store i32 %add264, i32* %i, align 4, !dbg !8984, !tbaa !827
  br label %for.cond246, !dbg !8985, !llvm.loop !8986

for.end265:                                       ; preds = %if.then258, %if.then251
  %266 = load i8*, i8** %buf.addr, align 4, !dbg !8989, !tbaa !820
  %267 = load i32, i32* %i, align 4, !dbg !8990, !tbaa !827
  %arrayidx266 = getelementptr inbounds i8, i8* %266, i32 %267, !dbg !8989
  %268 = bitcast i8* %arrayidx266 to %struct.ngx_resolver_an_t*, !dbg !8991
  store %struct.ngx_resolver_an_t* %268, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8992, !tbaa !820
  %269 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8993, !tbaa !820
  %type_hi267 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %269, i32 0, i32 0, !dbg !8994
  %270 = load i8, i8* %type_hi267, align 1, !dbg !8994, !tbaa !7838
  %conv268 = zext i8 %270 to i32, !dbg !8993
  %shl269 = shl i32 %conv268, 8, !dbg !8995
  %271 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !8996, !tbaa !820
  %type_lo270 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %271, i32 0, i32 1, !dbg !8997
  %272 = load i8, i8* %type_lo270, align 1, !dbg !8997, !tbaa !7843
  %conv271 = zext i8 %272 to i32, !dbg !8996
  %add272 = add nsw i32 %shl269, %conv271, !dbg !8998
  store i32 %add272, i32* %type, align 4, !dbg !8999, !tbaa !827
  %273 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9000, !tbaa !820
  %len_hi273 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %273, i32 0, i32 5, !dbg !9001
  %274 = load i8, i8* %len_hi273, align 1, !dbg !9001, !tbaa !7857
  %conv274 = zext i8 %274 to i32, !dbg !9000
  %shl275 = shl i32 %conv274, 8, !dbg !9002
  %275 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9003, !tbaa !820
  %len_lo276 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %275, i32 0, i32 6, !dbg !9004
  %276 = load i8, i8* %len_lo276, align 1, !dbg !9004, !tbaa !7861
  %conv277 = zext i8 %276 to i32, !dbg !9003
  %add278 = add nsw i32 %shl275, %conv277, !dbg !9005
  store i32 %add278, i32* %len, align 4, !dbg !9006, !tbaa !827
  %277 = load i32, i32* %i, align 4, !dbg !9007, !tbaa !827
  %add279 = add i32 %277, 10, !dbg !9007
  store i32 %add279, i32* %i, align 4, !dbg !9007, !tbaa !827
  %278 = load i32, i32* %type, align 4, !dbg !9008, !tbaa !827
  %cmp280 = icmp eq i32 %278, 33, !dbg !9010
  br i1 %cmp280, label %if.then282, label %if.end332, !dbg !9011

if.then282:                                       ; preds = %for.end265
  %279 = load i8*, i8** %buf.addr, align 4, !dbg !9012, !tbaa !820
  %280 = load i32, i32* %i, align 4, !dbg !9014, !tbaa !827
  %arrayidx283 = getelementptr inbounds i8, i8* %279, i32 %280, !dbg !9012
  %281 = load i8, i8* %arrayidx283, align 1, !dbg !9012, !tbaa !1828
  %conv284 = zext i8 %281 to i32, !dbg !9012
  %shl285 = shl i32 %conv284, 8, !dbg !9015
  %282 = load i8*, i8** %buf.addr, align 4, !dbg !9016, !tbaa !820
  %283 = load i32, i32* %i, align 4, !dbg !9017, !tbaa !827
  %add286 = add i32 %283, 1, !dbg !9018
  %arrayidx287 = getelementptr inbounds i8, i8* %282, i32 %add286, !dbg !9016
  %284 = load i8, i8* %arrayidx287, align 1, !dbg !9016, !tbaa !1828
  %conv288 = zext i8 %284 to i32, !dbg !9016
  %add289 = add nsw i32 %shl285, %conv288, !dbg !9019
  %conv290 = trunc i32 %add289 to i16, !dbg !9020
  %285 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9021, !tbaa !820
  %286 = load i32, i32* %j, align 4, !dbg !9022, !tbaa !827
  %arrayidx291 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %285, i32 %286, !dbg !9021
  %priority = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx291, i32 0, i32 1, !dbg !9023
  store i16 %conv290, i16* %priority, align 4, !dbg !9024, !tbaa !5186
  %287 = load i8*, i8** %buf.addr, align 4, !dbg !9025, !tbaa !820
  %288 = load i32, i32* %i, align 4, !dbg !9026, !tbaa !827
  %add292 = add i32 %288, 2, !dbg !9027
  %arrayidx293 = getelementptr inbounds i8, i8* %287, i32 %add292, !dbg !9025
  %289 = load i8, i8* %arrayidx293, align 1, !dbg !9025, !tbaa !1828
  %conv294 = zext i8 %289 to i32, !dbg !9025
  %shl295 = shl i32 %conv294, 8, !dbg !9028
  %290 = load i8*, i8** %buf.addr, align 4, !dbg !9029, !tbaa !820
  %291 = load i32, i32* %i, align 4, !dbg !9030, !tbaa !827
  %add296 = add i32 %291, 3, !dbg !9031
  %arrayidx297 = getelementptr inbounds i8, i8* %290, i32 %add296, !dbg !9029
  %292 = load i8, i8* %arrayidx297, align 1, !dbg !9029, !tbaa !1828
  %conv298 = zext i8 %292 to i32, !dbg !9029
  %add299 = add nsw i32 %shl295, %conv298, !dbg !9032
  %conv300 = trunc i32 %add299 to i16, !dbg !9033
  %293 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9034, !tbaa !820
  %294 = load i32, i32* %j, align 4, !dbg !9035, !tbaa !827
  %arrayidx301 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %293, i32 %294, !dbg !9034
  %weight = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx301, i32 0, i32 2, !dbg !9036
  store i16 %conv300, i16* %weight, align 2, !dbg !9037, !tbaa !5197
  %295 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9038, !tbaa !820
  %296 = load i32, i32* %j, align 4, !dbg !9040, !tbaa !827
  %arrayidx302 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %295, i32 %296, !dbg !9038
  %weight303 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx302, i32 0, i32 2, !dbg !9041
  %297 = load i16, i16* %weight303, align 2, !dbg !9041, !tbaa !5197
  %conv304 = zext i16 %297 to i32, !dbg !9038
  %cmp305 = icmp eq i32 %conv304, 0, !dbg !9042
  br i1 %cmp305, label %if.then307, label %if.end310, !dbg !9043

if.then307:                                       ; preds = %if.then282
  %298 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9044, !tbaa !820
  %299 = load i32, i32* %j, align 4, !dbg !9046, !tbaa !827
  %arrayidx308 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %298, i32 %299, !dbg !9044
  %weight309 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx308, i32 0, i32 2, !dbg !9047
  store i16 1, i16* %weight309, align 2, !dbg !9048, !tbaa !5197
  br label %if.end310, !dbg !9049

if.end310:                                        ; preds = %if.then307, %if.then282
  %300 = load i8*, i8** %buf.addr, align 4, !dbg !9050, !tbaa !820
  %301 = load i32, i32* %i, align 4, !dbg !9051, !tbaa !827
  %add311 = add i32 %301, 4, !dbg !9052
  %arrayidx312 = getelementptr inbounds i8, i8* %300, i32 %add311, !dbg !9050
  %302 = load i8, i8* %arrayidx312, align 1, !dbg !9050, !tbaa !1828
  %conv313 = zext i8 %302 to i32, !dbg !9050
  %shl314 = shl i32 %conv313, 8, !dbg !9053
  %303 = load i8*, i8** %buf.addr, align 4, !dbg !9054, !tbaa !820
  %304 = load i32, i32* %i, align 4, !dbg !9055, !tbaa !827
  %add315 = add i32 %304, 5, !dbg !9056
  %arrayidx316 = getelementptr inbounds i8, i8* %303, i32 %add315, !dbg !9054
  %305 = load i8, i8* %arrayidx316, align 1, !dbg !9054, !tbaa !1828
  %conv317 = zext i8 %305 to i32, !dbg !9054
  %add318 = add nsw i32 %shl314, %conv317, !dbg !9057
  %conv319 = trunc i32 %add318 to i16, !dbg !9058
  %306 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9059, !tbaa !820
  %307 = load i32, i32* %j, align 4, !dbg !9060, !tbaa !827
  %arrayidx320 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %306, i32 %307, !dbg !9059
  %port = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx320, i32 0, i32 3, !dbg !9061
  store i16 %conv319, i16* %port, align 4, !dbg !9062, !tbaa !5208
  %308 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9063, !tbaa !820
  %309 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9065, !tbaa !820
  %310 = load i32, i32* %j, align 4, !dbg !9066, !tbaa !827
  %arrayidx321 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %309, i32 %310, !dbg !9065
  %name322 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %arrayidx321, i32 0, i32 0, !dbg !9067
  %311 = load i8*, i8** %buf.addr, align 4, !dbg !9068, !tbaa !820
  %312 = load i8*, i8** %buf.addr, align 4, !dbg !9069, !tbaa !820
  %313 = load i32, i32* %i, align 4, !dbg !9070, !tbaa !827
  %add323 = add i32 %313, 6, !dbg !9071
  %arrayidx324 = getelementptr inbounds i8, i8* %312, i32 %add323, !dbg !9069
  %314 = load i8*, i8** %buf.addr, align 4, !dbg !9072, !tbaa !820
  %315 = load i32, i32* %n.addr, align 4, !dbg !9073, !tbaa !827
  %add.ptr325 = getelementptr inbounds i8, i8* %314, i32 %315, !dbg !9074
  %call326 = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %308, %struct.ngx_str_t* %name322, i8* %311, i8* %arrayidx324, i8* %add.ptr325), !dbg !9075
  %cmp327 = icmp ne i32 %call326, 0, !dbg !9076
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !9077

if.then329:                                       ; preds = %if.end310
  br label %failed, !dbg !9078

if.end330:                                        ; preds = %if.end310
  %316 = load i32, i32* %j, align 4, !dbg !9080, !tbaa !827
  %inc331 = add i32 %316, 1, !dbg !9080
  store i32 %inc331, i32* %j, align 4, !dbg !9080, !tbaa !827
  br label %if.end332, !dbg !9081

if.end332:                                        ; preds = %if.end330, %for.end265
  %317 = load i32, i32* %len, align 4, !dbg !9082, !tbaa !827
  %318 = load i32, i32* %i, align 4, !dbg !9083, !tbaa !827
  %add333 = add i32 %318, %317, !dbg !9083
  store i32 %add333, i32* %i, align 4, !dbg !9083, !tbaa !827
  br label %for.inc334, !dbg !9084

for.inc334:                                       ; preds = %if.end332
  %319 = load i32, i32* %a, align 4, !dbg !9085, !tbaa !827
  %inc335 = add i32 %319, 1, !dbg !9085
  store i32 %inc335, i32* %a, align 4, !dbg !9085, !tbaa !827
  br label %for.cond242, !dbg !9086, !llvm.loop !9087

for.end336:                                       ; preds = %for.cond242
  %320 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %srvs, align 4, !dbg !9089, !tbaa !820
  %321 = bitcast %struct.ngx_resolver_srv_t* %320 to i8*, !dbg !9089
  %322 = load i32, i32* %nsrvs, align 4, !dbg !9090, !tbaa !827
  call void @ngx_sort(i8* %321, i32 %322, i32 16, i32 (i8*, i8*)* @ngx_resolver_cmp_srvs), !dbg !9091
  %323 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9092, !tbaa !820
  %324 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9093, !tbaa !820
  %query337 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %324, i32 0, i32 6, !dbg !9094
  %325 = load i8*, i8** %query337, align 4, !dbg !9094, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %323, i8* %325), !dbg !9095
  %326 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9096, !tbaa !820
  %query338 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %326, i32 0, i32 6, !dbg !9097
  store i8* null, i8** %query338, align 4, !dbg !9098, !tbaa !2440
  %327 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9099, !tbaa !820
  %queue339 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %327, i32 0, i32 1, !dbg !9099
  %prev340 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue339, i32 0, i32 0, !dbg !9099
  %328 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev340, align 4, !dbg !9099, !tbaa !904
  %329 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9099, !tbaa !820
  %queue341 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %329, i32 0, i32 1, !dbg !9099
  %next342 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue341, i32 0, i32 1, !dbg !9099
  %330 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next342, align 4, !dbg !9099, !tbaa !905
  %prev343 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %330, i32 0, i32 0, !dbg !9099
  store %struct.ngx_queue_s* %328, %struct.ngx_queue_s** %prev343, align 4, !dbg !9099, !tbaa !904
  %331 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9099, !tbaa !820
  %queue344 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %331, i32 0, i32 1, !dbg !9099
  %next345 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue344, i32 0, i32 1, !dbg !9099
  %332 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next345, align 4, !dbg !9099, !tbaa !905
  %333 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9099, !tbaa !820
  %queue346 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %333, i32 0, i32 1, !dbg !9099
  %prev347 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue346, i32 0, i32 0, !dbg !9099
  %334 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev347, align 4, !dbg !9099, !tbaa !904
  %next348 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %334, i32 0, i32 1, !dbg !9099
  store %struct.ngx_queue_s* %332, %struct.ngx_queue_s** %next348, align 4, !dbg !9099, !tbaa !905
  %335 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9100, !tbaa !820
  %sec349 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %335, i32 0, i32 0, !dbg !9100
  %336 = load volatile i32, i32* %sec349, align 4, !dbg !9100, !tbaa !2123
  %337 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9101, !tbaa !820
  %valid350 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %337, i32 0, i32 26, !dbg !9102
  %338 = load i32, i32* %valid350, align 4, !dbg !9102, !tbaa !958
  %tobool351 = icmp ne i32 %338, 0, !dbg !9101
  br i1 %tobool351, label %cond.true352, label %cond.false354, !dbg !9101

cond.true352:                                     ; preds = %for.end336
  %339 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9103, !tbaa !820
  %valid353 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %339, i32 0, i32 26, !dbg !9104
  %340 = load i32, i32* %valid353, align 4, !dbg !9104, !tbaa !958
  br label %cond.end356, !dbg !9101

cond.false354:                                    ; preds = %for.end336
  %341 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9105, !tbaa !820
  %ttl355 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %341, i32 0, i32 17, !dbg !9106
  %342 = load i32, i32* %ttl355, align 4, !dbg !9106, !tbaa !2783
  br label %cond.end356, !dbg !9101

cond.end356:                                      ; preds = %cond.false354, %cond.true352
  %cond357 = phi i32 [ %340, %cond.true352 ], [ %342, %cond.false354 ], !dbg !9101
  %add358 = add nsw i32 %336, %cond357, !dbg !9107
  %343 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9108, !tbaa !820
  %valid359 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %343, i32 0, i32 16, !dbg !9109
  store i32 %add358, i32* %valid359, align 4, !dbg !9110, !tbaa !2121
  %344 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9111, !tbaa !820
  %sec360 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %344, i32 0, i32 0, !dbg !9111
  %345 = load volatile i32, i32* %sec360, align 4, !dbg !9111, !tbaa !2123
  %346 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9112, !tbaa !820
  %expire361 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %346, i32 0, i32 25, !dbg !9113
  %347 = load i32, i32* %expire361, align 4, !dbg !9113, !tbaa !954
  %add362 = add nsw i32 %345, %347, !dbg !9114
  %348 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9115, !tbaa !820
  %expire363 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %348, i32 0, i32 15, !dbg !9116
  store i32 %add362, i32* %expire363, align 4, !dbg !9117, !tbaa !2136
  %349 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9118, !tbaa !820
  %srv_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %349, i32 0, i32 16, !dbg !9118
  %next364 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue, i32 0, i32 1, !dbg !9118
  %350 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next364, align 4, !dbg !9118, !tbaa !905
  %351 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9118, !tbaa !820
  %queue365 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %351, i32 0, i32 1, !dbg !9118
  %next366 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue365, i32 0, i32 1, !dbg !9118
  store %struct.ngx_queue_s* %350, %struct.ngx_queue_s** %next366, align 4, !dbg !9118, !tbaa !905
  %352 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9118, !tbaa !820
  %queue367 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %352, i32 0, i32 1, !dbg !9118
  %353 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9118, !tbaa !820
  %queue368 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %353, i32 0, i32 1, !dbg !9118
  %next369 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue368, i32 0, i32 1, !dbg !9118
  %354 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next369, align 4, !dbg !9118, !tbaa !905
  %prev370 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %354, i32 0, i32 0, !dbg !9118
  store %struct.ngx_queue_s* %queue367, %struct.ngx_queue_s** %prev370, align 4, !dbg !9118, !tbaa !904
  %355 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9118, !tbaa !820
  %srv_expire_queue371 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %355, i32 0, i32 16, !dbg !9118
  %356 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9118, !tbaa !820
  %queue372 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %356, i32 0, i32 1, !dbg !9118
  %prev373 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue372, i32 0, i32 0, !dbg !9118
  store %struct.ngx_queue_s* %srv_expire_queue371, %struct.ngx_queue_s** %prev373, align 4, !dbg !9118, !tbaa !904
  %357 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9118, !tbaa !820
  %queue374 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %357, i32 0, i32 1, !dbg !9118
  %358 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9118, !tbaa !820
  %srv_expire_queue375 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %358, i32 0, i32 16, !dbg !9118
  %next376 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue375, i32 0, i32 1, !dbg !9118
  store %struct.ngx_queue_s* %queue374, %struct.ngx_queue_s** %next376, align 4, !dbg !9118, !tbaa !905
  %359 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9119, !tbaa !820
  %waiting377 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %359, i32 0, i32 20, !dbg !9120
  %360 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting377, align 4, !dbg !9120, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %360, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9121, !tbaa !820
  %361 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9122, !tbaa !820
  %waiting378 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %361, i32 0, i32 20, !dbg !9123
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting378, align 4, !dbg !9124, !tbaa !2182
  br label %while.cond379, !dbg !9125

while.cond379:                                    ; preds = %while.body381, %cond.end356
  %362 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9126, !tbaa !820
  %tobool380 = icmp ne %struct.ngx_resolver_ctx_s* %362, null, !dbg !9125
  br i1 %tobool380, label %while.body381, label %while.end383, !dbg !9125

while.body381:                                    ; preds = %while.cond379
  %363 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9127, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %363, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9129, !tbaa !820
  %364 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9130, !tbaa !820
  %next382 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %364, i32 0, i32 0, !dbg !9131
  %365 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next382, align 4, !dbg !9131, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %365, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9132, !tbaa !820
  %366 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9133, !tbaa !820
  %367 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9134, !tbaa !820
  call void @ngx_resolver_resolve_srv_names(%struct.ngx_resolver_ctx_s* %366, %struct.ngx_resolver_node_t* %367), !dbg !9135
  br label %while.cond379, !dbg !9125, !llvm.loop !9136

while.end383:                                     ; preds = %while.cond379
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9138

if.end384:                                        ; preds = %for.end
  %368 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9139, !tbaa !820
  %nsrvs385 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %368, i32 0, i32 11, !dbg !9140
  store i16 0, i16* %nsrvs385, align 4, !dbg !9141, !tbaa !2274
  %369 = load i8*, i8** %cname, align 4, !dbg !9142, !tbaa !820
  %tobool386 = icmp ne i8* %369, null, !dbg !9142
  br i1 %tobool386, label %if.then387, label %if.end462, !dbg !9144

if.then387:                                       ; preds = %if.end384
  %370 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9145, !tbaa !820
  %371 = load i8*, i8** %buf.addr, align 4, !dbg !9148, !tbaa !820
  %372 = load i8*, i8** %cname, align 4, !dbg !9149, !tbaa !820
  %373 = load i8*, i8** %buf.addr, align 4, !dbg !9150, !tbaa !820
  %374 = load i32, i32* %n.addr, align 4, !dbg !9151, !tbaa !827
  %add.ptr388 = getelementptr inbounds i8, i8* %373, i32 %374, !dbg !9152
  %call389 = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %370, %struct.ngx_str_t* %name, i8* %371, i8* %372, i8* %add.ptr388), !dbg !9153
  %cmp390 = icmp ne i32 %call389, 0, !dbg !9154
  br i1 %cmp390, label %if.then392, label %if.end393, !dbg !9155

if.then392:                                       ; preds = %if.then387
  br label %failed, !dbg !9156

if.end393:                                        ; preds = %if.then387
  %375 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9158, !tbaa !820
  %queue394 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %375, i32 0, i32 1, !dbg !9158
  %prev395 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue394, i32 0, i32 0, !dbg !9158
  %376 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev395, align 4, !dbg !9158, !tbaa !904
  %377 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9158, !tbaa !820
  %queue396 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %377, i32 0, i32 1, !dbg !9158
  %next397 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue396, i32 0, i32 1, !dbg !9158
  %378 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next397, align 4, !dbg !9158, !tbaa !905
  %prev398 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %378, i32 0, i32 0, !dbg !9158
  store %struct.ngx_queue_s* %376, %struct.ngx_queue_s** %prev398, align 4, !dbg !9158, !tbaa !904
  %379 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9158, !tbaa !820
  %queue399 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %379, i32 0, i32 1, !dbg !9158
  %next400 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue399, i32 0, i32 1, !dbg !9158
  %380 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next400, align 4, !dbg !9158, !tbaa !905
  %381 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9158, !tbaa !820
  %queue401 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %381, i32 0, i32 1, !dbg !9158
  %prev402 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue401, i32 0, i32 0, !dbg !9158
  %382 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev402, align 4, !dbg !9158, !tbaa !904
  %next403 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %382, i32 0, i32 1, !dbg !9158
  store %struct.ngx_queue_s* %380, %struct.ngx_queue_s** %next403, align 4, !dbg !9158, !tbaa !905
  %len404 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !9159
  %383 = load i32, i32* %len404, align 4, !dbg !9159, !tbaa !1005
  %conv405 = trunc i32 %383 to i16, !dbg !9160
  %384 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9161, !tbaa !820
  %cnlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %384, i32 0, i32 12, !dbg !9162
  store i16 %conv405, i16* %cnlen, align 2, !dbg !9163, !tbaa !2310
  %data406 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9164
  %385 = load i8*, i8** %data406, align 4, !dbg !9164, !tbaa !997
  %386 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9165, !tbaa !820
  %u407 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %386, i32 0, i32 8, !dbg !9166
  %cname408 = bitcast %union.anon.0* %u407 to i8**, !dbg !9167
  store i8* %385, i8** %cname408, align 4, !dbg !9168, !tbaa !820
  %387 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9169, !tbaa !820
  %sec409 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %387, i32 0, i32 0, !dbg !9169
  %388 = load volatile i32, i32* %sec409, align 4, !dbg !9169, !tbaa !2123
  %389 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9170, !tbaa !820
  %valid410 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %389, i32 0, i32 26, !dbg !9171
  %390 = load i32, i32* %valid410, align 4, !dbg !9171, !tbaa !958
  %tobool411 = icmp ne i32 %390, 0, !dbg !9170
  br i1 %tobool411, label %cond.true412, label %cond.false414, !dbg !9170

cond.true412:                                     ; preds = %if.end393
  %391 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9172, !tbaa !820
  %valid413 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %391, i32 0, i32 26, !dbg !9173
  %392 = load i32, i32* %valid413, align 4, !dbg !9173, !tbaa !958
  br label %cond.end416, !dbg !9170

cond.false414:                                    ; preds = %if.end393
  %393 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9174, !tbaa !820
  %ttl415 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %393, i32 0, i32 17, !dbg !9175
  %394 = load i32, i32* %ttl415, align 4, !dbg !9175, !tbaa !2783
  br label %cond.end416, !dbg !9170

cond.end416:                                      ; preds = %cond.false414, %cond.true412
  %cond417 = phi i32 [ %392, %cond.true412 ], [ %394, %cond.false414 ], !dbg !9170
  %add418 = add nsw i32 %388, %cond417, !dbg !9176
  %395 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9177, !tbaa !820
  %valid419 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %395, i32 0, i32 16, !dbg !9178
  store i32 %add418, i32* %valid419, align 4, !dbg !9179, !tbaa !2121
  %396 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9180, !tbaa !820
  %sec420 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %396, i32 0, i32 0, !dbg !9180
  %397 = load volatile i32, i32* %sec420, align 4, !dbg !9180, !tbaa !2123
  %398 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9181, !tbaa !820
  %expire421 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %398, i32 0, i32 25, !dbg !9182
  %399 = load i32, i32* %expire421, align 4, !dbg !9182, !tbaa !954
  %add422 = add nsw i32 %397, %399, !dbg !9183
  %400 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9184, !tbaa !820
  %expire423 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %400, i32 0, i32 15, !dbg !9185
  store i32 %add422, i32* %expire423, align 4, !dbg !9186, !tbaa !2136
  %401 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9187, !tbaa !820
  %srv_expire_queue424 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %401, i32 0, i32 16, !dbg !9187
  %next425 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue424, i32 0, i32 1, !dbg !9187
  %402 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next425, align 4, !dbg !9187, !tbaa !905
  %403 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9187, !tbaa !820
  %queue426 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %403, i32 0, i32 1, !dbg !9187
  %next427 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue426, i32 0, i32 1, !dbg !9187
  store %struct.ngx_queue_s* %402, %struct.ngx_queue_s** %next427, align 4, !dbg !9187, !tbaa !905
  %404 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9187, !tbaa !820
  %queue428 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %404, i32 0, i32 1, !dbg !9187
  %405 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9187, !tbaa !820
  %queue429 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %405, i32 0, i32 1, !dbg !9187
  %next430 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue429, i32 0, i32 1, !dbg !9187
  %406 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next430, align 4, !dbg !9187, !tbaa !905
  %prev431 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %406, i32 0, i32 0, !dbg !9187
  store %struct.ngx_queue_s* %queue428, %struct.ngx_queue_s** %prev431, align 4, !dbg !9187, !tbaa !904
  %407 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9187, !tbaa !820
  %srv_expire_queue432 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %407, i32 0, i32 16, !dbg !9187
  %408 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9187, !tbaa !820
  %queue433 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %408, i32 0, i32 1, !dbg !9187
  %prev434 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue433, i32 0, i32 0, !dbg !9187
  store %struct.ngx_queue_s* %srv_expire_queue432, %struct.ngx_queue_s** %prev434, align 4, !dbg !9187, !tbaa !904
  %409 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9187, !tbaa !820
  %queue435 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %409, i32 0, i32 1, !dbg !9187
  %410 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9187, !tbaa !820
  %srv_expire_queue436 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %410, i32 0, i32 16, !dbg !9187
  %next437 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %srv_expire_queue436, i32 0, i32 1, !dbg !9187
  store %struct.ngx_queue_s* %queue435, %struct.ngx_queue_s** %next437, align 4, !dbg !9187, !tbaa !905
  %411 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9188, !tbaa !820
  %412 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9189, !tbaa !820
  %query438 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %412, i32 0, i32 6, !dbg !9190
  %413 = load i8*, i8** %query438, align 4, !dbg !9190, !tbaa !2440
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %411, i8* %413), !dbg !9191
  %414 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9192, !tbaa !820
  %query439 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %414, i32 0, i32 6, !dbg !9193
  store i8* null, i8** %query439, align 4, !dbg !9194, !tbaa !2440
  %415 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9195, !tbaa !820
  %query6 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %415, i32 0, i32 7, !dbg !9196
  store i8* null, i8** %query6, align 4, !dbg !9197, !tbaa !2453
  %416 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9198, !tbaa !820
  %waiting440 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %416, i32 0, i32 20, !dbg !9199
  %417 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting440, align 4, !dbg !9199, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %417, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9200, !tbaa !820
  %418 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9201, !tbaa !820
  %waiting441 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %418, i32 0, i32 20, !dbg !9202
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting441, align 4, !dbg !9203, !tbaa !2182
  %419 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9204, !tbaa !820
  %tobool442 = icmp ne %struct.ngx_resolver_ctx_s* %419, null, !dbg !9204
  br i1 %tobool442, label %if.then443, label %if.end461, !dbg !9206

if.then443:                                       ; preds = %cond.end416
  %420 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9207, !tbaa !820
  %recursion = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %420, i32 0, i32 19, !dbg !9210
  %421 = load i32, i32* %recursion, align 4, !dbg !9211, !tbaa !2304
  %inc444 = add i32 %421, 1, !dbg !9211
  store i32 %inc444, i32* %recursion, align 4, !dbg !9211, !tbaa !2304
  %cmp445 = icmp uge i32 %421, 50, !dbg !9212
  br i1 %cmp445, label %if.then447, label %if.end452, !dbg !9213

if.then447:                                       ; preds = %if.then443
  br label %do.body, !dbg !9214, !llvm.loop !9216

do.body:                                          ; preds = %do.cond, %if.then447
  %422 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9218, !tbaa !820
  %state448 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %422, i32 0, i32 4, !dbg !9220
  store i32 3, i32* %state448, align 4, !dbg !9221, !tbaa !1703
  %423 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9222, !tbaa !820
  %next449 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %423, i32 0, i32 0, !dbg !9223
  %424 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next449, align 4, !dbg !9223, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %424, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9224, !tbaa !820
  %425 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9225, !tbaa !820
  %handler450 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %425, i32 0, i32 15, !dbg !9226
  %426 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler450, align 4, !dbg !9226, !tbaa !1844
  %427 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9227, !tbaa !820
  call void %426(%struct.ngx_resolver_ctx_s* %427), !dbg !9225
  %428 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9228, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %428, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9229, !tbaa !820
  br label %do.cond, !dbg !9230

do.cond:                                          ; preds = %do.body
  %429 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9231, !tbaa !820
  %tobool451 = icmp ne %struct.ngx_resolver_ctx_s* %429, null, !dbg !9230
  br i1 %tobool451, label %do.body, label %do.end, !dbg !9230, !llvm.loop !9216

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9232

if.end452:                                        ; preds = %if.then443
  %430 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9233, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %430, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9235, !tbaa !820
  br label %for.cond453, !dbg !9236

for.cond453:                                      ; preds = %for.inc457, %if.end452
  %431 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9237, !tbaa !820
  %tobool454 = icmp ne %struct.ngx_resolver_ctx_s* %431, null, !dbg !9239
  br i1 %tobool454, label %for.body455, label %for.end459, !dbg !9239

for.body455:                                      ; preds = %for.cond453
  %432 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9240, !tbaa !820
  %node456 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %432, i32 0, i32 2, !dbg !9242
  store %struct.ngx_resolver_node_t* null, %struct.ngx_resolver_node_t** %node456, align 4, !dbg !9243, !tbaa !2429
  br label %for.inc457, !dbg !9244

for.inc457:                                       ; preds = %for.body455
  %433 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9245, !tbaa !820
  %next458 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %433, i32 0, i32 0, !dbg !9246
  %434 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next458, align 4, !dbg !9246, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %434, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9247, !tbaa !820
  br label %for.cond453, !dbg !9248, !llvm.loop !9249

for.end459:                                       ; preds = %for.cond453
  %435 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9251, !tbaa !820
  %436 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9252, !tbaa !820
  %call460 = call i32 @ngx_resolve_name_locked(%struct.ngx_resolver_s* %435, %struct.ngx_resolver_ctx_s* %436, %struct.ngx_str_t* %name), !dbg !9253
  br label %if.end461, !dbg !9254

if.end461:                                        ; preds = %for.end459, %cond.end416
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9255

if.end462:                                        ; preds = %if.end384
  %437 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9256, !tbaa !820
  %log463 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %437, i32 0, i32 2, !dbg !9256
  %438 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log463, align 4, !dbg !9256, !tbaa !965
  %log_level464 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %438, i32 0, i32 0, !dbg !9256
  %439 = load i32, i32* %log_level464, align 4, !dbg !9256, !tbaa !2999
  %440 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9256, !tbaa !820
  %log_level465 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %440, i32 0, i32 27, !dbg !9256
  %441 = load i32, i32* %log_level465, align 4, !dbg !9256, !tbaa !969
  %cmp466 = icmp uge i32 %439, %441, !dbg !9256
  br i1 %cmp466, label %if.then468, label %if.end471, !dbg !9258

if.then468:                                       ; preds = %if.end462
  %442 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9256, !tbaa !820
  %log_level469 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %442, i32 0, i32 27, !dbg !9256
  %443 = load i32, i32* %log_level469, align 4, !dbg !9256, !tbaa !969
  %444 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9256, !tbaa !820
  %log470 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %444, i32 0, i32 2, !dbg !9256
  %445 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log470, align 4, !dbg !9256, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %443, %struct.ngx_log_s* %445, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i32 0, i32 0)), !dbg !9256
  br label %if.end471, !dbg !9256

if.end471:                                        ; preds = %if.then468, %if.end462
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9259

short_response:                                   ; preds = %if.then208, %if.then145, %while.end137
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8** %err, align 4, !dbg !9260, !tbaa !820
  br label %invalid, !dbg !9261

invalid:                                          ; preds = %short_response, %if.then140
  %446 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9262, !tbaa !820
  %log472 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %446, i32 0, i32 2, !dbg !9262
  %447 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log472, align 4, !dbg !9262, !tbaa !965
  %log_level473 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %447, i32 0, i32 0, !dbg !9262
  %448 = load i32, i32* %log_level473, align 4, !dbg !9262, !tbaa !2999
  %449 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9262, !tbaa !820
  %log_level474 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %449, i32 0, i32 27, !dbg !9262
  %450 = load i32, i32* %log_level474, align 4, !dbg !9262, !tbaa !969
  %cmp475 = icmp uge i32 %448, %450, !dbg !9262
  br i1 %cmp475, label %if.then477, label %if.end480, !dbg !9264

if.then477:                                       ; preds = %invalid
  %451 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9262, !tbaa !820
  %log_level478 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %451, i32 0, i32 27, !dbg !9262
  %452 = load i32, i32* %log_level478, align 4, !dbg !9262, !tbaa !969
  %453 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9262, !tbaa !820
  %log479 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %453, i32 0, i32 2, !dbg !9262
  %454 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log479, align 4, !dbg !9262, !tbaa !965
  %455 = load i8*, i8** %err, align 4, !dbg !9262, !tbaa !820
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %452, %struct.ngx_log_s* %454, i32 0, i8* %455), !dbg !9262
  br label %if.end480, !dbg !9262

if.end480:                                        ; preds = %if.then477, %invalid
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9265

failed:                                           ; preds = %if.then392, %if.then329, %if.then237, %if.then216, %if.end189, %if.end35, %if.then17, %if.end13
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9266

cleanup:                                          ; preds = %failed, %if.end480, %if.end471, %if.end461, %do.end, %while.end383, %while.end, %if.end52, %if.then51, %if.then
  %456 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %456) #5, !dbg !9267
  %457 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %457) #5, !dbg !9267
  %458 = bitcast %struct.ngx_resolver_srv_t** %srvs to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %458) #5, !dbg !9267
  %459 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %459) #5, !dbg !9267
  %460 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %460) #5, !dbg !9267
  %461 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %461) #5, !dbg !9267
  %462 = bitcast i32* %j to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %462) #5, !dbg !9267
  %463 = bitcast i32* %i to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %463) #5, !dbg !9267
  %464 = bitcast i32* %a to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %464) #5, !dbg !9267
  %465 = bitcast i32* %nsrvs to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %465) #5, !dbg !9267
  %466 = bitcast i32* %start to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %466) #5, !dbg !9267
  %467 = bitcast i32* %class to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %467) #5, !dbg !9267
  %468 = bitcast i32* %qident to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %468) #5, !dbg !9267
  %469 = bitcast i32* %type to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %469) #5, !dbg !9267
  %470 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 8, i8* %470) #5, !dbg !9267
  %471 = bitcast i32* %hash to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %471) #5, !dbg !9267
  %472 = bitcast i32* %ttl to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %472) #5, !dbg !9267
  %473 = bitcast i32* %len to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %473) #5, !dbg !9267
  %474 = bitcast i8** %cname to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %474) #5, !dbg !9267
  %475 = bitcast i8** %err to i8*, !dbg !9267
  call void @llvm.lifetime.end(i64 4, i8* %475) #5, !dbg !9267
  ret void, !dbg !9267
}

; Function Attrs: nounwind
define internal void @ngx_resolver_process_ptr(%struct.ngx_resolver_s* %r, i8* %buf, i32 %n, i32 %ident, i32 %code, i32 %nan) #0 !dbg !9268 {
entry:
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %buf.addr = alloca i8*, align 4
  %n.addr = alloca i32, align 4
  %ident.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %nan.addr = alloca i32, align 4
  %err = alloca i8*, align 4
  %len = alloca i32, align 4
  %addr = alloca i32, align 4
  %ttl = alloca i32, align 4
  %octet = alloca i32, align 4
  %name = alloca %struct.ngx_str_t, align 4
  %mask = alloca i32, align 4
  %type = alloca i32, align 4
  %class = alloca i32, align 4
  %qident = alloca i32, align 4
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %expire_queue = alloca %struct.ngx_queue_s*, align 4
  %tree = alloca %struct.ngx_rbtree_s*, align 4
  %an = alloca %struct.ngx_resolver_an_t*, align 4
  %ctx = alloca %struct.ngx_resolver_ctx_s*, align 4
  %next = alloca %struct.ngx_resolver_ctx_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %hash = alloca i32, align 4
  %digit = alloca i32, align 4
  %addr6 = alloca %struct.in6_addr, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !9272, metadata !824), !dbg !9300
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9273, metadata !824), !dbg !9301
  store i32 %n, i32* %n.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9274, metadata !824), !dbg !9302
  store i32 %ident, i32* %ident.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %ident.addr, metadata !9275, metadata !824), !dbg !9303
  store i32 %code, i32* %code.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !9276, metadata !824), !dbg !9304
  store i32 %nan, i32* %nan.addr, align 4, !tbaa !827
  call void @llvm.dbg.declare(metadata i32* %nan.addr, metadata !9277, metadata !824), !dbg !9305
  %0 = bitcast i8** %err to i8*, !dbg !9306
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !9306
  call void @llvm.dbg.declare(metadata i8** %err, metadata !9278, metadata !824), !dbg !9307
  %1 = bitcast i32* %len to i8*, !dbg !9308
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !9308
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9279, metadata !824), !dbg !9309
  %2 = bitcast i32* %addr to i8*, !dbg !9310
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !9280, metadata !824), !dbg !9311
  %3 = bitcast i32* %ttl to i8*, !dbg !9312
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %ttl, metadata !9281, metadata !824), !dbg !9313
  %4 = bitcast i32* %octet to i8*, !dbg !9314
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !9314
  call void @llvm.dbg.declare(metadata i32* %octet, metadata !9282, metadata !824), !dbg !9315
  %5 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !9316
  call void @llvm.lifetime.start(i64 8, i8* %5) #5, !dbg !9316
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t* %name, metadata !9283, metadata !824), !dbg !9317
  %6 = bitcast i32* %mask to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %6) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !9284, metadata !824), !dbg !9319
  %7 = bitcast i32* %type to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %7) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9285, metadata !824), !dbg !9320
  %8 = bitcast i32* %class to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %8) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %class, metadata !9286, metadata !824), !dbg !9321
  %9 = bitcast i32* %qident to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %9) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %qident, metadata !9287, metadata !824), !dbg !9322
  %10 = bitcast i32* %a to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %10) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9288, metadata !824), !dbg !9323
  %11 = bitcast i32* %i to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %11) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9289, metadata !824), !dbg !9324
  %12 = bitcast i32* %start to i8*, !dbg !9318
  call void @llvm.lifetime.start(i64 4, i8* %12) #5, !dbg !9318
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9290, metadata !824), !dbg !9325
  %13 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !9326
  call void @llvm.lifetime.start(i64 4, i8* %13) #5, !dbg !9326
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %expire_queue, metadata !9291, metadata !824), !dbg !9327
  %14 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !9328
  call void @llvm.lifetime.start(i64 4, i8* %14) #5, !dbg !9328
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree, metadata !9292, metadata !824), !dbg !9329
  %15 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !9330
  call void @llvm.lifetime.start(i64 4, i8* %15) #5, !dbg !9330
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_an_t** %an, metadata !9293, metadata !824), !dbg !9331
  %16 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !9332
  call void @llvm.lifetime.start(i64 4, i8* %16) #5, !dbg !9332
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %ctx, metadata !9294, metadata !824), !dbg !9333
  %17 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !9332
  call void @llvm.lifetime.start(i64 4, i8* %17) #5, !dbg !9332
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_ctx_s** %next, metadata !9295, metadata !824), !dbg !9334
  %18 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !9335
  call void @llvm.lifetime.start(i64 4, i8* %18) #5, !dbg !9335
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !9296, metadata !824), !dbg !9336
  %19 = bitcast i32* %hash to i8*, !dbg !9337
  call void @llvm.lifetime.start(i64 4, i8* %19) #5, !dbg !9337
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !9297, metadata !824), !dbg !9338
  %20 = bitcast i32* %digit to i8*, !dbg !9339
  call void @llvm.lifetime.start(i64 4, i8* %20) #5, !dbg !9339
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !9298, metadata !824), !dbg !9340
  %21 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !9341
  call void @llvm.lifetime.start(i64 16, i8* %21) #5, !dbg !9341
  call void @llvm.dbg.declare(metadata %struct.in6_addr* %addr6, metadata !9299, metadata !824), !dbg !9342
  %22 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9343, !tbaa !820
  %23 = load i8*, i8** %buf.addr, align 4, !dbg !9345, !tbaa !820
  %24 = load i8*, i8** %buf.addr, align 4, !dbg !9346, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 12, !dbg !9347
  %25 = load i8*, i8** %buf.addr, align 4, !dbg !9348, !tbaa !820
  %26 = load i32, i32* %n.addr, align 4, !dbg !9349, !tbaa !827
  %add.ptr1 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !9350
  %call = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %22, %struct.ngx_str_t* %name, i8* %23, i8* %add.ptr, i8* %add.ptr1), !dbg !9351
  %cmp = icmp ne i32 %call, 0, !dbg !9352
  br i1 %cmp, label %if.then, label %if.end, !dbg !9353

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9354

if.end:                                           ; preds = %entry
  store i32 0, i32* %addr, align 4, !dbg !9356, !tbaa !827
  store i32 12, i32* %i, align 4, !dbg !9357, !tbaa !827
  store i32 0, i32* %mask, align 4, !dbg !9358, !tbaa !827
  br label %for.cond, !dbg !9360

for.cond:                                         ; preds = %for.inc, %if.end
  %27 = load i32, i32* %mask, align 4, !dbg !9361, !tbaa !827
  %cmp2 = icmp ult i32 %27, 32, !dbg !9363
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9364

for.body:                                         ; preds = %for.cond
  %28 = load i8*, i8** %buf.addr, align 4, !dbg !9365, !tbaa !820
  %29 = load i32, i32* %i, align 4, !dbg !9367, !tbaa !827
  %inc = add i32 %29, 1, !dbg !9367
  store i32 %inc, i32* %i, align 4, !dbg !9367, !tbaa !827
  %arrayidx = getelementptr inbounds i8, i8* %28, i32 %29, !dbg !9365
  %30 = load i8, i8* %arrayidx, align 1, !dbg !9365, !tbaa !1828
  %conv = zext i8 %30 to i32, !dbg !9365
  store i32 %conv, i32* %len, align 4, !dbg !9368, !tbaa !827
  %31 = load i8*, i8** %buf.addr, align 4, !dbg !9369, !tbaa !820
  %32 = load i32, i32* %i, align 4, !dbg !9370, !tbaa !827
  %arrayidx3 = getelementptr inbounds i8, i8* %31, i32 %32, !dbg !9369
  %33 = load i32, i32* %len, align 4, !dbg !9371, !tbaa !827
  %call4 = call i32 @ngx_atoi(i8* %arrayidx3, i32 %33), !dbg !9372
  store i32 %call4, i32* %octet, align 4, !dbg !9373, !tbaa !827
  %34 = load i32, i32* %octet, align 4, !dbg !9374, !tbaa !827
  %cmp5 = icmp eq i32 %34, -1, !dbg !9376
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !9377

lor.lhs.false:                                    ; preds = %for.body
  %35 = load i32, i32* %octet, align 4, !dbg !9378, !tbaa !827
  %cmp7 = icmp sgt i32 %35, 255, !dbg !9379
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9380

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  br label %invalid_in_addr_arpa, !dbg !9381

if.end10:                                         ; preds = %lor.lhs.false
  %36 = load i32, i32* %octet, align 4, !dbg !9383, !tbaa !827
  %37 = load i32, i32* %mask, align 4, !dbg !9384, !tbaa !827
  %shl = shl i32 %36, %37, !dbg !9385
  %38 = load i32, i32* %addr, align 4, !dbg !9386, !tbaa !827
  %add = add i32 %38, %shl, !dbg !9386
  store i32 %add, i32* %addr, align 4, !dbg !9386, !tbaa !827
  %39 = load i32, i32* %len, align 4, !dbg !9387, !tbaa !827
  %40 = load i32, i32* %i, align 4, !dbg !9388, !tbaa !827
  %add11 = add i32 %40, %39, !dbg !9388
  store i32 %add11, i32* %i, align 4, !dbg !9388, !tbaa !827
  br label %for.inc, !dbg !9389

for.inc:                                          ; preds = %if.end10
  %41 = load i32, i32* %mask, align 4, !dbg !9390, !tbaa !827
  %add12 = add i32 %41, 8, !dbg !9390
  store i32 %add12, i32* %mask, align 4, !dbg !9390, !tbaa !827
  br label %for.cond, !dbg !9391, !llvm.loop !9392

for.end:                                          ; preds = %for.cond
  %42 = load i8*, i8** %buf.addr, align 4, !dbg !9394, !tbaa !820
  %43 = load i32, i32* %i, align 4, !dbg !9396, !tbaa !827
  %arrayidx13 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !9394
  %call14 = call i32 @ngx_strcasecmp(i8* %arrayidx13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0)), !dbg !9397
  %cmp15 = icmp eq i32 %call14, 0, !dbg !9398
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !9399

if.then17:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !9400, !tbaa !827
  %add18 = add i32 %44, 14, !dbg !9400
  store i32 %add18, i32* %i, align 4, !dbg !9400, !tbaa !827
  %45 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9402, !tbaa !820
  %46 = load i32, i32* %addr, align 4, !dbg !9403, !tbaa !827
  %call19 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr(%struct.ngx_resolver_s* %45, i32 %46), !dbg !9404
  store %struct.ngx_resolver_node_t* %call19, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9405, !tbaa !820
  %47 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9406, !tbaa !820
  %addr_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %47, i32 0, i32 10, !dbg !9407
  store %struct.ngx_rbtree_s* %addr_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !9408, !tbaa !820
  %48 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9409, !tbaa !820
  %addr_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %48, i32 0, i32 17, !dbg !9410
  store %struct.ngx_queue_s* %addr_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !9411, !tbaa !820
  br label %valid, !dbg !9412

if.end20:                                         ; preds = %for.end
  br label %invalid_in_addr_arpa, !dbg !9413

invalid_in_addr_arpa:                             ; preds = %if.end20, %if.then9
  store i32 12, i32* %i, align 4, !dbg !9414, !tbaa !827
  store i32 15, i32* %octet, align 4, !dbg !9415, !tbaa !827
  br label %for.cond21, !dbg !9417

for.cond21:                                       ; preds = %for.inc63, %invalid_in_addr_arpa
  %49 = load i32, i32* %octet, align 4, !dbg !9418, !tbaa !827
  %cmp22 = icmp sge i32 %49, 0, !dbg !9420
  br i1 %cmp22, label %for.body24, label %for.end64, !dbg !9421

for.body24:                                       ; preds = %for.cond21
  %50 = load i8*, i8** %buf.addr, align 4, !dbg !9422, !tbaa !820
  %51 = load i32, i32* %i, align 4, !dbg !9425, !tbaa !827
  %inc25 = add i32 %51, 1, !dbg !9425
  store i32 %inc25, i32* %i, align 4, !dbg !9425, !tbaa !827
  %arrayidx26 = getelementptr inbounds i8, i8* %50, i32 %51, !dbg !9422
  %52 = load i8, i8* %arrayidx26, align 1, !dbg !9422, !tbaa !1828
  %conv27 = zext i8 %52 to i32, !dbg !9422
  %cmp28 = icmp ne i32 %conv27, 1, !dbg !9426
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9427

if.then30:                                        ; preds = %for.body24
  br label %invalid_ip6_arpa, !dbg !9428

if.end31:                                         ; preds = %for.body24
  %53 = load i8*, i8** %buf.addr, align 4, !dbg !9430, !tbaa !820
  %54 = load i32, i32* %i, align 4, !dbg !9431, !tbaa !827
  %inc32 = add i32 %54, 1, !dbg !9431
  store i32 %inc32, i32* %i, align 4, !dbg !9431, !tbaa !827
  %arrayidx33 = getelementptr inbounds i8, i8* %53, i32 %54, !dbg !9430
  %call34 = call i32 @ngx_hextoi(i8* %arrayidx33, i32 1), !dbg !9432
  store i32 %call34, i32* %digit, align 4, !dbg !9433, !tbaa !827
  %55 = load i32, i32* %digit, align 4, !dbg !9434, !tbaa !827
  %cmp35 = icmp eq i32 %55, -1, !dbg !9436
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9437

if.then37:                                        ; preds = %if.end31
  br label %invalid_ip6_arpa, !dbg !9438

if.end38:                                         ; preds = %if.end31
  %56 = load i32, i32* %digit, align 4, !dbg !9440, !tbaa !827
  %conv39 = trunc i32 %56 to i8, !dbg !9441
  %__in6_union = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %addr6, i32 0, i32 0, !dbg !9442
  %__s6_addr = bitcast %union.anon* %__in6_union to [16 x i8]*, !dbg !9442
  %57 = load i32, i32* %octet, align 4, !dbg !9443, !tbaa !827
  %arrayidx40 = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr, i32 0, i32 %57, !dbg !9444
  store i8 %conv39, i8* %arrayidx40, align 1, !dbg !9445, !tbaa !1828
  %58 = load i8*, i8** %buf.addr, align 4, !dbg !9446, !tbaa !820
  %59 = load i32, i32* %i, align 4, !dbg !9448, !tbaa !827
  %inc41 = add i32 %59, 1, !dbg !9448
  store i32 %inc41, i32* %i, align 4, !dbg !9448, !tbaa !827
  %arrayidx42 = getelementptr inbounds i8, i8* %58, i32 %59, !dbg !9446
  %60 = load i8, i8* %arrayidx42, align 1, !dbg !9446, !tbaa !1828
  %conv43 = zext i8 %60 to i32, !dbg !9446
  %cmp44 = icmp ne i32 %conv43, 1, !dbg !9449
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !9450

if.then46:                                        ; preds = %if.end38
  br label %invalid_ip6_arpa, !dbg !9451

if.end47:                                         ; preds = %if.end38
  %61 = load i8*, i8** %buf.addr, align 4, !dbg !9453, !tbaa !820
  %62 = load i32, i32* %i, align 4, !dbg !9454, !tbaa !827
  %inc48 = add i32 %62, 1, !dbg !9454
  store i32 %inc48, i32* %i, align 4, !dbg !9454, !tbaa !827
  %arrayidx49 = getelementptr inbounds i8, i8* %61, i32 %62, !dbg !9453
  %call50 = call i32 @ngx_hextoi(i8* %arrayidx49, i32 1), !dbg !9455
  store i32 %call50, i32* %digit, align 4, !dbg !9456, !tbaa !827
  %63 = load i32, i32* %digit, align 4, !dbg !9457, !tbaa !827
  %cmp51 = icmp eq i32 %63, -1, !dbg !9459
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !9460

if.then53:                                        ; preds = %if.end47
  br label %invalid_ip6_arpa, !dbg !9461

if.end54:                                         ; preds = %if.end47
  %64 = load i32, i32* %digit, align 4, !dbg !9463, !tbaa !827
  %mul = mul nsw i32 %64, 16, !dbg !9464
  %conv55 = trunc i32 %mul to i8, !dbg !9465
  %conv56 = zext i8 %conv55 to i32, !dbg !9465
  %__in6_union57 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %addr6, i32 0, i32 0, !dbg !9466
  %__s6_addr58 = bitcast %union.anon* %__in6_union57 to [16 x i8]*, !dbg !9466
  %65 = load i32, i32* %octet, align 4, !dbg !9467, !tbaa !827
  %arrayidx59 = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr58, i32 0, i32 %65, !dbg !9468
  %66 = load i8, i8* %arrayidx59, align 1, !dbg !9469, !tbaa !1828
  %conv60 = zext i8 %66 to i32, !dbg !9469
  %add61 = add nsw i32 %conv60, %conv56, !dbg !9469
  %conv62 = trunc i32 %add61 to i8, !dbg !9469
  store i8 %conv62, i8* %arrayidx59, align 1, !dbg !9469, !tbaa !1828
  br label %for.inc63, !dbg !9470

for.inc63:                                        ; preds = %if.end54
  %67 = load i32, i32* %octet, align 4, !dbg !9471, !tbaa !827
  %dec = add nsw i32 %67, -1, !dbg !9471
  store i32 %dec, i32* %octet, align 4, !dbg !9471, !tbaa !827
  br label %for.cond21, !dbg !9472, !llvm.loop !9473

for.end64:                                        ; preds = %for.cond21
  %68 = load i8*, i8** %buf.addr, align 4, !dbg !9475, !tbaa !820
  %69 = load i32, i32* %i, align 4, !dbg !9477, !tbaa !827
  %arrayidx65 = getelementptr inbounds i8, i8* %68, i32 %69, !dbg !9475
  %call66 = call i32 @ngx_strcasecmp(i8* %arrayidx65, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0)), !dbg !9478
  %cmp67 = icmp eq i32 %call66, 0, !dbg !9479
  br i1 %cmp67, label %if.then69, label %if.end75, !dbg !9480

if.then69:                                        ; preds = %for.end64
  %70 = load i32, i32* %i, align 4, !dbg !9481, !tbaa !827
  %add70 = add i32 %70, 10, !dbg !9481
  store i32 %add70, i32* %i, align 4, !dbg !9481, !tbaa !827
  %__in6_union71 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %addr6, i32 0, i32 0, !dbg !9483
  %__s6_addr72 = bitcast %union.anon* %__in6_union71 to [16 x i8]*, !dbg !9483
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %__s6_addr72, i32 0, i32 0, !dbg !9484
  %call73 = call i32 @ngx_crc32_short(i8* %arraydecay, i32 16), !dbg !9485
  store i32 %call73, i32* %hash, align 4, !dbg !9486, !tbaa !827
  %71 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9487, !tbaa !820
  %72 = load i32, i32* %hash, align 4, !dbg !9488, !tbaa !827
  %call74 = call %struct.ngx_resolver_node_t* @ngx_resolver_lookup_addr6(%struct.ngx_resolver_s* %71, %struct.in6_addr* %addr6, i32 %72), !dbg !9489
  store %struct.ngx_resolver_node_t* %call74, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9490, !tbaa !820
  %73 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9491, !tbaa !820
  %addr6_rbtree = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %73, i32 0, i32 19, !dbg !9492
  store %struct.ngx_rbtree_s* %addr6_rbtree, %struct.ngx_rbtree_s** %tree, align 4, !dbg !9493, !tbaa !820
  %74 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9494, !tbaa !820
  %addr6_expire_queue = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %74, i32 0, i32 22, !dbg !9495
  store %struct.ngx_queue_s* %addr6_expire_queue, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !9496, !tbaa !820
  br label %valid, !dbg !9497

if.end75:                                         ; preds = %for.end64
  br label %invalid_ip6_arpa, !dbg !9498

invalid_ip6_arpa:                                 ; preds = %if.end75, %if.then53, %if.then46, %if.then37, %if.then30
  %75 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9499, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %75, i32 0, i32 2, !dbg !9499
  %76 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !9499, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %76, i32 0, i32 0, !dbg !9499
  %77 = load i32, i32* %log_level, align 4, !dbg !9499, !tbaa !2999
  %78 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9499, !tbaa !820
  %log_level76 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %78, i32 0, i32 27, !dbg !9499
  %79 = load i32, i32* %log_level76, align 4, !dbg !9499, !tbaa !969
  %cmp77 = icmp uge i32 %77, %79, !dbg !9499
  br i1 %cmp77, label %if.then79, label %if.end82, !dbg !9501

if.then79:                                        ; preds = %invalid_ip6_arpa
  %80 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9499, !tbaa !820
  %log_level80 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %80, i32 0, i32 27, !dbg !9499
  %81 = load i32, i32* %log_level80, align 4, !dbg !9499, !tbaa !969
  %82 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9499, !tbaa !820
  %log81 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %82, i32 0, i32 2, !dbg !9499
  %83 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log81, align 4, !dbg !9499, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %81, %struct.ngx_log_s* %83, i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.51, i32 0, i32 0)), !dbg !9499
  br label %if.end82, !dbg !9499

if.end82:                                         ; preds = %if.then79, %invalid_ip6_arpa
  %84 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9502, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9503
  %85 = load i8*, i8** %data, align 4, !dbg !9503, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %84, i8* %85), !dbg !9504
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9505

valid:                                            ; preds = %if.then69, %if.then17
  %86 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9506, !tbaa !820
  %cmp83 = icmp eq %struct.ngx_resolver_node_t* %86, null, !dbg !9508
  br i1 %cmp83, label %if.then88, label %lor.lhs.false85, !dbg !9509

lor.lhs.false85:                                  ; preds = %valid
  %87 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9510, !tbaa !820
  %query = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %87, i32 0, i32 6, !dbg !9511
  %88 = load i8*, i8** %query, align 4, !dbg !9511, !tbaa !2440
  %cmp86 = icmp eq i8* %88, null, !dbg !9512
  br i1 %cmp86, label %if.then88, label %if.end99, !dbg !9513

if.then88:                                        ; preds = %lor.lhs.false85, %valid
  %89 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9514, !tbaa !820
  %log89 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %89, i32 0, i32 2, !dbg !9514
  %90 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log89, align 4, !dbg !9514, !tbaa !965
  %log_level90 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %90, i32 0, i32 0, !dbg !9514
  %91 = load i32, i32* %log_level90, align 4, !dbg !9514, !tbaa !2999
  %92 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9514, !tbaa !820
  %log_level91 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %92, i32 0, i32 27, !dbg !9514
  %93 = load i32, i32* %log_level91, align 4, !dbg !9514, !tbaa !969
  %cmp92 = icmp uge i32 %91, %93, !dbg !9514
  br i1 %cmp92, label %if.then94, label %if.end97, !dbg !9517

if.then94:                                        ; preds = %if.then88
  %94 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9514, !tbaa !820
  %log_level95 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %94, i32 0, i32 27, !dbg !9514
  %95 = load i32, i32* %log_level95, align 4, !dbg !9514, !tbaa !969
  %96 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9514, !tbaa !820
  %log96 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %96, i32 0, i32 2, !dbg !9514
  %97 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log96, align 4, !dbg !9514, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %95, %struct.ngx_log_s* %97, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i32 0, i32 0), %struct.ngx_str_t* %name), !dbg !9514
  br label %if.end97, !dbg !9514

if.end97:                                         ; preds = %if.then94, %if.then88
  %98 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9518, !tbaa !820
  %data98 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9519
  %99 = load i8*, i8** %data98, align 4, !dbg !9519, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %98, i8* %99), !dbg !9520
  br label %failed, !dbg !9521

if.end99:                                         ; preds = %lor.lhs.false85
  %100 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9522, !tbaa !820
  %query100 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %100, i32 0, i32 6, !dbg !9523
  %101 = load i8*, i8** %query100, align 4, !dbg !9523, !tbaa !2440
  %arrayidx101 = getelementptr inbounds i8, i8* %101, i32 0, !dbg !9522
  %102 = load i8, i8* %arrayidx101, align 1, !dbg !9522, !tbaa !1828
  %conv102 = zext i8 %102 to i32, !dbg !9522
  %shl103 = shl i32 %conv102, 8, !dbg !9524
  %103 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9525, !tbaa !820
  %query104 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %103, i32 0, i32 6, !dbg !9526
  %104 = load i8*, i8** %query104, align 4, !dbg !9526, !tbaa !2440
  %arrayidx105 = getelementptr inbounds i8, i8* %104, i32 1, !dbg !9525
  %105 = load i8, i8* %arrayidx105, align 1, !dbg !9525, !tbaa !1828
  %conv106 = zext i8 %105 to i32, !dbg !9525
  %add107 = add nsw i32 %shl103, %conv106, !dbg !9527
  store i32 %add107, i32* %qident, align 4, !dbg !9528, !tbaa !827
  %106 = load i32, i32* %ident.addr, align 4, !dbg !9529, !tbaa !827
  %107 = load i32, i32* %qident, align 4, !dbg !9531, !tbaa !827
  %cmp108 = icmp ne i32 %106, %107, !dbg !9532
  br i1 %cmp108, label %if.then110, label %if.end121, !dbg !9533

if.then110:                                       ; preds = %if.end99
  %108 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9534, !tbaa !820
  %log111 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %108, i32 0, i32 2, !dbg !9534
  %109 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log111, align 4, !dbg !9534, !tbaa !965
  %log_level112 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %109, i32 0, i32 0, !dbg !9534
  %110 = load i32, i32* %log_level112, align 4, !dbg !9534, !tbaa !2999
  %111 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9534, !tbaa !820
  %log_level113 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %111, i32 0, i32 27, !dbg !9534
  %112 = load i32, i32* %log_level113, align 4, !dbg !9534, !tbaa !969
  %cmp114 = icmp uge i32 %110, %112, !dbg !9534
  br i1 %cmp114, label %if.then116, label %if.end119, !dbg !9537

if.then116:                                       ; preds = %if.then110
  %113 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9534, !tbaa !820
  %log_level117 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %113, i32 0, i32 27, !dbg !9534
  %114 = load i32, i32* %log_level117, align 4, !dbg !9534, !tbaa !969
  %115 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9534, !tbaa !820
  %log118 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %115, i32 0, i32 2, !dbg !9534
  %116 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log118, align 4, !dbg !9534, !tbaa !965
  %117 = load i32, i32* %ident.addr, align 4, !dbg !9534, !tbaa !827
  %118 = load i32, i32* %qident, align 4, !dbg !9534, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %114, %struct.ngx_log_s* %116, i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i32 0, i32 0), i32 %117, %struct.ngx_str_t* %name, i32 %118), !dbg !9534
  br label %if.end119, !dbg !9534

if.end119:                                        ; preds = %if.then116, %if.then110
  %119 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9538, !tbaa !820
  %data120 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9539
  %120 = load i8*, i8** %data120, align 4, !dbg !9539, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %119, i8* %120), !dbg !9540
  br label %failed, !dbg !9541

if.end121:                                        ; preds = %if.end99
  %121 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9542, !tbaa !820
  %data122 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9543
  %122 = load i8*, i8** %data122, align 4, !dbg !9543, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %121, i8* %122), !dbg !9544
  %123 = load i32, i32* %code.addr, align 4, !dbg !9545, !tbaa !827
  %cmp123 = icmp eq i32 %123, 0, !dbg !9547
  br i1 %cmp123, label %land.lhs.true, label %if.end128, !dbg !9548

land.lhs.true:                                    ; preds = %if.end121
  %124 = load i32, i32* %nan.addr, align 4, !dbg !9549, !tbaa !827
  %cmp125 = icmp eq i32 %124, 0, !dbg !9550
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !9551

if.then127:                                       ; preds = %land.lhs.true
  store i32 3, i32* %code.addr, align 4, !dbg !9552, !tbaa !827
  br label %if.end128, !dbg !9554

if.end128:                                        ; preds = %if.then127, %land.lhs.true, %if.end121
  %125 = load i32, i32* %code.addr, align 4, !dbg !9555, !tbaa !827
  %tobool = icmp ne i32 %125, 0, !dbg !9555
  br i1 %tobool, label %if.then129, label %if.end146, !dbg !9557

if.then129:                                       ; preds = %if.end128
  %126 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9558, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %126, i32 0, i32 20, !dbg !9560
  %127 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !9560, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %127, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9561, !tbaa !820
  %128 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9562, !tbaa !820
  %waiting130 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %128, i32 0, i32 20, !dbg !9563
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting130, align 4, !dbg !9564, !tbaa !2182
  %129 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9565, !tbaa !820
  %queue = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %129, i32 0, i32 1, !dbg !9565
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue, i32 0, i32 0, !dbg !9565
  %130 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !9565, !tbaa !904
  %131 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9565, !tbaa !820
  %queue131 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %131, i32 0, i32 1, !dbg !9565
  %next132 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue131, i32 0, i32 1, !dbg !9565
  %132 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next132, align 4, !dbg !9565, !tbaa !905
  %prev133 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %132, i32 0, i32 0, !dbg !9565
  store %struct.ngx_queue_s* %130, %struct.ngx_queue_s** %prev133, align 4, !dbg !9565, !tbaa !904
  %133 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9565, !tbaa !820
  %queue134 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %133, i32 0, i32 1, !dbg !9565
  %next135 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue134, i32 0, i32 1, !dbg !9565
  %134 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next135, align 4, !dbg !9565, !tbaa !905
  %135 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9565, !tbaa !820
  %queue136 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %135, i32 0, i32 1, !dbg !9565
  %prev137 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue136, i32 0, i32 0, !dbg !9565
  %136 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev137, align 4, !dbg !9565, !tbaa !904
  %next138 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %136, i32 0, i32 1, !dbg !9565
  store %struct.ngx_queue_s* %134, %struct.ngx_queue_s** %next138, align 4, !dbg !9565, !tbaa !905
  %137 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree, align 4, !dbg !9566, !tbaa !820
  %138 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9567, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %138, i32 0, i32 0, !dbg !9568
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %137, %struct.ngx_rbtree_node_s* %node), !dbg !9569
  br label %while.cond, !dbg !9570

while.cond:                                       ; preds = %cond.end, %if.then129
  %139 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9571, !tbaa !820
  %tobool139 = icmp ne %struct.ngx_resolver_ctx_s* %139, null, !dbg !9570
  br i1 %tobool139, label %while.body, label %while.end, !dbg !9570

while.body:                                       ; preds = %while.cond
  %140 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9572, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %140, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9574, !tbaa !820
  %141 = load i32, i32* %code.addr, align 4, !dbg !9575, !tbaa !827
  %142 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9576, !tbaa !820
  %state = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %142, i32 0, i32 4, !dbg !9577
  store i32 %141, i32* %state, align 4, !dbg !9578, !tbaa !1703
  %143 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9579, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %143, i32 0, i32 0, !dbg !9579
  %144 = load volatile i32, i32* %sec, align 4, !dbg !9579, !tbaa !2123
  %145 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9580, !tbaa !820
  %valid140 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %145, i32 0, i32 26, !dbg !9581
  %146 = load i32, i32* %valid140, align 4, !dbg !9581, !tbaa !958
  %tobool141 = icmp ne i32 %146, 0, !dbg !9580
  br i1 %tobool141, label %cond.true, label %cond.false, !dbg !9580

cond.true:                                        ; preds = %while.body
  %147 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9582, !tbaa !820
  %valid142 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %147, i32 0, i32 26, !dbg !9583
  %148 = load i32, i32* %valid142, align 4, !dbg !9583, !tbaa !958
  br label %cond.end, !dbg !9580

cond.false:                                       ; preds = %while.body
  br label %cond.end, !dbg !9580

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %148, %cond.true ], [ 10, %cond.false ], !dbg !9580
  %add143 = add nsw i32 %144, %cond, !dbg !9584
  %149 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9585, !tbaa !820
  %valid144 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %149, i32 0, i32 7, !dbg !9586
  store i32 %add143, i32* %valid144, align 4, !dbg !9587, !tbaa !2201
  %150 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9588, !tbaa !820
  %next145 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %150, i32 0, i32 0, !dbg !9589
  %151 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next145, align 4, !dbg !9589, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %151, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9590, !tbaa !820
  %152 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9591, !tbaa !820
  %handler = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %152, i32 0, i32 15, !dbg !9592
  %153 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler, align 4, !dbg !9592, !tbaa !1844
  %154 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9593, !tbaa !820
  call void %153(%struct.ngx_resolver_ctx_s* %154), !dbg !9591
  br label %while.cond, !dbg !9570, !llvm.loop !9594

while.end:                                        ; preds = %while.cond
  %155 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9596, !tbaa !820
  %156 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9597, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %155, %struct.ngx_resolver_node_t* %156), !dbg !9598
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9599

if.end146:                                        ; preds = %if.end128
  %157 = load i32, i32* %i, align 4, !dbg !9600, !tbaa !827
  %add147 = add i32 %157, 4, !dbg !9600
  store i32 %add147, i32* %i, align 4, !dbg !9600, !tbaa !827
  store i32 0, i32* %a, align 4, !dbg !9601, !tbaa !827
  br label %for.cond148, !dbg !9603

for.cond148:                                      ; preds = %for.inc242, %if.end146
  %158 = load i32, i32* %a, align 4, !dbg !9604, !tbaa !827
  %159 = load i32, i32* %nan.addr, align 4, !dbg !9606, !tbaa !827
  %cmp149 = icmp ult i32 %158, %159, !dbg !9607
  br i1 %cmp149, label %for.body151, label %for.end244, !dbg !9608

for.body151:                                      ; preds = %for.cond148
  %160 = load i32, i32* %i, align 4, !dbg !9609, !tbaa !827
  store i32 %160, i32* %start, align 4, !dbg !9611, !tbaa !827
  br label %while.cond152, !dbg !9612

while.cond152:                                    ; preds = %if.end168, %for.body151
  %161 = load i32, i32* %i, align 4, !dbg !9613, !tbaa !827
  %162 = load i32, i32* %n.addr, align 4, !dbg !9614, !tbaa !827
  %cmp153 = icmp ult i32 %161, %162, !dbg !9615
  br i1 %cmp153, label %while.body155, label %while.end173, !dbg !9612

while.body155:                                    ; preds = %while.cond152
  %163 = load i8*, i8** %buf.addr, align 4, !dbg !9616, !tbaa !820
  %164 = load i32, i32* %i, align 4, !dbg !9619, !tbaa !827
  %arrayidx156 = getelementptr inbounds i8, i8* %163, i32 %164, !dbg !9616
  %165 = load i8, i8* %arrayidx156, align 1, !dbg !9616, !tbaa !1828
  %conv157 = zext i8 %165 to i32, !dbg !9616
  %and = and i32 %conv157, 192, !dbg !9620
  %tobool158 = icmp ne i32 %and, 0, !dbg !9620
  br i1 %tobool158, label %if.then159, label %if.end161, !dbg !9621

if.then159:                                       ; preds = %while.body155
  %166 = load i32, i32* %i, align 4, !dbg !9622, !tbaa !827
  %add160 = add i32 %166, 2, !dbg !9622
  store i32 %add160, i32* %i, align 4, !dbg !9622, !tbaa !827
  br label %found, !dbg !9624

if.end161:                                        ; preds = %while.body155
  %167 = load i8*, i8** %buf.addr, align 4, !dbg !9625, !tbaa !820
  %168 = load i32, i32* %i, align 4, !dbg !9627, !tbaa !827
  %arrayidx162 = getelementptr inbounds i8, i8* %167, i32 %168, !dbg !9625
  %169 = load i8, i8* %arrayidx162, align 1, !dbg !9625, !tbaa !1828
  %conv163 = zext i8 %169 to i32, !dbg !9625
  %cmp164 = icmp eq i32 %conv163, 0, !dbg !9628
  br i1 %cmp164, label %if.then166, label %if.end168, !dbg !9629

if.then166:                                       ; preds = %if.end161
  %170 = load i32, i32* %i, align 4, !dbg !9630, !tbaa !827
  %inc167 = add i32 %170, 1, !dbg !9630
  store i32 %inc167, i32* %i, align 4, !dbg !9630, !tbaa !827
  br label %test_length, !dbg !9632

if.end168:                                        ; preds = %if.end161
  %171 = load i8*, i8** %buf.addr, align 4, !dbg !9633, !tbaa !820
  %172 = load i32, i32* %i, align 4, !dbg !9634, !tbaa !827
  %arrayidx169 = getelementptr inbounds i8, i8* %171, i32 %172, !dbg !9633
  %173 = load i8, i8* %arrayidx169, align 1, !dbg !9633, !tbaa !1828
  %conv170 = zext i8 %173 to i32, !dbg !9633
  %add171 = add nsw i32 1, %conv170, !dbg !9635
  %174 = load i32, i32* %i, align 4, !dbg !9636, !tbaa !827
  %add172 = add i32 %174, %add171, !dbg !9636
  store i32 %add172, i32* %i, align 4, !dbg !9636, !tbaa !827
  br label %while.cond152, !dbg !9612, !llvm.loop !9637

while.end173:                                     ; preds = %while.cond152
  br label %short_response, !dbg !9639

test_length:                                      ; preds = %if.then166
  %175 = load i32, i32* %i, align 4, !dbg !9640, !tbaa !827
  %176 = load i32, i32* %start, align 4, !dbg !9642, !tbaa !827
  %sub = sub i32 %175, %176, !dbg !9643
  %cmp174 = icmp ult i32 %sub, 2, !dbg !9644
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !9645

if.then176:                                       ; preds = %test_length
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8** %err, align 4, !dbg !9646, !tbaa !820
  br label %invalid, !dbg !9648

if.end177:                                        ; preds = %test_length
  br label %found, !dbg !9649

found:                                            ; preds = %if.end177, %if.then159
  %177 = load i32, i32* %i, align 4, !dbg !9650, !tbaa !827
  %add178 = add i32 %177, 10, !dbg !9652
  %178 = load i32, i32* %n.addr, align 4, !dbg !9653, !tbaa !827
  %cmp179 = icmp uge i32 %add178, %178, !dbg !9654
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !9655

if.then181:                                       ; preds = %found
  br label %short_response, !dbg !9656

if.end182:                                        ; preds = %found
  %179 = load i8*, i8** %buf.addr, align 4, !dbg !9658, !tbaa !820
  %180 = load i32, i32* %i, align 4, !dbg !9659, !tbaa !827
  %arrayidx183 = getelementptr inbounds i8, i8* %179, i32 %180, !dbg !9658
  %181 = bitcast i8* %arrayidx183 to %struct.ngx_resolver_an_t*, !dbg !9660
  store %struct.ngx_resolver_an_t* %181, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9661, !tbaa !820
  %182 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9662, !tbaa !820
  %type_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %182, i32 0, i32 0, !dbg !9663
  %183 = load i8, i8* %type_hi, align 1, !dbg !9663, !tbaa !7838
  %conv184 = zext i8 %183 to i32, !dbg !9662
  %shl185 = shl i32 %conv184, 8, !dbg !9664
  %184 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9665, !tbaa !820
  %type_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %184, i32 0, i32 1, !dbg !9666
  %185 = load i8, i8* %type_lo, align 1, !dbg !9666, !tbaa !7843
  %conv186 = zext i8 %185 to i32, !dbg !9665
  %add187 = add nsw i32 %shl185, %conv186, !dbg !9667
  store i32 %add187, i32* %type, align 4, !dbg !9668, !tbaa !827
  %186 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9669, !tbaa !820
  %class_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %186, i32 0, i32 2, !dbg !9670
  %187 = load i8, i8* %class_hi, align 1, !dbg !9670, !tbaa !7848
  %conv188 = zext i8 %187 to i32, !dbg !9669
  %shl189 = shl i32 %conv188, 8, !dbg !9671
  %188 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9672, !tbaa !820
  %class_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %188, i32 0, i32 3, !dbg !9673
  %189 = load i8, i8* %class_lo, align 1, !dbg !9673, !tbaa !7852
  %conv190 = zext i8 %189 to i32, !dbg !9672
  %add191 = add nsw i32 %shl189, %conv190, !dbg !9674
  store i32 %add191, i32* %class, align 4, !dbg !9675, !tbaa !827
  %190 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9676, !tbaa !820
  %len_hi = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %190, i32 0, i32 5, !dbg !9677
  %191 = load i8, i8* %len_hi, align 1, !dbg !9677, !tbaa !7857
  %conv192 = zext i8 %191 to i32, !dbg !9676
  %shl193 = shl i32 %conv192, 8, !dbg !9678
  %192 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9679, !tbaa !820
  %len_lo = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %192, i32 0, i32 6, !dbg !9680
  %193 = load i8, i8* %len_lo, align 1, !dbg !9680, !tbaa !7861
  %conv194 = zext i8 %193 to i32, !dbg !9679
  %add195 = add nsw i32 %shl193, %conv194, !dbg !9681
  store i32 %add195, i32* %len, align 4, !dbg !9682, !tbaa !827
  %194 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9683, !tbaa !820
  %ttl196 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %194, i32 0, i32 4, !dbg !9684
  %arrayidx197 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl196, i32 0, i32 0, !dbg !9683
  %195 = load i8, i8* %arrayidx197, align 1, !dbg !9683, !tbaa !1828
  %conv198 = zext i8 %195 to i32, !dbg !9683
  %shl199 = shl i32 %conv198, 24, !dbg !9685
  %196 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9686, !tbaa !820
  %ttl200 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %196, i32 0, i32 4, !dbg !9687
  %arrayidx201 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl200, i32 0, i32 1, !dbg !9686
  %197 = load i8, i8* %arrayidx201, align 1, !dbg !9686, !tbaa !1828
  %conv202 = zext i8 %197 to i32, !dbg !9686
  %shl203 = shl i32 %conv202, 16, !dbg !9688
  %add204 = add nsw i32 %shl199, %shl203, !dbg !9689
  %198 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9690, !tbaa !820
  %ttl205 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %198, i32 0, i32 4, !dbg !9691
  %arrayidx206 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl205, i32 0, i32 2, !dbg !9690
  %199 = load i8, i8* %arrayidx206, align 1, !dbg !9690, !tbaa !1828
  %conv207 = zext i8 %199 to i32, !dbg !9690
  %shl208 = shl i32 %conv207, 8, !dbg !9692
  %add209 = add nsw i32 %add204, %shl208, !dbg !9693
  %200 = load %struct.ngx_resolver_an_t*, %struct.ngx_resolver_an_t** %an, align 4, !dbg !9694, !tbaa !820
  %ttl210 = getelementptr inbounds %struct.ngx_resolver_an_t, %struct.ngx_resolver_an_t* %200, i32 0, i32 4, !dbg !9695
  %arrayidx211 = getelementptr inbounds [4 x i8], [4 x i8]* %ttl210, i32 0, i32 3, !dbg !9694
  %201 = load i8, i8* %arrayidx211, align 1, !dbg !9694, !tbaa !1828
  %conv212 = zext i8 %201 to i32, !dbg !9696
  %add213 = add nsw i32 %add209, %conv212, !dbg !9697
  store i32 %add213, i32* %ttl, align 4, !dbg !9698, !tbaa !827
  %202 = load i32, i32* %class, align 4, !dbg !9699, !tbaa !827
  %cmp214 = icmp ne i32 %202, 1, !dbg !9701
  br i1 %cmp214, label %if.then216, label %if.end226, !dbg !9702

if.then216:                                       ; preds = %if.end182
  %203 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9703, !tbaa !820
  %log217 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %203, i32 0, i32 2, !dbg !9703
  %204 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log217, align 4, !dbg !9703, !tbaa !965
  %log_level218 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %204, i32 0, i32 0, !dbg !9703
  %205 = load i32, i32* %log_level218, align 4, !dbg !9703, !tbaa !2999
  %206 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9703, !tbaa !820
  %log_level219 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %206, i32 0, i32 27, !dbg !9703
  %207 = load i32, i32* %log_level219, align 4, !dbg !9703, !tbaa !969
  %cmp220 = icmp uge i32 %205, %207, !dbg !9703
  br i1 %cmp220, label %if.then222, label %if.end225, !dbg !9706

if.then222:                                       ; preds = %if.then216
  %208 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9703, !tbaa !820
  %log_level223 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %208, i32 0, i32 27, !dbg !9703
  %209 = load i32, i32* %log_level223, align 4, !dbg !9703, !tbaa !969
  %210 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9703, !tbaa !820
  %log224 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %210, i32 0, i32 2, !dbg !9703
  %211 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log224, align 4, !dbg !9703, !tbaa !965
  %212 = load i32, i32* %class, align 4, !dbg !9703, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %209, %struct.ngx_log_s* %211, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), i32 %212), !dbg !9703
  br label %if.end225, !dbg !9703

if.end225:                                        ; preds = %if.then222, %if.then216
  br label %failed, !dbg !9707

if.end226:                                        ; preds = %if.end182
  %213 = load i32, i32* %ttl, align 4, !dbg !9708, !tbaa !827
  %cmp227 = icmp slt i32 %213, 0, !dbg !9710
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !9711

if.then229:                                       ; preds = %if.end226
  store i32 0, i32* %ttl, align 4, !dbg !9712, !tbaa !827
  br label %if.end230, !dbg !9714

if.end230:                                        ; preds = %if.then229, %if.end226
  %214 = load i32, i32* %i, align 4, !dbg !9715, !tbaa !827
  %add231 = add i32 %214, 10, !dbg !9715
  store i32 %add231, i32* %i, align 4, !dbg !9715, !tbaa !827
  %215 = load i32, i32* %type, align 4, !dbg !9716, !tbaa !827
  switch i32 %215, label %sw.default [
    i32 12, label %sw.bb
    i32 5, label %sw.epilog
  ], !dbg !9717

sw.bb:                                            ; preds = %if.end230
  br label %ptr, !dbg !9718

sw.default:                                       ; preds = %if.end230
  %216 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9720, !tbaa !820
  %log232 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %216, i32 0, i32 2, !dbg !9720
  %217 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log232, align 4, !dbg !9720, !tbaa !965
  %log_level233 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %217, i32 0, i32 0, !dbg !9720
  %218 = load i32, i32* %log_level233, align 4, !dbg !9720, !tbaa !2999
  %219 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9720, !tbaa !820
  %log_level234 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %219, i32 0, i32 27, !dbg !9720
  %220 = load i32, i32* %log_level234, align 4, !dbg !9720, !tbaa !969
  %cmp235 = icmp uge i32 %218, %220, !dbg !9720
  br i1 %cmp235, label %if.then237, label %if.end240, !dbg !9722

if.then237:                                       ; preds = %sw.default
  %221 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9720, !tbaa !820
  %log_level238 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %221, i32 0, i32 27, !dbg !9720
  %222 = load i32, i32* %log_level238, align 4, !dbg !9720, !tbaa !969
  %223 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9720, !tbaa !820
  %log239 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %223, i32 0, i32 2, !dbg !9720
  %224 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log239, align 4, !dbg !9720, !tbaa !965
  %225 = load i32, i32* %type, align 4, !dbg !9720, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %222, %struct.ngx_log_s* %224, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i32 %225), !dbg !9720
  br label %if.end240, !dbg !9720

if.end240:                                        ; preds = %if.then237, %sw.default
  br label %sw.epilog, !dbg !9723

sw.epilog:                                        ; preds = %if.end240, %if.end230
  %226 = load i32, i32* %len, align 4, !dbg !9724, !tbaa !827
  %227 = load i32, i32* %i, align 4, !dbg !9725, !tbaa !827
  %add241 = add i32 %227, %226, !dbg !9725
  store i32 %add241, i32* %i, align 4, !dbg !9725, !tbaa !827
  br label %for.inc242, !dbg !9726

for.inc242:                                       ; preds = %sw.epilog
  %228 = load i32, i32* %a, align 4, !dbg !9727, !tbaa !827
  %inc243 = add i32 %228, 1, !dbg !9727
  store i32 %inc243, i32* %a, align 4, !dbg !9727, !tbaa !827
  br label %for.cond148, !dbg !9728, !llvm.loop !9729

for.end244:                                       ; preds = %for.cond148
  %229 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9731, !tbaa !820
  %log245 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %229, i32 0, i32 2, !dbg !9731
  %230 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log245, align 4, !dbg !9731, !tbaa !965
  %log_level246 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %230, i32 0, i32 0, !dbg !9731
  %231 = load i32, i32* %log_level246, align 4, !dbg !9731, !tbaa !2999
  %232 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9731, !tbaa !820
  %log_level247 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %232, i32 0, i32 27, !dbg !9731
  %233 = load i32, i32* %log_level247, align 4, !dbg !9731, !tbaa !969
  %cmp248 = icmp uge i32 %231, %233, !dbg !9731
  br i1 %cmp248, label %if.then250, label %if.end253, !dbg !9733

if.then250:                                       ; preds = %for.end244
  %234 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9731, !tbaa !820
  %log_level251 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %234, i32 0, i32 27, !dbg !9731
  %235 = load i32, i32* %log_level251, align 4, !dbg !9731, !tbaa !969
  %236 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9731, !tbaa !820
  %log252 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %236, i32 0, i32 2, !dbg !9731
  %237 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log252, align 4, !dbg !9731, !tbaa !965
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %235, %struct.ngx_log_s* %237, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i32 0, i32 0)), !dbg !9731
  br label %if.end253, !dbg !9731

if.end253:                                        ; preds = %if.then250, %for.end244
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9734

ptr:                                              ; preds = %sw.bb
  %238 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9735, !tbaa !820
  %239 = load i8*, i8** %buf.addr, align 4, !dbg !9737, !tbaa !820
  %240 = load i8*, i8** %buf.addr, align 4, !dbg !9738, !tbaa !820
  %241 = load i32, i32* %i, align 4, !dbg !9739, !tbaa !827
  %add.ptr254 = getelementptr inbounds i8, i8* %240, i32 %241, !dbg !9740
  %242 = load i8*, i8** %buf.addr, align 4, !dbg !9741, !tbaa !820
  %243 = load i32, i32* %n.addr, align 4, !dbg !9742, !tbaa !827
  %add.ptr255 = getelementptr inbounds i8, i8* %242, i32 %243, !dbg !9743
  %call256 = call i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %238, %struct.ngx_str_t* %name, i8* %239, i8* %add.ptr254, i8* %add.ptr255), !dbg !9744
  %cmp257 = icmp ne i32 %call256, 0, !dbg !9745
  br i1 %cmp257, label %if.then259, label %if.end260, !dbg !9746

if.then259:                                       ; preds = %ptr
  br label %failed, !dbg !9747

if.end260:                                        ; preds = %ptr
  %len261 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !9749
  %244 = load i32, i32* %len261, align 4, !dbg !9749, !tbaa !1005
  %245 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9751, !tbaa !820
  %nlen = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %245, i32 0, i32 4, !dbg !9752
  %246 = load i16, i16* %nlen, align 4, !dbg !9752, !tbaa !1365
  %conv262 = zext i16 %246 to i32, !dbg !9753
  %cmp263 = icmp ne i32 %244, %conv262, !dbg !9754
  br i1 %cmp263, label %if.then272, label %lor.lhs.false265, !dbg !9755

lor.lhs.false265:                                 ; preds = %if.end260
  %data266 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9756
  %247 = load i8*, i8** %data266, align 4, !dbg !9756, !tbaa !997
  %248 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9756, !tbaa !820
  %name267 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %248, i32 0, i32 2, !dbg !9756
  %249 = load i8*, i8** %name267, align 4, !dbg !9756, !tbaa !1358
  %len268 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !9756
  %250 = load i32, i32* %len268, align 4, !dbg !9756, !tbaa !1005
  %call269 = call i32 @strncmp(i8* %247, i8* %249, i32 %250), !dbg !9756
  %cmp270 = icmp ne i32 %call269, 0, !dbg !9757
  br i1 %cmp270, label %if.then272, label %if.end292, !dbg !9758

if.then272:                                       ; preds = %lor.lhs.false265, %if.end260
  %251 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9759, !tbaa !820
  %nlen273 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %251, i32 0, i32 4, !dbg !9762
  %252 = load i16, i16* %nlen273, align 4, !dbg !9762, !tbaa !1365
  %tobool274 = icmp ne i16 %252, 0, !dbg !9759
  br i1 %tobool274, label %if.then275, label %if.end277, !dbg !9763

if.then275:                                       ; preds = %if.then272
  %253 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9764, !tbaa !820
  %254 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9766, !tbaa !820
  %name276 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %254, i32 0, i32 2, !dbg !9767
  %255 = load i8*, i8** %name276, align 4, !dbg !9767, !tbaa !1358
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %253, i8* %255), !dbg !9768
  br label %if.end277, !dbg !9769

if.end277:                                        ; preds = %if.then275, %if.then272
  %len278 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !9770
  %256 = load i32, i32* %len278, align 4, !dbg !9770, !tbaa !1005
  %conv279 = trunc i32 %256 to i16, !dbg !9771
  %257 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9772, !tbaa !820
  %nlen280 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %257, i32 0, i32 4, !dbg !9773
  store i16 %conv279, i16* %nlen280, align 4, !dbg !9774, !tbaa !1365
  %data281 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9775
  %258 = load i8*, i8** %data281, align 4, !dbg !9775, !tbaa !997
  %259 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9776, !tbaa !820
  %name282 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %259, i32 0, i32 2, !dbg !9777
  store i8* %258, i8** %name282, align 4, !dbg !9778, !tbaa !1358
  %260 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9779, !tbaa !820
  %261 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9780, !tbaa !820
  %name283 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %261, i32 0, i32 2, !dbg !9781
  %262 = load i8*, i8** %name283, align 4, !dbg !9781, !tbaa !1358
  %len284 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 0, !dbg !9782
  %263 = load i32, i32* %len284, align 4, !dbg !9782, !tbaa !1005
  %call285 = call i8* @ngx_resolver_dup(%struct.ngx_resolver_s* %260, i8* %262, i32 %263), !dbg !9783
  %data286 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9784
  store i8* %call285, i8** %data286, align 4, !dbg !9785, !tbaa !997
  %data287 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9786
  %264 = load i8*, i8** %data287, align 4, !dbg !9786, !tbaa !997
  %cmp288 = icmp eq i8* %264, null, !dbg !9788
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !9789

if.then290:                                       ; preds = %if.end277
  br label %failed, !dbg !9790

if.end291:                                        ; preds = %if.end277
  br label %if.end292, !dbg !9792

if.end292:                                        ; preds = %if.end291, %lor.lhs.false265
  %265 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9793, !tbaa !820
  %queue293 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %265, i32 0, i32 1, !dbg !9793
  %prev294 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue293, i32 0, i32 0, !dbg !9793
  %266 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev294, align 4, !dbg !9793, !tbaa !904
  %267 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9793, !tbaa !820
  %queue295 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %267, i32 0, i32 1, !dbg !9793
  %next296 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue295, i32 0, i32 1, !dbg !9793
  %268 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next296, align 4, !dbg !9793, !tbaa !905
  %prev297 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %268, i32 0, i32 0, !dbg !9793
  store %struct.ngx_queue_s* %266, %struct.ngx_queue_s** %prev297, align 4, !dbg !9793, !tbaa !904
  %269 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9793, !tbaa !820
  %queue298 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %269, i32 0, i32 1, !dbg !9793
  %next299 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue298, i32 0, i32 1, !dbg !9793
  %270 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next299, align 4, !dbg !9793, !tbaa !905
  %271 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9793, !tbaa !820
  %queue300 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %271, i32 0, i32 1, !dbg !9793
  %prev301 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue300, i32 0, i32 0, !dbg !9793
  %272 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev301, align 4, !dbg !9793, !tbaa !904
  %next302 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %272, i32 0, i32 1, !dbg !9793
  store %struct.ngx_queue_s* %270, %struct.ngx_queue_s** %next302, align 4, !dbg !9793, !tbaa !905
  %273 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9794, !tbaa !820
  %sec303 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %273, i32 0, i32 0, !dbg !9794
  %274 = load volatile i32, i32* %sec303, align 4, !dbg !9794, !tbaa !2123
  %275 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9795, !tbaa !820
  %valid304 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %275, i32 0, i32 26, !dbg !9796
  %276 = load i32, i32* %valid304, align 4, !dbg !9796, !tbaa !958
  %tobool305 = icmp ne i32 %276, 0, !dbg !9795
  br i1 %tobool305, label %cond.true306, label %cond.false308, !dbg !9795

cond.true306:                                     ; preds = %if.end292
  %277 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9797, !tbaa !820
  %valid307 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %277, i32 0, i32 26, !dbg !9798
  %278 = load i32, i32* %valid307, align 4, !dbg !9798, !tbaa !958
  br label %cond.end309, !dbg !9795

cond.false308:                                    ; preds = %if.end292
  %279 = load i32, i32* %ttl, align 4, !dbg !9799, !tbaa !827
  br label %cond.end309, !dbg !9795

cond.end309:                                      ; preds = %cond.false308, %cond.true306
  %cond310 = phi i32 [ %278, %cond.true306 ], [ %279, %cond.false308 ], !dbg !9795
  %add311 = add nsw i32 %274, %cond310, !dbg !9800
  %280 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9801, !tbaa !820
  %valid312 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %280, i32 0, i32 16, !dbg !9802
  store i32 %add311, i32* %valid312, align 4, !dbg !9803, !tbaa !2121
  %281 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !9804, !tbaa !820
  %sec313 = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %281, i32 0, i32 0, !dbg !9804
  %282 = load volatile i32, i32* %sec313, align 4, !dbg !9804, !tbaa !2123
  %283 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9805, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %283, i32 0, i32 25, !dbg !9806
  %284 = load i32, i32* %expire, align 4, !dbg !9806, !tbaa !954
  %add314 = add nsw i32 %282, %284, !dbg !9807
  %285 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9808, !tbaa !820
  %expire315 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %285, i32 0, i32 15, !dbg !9809
  store i32 %add314, i32* %expire315, align 4, !dbg !9810, !tbaa !2136
  %286 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !9811, !tbaa !820
  %next316 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %286, i32 0, i32 1, !dbg !9811
  %287 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next316, align 4, !dbg !9811, !tbaa !905
  %288 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9811, !tbaa !820
  %queue317 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %288, i32 0, i32 1, !dbg !9811
  %next318 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue317, i32 0, i32 1, !dbg !9811
  store %struct.ngx_queue_s* %287, %struct.ngx_queue_s** %next318, align 4, !dbg !9811, !tbaa !905
  %289 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9811, !tbaa !820
  %queue319 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %289, i32 0, i32 1, !dbg !9811
  %290 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9811, !tbaa !820
  %queue320 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %290, i32 0, i32 1, !dbg !9811
  %next321 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue320, i32 0, i32 1, !dbg !9811
  %291 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next321, align 4, !dbg !9811, !tbaa !905
  %prev322 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %291, i32 0, i32 0, !dbg !9811
  store %struct.ngx_queue_s* %queue319, %struct.ngx_queue_s** %prev322, align 4, !dbg !9811, !tbaa !904
  %292 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !9811, !tbaa !820
  %293 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9811, !tbaa !820
  %queue323 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %293, i32 0, i32 1, !dbg !9811
  %prev324 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %queue323, i32 0, i32 0, !dbg !9811
  store %struct.ngx_queue_s* %292, %struct.ngx_queue_s** %prev324, align 4, !dbg !9811, !tbaa !904
  %294 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9811, !tbaa !820
  %queue325 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %294, i32 0, i32 1, !dbg !9811
  %295 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %expire_queue, align 4, !dbg !9811, !tbaa !820
  %next326 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %295, i32 0, i32 1, !dbg !9811
  store %struct.ngx_queue_s* %queue325, %struct.ngx_queue_s** %next326, align 4, !dbg !9811, !tbaa !905
  %296 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9812, !tbaa !820
  %waiting327 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %296, i32 0, i32 20, !dbg !9813
  %297 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting327, align 4, !dbg !9813, !tbaa !2182
  store %struct.ngx_resolver_ctx_s* %297, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9814, !tbaa !820
  %298 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9815, !tbaa !820
  %waiting328 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %298, i32 0, i32 20, !dbg !9816
  store %struct.ngx_resolver_ctx_s* null, %struct.ngx_resolver_ctx_s** %waiting328, align 4, !dbg !9817, !tbaa !2182
  br label %while.cond329, !dbg !9818

while.cond329:                                    ; preds = %while.body331, %cond.end309
  %299 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9819, !tbaa !820
  %tobool330 = icmp ne %struct.ngx_resolver_ctx_s* %299, null, !dbg !9818
  br i1 %tobool330, label %while.body331, label %while.end338, !dbg !9818

while.body331:                                    ; preds = %while.cond329
  %300 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9820, !tbaa !820
  store %struct.ngx_resolver_ctx_s* %300, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9822, !tbaa !820
  %301 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9823, !tbaa !820
  %state332 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %301, i32 0, i32 4, !dbg !9824
  store i32 0, i32* %state332, align 4, !dbg !9825, !tbaa !1703
  %302 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !9826, !tbaa !820
  %valid333 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %302, i32 0, i32 16, !dbg !9827
  %303 = load i32, i32* %valid333, align 4, !dbg !9827, !tbaa !2121
  %304 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9828, !tbaa !820
  %valid334 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %304, i32 0, i32 7, !dbg !9829
  store i32 %303, i32* %valid334, align 4, !dbg !9830, !tbaa !2201
  %305 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9831, !tbaa !820
  %name335 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %305, i32 0, i32 5, !dbg !9832
  %306 = bitcast %struct.ngx_str_t* %name335 to i8*, !dbg !9833
  %307 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !9833
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %306, i8* %307, i32 8, i32 4, i1 false), !dbg !9833, !tbaa.struct !1065
  %308 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9834, !tbaa !820
  %next336 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %308, i32 0, i32 0, !dbg !9835
  %309 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %next336, align 4, !dbg !9835, !tbaa !2110
  store %struct.ngx_resolver_ctx_s* %309, %struct.ngx_resolver_ctx_s** %next, align 4, !dbg !9836, !tbaa !820
  %310 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9837, !tbaa !820
  %handler337 = getelementptr inbounds %struct.ngx_resolver_ctx_s, %struct.ngx_resolver_ctx_s* %310, i32 0, i32 15, !dbg !9838
  %311 = load void (%struct.ngx_resolver_ctx_s*)*, void (%struct.ngx_resolver_ctx_s*)** %handler337, align 4, !dbg !9838, !tbaa !1844
  %312 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %ctx, align 4, !dbg !9839, !tbaa !820
  call void %311(%struct.ngx_resolver_ctx_s* %312), !dbg !9837
  br label %while.cond329, !dbg !9818, !llvm.loop !9840

while.end338:                                     ; preds = %while.cond329
  %313 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9842, !tbaa !820
  %data339 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %name, i32 0, i32 1, !dbg !9843
  %314 = load i8*, i8** %data339, align 4, !dbg !9843, !tbaa !997
  call void @ngx_resolver_free(%struct.ngx_resolver_s* %313, i8* %314), !dbg !9844
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9845

short_response:                                   ; preds = %if.then181, %while.end173
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8** %err, align 4, !dbg !9846, !tbaa !820
  br label %invalid, !dbg !9847

invalid:                                          ; preds = %short_response, %if.then176
  %315 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9848, !tbaa !820
  %log340 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %315, i32 0, i32 2, !dbg !9848
  %316 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log340, align 4, !dbg !9848, !tbaa !965
  %log_level341 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %316, i32 0, i32 0, !dbg !9848
  %317 = load i32, i32* %log_level341, align 4, !dbg !9848, !tbaa !2999
  %318 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9848, !tbaa !820
  %log_level342 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %318, i32 0, i32 27, !dbg !9848
  %319 = load i32, i32* %log_level342, align 4, !dbg !9848, !tbaa !969
  %cmp343 = icmp uge i32 %317, %319, !dbg !9848
  br i1 %cmp343, label %if.then345, label %if.end348, !dbg !9850

if.then345:                                       ; preds = %invalid
  %320 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9848, !tbaa !820
  %log_level346 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %320, i32 0, i32 27, !dbg !9848
  %321 = load i32, i32* %log_level346, align 4, !dbg !9848, !tbaa !969
  %322 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9848, !tbaa !820
  %log347 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %322, i32 0, i32 2, !dbg !9848
  %323 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log347, align 4, !dbg !9848, !tbaa !965
  %324 = load i8*, i8** %err, align 4, !dbg !9848, !tbaa !820
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %321, %struct.ngx_log_s* %323, i32 0, i8* %324), !dbg !9848
  br label %if.end348, !dbg !9848

if.end348:                                        ; preds = %if.then345, %invalid
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9851

failed:                                           ; preds = %if.then290, %if.then259, %if.end225, %if.end119, %if.end97
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9852

cleanup:                                          ; preds = %failed, %if.end348, %while.end338, %if.end253, %while.end, %if.end82, %if.then
  %325 = bitcast %struct.in6_addr* %addr6 to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 16, i8* %325) #5, !dbg !9853
  %326 = bitcast i32* %digit to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %326) #5, !dbg !9853
  %327 = bitcast i32* %hash to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %327) #5, !dbg !9853
  %328 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %328) #5, !dbg !9853
  %329 = bitcast %struct.ngx_resolver_ctx_s** %next to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %329) #5, !dbg !9853
  %330 = bitcast %struct.ngx_resolver_ctx_s** %ctx to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %330) #5, !dbg !9853
  %331 = bitcast %struct.ngx_resolver_an_t** %an to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %331) #5, !dbg !9853
  %332 = bitcast %struct.ngx_rbtree_s** %tree to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %332) #5, !dbg !9853
  %333 = bitcast %struct.ngx_queue_s** %expire_queue to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %333) #5, !dbg !9853
  %334 = bitcast i32* %start to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %334) #5, !dbg !9853
  %335 = bitcast i32* %i to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %335) #5, !dbg !9853
  %336 = bitcast i32* %a to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %336) #5, !dbg !9853
  %337 = bitcast i32* %qident to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %337) #5, !dbg !9853
  %338 = bitcast i32* %class to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %338) #5, !dbg !9853
  %339 = bitcast i32* %type to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %339) #5, !dbg !9853
  %340 = bitcast i32* %mask to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %340) #5, !dbg !9853
  %341 = bitcast %struct.ngx_str_t* %name to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 8, i8* %341) #5, !dbg !9853
  %342 = bitcast i32* %octet to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %342) #5, !dbg !9853
  %343 = bitcast i32* %ttl to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %343) #5, !dbg !9853
  %344 = bitcast i32* %addr to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %344) #5, !dbg !9853
  %345 = bitcast i32* %len to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %345) #5, !dbg !9853
  %346 = bitcast i8** %err to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 4, i8* %346) #5, !dbg !9853
  ret void, !dbg !9853
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_copy(%struct.ngx_resolver_s* %r, %struct.ngx_str_t* %name, i8* %buf, i8* %src, i8* %last) #0 !dbg !9854 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %name.addr = alloca %struct.ngx_str_t*, align 4
  %buf.addr = alloca i8*, align 4
  %src.addr = alloca i8*, align 4
  %last.addr = alloca i8*, align 4
  %err = alloca i8*, align 4
  %p = alloca i8*, align 4
  %dst = alloca i8*, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !9858, metadata !824), !dbg !9869
  store %struct.ngx_str_t* %name, %struct.ngx_str_t** %name.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_str_t** %name.addr, metadata !9859, metadata !824), !dbg !9870
  store i8* %buf, i8** %buf.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9860, metadata !824), !dbg !9871
  store i8* %src, i8** %src.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !9861, metadata !824), !dbg !9872
  store i8* %last, i8** %last.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %last.addr, metadata !9862, metadata !824), !dbg !9873
  %0 = bitcast i8** %err to i8*, !dbg !9874
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !9874
  call void @llvm.dbg.declare(metadata i8** %err, metadata !9863, metadata !824), !dbg !9875
  %1 = bitcast i8** %p to i8*, !dbg !9876
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !9876
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9864, metadata !824), !dbg !9877
  %2 = bitcast i8** %dst to i8*, !dbg !9876
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !9876
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !9865, metadata !824), !dbg !9878
  %3 = bitcast i32* %len to i8*, !dbg !9879
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !9879
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9866, metadata !824), !dbg !9880
  %4 = bitcast i32* %i to i8*, !dbg !9881
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !9881
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9867, metadata !824), !dbg !9882
  %5 = bitcast i32* %n to i8*, !dbg !9881
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !9881
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9868, metadata !824), !dbg !9883
  %6 = load i8*, i8** %src.addr, align 4, !dbg !9884, !tbaa !820
  store i8* %6, i8** %p, align 4, !dbg !9885, !tbaa !820
  store i32 -1, i32* %len, align 4, !dbg !9886, !tbaa !827
  store i32 0, i32* %i, align 4, !dbg !9887, !tbaa !827
  br label %for.cond, !dbg !9889

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !9890, !tbaa !827
  %cmp = icmp ult i32 %7, 128, !dbg !9892
  br i1 %cmp, label %for.body, label %for.end, !dbg !9893

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %p, align 4, !dbg !9894, !tbaa !820
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9894
  store i8* %incdec.ptr, i8** %p, align 4, !dbg !9894, !tbaa !820
  %9 = load i8, i8* %8, align 1, !dbg !9896, !tbaa !1828
  %conv = zext i8 %9 to i32, !dbg !9896
  store i32 %conv, i32* %n, align 4, !dbg !9897, !tbaa !827
  %10 = load i32, i32* %n, align 4, !dbg !9898, !tbaa !827
  %cmp1 = icmp eq i32 %10, 0, !dbg !9900
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9901

if.then:                                          ; preds = %for.body
  br label %done, !dbg !9902

if.end:                                           ; preds = %for.body
  %11 = load i32, i32* %n, align 4, !dbg !9904, !tbaa !827
  %and = and i32 %11, 192, !dbg !9906
  %tobool = icmp ne i32 %and, 0, !dbg !9906
  br i1 %tobool, label %if.then3, label %if.else, !dbg !9907

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %n, align 4, !dbg !9908, !tbaa !827
  %and4 = and i32 %12, 63, !dbg !9910
  %shl = shl i32 %and4, 8, !dbg !9911
  %13 = load i8*, i8** %p, align 4, !dbg !9912, !tbaa !820
  %14 = load i8, i8* %13, align 1, !dbg !9913, !tbaa !1828
  %conv5 = zext i8 %14 to i32, !dbg !9913
  %add = add i32 %shl, %conv5, !dbg !9914
  store i32 %add, i32* %n, align 4, !dbg !9915, !tbaa !827
  %15 = load i8*, i8** %buf.addr, align 4, !dbg !9916, !tbaa !820
  %16 = load i32, i32* %n, align 4, !dbg !9917, !tbaa !827
  %arrayidx = getelementptr inbounds i8, i8* %15, i32 %16, !dbg !9916
  store i8* %arrayidx, i8** %p, align 4, !dbg !9918, !tbaa !820
  br label %if.end9, !dbg !9919

if.else:                                          ; preds = %if.end
  %17 = load i32, i32* %n, align 4, !dbg !9920, !tbaa !827
  %add6 = add i32 1, %17, !dbg !9922
  %18 = load i32, i32* %len, align 4, !dbg !9923, !tbaa !827
  %add7 = add i32 %18, %add6, !dbg !9923
  store i32 %add7, i32* %len, align 4, !dbg !9923, !tbaa !827
  %19 = load i8*, i8** %p, align 4, !dbg !9924, !tbaa !820
  %20 = load i32, i32* %n, align 4, !dbg !9925, !tbaa !827
  %arrayidx8 = getelementptr inbounds i8, i8* %19, i32 %20, !dbg !9924
  store i8* %arrayidx8, i8** %p, align 4, !dbg !9926, !tbaa !820
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  %21 = load i8*, i8** %p, align 4, !dbg !9927, !tbaa !820
  %22 = load i8*, i8** %last.addr, align 4, !dbg !9929, !tbaa !820
  %cmp10 = icmp uge i8* %21, %22, !dbg !9930
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9931

if.then12:                                        ; preds = %if.end9
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i32 0, i32 0), i8** %err, align 4, !dbg !9932, !tbaa !820
  br label %invalid, !dbg !9934

if.end13:                                         ; preds = %if.end9
  br label %for.inc, !dbg !9935

for.inc:                                          ; preds = %if.end13
  %23 = load i32, i32* %i, align 4, !dbg !9936, !tbaa !827
  %inc = add i32 %23, 1, !dbg !9936
  store i32 %inc, i32* %i, align 4, !dbg !9936, !tbaa !827
  br label %for.cond, !dbg !9937, !llvm.loop !9938

for.end:                                          ; preds = %for.cond
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.46, i32 0, i32 0), i8** %err, align 4, !dbg !9940, !tbaa !820
  br label %invalid, !dbg !9941

invalid:                                          ; preds = %for.end, %if.then12
  %24 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9942, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %24, i32 0, i32 2, !dbg !9942
  %25 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log, align 4, !dbg !9942, !tbaa !965
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %25, i32 0, i32 0, !dbg !9942
  %26 = load i32, i32* %log_level, align 4, !dbg !9942, !tbaa !2999
  %27 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9942, !tbaa !820
  %log_level14 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %27, i32 0, i32 27, !dbg !9942
  %28 = load i32, i32* %log_level14, align 4, !dbg !9942, !tbaa !969
  %cmp15 = icmp uge i32 %26, %28, !dbg !9942
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !9944

if.then17:                                        ; preds = %invalid
  %29 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9942, !tbaa !820
  %log_level18 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %29, i32 0, i32 27, !dbg !9942
  %30 = load i32, i32* %log_level18, align 4, !dbg !9942, !tbaa !969
  %31 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9942, !tbaa !820
  %log19 = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %31, i32 0, i32 2, !dbg !9942
  %32 = load %struct.ngx_log_s*, %struct.ngx_log_s** %log19, align 4, !dbg !9942, !tbaa !965
  %33 = load i8*, i8** %err, align 4, !dbg !9942, !tbaa !820
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 %30, %struct.ngx_log_s* %32, i32 0, i8* %33), !dbg !9942
  br label %if.end20, !dbg !9942

if.end20:                                         ; preds = %if.then17, %invalid
  store i32 -1, i32* %retval, align 4, !dbg !9945
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9945

done:                                             ; preds = %if.then
  %34 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !9946, !tbaa !820
  %cmp21 = icmp eq %struct.ngx_str_t* %34, null, !dbg !9948
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9949

if.then23:                                        ; preds = %done
  store i32 0, i32* %retval, align 4, !dbg !9950
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9950

if.end24:                                         ; preds = %done
  %35 = load i32, i32* %len, align 4, !dbg !9952, !tbaa !827
  %cmp25 = icmp eq i32 %35, -1, !dbg !9954
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !9955

if.then27:                                        ; preds = %if.end24
  %36 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !9956, !tbaa !820
  %len28 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %36, i32 0, i32 0, !dbg !9956
  store i32 0, i32* %len28, align 4, !dbg !9956, !tbaa !1005
  %37 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !9956, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %37, i32 0, i32 1, !dbg !9956
  store i8* null, i8** %data, align 4, !dbg !9956, !tbaa !997
  store i32 0, i32* %retval, align 4, !dbg !9958
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9958

if.end29:                                         ; preds = %if.end24
  %38 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !9959, !tbaa !820
  %39 = load i32, i32* %len, align 4, !dbg !9960, !tbaa !827
  %call = call i8* @ngx_resolver_alloc(%struct.ngx_resolver_s* %38, i32 %39), !dbg !9961
  store i8* %call, i8** %dst, align 4, !dbg !9962, !tbaa !820
  %40 = load i8*, i8** %dst, align 4, !dbg !9963, !tbaa !820
  %cmp30 = icmp eq i8* %40, null, !dbg !9965
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !9966

if.then32:                                        ; preds = %if.end29
  store i32 -1, i32* %retval, align 4, !dbg !9967
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9967

if.end33:                                         ; preds = %if.end29
  %41 = load i8*, i8** %dst, align 4, !dbg !9969, !tbaa !820
  %42 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !9970, !tbaa !820
  %data34 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %42, i32 0, i32 1, !dbg !9971
  store i8* %41, i8** %data34, align 4, !dbg !9972, !tbaa !997
  %43 = load i8*, i8** %src.addr, align 4, !dbg !9973, !tbaa !820
  %incdec.ptr35 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !9973
  store i8* %incdec.ptr35, i8** %src.addr, align 4, !dbg !9973, !tbaa !820
  %44 = load i8, i8* %43, align 1, !dbg !9974, !tbaa !1828
  %conv36 = zext i8 %44 to i32, !dbg !9974
  store i32 %conv36, i32* %n, align 4, !dbg !9975, !tbaa !827
  br label %for.cond37, !dbg !9976

for.cond37:                                       ; preds = %if.end63, %if.end33
  %45 = load i32, i32* %n, align 4, !dbg !9977, !tbaa !827
  %and38 = and i32 %45, 192, !dbg !9982
  %tobool39 = icmp ne i32 %and38, 0, !dbg !9982
  br i1 %tobool39, label %if.then40, label %if.else48, !dbg !9983

if.then40:                                        ; preds = %for.cond37
  %46 = load i32, i32* %n, align 4, !dbg !9984, !tbaa !827
  %and41 = and i32 %46, 63, !dbg !9986
  %shl42 = shl i32 %and41, 8, !dbg !9987
  %47 = load i8*, i8** %src.addr, align 4, !dbg !9988, !tbaa !820
  %48 = load i8, i8* %47, align 1, !dbg !9989, !tbaa !1828
  %conv43 = zext i8 %48 to i32, !dbg !9989
  %add44 = add i32 %shl42, %conv43, !dbg !9990
  store i32 %add44, i32* %n, align 4, !dbg !9991, !tbaa !827
  %49 = load i8*, i8** %buf.addr, align 4, !dbg !9992, !tbaa !820
  %50 = load i32, i32* %n, align 4, !dbg !9993, !tbaa !827
  %arrayidx45 = getelementptr inbounds i8, i8* %49, i32 %50, !dbg !9992
  store i8* %arrayidx45, i8** %src.addr, align 4, !dbg !9994, !tbaa !820
  %51 = load i8*, i8** %src.addr, align 4, !dbg !9995, !tbaa !820
  %incdec.ptr46 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !9995
  store i8* %incdec.ptr46, i8** %src.addr, align 4, !dbg !9995, !tbaa !820
  %52 = load i8, i8* %51, align 1, !dbg !9996, !tbaa !1828
  %conv47 = zext i8 %52 to i32, !dbg !9996
  store i32 %conv47, i32* %n, align 4, !dbg !9997, !tbaa !827
  br label %if.end57, !dbg !9998

if.else48:                                        ; preds = %for.cond37
  %53 = load i8*, i8** %dst, align 4, !dbg !9999, !tbaa !820
  %54 = load i8*, i8** %src.addr, align 4, !dbg !10001, !tbaa !820
  %55 = load i32, i32* %n, align 4, !dbg !10002, !tbaa !827
  call void @ngx_strlow(i8* %53, i8* %54, i32 %55), !dbg !10003
  %56 = load i32, i32* %n, align 4, !dbg !10004, !tbaa !827
  %57 = load i8*, i8** %dst, align 4, !dbg !10005, !tbaa !820
  %add.ptr = getelementptr inbounds i8, i8* %57, i32 %56, !dbg !10005
  store i8* %add.ptr, i8** %dst, align 4, !dbg !10005, !tbaa !820
  %58 = load i32, i32* %n, align 4, !dbg !10006, !tbaa !827
  %59 = load i8*, i8** %src.addr, align 4, !dbg !10007, !tbaa !820
  %add.ptr49 = getelementptr inbounds i8, i8* %59, i32 %58, !dbg !10007
  store i8* %add.ptr49, i8** %src.addr, align 4, !dbg !10007, !tbaa !820
  %60 = load i8*, i8** %src.addr, align 4, !dbg !10008, !tbaa !820
  %incdec.ptr50 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !10008
  store i8* %incdec.ptr50, i8** %src.addr, align 4, !dbg !10008, !tbaa !820
  %61 = load i8, i8* %60, align 1, !dbg !10009, !tbaa !1828
  %conv51 = zext i8 %61 to i32, !dbg !10009
  store i32 %conv51, i32* %n, align 4, !dbg !10010, !tbaa !827
  %62 = load i32, i32* %n, align 4, !dbg !10011, !tbaa !827
  %cmp52 = icmp ne i32 %62, 0, !dbg !10013
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !10014

if.then54:                                        ; preds = %if.else48
  %63 = load i8*, i8** %dst, align 4, !dbg !10015, !tbaa !820
  %incdec.ptr55 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !10015
  store i8* %incdec.ptr55, i8** %dst, align 4, !dbg !10015, !tbaa !820
  store i8 46, i8* %63, align 1, !dbg !10017, !tbaa !1828
  br label %if.end56, !dbg !10018

if.end56:                                         ; preds = %if.then54, %if.else48
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then40
  %64 = load i32, i32* %n, align 4, !dbg !10019, !tbaa !827
  %cmp58 = icmp eq i32 %64, 0, !dbg !10021
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !10022

if.then60:                                        ; preds = %if.end57
  %65 = load i8*, i8** %dst, align 4, !dbg !10023, !tbaa !820
  %66 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !10025, !tbaa !820
  %data61 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %66, i32 0, i32 1, !dbg !10026
  %67 = load i8*, i8** %data61, align 4, !dbg !10026, !tbaa !997
  %sub.ptr.lhs.cast = ptrtoint i8* %65 to i32, !dbg !10027
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i32, !dbg !10027
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10027
  %68 = load %struct.ngx_str_t*, %struct.ngx_str_t** %name.addr, align 4, !dbg !10028, !tbaa !820
  %len62 = getelementptr inbounds %struct.ngx_str_t, %struct.ngx_str_t* %68, i32 0, i32 0, !dbg !10029
  store i32 %sub.ptr.sub, i32* %len62, align 4, !dbg !10030, !tbaa !1005
  store i32 0, i32* %retval, align 4, !dbg !10031
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10031

if.end63:                                         ; preds = %if.end57
  br label %for.cond37, !dbg !10032, !llvm.loop !10033

cleanup:                                          ; preds = %if.then60, %if.then32, %if.then27, %if.then23, %if.end20
  %69 = bitcast i32* %n to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %69) #5, !dbg !10036
  %70 = bitcast i32* %i to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %70) #5, !dbg !10036
  %71 = bitcast i32* %len to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %71) #5, !dbg !10036
  %72 = bitcast i8** %dst to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %72) #5, !dbg !10036
  %73 = bitcast i8** %p to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %73) #5, !dbg !10036
  %74 = bitcast i8** %err to i8*, !dbg !10036
  call void @llvm.lifetime.end(i64 4, i8* %74) #5, !dbg !10036
  %75 = load i32, i32* %retval, align 4, !dbg !10036
  ret i32 %75, !dbg !10036
}

declare i32 @htonl(i32) #3

declare void @ngx_sort(i8*, i32, i32, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
define internal i32 @ngx_resolver_cmp_srvs(i8* %one, i8* %two) #0 !dbg !10037 {
entry:
  %one.addr = alloca i8*, align 4
  %two.addr = alloca i8*, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %first = alloca %struct.ngx_resolver_srv_t*, align 4
  %second = alloca %struct.ngx_resolver_srv_t*, align 4
  store i8* %one, i8** %one.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %one.addr, metadata !10043, metadata !824), !dbg !10049
  store i8* %two, i8** %two.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata i8** %two.addr, metadata !10044, metadata !824), !dbg !10050
  %0 = bitcast i32* %p1 to i8*, !dbg !10051
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !10045, metadata !824), !dbg !10052
  %1 = bitcast i32* %p2 to i8*, !dbg !10051
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !10051
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !10046, metadata !824), !dbg !10053
  %2 = bitcast %struct.ngx_resolver_srv_t** %first to i8*, !dbg !10054
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_t** %first, metadata !10047, metadata !824), !dbg !10055
  %3 = bitcast %struct.ngx_resolver_srv_t** %second to i8*, !dbg !10054
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_srv_t** %second, metadata !10048, metadata !824), !dbg !10056
  %4 = load i8*, i8** %one.addr, align 4, !dbg !10057, !tbaa !820
  %5 = bitcast i8* %4 to %struct.ngx_resolver_srv_t*, !dbg !10058
  store %struct.ngx_resolver_srv_t* %5, %struct.ngx_resolver_srv_t** %first, align 4, !dbg !10059, !tbaa !820
  %6 = load i8*, i8** %two.addr, align 4, !dbg !10060, !tbaa !820
  %7 = bitcast i8* %6 to %struct.ngx_resolver_srv_t*, !dbg !10061
  store %struct.ngx_resolver_srv_t* %7, %struct.ngx_resolver_srv_t** %second, align 4, !dbg !10062, !tbaa !820
  %8 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %first, align 4, !dbg !10063, !tbaa !820
  %priority = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %8, i32 0, i32 1, !dbg !10064
  %9 = load i16, i16* %priority, align 4, !dbg !10064, !tbaa !5186
  %conv = zext i16 %9 to i32, !dbg !10063
  store i32 %conv, i32* %p1, align 4, !dbg !10065, !tbaa !827
  %10 = load %struct.ngx_resolver_srv_t*, %struct.ngx_resolver_srv_t** %second, align 4, !dbg !10066, !tbaa !820
  %priority1 = getelementptr inbounds %struct.ngx_resolver_srv_t, %struct.ngx_resolver_srv_t* %10, i32 0, i32 1, !dbg !10067
  %11 = load i16, i16* %priority1, align 4, !dbg !10067, !tbaa !5186
  %conv2 = zext i16 %11 to i32, !dbg !10066
  store i32 %conv2, i32* %p2, align 4, !dbg !10068, !tbaa !827
  %12 = load i32, i32* %p1, align 4, !dbg !10069, !tbaa !827
  %13 = load i32, i32* %p2, align 4, !dbg !10070, !tbaa !827
  %sub = sub nsw i32 %12, %13, !dbg !10071
  %14 = bitcast %struct.ngx_resolver_srv_t** %second to i8*, !dbg !10072
  call void @llvm.lifetime.end(i64 4, i8* %14) #5, !dbg !10072
  %15 = bitcast %struct.ngx_resolver_srv_t** %first to i8*, !dbg !10072
  call void @llvm.lifetime.end(i64 4, i8* %15) #5, !dbg !10072
  %16 = bitcast i32* %p2 to i8*, !dbg !10072
  call void @llvm.lifetime.end(i64 4, i8* %16) #5, !dbg !10072
  %17 = bitcast i32* %p1 to i8*, !dbg !10072
  call void @llvm.lifetime.end(i64 4, i8* %17) #5, !dbg !10072
  ret i32 %sub, !dbg !10073
}

declare i32 @ngx_atoi(i8*, i32) #3

declare i32 @ngx_strcasecmp(i8*, i8*) #3

declare i32 @ngx_hextoi(i8*, i32) #3

; Function Attrs: nounwind
define internal i32 @ngx_udp_connect(%struct.ngx_resolver_connection_t* %rec) #0 !dbg !10074 {
entry:
  %retval = alloca i32, align 4
  %rec.addr = alloca %struct.ngx_resolver_connection_t*, align 4
  %rc = alloca i32, align 4
  %event = alloca i32, align 4
  %rev = alloca %struct.ngx_event_s*, align 4
  %wev = alloca %struct.ngx_event_s*, align 4
  %s = alloca i32, align 4
  %c = alloca %struct.ngx_connection_s*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_connection_t* %rec, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec.addr, metadata !10076, metadata !824), !dbg !10083
  %0 = bitcast i32* %rc to i8*, !dbg !10084
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !10084
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10077, metadata !824), !dbg !10085
  %1 = bitcast i32* %event to i8*, !dbg !10086
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !10086
  call void @llvm.dbg.declare(metadata i32* %event, metadata !10078, metadata !824), !dbg !10087
  %2 = bitcast %struct.ngx_event_s** %rev to i8*, !dbg !10088
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !10088
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %rev, metadata !10079, metadata !824), !dbg !10089
  %3 = bitcast %struct.ngx_event_s** %wev to i8*, !dbg !10088
  call void @llvm.lifetime.start(i64 4, i8* %3) #5, !dbg !10088
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %wev, metadata !10080, metadata !824), !dbg !10090
  %4 = bitcast i32* %s to i8*, !dbg !10091
  call void @llvm.lifetime.start(i64 4, i8* %4) #5, !dbg !10091
  call void @llvm.dbg.declare(metadata i32* %s, metadata !10081, metadata !824), !dbg !10092
  %5 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !10093
  call void @llvm.lifetime.start(i64 4, i8* %5) #5, !dbg !10093
  call void @llvm.dbg.declare(metadata %struct.ngx_connection_s** %c, metadata !10082, metadata !824), !dbg !10094
  %6 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10095, !tbaa !820
  %sockaddr = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %6, i32 0, i32 2, !dbg !10096
  %7 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr, align 4, !dbg !10096, !tbaa !1123
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %7, i32 0, i32 0, !dbg !10097
  %8 = load i16, i16* %sa_family, align 2, !dbg !10097, !tbaa !3192
  %conv = zext i16 %8 to i32, !dbg !10095
  %call = call i32 @socket(i32 %conv, i32 2, i32 0), !dbg !10098
  store i32 %call, i32* %s, align 4, !dbg !10099, !tbaa !827
  %9 = load i32, i32* %s, align 4, !dbg !10100, !tbaa !827
  %cmp = icmp eq i32 %9, -1, !dbg !10102
  br i1 %cmp, label %if.then, label %if.end7, !dbg !10103

if.then:                                          ; preds = %entry
  %10 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10104, !tbaa !820
  %log = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %10, i32 0, i32 5, !dbg !10104
  %log_level = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log, i32 0, i32 0, !dbg !10104
  %11 = load i32, i32* %log_level, align 4, !dbg !10104, !tbaa !2999
  %cmp2 = icmp uge i32 %11, 2, !dbg !10104
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !10107

if.then4:                                         ; preds = %if.then
  %12 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10104, !tbaa !820
  %log5 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %12, i32 0, i32 5, !dbg !10104
  %call6 = call i32* @__errno_location(), !dbg !10104
  %13 = load i32, i32* %call6, align 4, !dbg !10104, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log5, i32 %13, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i32 0, i32 0)), !dbg !10104
  br label %if.end, !dbg !10104

if.end:                                           ; preds = %if.then4, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !10108
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10108

if.end7:                                          ; preds = %entry
  %14 = load i32, i32* %s, align 4, !dbg !10109, !tbaa !827
  %15 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10110, !tbaa !820
  %log8 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %15, i32 0, i32 5, !dbg !10111
  %call9 = call %struct.ngx_connection_s* @ngx_get_connection(i32 %14, %struct.ngx_log_s* %log8), !dbg !10112
  store %struct.ngx_connection_s* %call9, %struct.ngx_connection_s** %c, align 4, !dbg !10113, !tbaa !820
  %16 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10114, !tbaa !820
  %cmp10 = icmp eq %struct.ngx_connection_s* %16, null, !dbg !10116
  br i1 %cmp10, label %if.then12, label %if.end26, !dbg !10117

if.then12:                                        ; preds = %if.end7
  %17 = load i32, i32* %s, align 4, !dbg !10118, !tbaa !827
  %call13 = call i32 @close(i32 %17), !dbg !10121
  %cmp14 = icmp eq i32 %call13, -1, !dbg !10122
  br i1 %cmp14, label %if.then16, label %if.end25, !dbg !10123

if.then16:                                        ; preds = %if.then12
  %18 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10124, !tbaa !820
  %log17 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %18, i32 0, i32 5, !dbg !10124
  %log_level18 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log17, i32 0, i32 0, !dbg !10124
  %19 = load i32, i32* %log_level18, align 4, !dbg !10124, !tbaa !2999
  %cmp19 = icmp uge i32 %19, 2, !dbg !10124
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !10127

if.then21:                                        ; preds = %if.then16
  %20 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10124, !tbaa !820
  %log22 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %20, i32 0, i32 5, !dbg !10124
  %call23 = call i32* @__errno_location(), !dbg !10124
  %21 = load i32, i32* %call23, align 4, !dbg !10124, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log22, i32 %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0)), !dbg !10124
  br label %if.end24, !dbg !10124

if.end24:                                         ; preds = %if.then21, %if.then16
  br label %if.end25, !dbg !10128

if.end25:                                         ; preds = %if.end24, %if.then12
  store i32 -1, i32* %retval, align 4, !dbg !10129
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10129

if.end26:                                         ; preds = %if.end7
  %22 = load i32, i32* %s, align 4, !dbg !10130, !tbaa !827
  %call27 = call i32 @ngx_nonblocking(i32 %22), !dbg !10132
  %cmp28 = icmp eq i32 %call27, -1, !dbg !10133
  br i1 %cmp28, label %if.then30, label %if.end39, !dbg !10134

if.then30:                                        ; preds = %if.end26
  %23 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10135, !tbaa !820
  %log31 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %23, i32 0, i32 5, !dbg !10135
  %log_level32 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log31, i32 0, i32 0, !dbg !10135
  %24 = load i32, i32* %log_level32, align 4, !dbg !10135, !tbaa !2999
  %cmp33 = icmp uge i32 %24, 2, !dbg !10135
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !10138

if.then35:                                        ; preds = %if.then30
  %25 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10135, !tbaa !820
  %log36 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %25, i32 0, i32 5, !dbg !10135
  %call37 = call i32* @__errno_location(), !dbg !10135
  %26 = load i32, i32* %call37, align 4, !dbg !10135, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 2, %struct.ngx_log_s* %log36, i32 %26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0)), !dbg !10135
  br label %if.end38, !dbg !10135

if.end38:                                         ; preds = %if.then35, %if.then30
  br label %failed, !dbg !10139

if.end39:                                         ; preds = %if.end26
  %27 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10140, !tbaa !820
  %read = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %27, i32 0, i32 1, !dbg !10141
  %28 = load %struct.ngx_event_s*, %struct.ngx_event_s** %read, align 4, !dbg !10141, !tbaa !6395
  store %struct.ngx_event_s* %28, %struct.ngx_event_s** %rev, align 4, !dbg !10142, !tbaa !820
  %29 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10143, !tbaa !820
  %write = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %29, i32 0, i32 2, !dbg !10144
  %30 = load %struct.ngx_event_s*, %struct.ngx_event_s** %write, align 4, !dbg !10144, !tbaa !6389
  store %struct.ngx_event_s* %30, %struct.ngx_event_s** %wev, align 4, !dbg !10145, !tbaa !820
  %31 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10146, !tbaa !820
  %log40 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %31, i32 0, i32 5, !dbg !10147
  %32 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev, align 4, !dbg !10148, !tbaa !820
  %log41 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %32, i32 0, i32 4, !dbg !10149
  store %struct.ngx_log_s* %log40, %struct.ngx_log_s** %log41, align 4, !dbg !10150, !tbaa !938
  %33 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10151, !tbaa !820
  %log42 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %33, i32 0, i32 5, !dbg !10152
  %34 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !10153, !tbaa !820
  %log43 = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %34, i32 0, i32 4, !dbg !10154
  store %struct.ngx_log_s* %log42, %struct.ngx_log_s** %log43, align 4, !dbg !10155, !tbaa !938
  %35 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10156, !tbaa !820
  %36 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10157, !tbaa !820
  %udp = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %36, i32 0, i32 0, !dbg !10158
  store %struct.ngx_connection_s* %35, %struct.ngx_connection_s** %udp, align 4, !dbg !10159, !tbaa !1236
  %37 = load i32*, i32** @ngx_connection_counter, align 4, !dbg !10160, !tbaa !820
  %38 = atomicrmw add i32* %37, i32 1 seq_cst, !dbg !10160
  %39 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10161, !tbaa !820
  %number = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %39, i32 0, i32 22, !dbg !10162
  store i32 %38, i32* %number, align 4, !dbg !10163, !tbaa !6627
  %40 = load i32, i32* %s, align 4, !dbg !10164, !tbaa !827
  %41 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10165, !tbaa !820
  %sockaddr44 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %41, i32 0, i32 2, !dbg !10166
  %42 = load %struct.sockaddr*, %struct.sockaddr** %sockaddr44, align 4, !dbg !10166, !tbaa !1123
  %43 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10167, !tbaa !820
  %socklen = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %43, i32 0, i32 3, !dbg !10168
  %44 = load i32, i32* %socklen, align 4, !dbg !10168, !tbaa !1135
  %call45 = call i32 @connect(i32 %40, %struct.sockaddr* %42, i32 %44), !dbg !10169
  store i32 %call45, i32* %rc, align 4, !dbg !10170, !tbaa !827
  %45 = load i32, i32* %rc, align 4, !dbg !10171, !tbaa !827
  %cmp46 = icmp eq i32 %45, -1, !dbg !10173
  br i1 %cmp46, label %if.then48, label %if.end57, !dbg !10174

if.then48:                                        ; preds = %if.end39
  %46 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10175, !tbaa !820
  %log49 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %46, i32 0, i32 5, !dbg !10175
  %log_level50 = getelementptr inbounds %struct.ngx_log_s, %struct.ngx_log_s* %log49, i32 0, i32 0, !dbg !10175
  %47 = load i32, i32* %log_level50, align 4, !dbg !10175, !tbaa !2999
  %cmp51 = icmp uge i32 %47, 3, !dbg !10175
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !10178

if.then53:                                        ; preds = %if.then48
  %48 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10175, !tbaa !820
  %log54 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %48, i32 0, i32 5, !dbg !10175
  %call55 = call i32* @__errno_location(), !dbg !10175
  %49 = load i32, i32* %call55, align 4, !dbg !10175, !tbaa !827
  call void (i32, %struct.ngx_log_s*, i32, i8*, ...) @ngx_log_error_core(i32 3, %struct.ngx_log_s* %log54, i32 %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0)), !dbg !10175
  br label %if.end56, !dbg !10175

if.end56:                                         ; preds = %if.then53, %if.then48
  br label %failed, !dbg !10179

if.end57:                                         ; preds = %if.end39
  %50 = load %struct.ngx_event_s*, %struct.ngx_event_s** %wev, align 4, !dbg !10180, !tbaa !820
  %ready = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %50, i32 0, i32 1, !dbg !10181
  %51 = bitcast i24* %ready to i32*, !dbg !10181
  %bf.load = load i32, i32* %51, align 4, !dbg !10182
  %bf.clear = and i32 %bf.load, -33, !dbg !10182
  %bf.set = or i32 %bf.clear, 32, !dbg !10182
  store i32 %bf.set, i32* %51, align 4, !dbg !10182
  %52 = load i32, i32* @ngx_event_flags, align 4, !dbg !10183, !tbaa !827
  %and = and i32 %52, 4, !dbg !10184
  %tobool = icmp ne i32 %and, 0, !dbg !10185
  %cond = select i1 %tobool, i32 0, i32 0, !dbg !10185
  store i32 %cond, i32* %event, align 4, !dbg !10186, !tbaa !827
  %53 = load i32 (%struct.ngx_event_s*, i32, i32)*, i32 (%struct.ngx_event_s*, i32, i32)** getelementptr inbounds (%struct.ngx_event_actions_t, %struct.ngx_event_actions_t* @ngx_event_actions, i32 0, i32 0), align 4, !dbg !10187, !tbaa !6746
  %54 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev, align 4, !dbg !10189, !tbaa !820
  %55 = load i32, i32* %event, align 4, !dbg !10190, !tbaa !827
  %call58 = call i32 %53(%struct.ngx_event_s* %54, i32 0, i32 %55), !dbg !10187
  %cmp59 = icmp ne i32 %call58, 0, !dbg !10191
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !10192

if.then61:                                        ; preds = %if.end57
  br label %failed, !dbg !10193

if.end62:                                         ; preds = %if.end57
  store i32 0, i32* %retval, align 4, !dbg !10195
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10195

failed:                                           ; preds = %if.then61, %if.end56, %if.end38
  %56 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10196, !tbaa !820
  call void @ngx_close_connection(%struct.ngx_connection_s* %56), !dbg !10197
  %57 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec.addr, align 4, !dbg !10198, !tbaa !820
  %udp63 = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %57, i32 0, i32 0, !dbg !10199
  store %struct.ngx_connection_s* null, %struct.ngx_connection_s** %udp63, align 4, !dbg !10200, !tbaa !1236
  store i32 -1, i32* %retval, align 4, !dbg !10201
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10201

cleanup:                                          ; preds = %failed, %if.end62, %if.end25, %if.end
  %58 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %58) #5, !dbg !10202
  %59 = bitcast i32* %s to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %59) #5, !dbg !10202
  %60 = bitcast %struct.ngx_event_s** %wev to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %60) #5, !dbg !10202
  %61 = bitcast %struct.ngx_event_s** %rev to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %61) #5, !dbg !10202
  %62 = bitcast i32* %event to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %62) #5, !dbg !10202
  %63 = bitcast i32* %rc to i8*, !dbg !10202
  call void @llvm.lifetime.end(i64 4, i8* %63) #5, !dbg !10202
  %64 = load i32, i32* %retval, align 4, !dbg !10202
  ret i32 %64, !dbg !10202
}

; Function Attrs: nounwind
define internal void @ngx_resolver_udp_read(%struct.ngx_event_s* %rev) #0 !dbg !10203 {
entry:
  %rev.addr = alloca %struct.ngx_event_s*, align 4
  %n = alloca i32, align 4
  %c = alloca %struct.ngx_connection_s*, align 4
  %rec = alloca %struct.ngx_resolver_connection_t*, align 4
  %buf = alloca [4096 x i8], align 1
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_event_s* %rev, %struct.ngx_event_s** %rev.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_event_s** %rev.addr, metadata !10205, metadata !824), !dbg !10213
  %0 = bitcast i32* %n to i8*, !dbg !10214
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !10214
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10206, metadata !824), !dbg !10215
  %1 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !10216
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !10216
  call void @llvm.dbg.declare(metadata %struct.ngx_connection_s** %c, metadata !10207, metadata !824), !dbg !10217
  %2 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !10218
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !10218
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_connection_t** %rec, metadata !10208, metadata !824), !dbg !10219
  %3 = bitcast [4096 x i8]* %buf to i8*, !dbg !10220
  call void @llvm.lifetime.start(i64 4096, i8* %3) #5, !dbg !10220
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !10209, metadata !824), !dbg !10221
  %4 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev.addr, align 4, !dbg !10222, !tbaa !820
  %data = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %4, i32 0, i32 0, !dbg !10223
  %5 = load i8*, i8** %data, align 4, !dbg !10223, !tbaa !929
  %6 = bitcast i8* %5 to %struct.ngx_connection_s*, !dbg !10222
  store %struct.ngx_connection_s* %6, %struct.ngx_connection_s** %c, align 4, !dbg !10224, !tbaa !820
  %7 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10225, !tbaa !820
  %data1 = getelementptr inbounds %struct.ngx_connection_s, %struct.ngx_connection_s* %7, i32 0, i32 0, !dbg !10226
  %8 = load i8*, i8** %data1, align 4, !dbg !10226, !tbaa !6384
  %9 = bitcast i8* %8 to %struct.ngx_resolver_connection_t*, !dbg !10225
  store %struct.ngx_resolver_connection_t* %9, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !10227, !tbaa !820
  br label %do.body, !dbg !10228, !llvm.loop !10229

do.body:                                          ; preds = %do.cond, %entry
  %10 = load i32 (%struct.ngx_connection_s*, i8*, i32)*, i32 (%struct.ngx_connection_s*, i8*, i32)** getelementptr inbounds (%struct.ngx_os_io_t, %struct.ngx_os_io_t* @ngx_io, i32 0, i32 2), align 4, !dbg !10231, !tbaa !10233
  %11 = load %struct.ngx_connection_s*, %struct.ngx_connection_s** %c, align 4, !dbg !10234, !tbaa !820
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0, !dbg !10235
  %call = call i32 %10(%struct.ngx_connection_s* %11, i8* %arraydecay, i32 4096), !dbg !10231
  store i32 %call, i32* %n, align 4, !dbg !10236, !tbaa !827
  %12 = load i32, i32* %n, align 4, !dbg !10237, !tbaa !827
  %cmp = icmp slt i32 %12, 0, !dbg !10239
  br i1 %cmp, label %if.then, label %if.end, !dbg !10240

if.then:                                          ; preds = %do.body
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10241

if.end:                                           ; preds = %do.body
  %13 = load %struct.ngx_resolver_connection_t*, %struct.ngx_resolver_connection_t** %rec, align 4, !dbg !10243, !tbaa !820
  %resolver = getelementptr inbounds %struct.ngx_resolver_connection_t, %struct.ngx_resolver_connection_t* %13, i32 0, i32 8, !dbg !10244
  %14 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %resolver, align 4, !dbg !10244, !tbaa !1148
  %arraydecay2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0, !dbg !10245
  %15 = load i32, i32* %n, align 4, !dbg !10246, !tbaa !827
  call void @ngx_resolver_process_response(%struct.ngx_resolver_s* %14, i8* %arraydecay2, i32 %15, i32 0), !dbg !10247
  br label %do.cond, !dbg !10248

do.cond:                                          ; preds = %if.end
  %16 = load %struct.ngx_event_s*, %struct.ngx_event_s** %rev.addr, align 4, !dbg !10249, !tbaa !820
  %ready = getelementptr inbounds %struct.ngx_event_s, %struct.ngx_event_s* %16, i32 0, i32 1, !dbg !10250
  %17 = bitcast i24* %ready to i32*, !dbg !10250
  %bf.load = load i32, i32* %17, align 4, !dbg !10250
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !10250
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10250
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !10248
  br i1 %tobool, label %do.body, label %do.end, !dbg !10248, !llvm.loop !10229

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !10251
  br label %cleanup, !dbg !10251

cleanup:                                          ; preds = %do.end, %if.then
  %18 = bitcast [4096 x i8]* %buf to i8*, !dbg !10251
  call void @llvm.lifetime.end(i64 4096, i8* %18) #5, !dbg !10251
  %19 = bitcast %struct.ngx_resolver_connection_t** %rec to i8*, !dbg !10251
  call void @llvm.lifetime.end(i64 4, i8* %19) #5, !dbg !10251
  %20 = bitcast %struct.ngx_connection_s** %c to i8*, !dbg !10251
  call void @llvm.lifetime.end(i64 4, i8* %20) #5, !dbg !10251
  %21 = bitcast i32* %n to i8*, !dbg !10251
  call void @llvm.lifetime.end(i64 4, i8* %21) #5, !dbg !10251
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10251

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
define internal i32 @ngx_resolver_resend(%struct.ngx_resolver_s* %r, %struct.ngx_rbtree_s* %tree, %struct.ngx_queue_s* %queue) #0 !dbg !10252 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.ngx_resolver_s*, align 4
  %tree.addr = alloca %struct.ngx_rbtree_s*, align 4
  %queue.addr = alloca %struct.ngx_queue_s*, align 4
  %now = alloca i32, align 4
  %q = alloca %struct.ngx_queue_s*, align 4
  %rn = alloca %struct.ngx_resolver_node_t*, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.ngx_resolver_s* %r, %struct.ngx_resolver_s** %r.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_s** %r.addr, metadata !10256, metadata !824), !dbg !10262
  store %struct.ngx_rbtree_s* %tree, %struct.ngx_rbtree_s** %tree.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_rbtree_s** %tree.addr, metadata !10257, metadata !824), !dbg !10263
  store %struct.ngx_queue_s* %queue, %struct.ngx_queue_s** %queue.addr, align 4, !tbaa !820
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %queue.addr, metadata !10258, metadata !824), !dbg !10264
  %0 = bitcast i32* %now to i8*, !dbg !10265
  call void @llvm.lifetime.start(i64 4, i8* %0) #5, !dbg !10265
  call void @llvm.dbg.declare(metadata i32* %now, metadata !10259, metadata !824), !dbg !10266
  %1 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !10267
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !10267
  call void @llvm.dbg.declare(metadata %struct.ngx_queue_s** %q, metadata !10260, metadata !824), !dbg !10268
  %2 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !10269
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !10269
  call void @llvm.dbg.declare(metadata %struct.ngx_resolver_node_t** %rn, metadata !10261, metadata !824), !dbg !10270
  %3 = load %struct.ngx_time_t*, %struct.ngx_time_t** @ngx_cached_time, align 4, !dbg !10271, !tbaa !820
  %sec = getelementptr inbounds %struct.ngx_time_t, %struct.ngx_time_t* %3, i32 0, i32 0, !dbg !10271
  %4 = load volatile i32, i32* %sec, align 4, !dbg !10271, !tbaa !2123
  store i32 %4, i32* %now, align 4, !dbg !10272, !tbaa !1529
  br label %for.cond, !dbg !10273

for.cond:                                         ; preds = %if.end23, %if.end15, %entry
  %5 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10274, !tbaa !820
  %6 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10274, !tbaa !820
  %prev = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %6, i32 0, i32 0, !dbg !10274
  %7 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev, align 4, !dbg !10274, !tbaa !904
  %cmp = icmp eq %struct.ngx_queue_s* %5, %7, !dbg !10274
  br i1 %cmp, label %if.then, label %if.end, !dbg !10279

if.then:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10280
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10280

if.end:                                           ; preds = %for.cond
  %8 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10282, !tbaa !820
  %prev1 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %8, i32 0, i32 0, !dbg !10282
  %9 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev1, align 4, !dbg !10282, !tbaa !904
  store %struct.ngx_queue_s* %9, %struct.ngx_queue_s** %q, align 4, !dbg !10283, !tbaa !820
  %10 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10284, !tbaa !820
  %11 = bitcast %struct.ngx_queue_s* %10 to i8*, !dbg !10284
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 -20, !dbg !10284
  %12 = bitcast i8* %add.ptr to %struct.ngx_resolver_node_t*, !dbg !10284
  store %struct.ngx_resolver_node_t* %12, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10285, !tbaa !820
  %13 = load i32, i32* %now, align 4, !dbg !10286, !tbaa !1529
  %14 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10288, !tbaa !820
  %expire = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %14, i32 0, i32 15, !dbg !10289
  %15 = load i32, i32* %expire, align 4, !dbg !10289, !tbaa !2136
  %cmp2 = icmp slt i32 %13, %15, !dbg !10290
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10291

if.then3:                                         ; preds = %if.end
  %16 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10292, !tbaa !820
  %expire4 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %16, i32 0, i32 15, !dbg !10294
  %17 = load i32, i32* %expire4, align 4, !dbg !10294, !tbaa !2136
  %18 = load i32, i32* %now, align 4, !dbg !10295, !tbaa !1529
  %sub = sub nsw i32 %17, %18, !dbg !10296
  store i32 %sub, i32* %retval, align 4, !dbg !10297
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10297

if.end5:                                          ; preds = %if.end
  %19 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10298, !tbaa !820
  %prev6 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %19, i32 0, i32 0, !dbg !10298
  %20 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev6, align 4, !dbg !10298, !tbaa !904
  %21 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10298, !tbaa !820
  %next = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %21, i32 0, i32 1, !dbg !10298
  %22 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next, align 4, !dbg !10298, !tbaa !905
  %prev7 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %22, i32 0, i32 0, !dbg !10298
  store %struct.ngx_queue_s* %20, %struct.ngx_queue_s** %prev7, align 4, !dbg !10298, !tbaa !904
  %23 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10298, !tbaa !820
  %next8 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %23, i32 0, i32 1, !dbg !10298
  %24 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next8, align 4, !dbg !10298, !tbaa !905
  %25 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10298, !tbaa !820
  %prev9 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %25, i32 0, i32 0, !dbg !10298
  %26 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %prev9, align 4, !dbg !10298, !tbaa !904
  %next10 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %26, i32 0, i32 1, !dbg !10298
  store %struct.ngx_queue_s* %24, %struct.ngx_queue_s** %next10, align 4, !dbg !10298, !tbaa !905
  %27 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10299, !tbaa !820
  %waiting = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %27, i32 0, i32 20, !dbg !10301
  %28 = load %struct.ngx_resolver_ctx_s*, %struct.ngx_resolver_ctx_s** %waiting, align 4, !dbg !10301, !tbaa !2182
  %tobool = icmp ne %struct.ngx_resolver_ctx_s* %28, null, !dbg !10299
  br i1 %tobool, label %if.then11, label %if.end23, !dbg !10302

if.then11:                                        ; preds = %if.end5
  %29 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10303, !tbaa !820
  %last_connection = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %29, i32 0, i32 19, !dbg !10306
  %30 = load i32, i32* %last_connection, align 4, !dbg !10307, !tbaa !2666
  %inc = add i32 %30, 1, !dbg !10307
  store i32 %inc, i32* %last_connection, align 4, !dbg !10307, !tbaa !2666
  %31 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !10308, !tbaa !820
  %connections = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %31, i32 0, i32 4, !dbg !10309
  %nelts = getelementptr inbounds %struct.ngx_array_t, %struct.ngx_array_t* %connections, i32 0, i32 1, !dbg !10310
  %32 = load i32, i32* %nelts, align 4, !dbg !10310, !tbaa !1228
  %cmp12 = icmp eq i32 %inc, %32, !dbg !10311
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !10312

if.then13:                                        ; preds = %if.then11
  %33 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10313, !tbaa !820
  %last_connection14 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %33, i32 0, i32 19, !dbg !10315
  store i32 0, i32* %last_connection14, align 4, !dbg !10316, !tbaa !2666
  br label %if.end15, !dbg !10317

if.end15:                                         ; preds = %if.then13, %if.then11
  %34 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !10318, !tbaa !820
  %35 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10319, !tbaa !820
  %call = call i32 @ngx_resolver_send_query(%struct.ngx_resolver_s* %34, %struct.ngx_resolver_node_t* %35), !dbg !10320
  %36 = load i32, i32* %now, align 4, !dbg !10321, !tbaa !1529
  %37 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !10322, !tbaa !820
  %resend_timeout = getelementptr inbounds %struct.ngx_resolver_s, %struct.ngx_resolver_s* %37, i32 0, i32 23, !dbg !10323
  %38 = load i32, i32* %resend_timeout, align 4, !dbg !10323, !tbaa !946
  %add = add nsw i32 %36, %38, !dbg !10324
  %39 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10325, !tbaa !820
  %expire16 = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %39, i32 0, i32 15, !dbg !10326
  store i32 %add, i32* %expire16, align 4, !dbg !10327, !tbaa !2136
  %40 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10328, !tbaa !820
  %next17 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %40, i32 0, i32 1, !dbg !10328
  %41 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next17, align 4, !dbg !10328, !tbaa !905
  %42 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10328, !tbaa !820
  %next18 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %42, i32 0, i32 1, !dbg !10328
  store %struct.ngx_queue_s* %41, %struct.ngx_queue_s** %next18, align 4, !dbg !10328, !tbaa !905
  %43 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10328, !tbaa !820
  %44 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10328, !tbaa !820
  %next19 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %44, i32 0, i32 1, !dbg !10328
  %45 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %next19, align 4, !dbg !10328, !tbaa !905
  %prev20 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %45, i32 0, i32 0, !dbg !10328
  store %struct.ngx_queue_s* %43, %struct.ngx_queue_s** %prev20, align 4, !dbg !10328, !tbaa !904
  %46 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10328, !tbaa !820
  %47 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10328, !tbaa !820
  %prev21 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %47, i32 0, i32 0, !dbg !10328
  store %struct.ngx_queue_s* %46, %struct.ngx_queue_s** %prev21, align 4, !dbg !10328, !tbaa !904
  %48 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %q, align 4, !dbg !10328, !tbaa !820
  %49 = load %struct.ngx_queue_s*, %struct.ngx_queue_s** %queue.addr, align 4, !dbg !10328, !tbaa !820
  %next22 = getelementptr inbounds %struct.ngx_queue_s, %struct.ngx_queue_s* %49, i32 0, i32 1, !dbg !10328
  store %struct.ngx_queue_s* %48, %struct.ngx_queue_s** %next22, align 4, !dbg !10328, !tbaa !905
  br label %for.cond, !dbg !10329, !llvm.loop !10330

if.end23:                                         ; preds = %if.end5
  %50 = load %struct.ngx_rbtree_s*, %struct.ngx_rbtree_s** %tree.addr, align 4, !dbg !10333, !tbaa !820
  %51 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10334, !tbaa !820
  %node = getelementptr inbounds %struct.ngx_resolver_node_t, %struct.ngx_resolver_node_t* %51, i32 0, i32 0, !dbg !10335
  call void @ngx_rbtree_delete(%struct.ngx_rbtree_s* %50, %struct.ngx_rbtree_node_s* %node), !dbg !10336
  %52 = load %struct.ngx_resolver_s*, %struct.ngx_resolver_s** %r.addr, align 4, !dbg !10337, !tbaa !820
  %53 = load %struct.ngx_resolver_node_t*, %struct.ngx_resolver_node_t** %rn, align 4, !dbg !10338, !tbaa !820
  call void @ngx_resolver_free_node(%struct.ngx_resolver_s* %52, %struct.ngx_resolver_node_t* %53), !dbg !10339
  br label %for.cond, !dbg !10340, !llvm.loop !10330

cleanup:                                          ; preds = %if.then3, %if.then
  %54 = bitcast %struct.ngx_resolver_node_t** %rn to i8*, !dbg !10341
  call void @llvm.lifetime.end(i64 4, i8* %54) #5, !dbg !10341
  %55 = bitcast %struct.ngx_queue_s** %q to i8*, !dbg !10341
  call void @llvm.lifetime.end(i64 4, i8* %55) #5, !dbg !10341
  %56 = bitcast i32* %now to i8*, !dbg !10341
  call void @llvm.lifetime.end(i64 4, i8* %56) #5, !dbg !10341
  %57 = load i32, i32* %retval, align 4, !dbg !10341
  ret i32 %57, !dbg !10341
}

declare i32 @memcmp(i8*, i8*, i32) #3

declare i8* @ngx_alloc(i32, %struct.ngx_log_s*) #3

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!13}
!llvm.module.flags = !{!515, !516}
!llvm.ident = !{!517}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "errors", scope: !2, file: !3, line: 4339, type: !512, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "ngx_resolver_strerror", scope: !3, file: !3, line: 4337, type: !4, isLocal: false, isDefinition: true, scopeLine: 4338, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !510)
!3 = !DIFile(filename: "src/core/ngx_resolver.c", directory: "/home/sam/Projects/nginx-1.12.2")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !8}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 32)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_int_t", file: !9, line: 78, baseType: !10)
!9 = !DIFile(filename: "src/core/ngx_config.h", directory: "/home/sam/Projects/nginx-1.12.2")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !11, line: 140, baseType: !12)
!11 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/bits/alltypes.h", directory: "/home/sam/Projects/nginx-1.12.2")
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !14, retainedTypes: !15, globals: !509)
!14 = !{}
!15 = !{!16, !17, !19, !21, !25, !36, !65, !76, !78, !23, !84, !110, !82, !469, !99, !485, !493, !495, !134, !497, !124}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32)
!18 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11, line: 75, baseType: !20)
!20 = !DIBasicType(name: "long int", size: 32, encoding: DW_ATE_signed)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !22, line: 13, baseType: !23)
!22 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/netinet/in.h", directory: "/home/sam/Projects/nginx-1.12.2")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !11, line: 191, baseType: !24)
!24 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 32)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !27, line: 297, size: 128, elements: !28)
!27 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/sys/socket.h", directory: "/home/sam/Projects/nginx-1.12.2")
!28 = !{!29, !32}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !26, file: !27, line: 298, baseType: !30, size: 16)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !11, line: 409, baseType: !31)
!31 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !26, file: !27, line: 299, baseType: !33, size: 112, offset: 16)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 14)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !22, line: 34, size: 224, elements: !38)
!38 = !{!39, !40, !43, !44, !64}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !37, file: !22, line: 35, baseType: !30, size: 16)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !37, file: !22, line: 36, baseType: !41, size: 16, offset: 16)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !22, line: 12, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !11, line: 186, baseType: !31)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !37, file: !22, line: 37, baseType: !23, size: 32, offset: 32)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !37, file: !22, line: 38, baseType: !45, size: 128, offset: 64)
!45 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !22, line: 23, size: 128, elements: !46)
!46 = !{!47}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_union", scope: !45, file: !22, line: 28, baseType: !48, size: 128)
!48 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !45, file: !22, line: 24, size: 128, elements: !49)
!49 = !{!50, !56, !60}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__s6_addr", scope: !48, file: !22, line: 25, baseType: !51, size: 128)
!51 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 128, elements: !54)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !11, line: 181, baseType: !53)
!53 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!54 = !{!55}
!55 = !DISubrange(count: 16)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "__s6_addr16", scope: !48, file: !22, line: 26, baseType: !57, size: 128)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 128, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 8)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "__s6_addr32", scope: !48, file: !22, line: 27, baseType: !61, size: 128)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 4)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !37, file: !22, line: 39, baseType: !23, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 32)
!66 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !22, line: 16, size: 128, elements: !67)
!67 = !{!68, !69, !70, !74}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !66, file: !22, line: 17, baseType: !30, size: 16)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !66, file: !22, line: 18, baseType: !41, size: 16, offset: 16)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !66, file: !22, line: 19, baseType: !71, size: 32, offset: 32)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !22, line: 14, size: 32, elements: !72)
!72 = !{!73}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !71, file: !22, line: 14, baseType: !21, size: 32)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !66, file: !22, line: 20, baseType: !75, size: 64, offset: 64)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 64, elements: !58)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_short", file: !77, line: 65, baseType: !31)
!77 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/sys/types.h", directory: "/home/sam/Projects/nginx-1.12.2")
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_msec_t", file: !79, line: 16, baseType: !80)
!79 = !DIFile(filename: "src/os/unix/ngx_time.h", directory: "/home/sam/Projects/nginx-1.12.2")
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_rbtree_key_t", file: !81, line: 16, baseType: !82)
!81 = !DIFile(filename: "src/core/ngx_rbtree.h", directory: "/home/sam/Projects/nginx-1.12.2")
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_uint_t", file: !9, line: 79, baseType: !83)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !11, line: 125, baseType: !24)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_node_t", file: !86, line: 145, baseType: !87)
!86 = !DIFile(filename: "src/core/ngx_resolver.h", directory: "/home/sam/Projects/nginx-1.12.2")
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 92, size: 928, elements: !88)
!88 = !{!89, !101, !109, !111, !112, !113, !114, !115, !116, !139, !140, !141, !142, !143, !149, !150, !151, !152, !153, !154, !155, !156}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !87, file: !86, line: 93, baseType: !90, size: 160)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_rbtree_node_t", file: !81, line: 20, baseType: !91)
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_rbtree_node_s", file: !81, line: 22, size: 160, elements: !92)
!92 = !{!93, !94, !96, !97, !98, !100}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !91, file: !81, line: 23, baseType: !80, size: 32)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !91, file: !81, line: 24, baseType: !95, size: 32, offset: 32)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !91, file: !81, line: 25, baseType: !95, size: 32, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !91, file: !81, line: 26, baseType: !95, size: 32, offset: 96)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !91, file: !81, line: 27, baseType: !99, size: 8, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !77, line: 64, baseType: !53)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !91, file: !81, line: 28, baseType: !99, size: 8, offset: 136)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !87, file: !86, line: 94, baseType: !102, size: 64, offset: 160)
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_queue_t", file: !103, line: 16, baseType: !104)
!103 = !DIFile(filename: "src/core/ngx_queue.h", directory: "/home/sam/Projects/nginx-1.12.2")
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_queue_s", file: !103, line: 18, size: 64, elements: !105)
!105 = !{!106, !108}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !104, file: !103, line: 19, baseType: !107, size: 32)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !104, file: !103, line: 20, baseType: !107, size: 32, offset: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !87, file: !86, line: 97, baseType: !110, size: 32, offset: 224)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "addr6", scope: !87, file: !86, line: 101, baseType: !45, size: 128, offset: 256)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "nlen", scope: !87, file: !86, line: 104, baseType: !76, size: 16, offset: 384)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !87, file: !86, line: 105, baseType: !76, size: 16, offset: 400)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !87, file: !86, line: 107, baseType: !110, size: 32, offset: 416)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "query6", scope: !87, file: !86, line: 109, baseType: !110, size: 32, offset: 448)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !87, file: !86, line: 117, baseType: !117, size: 32, offset: 480)
!117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !87, file: !86, line: 112, size: 32, elements: !118)
!118 = !{!119, !120, !122, !123}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !117, file: !86, line: 113, baseType: !21, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "addrs", scope: !117, file: !86, line: 114, baseType: !121, size: 32)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "cname", scope: !117, file: !86, line: 115, baseType: !110, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "srvs", scope: !117, file: !86, line: 116, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_srv_t", file: !86, line: 75, baseType: !126)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 70, size: 128, elements: !127)
!127 = !{!128, !136, !137, !138}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !126, file: !86, line: 71, baseType: !129, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_str_t", file: !130, line: 19, baseType: !131)
!130 = !DIFile(filename: "src/core/ngx_string.h", directory: "/home/sam/Projects/nginx-1.12.2")
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 16, size: 64, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !131, file: !130, line: 17, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !11, line: 120, baseType: !24)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !131, file: !130, line: 18, baseType: !110, size: 32, offset: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !126, file: !86, line: 72, baseType: !76, size: 16, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !126, file: !86, line: 73, baseType: !76, size: 16, offset: 80)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !126, file: !86, line: 74, baseType: !76, size: 16, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !87, file: !86, line: 119, baseType: !99, size: 8, offset: 512)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "naddrs", scope: !87, file: !86, line: 120, baseType: !76, size: 16, offset: 528)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nsrvs", scope: !87, file: !86, line: 121, baseType: !76, size: 16, offset: 544)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "cnlen", scope: !87, file: !86, line: 122, baseType: !76, size: 16, offset: 560)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "u6", scope: !87, file: !86, line: 128, baseType: !144, size: 128, offset: 576)
!144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !87, file: !86, line: 125, size: 128, elements: !145)
!145 = !{!146, !147}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "addr6", scope: !144, file: !86, line: 126, baseType: !45, size: 128)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "addrs6", scope: !144, file: !86, line: 127, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "naddrs6", scope: !87, file: !86, line: 130, baseType: !76, size: 16, offset: 704)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "expire", scope: !87, file: !86, line: 133, baseType: !19, size: 32, offset: 736)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !87, file: !86, line: 134, baseType: !19, size: 32, offset: 768)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !87, file: !86, line: 135, baseType: !23, size: 32, offset: 800)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !87, file: !86, line: 137, baseType: !24, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "tcp6", scope: !87, file: !86, line: 139, baseType: !24, size: 1, offset: 833, flags: DIFlagBitField, extraData: i64 832)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "last_connection", scope: !87, file: !86, line: 142, baseType: !82, size: 32, offset: 864)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !87, file: !86, line: 144, baseType: !157, size: 32, offset: 896)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_ctx_t", file: !86, line: 56, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_resolver_ctx_s", file: !86, line: 195, size: 960, elements: !160)
!160 = !{!161, !162, !416, !417, !418, !419, !420, !421, !422, !423, !434, !435, !436, !437, !438, !459, !464, !465, !466, !467, !468}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !159, file: !86, line: 196, baseType: !157, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !159, file: !86, line: 197, baseType: !163, size: 32, offset: 32)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_t", file: !86, line: 40, baseType: !165)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_resolver_s", file: !86, line: 148, size: 2048, elements: !166)
!166 = !{!167, !245, !246, !247, !248, !383, !384, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !165, file: !86, line: 150, baseType: !168, size: 32)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_event_t", file: !170, line: 24, baseType: !171)
!170 = !DIFile(filename: "src/core/ngx_core.h", directory: "/home/sam/Projects/nginx-1.12.2")
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_event_s", file: !172, line: 30, size: 384, elements: !173)
!172 = !DIFile(filename: "src/event/ngx_event.h", directory: "/home/sam/Projects/nginx-1.12.2")
!173 = !{!174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !201, !202, !243, !244}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !171, file: !172, line: 31, baseType: !16, size: 32)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !171, file: !172, line: 33, baseType: !24, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !171, file: !172, line: 35, baseType: !24, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !171, file: !172, line: 38, baseType: !24, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !171, file: !172, line: 44, baseType: !24, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !171, file: !172, line: 46, baseType: !24, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !171, file: !172, line: 49, baseType: !24, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "oneshot", scope: !171, file: !172, line: 51, baseType: !24, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !171, file: !172, line: 54, baseType: !24, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !171, file: !172, line: 56, baseType: !24, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !171, file: !172, line: 57, baseType: !24, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timedout", scope: !171, file: !172, line: 59, baseType: !24, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "timer_set", scope: !171, file: !172, line: 60, baseType: !24, size: 1, offset: 43, flags: DIFlagBitField, extraData: i64 32)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "delayed", scope: !171, file: !172, line: 62, baseType: !24, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_accept", scope: !171, file: !172, line: 64, baseType: !24, size: 1, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "pending_eof", scope: !171, file: !172, line: 67, baseType: !24, size: 1, offset: 46, flags: DIFlagBitField, extraData: i64 32)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "posted", scope: !171, file: !172, line: 69, baseType: !24, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !171, file: !172, line: 71, baseType: !24, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !171, file: !172, line: 74, baseType: !24, size: 1, offset: 49, flags: DIFlagBitField, extraData: i64 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !171, file: !172, line: 75, baseType: !24, size: 1, offset: 50, flags: DIFlagBitField, extraData: i64 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "cancelable", scope: !171, file: !172, line: 77, baseType: !24, size: 1, offset: 51, flags: DIFlagBitField, extraData: i64 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "available", scope: !171, file: !172, line: 107, baseType: !24, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !171, file: !172, line: 110, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_event_handler_pt", file: !170, line: 31, baseType: !198)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !168}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !171, file: !172, line: 117, baseType: !82, size: 32, offset: 96)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !171, file: !172, line: 119, baseType: !203, size: 32, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_log_t", file: !170, line: 20, baseType: !205)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_log_s", file: !206, line: 50, size: 320, elements: !207)
!206 = !DIFile(filename: "src/core/ngx_log.h", directory: "/home/sam/Projects/nginx-1.12.2")
!207 = !{!208, !209, !224, !228, !229, !234, !235, !240, !241, !242}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !205, file: !206, line: 51, baseType: !82, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !205, file: !206, line: 52, baseType: !210, size: 32, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_open_file_t", file: !170, line: 21, baseType: !212)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_open_file_s", file: !213, line: 89, size: 160, elements: !214)
!213 = !DIFile(filename: "src/core/ngx_conf_file.h", directory: "/home/sam/Projects/nginx-1.12.2")
!214 = !{!215, !218, !219, !223}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !212, file: !213, line: 90, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_fd_t", file: !217, line: 16, baseType: !12)
!217 = !DIFile(filename: "src/os/unix/ngx_files.h", directory: "/home/sam/Projects/nginx-1.12.2")
!218 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !212, file: !213, line: 91, baseType: !129, size: 64, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !212, file: !213, line: 93, baseType: !220, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 32)
!221 = !DISubroutineType(types: !222)
!222 = !{null, !210, !203}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !212, file: !213, line: 94, baseType: !16, size: 32, offset: 128)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "connection", scope: !205, file: !206, line: 54, baseType: !225, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_atomic_uint_t", file: !226, line: 98, baseType: !227)
!226 = !DIFile(filename: "src/os/unix/ngx_atomic.h", directory: "/home/sam/Projects/nginx-1.12.2")
!227 = !DIBasicType(name: "long unsigned int", size: 32, encoding: DW_ATE_unsigned)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "disk_full_time", scope: !205, file: !206, line: 56, baseType: !19, size: 32, offset: 96)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !205, file: !206, line: 58, baseType: !230, size: 32, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_log_handler_pt", file: !206, line: 45, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!232 = !DISubroutineType(types: !233)
!233 = !{!110, !203, !110, !134}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !205, file: !206, line: 59, baseType: !16, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !205, file: !206, line: 61, baseType: !236, size: 32, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_log_writer_pt", file: !206, line: 46, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !203, !82, !110, !134}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "wdata", scope: !205, file: !206, line: 62, baseType: !16, size: 32, offset: 224)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !205, file: !206, line: 70, baseType: !6, size: 32, offset: 256)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !205, file: !206, line: 72, baseType: !203, size: 32, offset: 288)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !171, file: !172, line: 121, baseType: !90, size: 160, offset: 160)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !171, file: !172, line: 124, baseType: !102, size: 64, offset: 320)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !165, file: !86, line: 151, baseType: !16, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !165, file: !86, line: 152, baseType: !203, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !165, file: !86, line: 155, baseType: !8, size: 32, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "connections", scope: !165, file: !86, line: 158, baseType: !249, size: 160, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_array_t", file: !250, line: 22, baseType: !251)
!250 = !DIFile(filename: "src/core/ngx_array.h", directory: "/home/sam/Projects/nginx-1.12.2")
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !250, line: 16, size: 160, elements: !252)
!252 = !{!253, !254, !255, !256, !257}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !251, file: !250, line: 17, baseType: !16, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "nelts", scope: !251, file: !250, line: 18, baseType: !82, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !251, file: !250, line: 19, baseType: !134, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "nalloc", scope: !251, file: !250, line: 20, baseType: !82, size: 32, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !251, file: !250, line: 21, baseType: !258, size: 32, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_pool_t", file: !170, line: 18, baseType: !260)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_pool_s", file: !261, line: 57, size: 320, elements: !262)
!261 = !DIFile(filename: "src/core/ngx_palloc.h", directory: "/home/sam/Projects/nginx-1.12.2")
!262 = !{!263, !271, !272, !273, !363, !370, !382}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !260, file: !261, line: 58, baseType: !264, size: 128)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_pool_data_t", file: !261, line: 54, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 49, size: 128, elements: !266)
!266 = !{!267, !268, !269, !270}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !265, file: !261, line: 50, baseType: !110, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !265, file: !261, line: 51, baseType: !110, size: 32, offset: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !265, file: !261, line: 52, baseType: !258, size: 32, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "failed", scope: !265, file: !261, line: 53, baseType: !82, size: 32, offset: 96)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !260, file: !261, line: 59, baseType: !134, size: 32, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !260, file: !261, line: 60, baseType: !258, size: 32, offset: 160)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !260, file: !261, line: 61, baseType: !274, size: 32, offset: 192)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_chain_t", file: !170, line: 19, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_chain_s", file: !277, line: 59, size: 64, elements: !278)
!277 = !DIFile(filename: "src/core/ngx_buf.h", directory: "/home/sam/Projects/nginx-1.12.2")
!278 = !{!279, !362}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !276, file: !277, line: 60, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_buf_t", file: !277, line: 18, baseType: !282)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_buf_s", file: !277, line: 20, size: 352, elements: !283)
!283 = !{!284, !285, !286, !288, !289, !290, !291, !293, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !282, file: !277, line: 21, baseType: !110, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !282, file: !277, line: 22, baseType: !110, size: 32, offset: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "file_pos", scope: !282, file: !277, line: 23, baseType: !287, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !11, line: 222, baseType: !12)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "file_last", scope: !282, file: !277, line: 24, baseType: !287, size: 32, offset: 96)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !282, file: !277, line: 26, baseType: !110, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !282, file: !277, line: 27, baseType: !110, size: 32, offset: 160)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !282, file: !277, line: 28, baseType: !292, size: 32, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_buf_tag_t", file: !277, line: 16, baseType: !16)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !282, file: !277, line: 29, baseType: !294, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_file_t", file: !170, line: 23, baseType: !296)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_file_s", file: !297, line: 16, size: 1216, elements: !298)
!297 = !DIFile(filename: "src/core/ngx_file.h", directory: "/home/sam/Projects/nginx-1.12.2")
!298 = !{!299, !300, !301, !344, !345, !346, !347, !348}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !296, file: !297, line: 17, baseType: !216, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !296, file: !297, line: 18, baseType: !129, size: 64, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !296, file: !297, line: 19, baseType: !302, size: 960, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_file_info_t", file: !217, line: 17, baseType: !303)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !304, line: 4, size: 960, elements: !305)
!304 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/bits/stat.h", directory: "/home/sam/Projects/nginx-1.12.2")
!305 = !{!306, !308, !309, !311, !312, !314, !315, !317, !319, !321, !322, !323, !324, !325, !326, !328, !329, !331, !332, !337, !338, !339}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !303, file: !304, line: 6, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !11, line: 232, baseType: !24)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "__st_dev_pad", scope: !303, file: !304, line: 7, baseType: !307, size: 32, offset: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !303, file: !304, line: 8, baseType: !310, size: 32, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !11, line: 227, baseType: !24)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "__st_ino_pad", scope: !303, file: !304, line: 9, baseType: !310, size: 32, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !303, file: !304, line: 10, baseType: !313, size: 32, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !11, line: 217, baseType: !24)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "__st_nlink_pad", scope: !303, file: !304, line: 11, baseType: !313, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !303, file: !304, line: 13, baseType: !316, size: 32, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !11, line: 212, baseType: !24)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !303, file: !304, line: 14, baseType: !318, size: 32, offset: 224)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !11, line: 304, baseType: !24)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !303, file: !304, line: 15, baseType: !320, size: 32, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !11, line: 309, baseType: !24)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !303, file: !304, line: 16, baseType: !24, size: 32, offset: 288)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !303, file: !304, line: 17, baseType: !307, size: 32, offset: 320)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "__st_rdev_pad", scope: !303, file: !304, line: 18, baseType: !307, size: 32, offset: 352)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !303, file: !304, line: 19, baseType: !287, size: 32, offset: 384)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "__st_size_pad", scope: !303, file: !304, line: 20, baseType: !287, size: 32, offset: 416)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !303, file: !304, line: 21, baseType: !327, size: 32, offset: 448)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !11, line: 237, baseType: !20)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "__st_blksize_pad", scope: !303, file: !304, line: 22, baseType: !327, size: 32, offset: 480)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !303, file: !304, line: 23, baseType: !330, size: 32, offset: 512)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !11, line: 242, baseType: !12)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__st_blocks_pad", scope: !303, file: !304, line: 24, baseType: !330, size: 32, offset: 544)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !303, file: !304, line: 26, baseType: !333, size: 64, offset: 576)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11, line: 288, size: 64, elements: !334)
!334 = !{!335, !336}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !333, file: !11, line: 288, baseType: !19, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !333, file: !11, line: 288, baseType: !20, size: 32, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !303, file: !304, line: 27, baseType: !333, size: 64, offset: 640)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !303, file: !304, line: 28, baseType: !333, size: 64, offset: 704)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !303, file: !304, line: 29, baseType: !340, size: 192, offset: 768)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 192, elements: !342)
!341 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!342 = !{!343}
!343 = !DISubrange(count: 3)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !296, file: !297, line: 21, baseType: !287, size: 32, offset: 1088)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "sys_offset", scope: !296, file: !297, line: 22, baseType: !287, size: 32, offset: 1120)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !296, file: !297, line: 24, baseType: !203, size: 32, offset: 1152)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "valid_info", scope: !296, file: !297, line: 37, baseType: !24, size: 1, offset: 1184, flags: DIFlagBitField, extraData: i64 1184)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "directio", scope: !296, file: !297, line: 38, baseType: !24, size: 1, offset: 1185, flags: DIFlagBitField, extraData: i64 1184)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !282, file: !277, line: 30, baseType: !280, size: 32, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !282, file: !277, line: 34, baseType: !24, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !282, file: !277, line: 40, baseType: !24, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !282, file: !277, line: 43, baseType: !24, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "recycled", scope: !282, file: !277, line: 45, baseType: !24, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "in_file", scope: !282, file: !277, line: 46, baseType: !24, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !282, file: !277, line: 47, baseType: !24, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !282, file: !277, line: 48, baseType: !24, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "last_buf", scope: !282, file: !277, line: 49, baseType: !24, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_chain", scope: !282, file: !277, line: 50, baseType: !24, size: 1, offset: 296, flags: DIFlagBitField, extraData: i64 288)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "last_shadow", scope: !282, file: !277, line: 52, baseType: !24, size: 1, offset: 297, flags: DIFlagBitField, extraData: i64 288)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "temp_file", scope: !282, file: !277, line: 53, baseType: !24, size: 1, offset: 298, flags: DIFlagBitField, extraData: i64 288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !282, file: !277, line: 55, baseType: !12, size: 32, offset: 320)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 61, baseType: !274, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "large", scope: !260, file: !261, line: 62, baseType: !364, size: 32, offset: 224)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_pool_large_t", file: !261, line: 41, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_pool_large_s", file: !261, line: 43, size: 64, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !366, file: !261, line: 44, baseType: !364, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !366, file: !261, line: 45, baseType: !16, size: 32, offset: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !260, file: !261, line: 63, baseType: !371, size: 32, offset: 256)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_pool_cleanup_t", file: !261, line: 32, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_pool_cleanup_s", file: !261, line: 34, size: 96, elements: !374)
!374 = !{!375, !380, !381}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !373, file: !261, line: 35, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_pool_cleanup_pt", file: !261, line: 30, baseType: !377)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = !DISubroutineType(types: !379)
!379 = !{null, !16}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !373, file: !261, line: 36, baseType: !16, size: 32, offset: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !373, file: !261, line: 37, baseType: !371, size: 32, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !260, file: !261, line: 64, baseType: !203, size: 32, offset: 288)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "last_connection", scope: !165, file: !86, line: 159, baseType: !82, size: 32, offset: 288)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "name_rbtree", scope: !165, file: !86, line: 161, baseType: !385, size: 96, offset: 320)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_rbtree_t", file: !81, line: 32, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_rbtree_s", file: !81, line: 37, size: 96, elements: !387)
!387 = !{!388, !389, !390}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !386, file: !81, line: 38, baseType: !95, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !386, file: !81, line: 39, baseType: !95, size: 32, offset: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "insert", scope: !386, file: !81, line: 40, baseType: !391, size: 32, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_rbtree_insert_pt", file: !81, line: 34, baseType: !392)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DISubroutineType(types: !394)
!394 = !{null, !95, !95, !95}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "name_sentinel", scope: !165, file: !86, line: 162, baseType: !90, size: 160, offset: 416)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "srv_rbtree", scope: !165, file: !86, line: 164, baseType: !385, size: 96, offset: 576)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "srv_sentinel", scope: !165, file: !86, line: 165, baseType: !90, size: 160, offset: 672)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "addr_rbtree", scope: !165, file: !86, line: 167, baseType: !385, size: 96, offset: 832)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "addr_sentinel", scope: !165, file: !86, line: 168, baseType: !90, size: 160, offset: 928)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "name_resend_queue", scope: !165, file: !86, line: 170, baseType: !102, size: 64, offset: 1088)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "srv_resend_queue", scope: !165, file: !86, line: 171, baseType: !102, size: 64, offset: 1152)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "addr_resend_queue", scope: !165, file: !86, line: 172, baseType: !102, size: 64, offset: 1216)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "name_expire_queue", scope: !165, file: !86, line: 174, baseType: !102, size: 64, offset: 1280)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "srv_expire_queue", scope: !165, file: !86, line: 175, baseType: !102, size: 64, offset: 1344)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "addr_expire_queue", scope: !165, file: !86, line: 176, baseType: !102, size: 64, offset: 1408)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !165, file: !86, line: 179, baseType: !82, size: 32, offset: 1472)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "addr6_rbtree", scope: !165, file: !86, line: 180, baseType: !385, size: 96, offset: 1504)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "addr6_sentinel", scope: !165, file: !86, line: 181, baseType: !90, size: 160, offset: 1600)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "addr6_resend_queue", scope: !165, file: !86, line: 182, baseType: !102, size: 64, offset: 1760)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "addr6_expire_queue", scope: !165, file: !86, line: 183, baseType: !102, size: 64, offset: 1824)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "resend_timeout", scope: !165, file: !86, line: 186, baseType: !19, size: 32, offset: 1888)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_timeout", scope: !165, file: !86, line: 187, baseType: !19, size: 32, offset: 1920)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "expire", scope: !165, file: !86, line: 188, baseType: !19, size: 32, offset: 1952)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !165, file: !86, line: 189, baseType: !19, size: 32, offset: 1984)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !165, file: !86, line: 191, baseType: !82, size: 32, offset: 2016)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !159, file: !86, line: 198, baseType: !84, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !159, file: !86, line: 201, baseType: !8, size: 32, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !159, file: !86, line: 203, baseType: !8, size: 32, offset: 128)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !159, file: !86, line: 204, baseType: !129, size: 64, offset: 160)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "service", scope: !159, file: !86, line: 205, baseType: !129, size: 64, offset: 224)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !159, file: !86, line: 207, baseType: !19, size: 32, offset: 288)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "naddrs", scope: !159, file: !86, line: 208, baseType: !82, size: 32, offset: 320)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "addrs", scope: !159, file: !86, line: 209, baseType: !424, size: 32, offset: 352)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_addr_t", file: !86, line: 67, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 61, size: 160, elements: !427)
!427 = !{!428, !429, !431, !432, !433}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !426, file: !86, line: 62, baseType: !25, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !426, file: !86, line: 63, baseType: !430, size: 32, offset: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !11, line: 404, baseType: !24)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !86, line: 64, baseType: !129, size: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !426, file: !86, line: 65, baseType: !76, size: 16, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !426, file: !86, line: 66, baseType: !76, size: 16, offset: 144)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !159, file: !86, line: 210, baseType: !425, size: 160, offset: 384)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !159, file: !86, line: 211, baseType: !66, size: 128, offset: 544)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !159, file: !86, line: 213, baseType: !82, size: 32, offset: 672)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "nsrvs", scope: !159, file: !86, line: 214, baseType: !82, size: 32, offset: 704)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "srvs", scope: !159, file: !86, line: 215, baseType: !439, size: 32, offset: 736)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_srv_name_t", file: !86, line: 89, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 78, size: 256, elements: !442)
!442 = !{!443, !444, !445, !446, !447, !448, !449, !450}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !441, file: !86, line: 79, baseType: !129, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !441, file: !86, line: 80, baseType: !76, size: 16, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !441, file: !86, line: 81, baseType: !76, size: 16, offset: 80)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !441, file: !86, line: 82, baseType: !76, size: 16, offset: 96)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !441, file: !86, line: 84, baseType: !157, size: 32, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !441, file: !86, line: 85, baseType: !8, size: 32, offset: 160)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "naddrs", scope: !441, file: !86, line: 87, baseType: !82, size: 32, offset: 192)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "addrs", scope: !441, file: !86, line: 88, baseType: !451, size: 32, offset: 224)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_addr_t", file: !453, line: 78, baseType: !454)
!453 = !DIFile(filename: "src/core/ngx_inet.h", directory: "/home/sam/Projects/nginx-1.12.2")
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 74, size: 128, elements: !455)
!455 = !{!456, !457, !458}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !454, file: !453, line: 75, baseType: !25, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !454, file: !453, line: 76, baseType: !430, size: 32, offset: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !454, file: !453, line: 77, baseType: !129, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !159, file: !86, line: 217, baseType: !460, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_handler_pt", file: !86, line: 58, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DISubroutineType(types: !463)
!463 = !{null, !157}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !159, file: !86, line: 218, baseType: !16, size: 32, offset: 800)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !86, line: 219, baseType: !78, size: 32, offset: 832)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "quick", scope: !159, file: !86, line: 221, baseType: !82, size: 32, offset: 864)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "recursion", scope: !159, file: !86, line: 222, baseType: !82, size: 32, offset: 896)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !159, file: !86, line: 223, baseType: !168, size: 32, offset: 928)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_hdr_t", file: !3, line: 32, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 19, size: 96, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "ident_hi", scope: !471, file: !3, line: 20, baseType: !99, size: 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "ident_lo", scope: !471, file: !3, line: 21, baseType: !99, size: 8, offset: 8)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "flags_hi", scope: !471, file: !3, line: 22, baseType: !99, size: 8, offset: 16)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flags_lo", scope: !471, file: !3, line: 23, baseType: !99, size: 8, offset: 24)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "nqs_hi", scope: !471, file: !3, line: 24, baseType: !99, size: 8, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "nqs_lo", scope: !471, file: !3, line: 25, baseType: !99, size: 8, offset: 40)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "nan_hi", scope: !471, file: !3, line: 26, baseType: !99, size: 8, offset: 48)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "nan_lo", scope: !471, file: !3, line: 27, baseType: !99, size: 8, offset: 56)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "nns_hi", scope: !471, file: !3, line: 28, baseType: !99, size: 8, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "nns_lo", scope: !471, file: !3, line: 29, baseType: !99, size: 8, offset: 72)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "nar_hi", scope: !471, file: !3, line: 30, baseType: !99, size: 8, offset: 80)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "nar_lo", scope: !471, file: !3, line: 31, baseType: !99, size: 8, offset: 88)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_qs_t", file: !3, line: 40, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 35, size: 32, elements: !488)
!488 = !{!489, !490, !491, !492}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "type_hi", scope: !487, file: !3, line: 36, baseType: !99, size: 8)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "type_lo", scope: !487, file: !3, line: 37, baseType: !99, size: 8, offset: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "class_hi", scope: !487, file: !3, line: 38, baseType: !99, size: 8, offset: 16)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "class_lo", scope: !487, file: !3, line: 39, baseType: !99, size: 8, offset: 24)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_msec_int_t", file: !79, line: 17, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_rbtree_key_int_t", file: !81, line: 17, baseType: !8)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_socket_t", file: !496, line: 17, baseType: !12)
!496 = !DIFile(filename: "src/os/unix/ngx_socket.h", directory: "/home/sam/Projects/nginx-1.12.2")
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_an_t", file: !3, line: 51, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 43, size: 80, elements: !500)
!500 = !{!501, !502, !503, !504, !505, !507, !508}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "type_hi", scope: !499, file: !3, line: 44, baseType: !99, size: 8)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "type_lo", scope: !499, file: !3, line: 45, baseType: !99, size: 8, offset: 8)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "class_hi", scope: !499, file: !3, line: 46, baseType: !99, size: 8, offset: 16)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "class_lo", scope: !499, file: !3, line: 47, baseType: !99, size: 8, offset: 24)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !499, file: !3, line: 48, baseType: !506, size: 32, offset: 32)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 32, elements: !62)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "len_hi", scope: !499, file: !3, line: 49, baseType: !99, size: 8, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "len_lo", scope: !499, file: !3, line: 50, baseType: !99, size: 8, offset: 72)
!509 = !{!0}
!510 = !{!511}
!511 = !DILocalVariable(name: "err", arg: 1, scope: !2, file: !3, line: 4337, type: !8)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 160, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 5)
!515 = !{i32 2, !"Dwarf Version", i32 4}
!516 = !{i32 2, !"Debug Info Version", i32 3}
!517 = !{!"clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)"}
!518 = distinct !DISubprogram(name: "ngx_resolver_create", scope: !3, file: !3, line: 133, type: !519, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !761)
!519 = !DISubroutineType(types: !520)
!520 = !{!163, !521, !760, !82}
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_conf_t", file: !170, line: 16, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_conf_s", file: !213, line: 116, size: 384, elements: !524)
!524 = !{!525, !526, !528, !742, !743, !744, !753, !754, !755, !756, !757, !759}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !523, file: !213, line: 117, baseType: !6, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !523, file: !213, line: 118, baseType: !527, size: 32, offset: 32)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !523, file: !213, line: 120, baseType: !529, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_cycle_t", file: !170, line: 17, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_cycle_s", file: !532, line: 38, size: 2496, elements: !533)
!532 = !DIFile(filename: "src/core/ngx_cycle.h", directory: "/home/sam/Projects/nginx-1.12.2")
!533 = !{!534, !538, !539, !540, !541, !542, !647, !648, !649, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "conf_ctx", scope: !531, file: !532, line: 39, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !531, file: !532, line: 40, baseType: !258, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !531, file: !532, line: 42, baseType: !203, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "new_log", scope: !531, file: !532, line: 43, baseType: !204, size: 320, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "log_use_stderr", scope: !531, file: !532, line: 45, baseType: !82, size: 32, offset: 416)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !531, file: !532, line: 47, baseType: !543, size: 32, offset: 448)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_connection_t", file: !170, line: 26, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_connection_s", file: !547, line: 121, size: 896, elements: !548)
!547 = !DIFile(filename: "src/core/ngx_connection.h", directory: "/home/sam/Projects/nginx-1.12.2")
!548 = !{!549, !550, !551, !552, !553, !560, !562, !567, !572, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !546, file: !547, line: 122, baseType: !16, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !546, file: !547, line: 123, baseType: !168, size: 32, offset: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !546, file: !547, line: 124, baseType: !168, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !546, file: !547, line: 126, baseType: !495, size: 32, offset: 96)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !546, file: !547, line: 128, baseType: !554, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_recv_pt", file: !555, line: 19, baseType: !556)
!555 = !DIFile(filename: "src/os/unix/ngx_os.h", directory: "/home/sam/Projects/nginx-1.12.2")
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 32)
!557 = !DISubroutineType(types: !558)
!558 = !{!559, !544, !110, !134}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !11, line: 135, baseType: !12)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "send", scope: !546, file: !547, line: 129, baseType: !561, size: 32, offset: 160)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_send_pt", file: !555, line: 22, baseType: !556)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "recv_chain", scope: !546, file: !547, line: 130, baseType: !563, size: 32, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_recv_chain_pt", file: !555, line: 20, baseType: !564)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DISubroutineType(types: !566)
!566 = !{!559, !544, !274, !287}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "send_chain", scope: !546, file: !547, line: 131, baseType: !568, size: 32, offset: 224)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_send_chain_pt", file: !555, line: 23, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DISubroutineType(types: !571)
!571 = !{!274, !544, !274, !287}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "listening", scope: !546, file: !547, line: 133, baseType: !573, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_listening_t", file: !547, line: 16, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_listening_s", file: !547, line: 18, size: 960, elements: !576)
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !575, file: !547, line: 19, baseType: !495, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !575, file: !547, line: 21, baseType: !25, size: 32, offset: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !575, file: !547, line: 22, baseType: !430, size: 32, offset: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "addr_text_max_len", scope: !575, file: !547, line: 23, baseType: !134, size: 32, offset: 96)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "addr_text", scope: !575, file: !547, line: 24, baseType: !129, size: 64, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !575, file: !547, line: 26, baseType: !12, size: 32, offset: 192)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !575, file: !547, line: 28, baseType: !12, size: 32, offset: 224)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !575, file: !547, line: 29, baseType: !12, size: 32, offset: 256)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !575, file: !547, line: 30, baseType: !12, size: 32, offset: 288)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !575, file: !547, line: 38, baseType: !587, size: 32, offset: 320)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_connection_handler_pt", file: !170, line: 32, baseType: !588)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 32)
!589 = !DISubroutineType(types: !590)
!590 = !{null, !544}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "servers", scope: !575, file: !547, line: 40, baseType: !16, size: 32, offset: 352)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !575, file: !547, line: 42, baseType: !204, size: 320, offset: 384)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "logp", scope: !575, file: !547, line: 43, baseType: !203, size: 32, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "pool_size", scope: !575, file: !547, line: 45, baseType: !134, size: 32, offset: 736)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "post_accept_buffer_size", scope: !575, file: !547, line: 47, baseType: !134, size: 32, offset: 768)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "post_accept_timeout", scope: !575, file: !547, line: 49, baseType: !78, size: 32, offset: 800)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !575, file: !547, line: 51, baseType: !573, size: 32, offset: 832)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "connection", scope: !575, file: !547, line: 52, baseType: !544, size: 32, offset: 864)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !575, file: !547, line: 54, baseType: !82, size: 32, offset: 896)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !575, file: !547, line: 56, baseType: !24, size: 1, offset: 928, flags: DIFlagBitField, extraData: i64 928)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "remain", scope: !575, file: !547, line: 57, baseType: !24, size: 1, offset: 929, flags: DIFlagBitField, extraData: i64 928)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ignore", scope: !575, file: !547, line: 58, baseType: !24, size: 1, offset: 930, flags: DIFlagBitField, extraData: i64 928)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !575, file: !547, line: 60, baseType: !24, size: 1, offset: 931, flags: DIFlagBitField, extraData: i64 928)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "inherited", scope: !575, file: !547, line: 61, baseType: !24, size: 1, offset: 932, flags: DIFlagBitField, extraData: i64 928)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "nonblocking_accept", scope: !575, file: !547, line: 62, baseType: !24, size: 1, offset: 933, flags: DIFlagBitField, extraData: i64 928)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !575, file: !547, line: 63, baseType: !24, size: 1, offset: 934, flags: DIFlagBitField, extraData: i64 928)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "nonblocking", scope: !575, file: !547, line: 64, baseType: !24, size: 1, offset: 935, flags: DIFlagBitField, extraData: i64 928)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !575, file: !547, line: 65, baseType: !24, size: 1, offset: 936, flags: DIFlagBitField, extraData: i64 928)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "addr_ntop", scope: !575, file: !547, line: 66, baseType: !24, size: 1, offset: 937, flags: DIFlagBitField, extraData: i64 928)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !575, file: !547, line: 67, baseType: !24, size: 1, offset: 938, flags: DIFlagBitField, extraData: i64 928)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6only", scope: !575, file: !547, line: 70, baseType: !24, size: 1, offset: 939, flags: DIFlagBitField, extraData: i64 928)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "reuseport", scope: !575, file: !547, line: 72, baseType: !24, size: 1, offset: 940, flags: DIFlagBitField, extraData: i64 928)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "add_reuseport", scope: !575, file: !547, line: 73, baseType: !24, size: 1, offset: 941, flags: DIFlagBitField, extraData: i64 928)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !575, file: !547, line: 74, baseType: !24, size: 2, offset: 942, flags: DIFlagBitField, extraData: i64 928)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_accept", scope: !575, file: !547, line: 76, baseType: !24, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 928)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "delete_deferred", scope: !575, file: !547, line: 77, baseType: !24, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 928)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "add_deferred", scope: !575, file: !547, line: 78, baseType: !24, size: 1, offset: 946, flags: DIFlagBitField, extraData: i64 928)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !546, file: !547, line: 135, baseType: !287, size: 32, offset: 288)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !546, file: !547, line: 137, baseType: !203, size: 32, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !546, file: !547, line: 139, baseType: !258, size: 32, offset: 352)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !546, file: !547, line: 141, baseType: !12, size: 32, offset: 384)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !546, file: !547, line: 143, baseType: !25, size: 32, offset: 416)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !546, file: !547, line: 144, baseType: !430, size: 32, offset: 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "addr_text", scope: !546, file: !547, line: 145, baseType: !129, size: 64, offset: 480)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_protocol_addr", scope: !546, file: !547, line: 147, baseType: !129, size: 64, offset: 544)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_protocol_port", scope: !546, file: !547, line: 148, baseType: !41, size: 16, offset: 608)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "local_sockaddr", scope: !546, file: !547, line: 154, baseType: !25, size: 32, offset: 640)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "local_socklen", scope: !546, file: !547, line: 155, baseType: !430, size: 32, offset: 672)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !546, file: !547, line: 157, baseType: !280, size: 32, offset: 704)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !546, file: !547, line: 159, baseType: !102, size: 64, offset: 736)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !546, file: !547, line: 161, baseType: !225, size: 32, offset: 800)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "requests", scope: !546, file: !547, line: 163, baseType: !82, size: 32, offset: 832)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !546, file: !547, line: 165, baseType: !24, size: 8, offset: 864, flags: DIFlagBitField, extraData: i64 864)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "log_error", scope: !546, file: !547, line: 167, baseType: !24, size: 3, offset: 872, flags: DIFlagBitField, extraData: i64 864)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timedout", scope: !546, file: !547, line: 169, baseType: !24, size: 1, offset: 875, flags: DIFlagBitField, extraData: i64 864)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !546, file: !547, line: 170, baseType: !24, size: 1, offset: 876, flags: DIFlagBitField, extraData: i64 864)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "destroyed", scope: !546, file: !547, line: 171, baseType: !24, size: 1, offset: 877, flags: DIFlagBitField, extraData: i64 864)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !546, file: !547, line: 173, baseType: !24, size: 1, offset: 878, flags: DIFlagBitField, extraData: i64 864)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "reusable", scope: !546, file: !547, line: 174, baseType: !24, size: 1, offset: 879, flags: DIFlagBitField, extraData: i64 864)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !546, file: !547, line: 175, baseType: !24, size: 1, offset: 880, flags: DIFlagBitField, extraData: i64 864)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !546, file: !547, line: 176, baseType: !24, size: 1, offset: 881, flags: DIFlagBitField, extraData: i64 864)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sendfile", scope: !546, file: !547, line: 178, baseType: !24, size: 1, offset: 882, flags: DIFlagBitField, extraData: i64 864)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "sndlowat", scope: !546, file: !547, line: 179, baseType: !24, size: 1, offset: 883, flags: DIFlagBitField, extraData: i64 864)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_nodelay", scope: !546, file: !547, line: 180, baseType: !24, size: 2, offset: 884, flags: DIFlagBitField, extraData: i64 864)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_nopush", scope: !546, file: !547, line: 181, baseType: !24, size: 2, offset: 886, flags: DIFlagBitField, extraData: i64 864)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "need_last_buf", scope: !546, file: !547, line: 183, baseType: !24, size: 1, offset: 888, flags: DIFlagBitField, extraData: i64 864)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "free_connections", scope: !531, file: !532, line: 48, baseType: !544, size: 32, offset: 480)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "free_connection_n", scope: !531, file: !532, line: 49, baseType: !82, size: 32, offset: 512)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !531, file: !532, line: 51, baseType: !650, size: 32, offset: 544)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_module_t", file: !170, line: 15, baseType: !653)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_module_s", file: !654, line: 222, size: 800, elements: !655)
!654 = !DIFile(filename: "src/core/ngx_module.h", directory: "/home/sam/Projects/nginx-1.12.2")
!655 = !{!656, !657, !658, !659, !660, !661, !662, !663, !664, !678, !679, !683, !687, !688, !689, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_index", scope: !653, file: !654, line: 223, baseType: !82, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !653, file: !654, line: 224, baseType: !82, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !653, file: !654, line: 226, baseType: !6, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "spare0", scope: !653, file: !654, line: 228, baseType: !82, size: 32, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "spare1", scope: !653, file: !654, line: 229, baseType: !82, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !653, file: !654, line: 231, baseType: !82, size: 32, offset: 160)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !653, file: !654, line: 232, baseType: !17, size: 32, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !653, file: !654, line: 234, baseType: !16, size: 32, offset: 224)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !653, file: !654, line: 235, baseType: !665, size: 32, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_command_t", file: !170, line: 22, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_command_s", file: !213, line: 77, size: 224, elements: !668)
!668 = !{!669, !670, !671, !675, !676, !677}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !667, file: !213, line: 78, baseType: !129, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !667, file: !213, line: 79, baseType: !82, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !667, file: !213, line: 80, baseType: !672, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DISubroutineType(types: !674)
!674 = !{!6, !521, !665, !16}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !667, file: !213, line: 81, baseType: !82, size: 32, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !667, file: !213, line: 82, baseType: !82, size: 32, offset: 160)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "post", scope: !667, file: !213, line: 83, baseType: !16, size: 32, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !653, file: !654, line: 236, baseType: !82, size: 32, offset: 288)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "init_master", scope: !653, file: !654, line: 238, baseType: !680, size: 32, offset: 320)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 32)
!681 = !DISubroutineType(types: !682)
!682 = !{!8, !203}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "init_module", scope: !653, file: !654, line: 240, baseType: !684, size: 32, offset: 352)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!685 = !DISubroutineType(types: !686)
!686 = !{!8, !529}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "init_process", scope: !653, file: !654, line: 242, baseType: !684, size: 32, offset: 384)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !653, file: !654, line: 243, baseType: !684, size: 32, offset: 416)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "exit_thread", scope: !653, file: !654, line: 244, baseType: !690, size: 32, offset: 448)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DISubroutineType(types: !692)
!692 = !{null, !529}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "exit_process", scope: !653, file: !654, line: 245, baseType: !690, size: 32, offset: 480)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "exit_master", scope: !653, file: !654, line: 247, baseType: !690, size: 32, offset: 512)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook0", scope: !653, file: !654, line: 249, baseType: !83, size: 32, offset: 544)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook1", scope: !653, file: !654, line: 250, baseType: !83, size: 32, offset: 576)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook2", scope: !653, file: !654, line: 251, baseType: !83, size: 32, offset: 608)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook3", scope: !653, file: !654, line: 252, baseType: !83, size: 32, offset: 640)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook4", scope: !653, file: !654, line: 253, baseType: !83, size: 32, offset: 672)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook5", scope: !653, file: !654, line: 254, baseType: !83, size: 32, offset: 704)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook6", scope: !653, file: !654, line: 255, baseType: !83, size: 32, offset: 736)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "spare_hook7", scope: !653, file: !654, line: 256, baseType: !83, size: 32, offset: 768)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "modules_n", scope: !531, file: !532, line: 52, baseType: !82, size: 32, offset: 576)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "modules_used", scope: !531, file: !532, line: 53, baseType: !82, size: 32, offset: 608)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "reusable_connections_queue", scope: !531, file: !532, line: 55, baseType: !102, size: 64, offset: 640)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "reusable_connections_n", scope: !531, file: !532, line: 56, baseType: !82, size: 32, offset: 704)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "listening", scope: !531, file: !532, line: 58, baseType: !249, size: 160, offset: 736)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "paths", scope: !531, file: !532, line: 59, baseType: !249, size: 160, offset: 896)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "config_dump", scope: !531, file: !532, line: 61, baseType: !249, size: 160, offset: 1056)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "config_dump_rbtree", scope: !531, file: !532, line: 62, baseType: !385, size: 96, offset: 1216)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "config_dump_sentinel", scope: !531, file: !532, line: 63, baseType: !90, size: 160, offset: 1312)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "open_files", scope: !531, file: !532, line: 65, baseType: !713, size: 224, offset: 1472)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_list_t", file: !714, line: 31, baseType: !715)
!714 = !DIFile(filename: "src/core/ngx_list.h", directory: "/home/sam/Projects/nginx-1.12.2")
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !714, line: 25, size: 224, elements: !716)
!716 = !{!717, !725, !726, !727, !728}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !715, file: !714, line: 26, baseType: !718, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_list_part_t", file: !714, line: 16, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ngx_list_part_s", file: !714, line: 18, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !720, file: !714, line: 19, baseType: !16, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "nelts", scope: !720, file: !714, line: 20, baseType: !82, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !720, file: !714, line: 21, baseType: !718, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !715, file: !714, line: 27, baseType: !719, size: 96, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !715, file: !714, line: 28, baseType: !134, size: 32, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "nalloc", scope: !715, file: !714, line: 29, baseType: !82, size: 32, offset: 160)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !715, file: !714, line: 30, baseType: !258, size: 32, offset: 192)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "shared_memory", scope: !531, file: !532, line: 66, baseType: !713, size: 224, offset: 1696)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "connection_n", scope: !531, file: !532, line: 68, baseType: !82, size: 32, offset: 1920)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "files_n", scope: !531, file: !532, line: 69, baseType: !82, size: 32, offset: 1952)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "connections", scope: !531, file: !532, line: 71, baseType: !544, size: 32, offset: 1984)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "read_events", scope: !531, file: !532, line: 72, baseType: !168, size: 32, offset: 2016)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "write_events", scope: !531, file: !532, line: 73, baseType: !168, size: 32, offset: 2048)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "old_cycle", scope: !531, file: !532, line: 75, baseType: !529, size: 32, offset: 2080)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "conf_file", scope: !531, file: !532, line: 77, baseType: !129, size: 64, offset: 2112)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "conf_param", scope: !531, file: !532, line: 78, baseType: !129, size: 64, offset: 2176)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "conf_prefix", scope: !531, file: !532, line: 79, baseType: !129, size: 64, offset: 2240)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !531, file: !532, line: 80, baseType: !129, size: 64, offset: 2304)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "lock_file", scope: !531, file: !532, line: 81, baseType: !129, size: 64, offset: 2368)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !531, file: !532, line: 82, baseType: !129, size: 64, offset: 2432)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !523, file: !213, line: 121, baseType: !258, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "temp_pool", scope: !523, file: !213, line: 122, baseType: !258, size: 32, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "conf_file", scope: !523, file: !213, line: 123, baseType: !745, size: 32, offset: 160)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_conf_file_t", file: !213, line: 103, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !213, line: 98, size: 1344, elements: !748)
!748 = !{!749, !750, !751, !752}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !747, file: !213, line: 99, baseType: !295, size: 1216)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !747, file: !213, line: 100, baseType: !280, size: 32, offset: 1216)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !747, file: !213, line: 101, baseType: !280, size: 32, offset: 1248)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !747, file: !213, line: 102, baseType: !82, size: 32, offset: 1280)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !523, file: !213, line: 124, baseType: !203, size: 32, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !523, file: !213, line: 126, baseType: !16, size: 32, offset: 224)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "module_type", scope: !523, file: !213, line: 127, baseType: !82, size: 32, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_type", scope: !523, file: !213, line: 128, baseType: !82, size: 32, offset: 288)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !523, file: !213, line: 130, baseType: !758, size: 32, offset: 320)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_conf_handler_pt", file: !213, line: 112, baseType: !672)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "handler_conf", scope: !523, file: !213, line: 131, baseType: !6, size: 32, offset: 352)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!761 = !{!762, !763, !764, !765, !766, !802, !803, !804, !805, !806}
!762 = !DILocalVariable(name: "cf", arg: 1, scope: !518, file: !3, line: 133, type: !521)
!763 = !DILocalVariable(name: "names", arg: 2, scope: !518, file: !3, line: 133, type: !760)
!764 = !DILocalVariable(name: "n", arg: 3, scope: !518, file: !3, line: 133, type: !82)
!765 = !DILocalVariable(name: "s", scope: !518, file: !3, line: 135, type: !129)
!766 = !DILocalVariable(name: "u", scope: !518, file: !3, line: 136, type: !767)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_url_t", file: !453, line: 105, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 81, size: 1376, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !799, !800, !801}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !768, file: !453, line: 82, baseType: !129, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !768, file: !453, line: 83, baseType: !129, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "port_text", scope: !768, file: !453, line: 84, baseType: !129, size: 64, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "uri", scope: !768, file: !453, line: 85, baseType: !129, size: 64, offset: 192)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !768, file: !453, line: 87, baseType: !41, size: 16, offset: 256)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "default_port", scope: !768, file: !453, line: 88, baseType: !41, size: 16, offset: 272)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !768, file: !453, line: 89, baseType: !12, size: 32, offset: 288)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !768, file: !453, line: 91, baseType: !24, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "uri_part", scope: !768, file: !453, line: 92, baseType: !24, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "no_resolve", scope: !768, file: !453, line: 93, baseType: !24, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "no_port", scope: !768, file: !453, line: 95, baseType: !24, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "wildcard", scope: !768, file: !453, line: 96, baseType: !24, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !768, file: !453, line: 98, baseType: !430, size: 32, offset: 352)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !768, file: !453, line: 99, baseType: !784, size: 896, offset: 384)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_sockaddr_t", file: !453, line: 44, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !453, line: 35, size: 896, elements: !786)
!786 = !{!787, !788, !789, !790}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !785, file: !453, line: 36, baseType: !26, size: 128)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr_in", scope: !785, file: !453, line: 37, baseType: !66, size: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr_in6", scope: !785, file: !453, line: 39, baseType: !37, size: 224)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr_un", scope: !785, file: !453, line: 42, baseType: !791, size: 880)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !792, line: 17, size: 880, elements: !793)
!792 = !DIFile(filename: "/home/sam/Projects/emscripten/system/include/libc/sys/un.h", directory: "/home/sam/Projects/nginx-1.12.2")
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !791, file: !792, line: 18, baseType: !30, size: 16)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !791, file: !792, line: 19, baseType: !796, size: 864, offset: 16)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 864, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 108)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "addrs", scope: !768, file: !453, line: 101, baseType: !451, size: 32, offset: 1280)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "naddrs", scope: !768, file: !453, line: 102, baseType: !82, size: 32, offset: 1312)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !768, file: !453, line: 104, baseType: !6, size: 32, offset: 1344)
!802 = !DILocalVariable(name: "i", scope: !518, file: !3, line: 137, type: !82)
!803 = !DILocalVariable(name: "j", scope: !518, file: !3, line: 137, type: !82)
!804 = !DILocalVariable(name: "r", scope: !518, file: !3, line: 138, type: !163)
!805 = !DILocalVariable(name: "cln", scope: !518, file: !3, line: 139, type: !371)
!806 = !DILocalVariable(name: "rec", scope: !518, file: !3, line: 140, type: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_resolver_connection_t", file: !86, line: 53, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !86, line: 43, size: 608, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "udp", scope: !809, file: !86, line: 44, baseType: !544, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !809, file: !86, line: 45, baseType: !544, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "sockaddr", scope: !809, file: !86, line: 46, baseType: !25, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "socklen", scope: !809, file: !86, line: 47, baseType: !430, size: 32, offset: 96)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "server", scope: !809, file: !86, line: 48, baseType: !129, size: 64, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !809, file: !86, line: 49, baseType: !204, size: 320, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "read_buf", scope: !809, file: !86, line: 50, baseType: !280, size: 32, offset: 512)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !809, file: !86, line: 51, baseType: !280, size: 32, offset: 544)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !809, file: !86, line: 52, baseType: !163, size: 32, offset: 576)
!820 = !{!821, !821, i64 0}
!821 = !{!"any pointer", !822, i64 0}
!822 = !{!"omnipotent char", !823, i64 0}
!823 = !{!"Simple C/C++ TBAA"}
!824 = !DIExpression()
!825 = !DILocation(line: 133, column: 33, scope: !518)
!826 = !DILocation(line: 133, column: 48, scope: !518)
!827 = !{!828, !828, i64 0}
!828 = !{!"int", !822, i64 0}
!829 = !DILocation(line: 133, column: 66, scope: !518)
!830 = !DILocation(line: 135, column: 5, scope: !518)
!831 = !DILocation(line: 135, column: 33, scope: !518)
!832 = !DILocation(line: 136, column: 5, scope: !518)
!833 = !DILocation(line: 136, column: 33, scope: !518)
!834 = !DILocation(line: 137, column: 5, scope: !518)
!835 = !DILocation(line: 137, column: 33, scope: !518)
!836 = !DILocation(line: 137, column: 36, scope: !518)
!837 = !DILocation(line: 138, column: 5, scope: !518)
!838 = !DILocation(line: 138, column: 33, scope: !518)
!839 = !DILocation(line: 139, column: 5, scope: !518)
!840 = !DILocation(line: 139, column: 33, scope: !518)
!841 = !DILocation(line: 140, column: 5, scope: !518)
!842 = !DILocation(line: 140, column: 33, scope: !518)
!843 = !DILocation(line: 142, column: 32, scope: !518)
!844 = !DILocation(line: 142, column: 36, scope: !518)
!845 = !{!846, !821, i64 12}
!846 = !{!"ngx_conf_s", !821, i64 0, !821, i64 4, !821, i64 8, !821, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !821, i64 28, !828, i64 32, !828, i64 36, !821, i64 40, !821, i64 44}
!847 = !DILocation(line: 142, column: 11, scope: !518)
!848 = !DILocation(line: 142, column: 9, scope: !518)
!849 = !DILocation(line: 143, column: 9, scope: !850)
!850 = distinct !DILexicalBlock(scope: !518, file: !3, line: 143, column: 9)
!851 = !DILocation(line: 143, column: 13, scope: !850)
!852 = !DILocation(line: 143, column: 9, scope: !518)
!853 = !DILocation(line: 144, column: 9, scope: !854)
!854 = distinct !DILexicalBlock(scope: !850, file: !3, line: 143, column: 22)
!855 = !DILocation(line: 147, column: 5, scope: !518)
!856 = !DILocation(line: 147, column: 10, scope: !518)
!857 = !DILocation(line: 147, column: 18, scope: !518)
!858 = !{!859, !821, i64 0}
!859 = !{!"ngx_pool_cleanup_s", !821, i64 0, !821, i64 4, !821, i64 8}
!860 = !DILocation(line: 149, column: 44, scope: !518)
!861 = !DILocation(line: 149, column: 48, scope: !518)
!862 = !{!846, !821, i64 24}
!863 = !DILocation(line: 149, column: 9, scope: !518)
!864 = !DILocation(line: 149, column: 7, scope: !518)
!865 = !DILocation(line: 150, column: 9, scope: !866)
!866 = distinct !DILexicalBlock(scope: !518, file: !3, line: 150, column: 9)
!867 = !DILocation(line: 150, column: 11, scope: !866)
!868 = !DILocation(line: 150, column: 9, scope: !518)
!869 = !DILocation(line: 151, column: 9, scope: !870)
!870 = distinct !DILexicalBlock(scope: !866, file: !3, line: 150, column: 20)
!871 = !DILocation(line: 154, column: 17, scope: !518)
!872 = !DILocation(line: 154, column: 5, scope: !518)
!873 = !DILocation(line: 154, column: 10, scope: !518)
!874 = !DILocation(line: 154, column: 15, scope: !518)
!875 = !{!859, !821, i64 4}
!876 = !DILocation(line: 156, column: 48, scope: !518)
!877 = !DILocation(line: 156, column: 52, scope: !518)
!878 = !DILocation(line: 156, column: 16, scope: !518)
!879 = !DILocation(line: 156, column: 5, scope: !518)
!880 = !DILocation(line: 156, column: 8, scope: !518)
!881 = !DILocation(line: 156, column: 14, scope: !518)
!882 = !{!883, !821, i64 0}
!883 = !{!"ngx_resolver_s", !821, i64 0, !821, i64 4, !821, i64 8, !828, i64 12, !884, i64 16, !828, i64 36, !885, i64 40, !886, i64 52, !885, i64 72, !886, i64 84, !885, i64 104, !886, i64 116, !887, i64 136, !887, i64 144, !887, i64 152, !887, i64 160, !887, i64 168, !887, i64 176, !828, i64 184, !885, i64 188, !886, i64 200, !887, i64 220, !887, i64 228, !888, i64 236, !888, i64 240, !888, i64 244, !888, i64 248, !828, i64 252}
!884 = !{!"", !821, i64 0, !828, i64 4, !828, i64 8, !828, i64 12, !821, i64 16}
!885 = !{!"ngx_rbtree_s", !821, i64 0, !821, i64 4, !821, i64 8}
!886 = !{!"ngx_rbtree_node_s", !828, i64 0, !821, i64 4, !821, i64 8, !821, i64 12, !822, i64 16, !822, i64 17}
!887 = !{!"ngx_queue_s", !821, i64 0, !821, i64 4}
!888 = !{!"long", !822, i64 0}
!889 = !DILocation(line: 157, column: 9, scope: !890)
!890 = distinct !DILexicalBlock(scope: !518, file: !3, line: 157, column: 9)
!891 = !DILocation(line: 157, column: 12, scope: !890)
!892 = !DILocation(line: 157, column: 18, scope: !890)
!893 = !DILocation(line: 157, column: 9, scope: !518)
!894 = !DILocation(line: 158, column: 9, scope: !895)
!895 = distinct !DILexicalBlock(scope: !890, file: !3, line: 157, column: 27)
!896 = !DILocation(line: 161, column: 5, scope: !518)
!897 = !{!886, !822, i64 16}
!898 = !{!885, !821, i64 0}
!899 = !{!885, !821, i64 4}
!900 = !{!885, !821, i64 8}
!901 = !DILocation(line: 164, column: 5, scope: !518)
!902 = !DILocation(line: 167, column: 5, scope: !518)
!903 = !DILocation(line: 170, column: 5, scope: !518)
!904 = !{!887, !821, i64 0}
!905 = !{!887, !821, i64 4}
!906 = !DILocation(line: 171, column: 5, scope: !518)
!907 = !DILocation(line: 172, column: 5, scope: !518)
!908 = !DILocation(line: 174, column: 5, scope: !518)
!909 = !DILocation(line: 175, column: 5, scope: !518)
!910 = !DILocation(line: 176, column: 5, scope: !518)
!911 = !DILocation(line: 179, column: 5, scope: !518)
!912 = !DILocation(line: 179, column: 8, scope: !518)
!913 = !DILocation(line: 179, column: 13, scope: !518)
!914 = !{!883, !828, i64 184}
!915 = !DILocation(line: 181, column: 5, scope: !518)
!916 = !DILocation(line: 184, column: 5, scope: !518)
!917 = !DILocation(line: 186, column: 5, scope: !518)
!918 = !DILocation(line: 189, column: 5, scope: !518)
!919 = !DILocation(line: 189, column: 8, scope: !518)
!920 = !DILocation(line: 189, column: 15, scope: !518)
!921 = !DILocation(line: 189, column: 23, scope: !518)
!922 = !{!923, !821, i64 8}
!923 = !{!"ngx_event_s", !821, i64 0, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 4, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 5, !828, i64 6, !828, i64 6, !828, i64 6, !828, i64 6, !828, i64 6, !821, i64 8, !828, i64 12, !821, i64 16, !886, i64 20, !887, i64 40}
!924 = !DILocation(line: 190, column: 22, scope: !518)
!925 = !DILocation(line: 190, column: 5, scope: !518)
!926 = !DILocation(line: 190, column: 8, scope: !518)
!927 = !DILocation(line: 190, column: 15, scope: !518)
!928 = !DILocation(line: 190, column: 20, scope: !518)
!929 = !{!923, !821, i64 0}
!930 = !DILocation(line: 191, column: 22, scope: !518)
!931 = !DILocation(line: 191, column: 26, scope: !518)
!932 = !{!846, !821, i64 8}
!933 = !DILocation(line: 191, column: 33, scope: !518)
!934 = !DILocation(line: 191, column: 5, scope: !518)
!935 = !DILocation(line: 191, column: 8, scope: !518)
!936 = !DILocation(line: 191, column: 15, scope: !518)
!937 = !DILocation(line: 191, column: 19, scope: !518)
!938 = !{!923, !821, i64 16}
!939 = !DILocation(line: 192, column: 5, scope: !518)
!940 = !DILocation(line: 192, column: 8, scope: !518)
!941 = !DILocation(line: 192, column: 14, scope: !518)
!942 = !{!883, !828, i64 12}
!943 = !DILocation(line: 194, column: 5, scope: !518)
!944 = !DILocation(line: 194, column: 8, scope: !518)
!945 = !DILocation(line: 194, column: 23, scope: !518)
!946 = !{!883, !888, i64 236}
!947 = !DILocation(line: 195, column: 5, scope: !518)
!948 = !DILocation(line: 195, column: 8, scope: !518)
!949 = !DILocation(line: 195, column: 20, scope: !518)
!950 = !{!883, !888, i64 240}
!951 = !DILocation(line: 196, column: 5, scope: !518)
!952 = !DILocation(line: 196, column: 8, scope: !518)
!953 = !DILocation(line: 196, column: 15, scope: !518)
!954 = !{!883, !888, i64 244}
!955 = !DILocation(line: 197, column: 5, scope: !518)
!956 = !DILocation(line: 197, column: 8, scope: !518)
!957 = !DILocation(line: 197, column: 14, scope: !518)
!958 = !{!883, !888, i64 248}
!959 = !DILocation(line: 199, column: 15, scope: !518)
!960 = !DILocation(line: 199, column: 19, scope: !518)
!961 = !DILocation(line: 199, column: 26, scope: !518)
!962 = !DILocation(line: 199, column: 5, scope: !518)
!963 = !DILocation(line: 199, column: 8, scope: !518)
!964 = !DILocation(line: 199, column: 12, scope: !518)
!965 = !{!883, !821, i64 8}
!966 = !DILocation(line: 200, column: 5, scope: !518)
!967 = !DILocation(line: 200, column: 8, scope: !518)
!968 = !DILocation(line: 200, column: 18, scope: !518)
!969 = !{!883, !828, i64 252}
!970 = !DILocation(line: 202, column: 9, scope: !971)
!971 = distinct !DILexicalBlock(scope: !518, file: !3, line: 202, column: 9)
!972 = !DILocation(line: 202, column: 9, scope: !518)
!973 = !DILocation(line: 203, column: 29, scope: !974)
!974 = distinct !DILexicalBlock(scope: !975, file: !3, line: 203, column: 13)
!975 = distinct !DILexicalBlock(scope: !971, file: !3, line: 202, column: 12)
!976 = !DILocation(line: 203, column: 32, scope: !974)
!977 = !DILocation(line: 203, column: 45, scope: !974)
!978 = !DILocation(line: 203, column: 49, scope: !974)
!979 = !DILocation(line: 203, column: 55, scope: !974)
!980 = !DILocation(line: 203, column: 13, scope: !974)
!981 = !DILocation(line: 205, column: 13, scope: !974)
!982 = !DILocation(line: 203, column: 13, scope: !975)
!983 = !DILocation(line: 207, column: 13, scope: !984)
!984 = distinct !DILexicalBlock(scope: !974, file: !3, line: 206, column: 9)
!985 = !DILocation(line: 209, column: 5, scope: !975)
!986 = !DILocation(line: 211, column: 12, scope: !987)
!987 = distinct !DILexicalBlock(scope: !518, file: !3, line: 211, column: 5)
!988 = !DILocation(line: 211, column: 10, scope: !987)
!989 = !DILocation(line: 211, column: 17, scope: !990)
!990 = distinct !DILexicalBlock(scope: !987, file: !3, line: 211, column: 5)
!991 = !DILocation(line: 211, column: 21, scope: !990)
!992 = !DILocation(line: 211, column: 19, scope: !990)
!993 = !DILocation(line: 211, column: 5, scope: !987)
!994 = !DILocation(line: 212, column: 13, scope: !995)
!995 = distinct !DILexicalBlock(scope: !996, file: !3, line: 212, column: 13)
!996 = distinct !DILexicalBlock(scope: !990, file: !3, line: 211, column: 29)
!997 = !{!998, !821, i64 4}
!998 = !{!"", !828, i64 0, !821, i64 4}
!999 = !DILocation(line: 212, column: 53, scope: !995)
!1000 = !DILocation(line: 212, column: 13, scope: !996)
!1001 = !DILocation(line: 213, column: 21, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !995, file: !3, line: 212, column: 59)
!1003 = !DILocation(line: 213, column: 27, scope: !1002)
!1004 = !DILocation(line: 213, column: 30, scope: !1002)
!1005 = !{!998, !828, i64 0}
!1006 = !DILocation(line: 213, column: 34, scope: !1002)
!1007 = !DILocation(line: 213, column: 15, scope: !1002)
!1008 = !DILocation(line: 213, column: 19, scope: !1002)
!1009 = !DILocation(line: 214, column: 22, scope: !1002)
!1010 = !DILocation(line: 214, column: 28, scope: !1002)
!1011 = !DILocation(line: 214, column: 31, scope: !1002)
!1012 = !DILocation(line: 214, column: 36, scope: !1002)
!1013 = !DILocation(line: 214, column: 15, scope: !1002)
!1014 = !DILocation(line: 214, column: 20, scope: !1002)
!1015 = !DILocation(line: 216, column: 24, scope: !1002)
!1016 = !DILocation(line: 216, column: 13, scope: !1002)
!1017 = !DILocation(line: 216, column: 16, scope: !1002)
!1018 = !DILocation(line: 216, column: 22, scope: !1002)
!1019 = !DILocation(line: 218, column: 17, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 218, column: 17)
!1021 = !DILocation(line: 218, column: 20, scope: !1020)
!1022 = !DILocation(line: 218, column: 26, scope: !1020)
!1023 = !DILocation(line: 218, column: 17, scope: !1002)
!1024 = !DILocation(line: 219, column: 51, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1020, file: !3, line: 218, column: 49)
!1026 = !DILocation(line: 220, column: 62, scope: !1025)
!1027 = !DILocation(line: 220, column: 68, scope: !1025)
!1028 = !DILocation(line: 219, column: 17, scope: !1025)
!1029 = !DILocation(line: 221, column: 17, scope: !1025)
!1030 = !DILocation(line: 224, column: 13, scope: !1002)
!1031 = !DILocation(line: 228, column: 13, scope: !1032)
!1032 = distinct !DILexicalBlock(scope: !996, file: !3, line: 228, column: 13)
!1033 = !DILocation(line: 228, column: 52, scope: !1032)
!1034 = !DILocation(line: 228, column: 13, scope: !996)
!1035 = !DILocation(line: 230, column: 17, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !3, line: 230, column: 17)
!1037 = distinct !DILexicalBlock(scope: !1032, file: !3, line: 228, column: 58)
!1038 = !DILocation(line: 230, column: 53, scope: !1036)
!1039 = !DILocation(line: 230, column: 17, scope: !1037)
!1040 = !DILocation(line: 231, column: 17, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 230, column: 59)
!1042 = !DILocation(line: 231, column: 20, scope: !1041)
!1043 = !DILocation(line: 231, column: 25, scope: !1041)
!1044 = !DILocation(line: 233, column: 13, scope: !1041)
!1045 = !DILocation(line: 233, column: 24, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1036, file: !3, line: 233, column: 24)
!1047 = !DILocation(line: 233, column: 61, scope: !1046)
!1048 = !DILocation(line: 233, column: 24, scope: !1036)
!1049 = !DILocation(line: 234, column: 17, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1046, file: !3, line: 233, column: 67)
!1051 = !DILocation(line: 234, column: 20, scope: !1050)
!1052 = !DILocation(line: 234, column: 25, scope: !1050)
!1053 = !DILocation(line: 236, column: 13, scope: !1050)
!1054 = !DILocation(line: 237, column: 51, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1046, file: !3, line: 236, column: 20)
!1056 = !DILocation(line: 238, column: 62, scope: !1055)
!1057 = !DILocation(line: 238, column: 68, scope: !1055)
!1058 = !DILocation(line: 237, column: 17, scope: !1055)
!1059 = !DILocation(line: 239, column: 17, scope: !1055)
!1060 = !DILocation(line: 242, column: 13, scope: !1037)
!1061 = !DILocation(line: 246, column: 9, scope: !996)
!1062 = !DILocation(line: 248, column: 11, scope: !996)
!1063 = !DILocation(line: 248, column: 17, scope: !996)
!1064 = !DILocation(line: 248, column: 23, scope: !996)
!1065 = !{i64 0, i64 4, !827, i64 4, i64 4, !820}
!1066 = !DILocation(line: 249, column: 11, scope: !996)
!1067 = !DILocation(line: 249, column: 24, scope: !996)
!1068 = !{!1069, !1070, i64 34}
!1069 = !{!"", !998, i64 0, !998, i64 8, !998, i64 16, !998, i64 24, !1070, i64 32, !1070, i64 34, !828, i64 36, !828, i64 40, !828, i64 40, !828, i64 40, !828, i64 40, !828, i64 40, !828, i64 44, !822, i64 48, !821, i64 160, !828, i64 164, !821, i64 168}
!1070 = !{!"short", !822, i64 0}
!1071 = !DILocation(line: 251, column: 27, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !996, file: !3, line: 251, column: 13)
!1073 = !DILocation(line: 251, column: 31, scope: !1072)
!1074 = !DILocation(line: 251, column: 13, scope: !1072)
!1075 = !DILocation(line: 251, column: 41, scope: !1072)
!1076 = !DILocation(line: 251, column: 13, scope: !996)
!1077 = !DILocation(line: 252, column: 19, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1079, file: !3, line: 252, column: 17)
!1079 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 251, column: 52)
!1080 = !{!1069, !821, i64 168}
!1081 = !DILocation(line: 252, column: 17, scope: !1078)
!1082 = !DILocation(line: 252, column: 17, scope: !1079)
!1083 = !DILocation(line: 253, column: 51, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1078, file: !3, line: 252, column: 24)
!1085 = !DILocation(line: 255, column: 38, scope: !1084)
!1086 = !DILocation(line: 255, column: 46, scope: !1084)
!1087 = !DILocation(line: 253, column: 17, scope: !1084)
!1088 = !DILocation(line: 256, column: 13, scope: !1084)
!1089 = !DILocation(line: 258, column: 13, scope: !1079)
!1090 = !DILocation(line: 261, column: 33, scope: !996)
!1091 = !DILocation(line: 261, column: 36, scope: !996)
!1092 = !DILocation(line: 261, column: 51, scope: !996)
!1093 = !{!1069, !828, i64 164}
!1094 = !DILocation(line: 261, column: 15, scope: !996)
!1095 = !DILocation(line: 261, column: 13, scope: !996)
!1096 = !DILocation(line: 262, column: 13, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !996, file: !3, line: 262, column: 13)
!1098 = !DILocation(line: 262, column: 17, scope: !1097)
!1099 = !DILocation(line: 262, column: 13, scope: !996)
!1100 = !DILocation(line: 263, column: 13, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 262, column: 26)
!1102 = !DILocation(line: 266, column: 9, scope: !996)
!1103 = !DILocation(line: 268, column: 16, scope: !1104)
!1104 = distinct !DILexicalBlock(scope: !996, file: !3, line: 268, column: 9)
!1105 = !DILocation(line: 268, column: 14, scope: !1104)
!1106 = !DILocation(line: 268, column: 21, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 268, column: 9)
!1108 = !DILocation(line: 268, column: 27, scope: !1107)
!1109 = !DILocation(line: 268, column: 23, scope: !1107)
!1110 = !DILocation(line: 268, column: 9, scope: !1104)
!1111 = !DILocation(line: 269, column: 33, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 268, column: 40)
!1113 = !{!1069, !821, i64 160}
!1114 = !DILocation(line: 269, column: 39, scope: !1112)
!1115 = !DILocation(line: 269, column: 31, scope: !1112)
!1116 = !DILocation(line: 269, column: 42, scope: !1112)
!1117 = !{!1118, !821, i64 0}
!1118 = !{!"", !821, i64 0, !828, i64 4, !998, i64 8}
!1119 = !DILocation(line: 269, column: 13, scope: !1112)
!1120 = !DILocation(line: 269, column: 17, scope: !1112)
!1121 = !DILocation(line: 269, column: 20, scope: !1112)
!1122 = !DILocation(line: 269, column: 29, scope: !1112)
!1123 = !{!1124, !821, i64 8}
!1124 = !{!"", !821, i64 0, !821, i64 4, !821, i64 8, !828, i64 12, !998, i64 16, !1125, i64 24, !821, i64 64, !821, i64 68, !821, i64 72}
!1125 = !{!"ngx_log_s", !828, i64 0, !821, i64 4, !888, i64 8, !888, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !821, i64 28, !821, i64 32, !821, i64 36}
!1126 = !DILocation(line: 270, column: 32, scope: !1112)
!1127 = !DILocation(line: 270, column: 38, scope: !1112)
!1128 = !DILocation(line: 270, column: 30, scope: !1112)
!1129 = !DILocation(line: 270, column: 41, scope: !1112)
!1130 = !{!1118, !828, i64 4}
!1131 = !DILocation(line: 270, column: 13, scope: !1112)
!1132 = !DILocation(line: 270, column: 17, scope: !1112)
!1133 = !DILocation(line: 270, column: 20, scope: !1112)
!1134 = !DILocation(line: 270, column: 28, scope: !1112)
!1135 = !{!1124, !828, i64 12}
!1136 = !DILocation(line: 271, column: 13, scope: !1112)
!1137 = !DILocation(line: 271, column: 17, scope: !1112)
!1138 = !DILocation(line: 271, column: 20, scope: !1112)
!1139 = !DILocation(line: 271, column: 31, scope: !1112)
!1140 = !DILocation(line: 271, column: 37, scope: !1112)
!1141 = !DILocation(line: 271, column: 29, scope: !1112)
!1142 = !DILocation(line: 271, column: 40, scope: !1112)
!1143 = !DILocation(line: 272, column: 31, scope: !1112)
!1144 = !DILocation(line: 272, column: 13, scope: !1112)
!1145 = !DILocation(line: 272, column: 17, scope: !1112)
!1146 = !DILocation(line: 272, column: 20, scope: !1112)
!1147 = !DILocation(line: 272, column: 29, scope: !1112)
!1148 = !{!1124, !821, i64 72}
!1149 = !DILocation(line: 273, column: 9, scope: !1112)
!1150 = !DILocation(line: 268, column: 36, scope: !1107)
!1151 = !DILocation(line: 268, column: 9, scope: !1107)
!1152 = distinct !{!1152, !1110, !1153}
!1153 = !DILocation(line: 273, column: 9, scope: !1104)
!1154 = !DILocation(line: 274, column: 5, scope: !996)
!1155 = !DILocation(line: 211, column: 25, scope: !990)
!1156 = !DILocation(line: 211, column: 5, scope: !990)
!1157 = distinct !{!1157, !993, !1158}
!1158 = !DILocation(line: 274, column: 5, scope: !987)
!1159 = !DILocation(line: 276, column: 12, scope: !518)
!1160 = !DILocation(line: 276, column: 5, scope: !518)
!1161 = !DILocation(line: 277, column: 1, scope: !518)
!1162 = distinct !DISubprogram(name: "ngx_resolver_cleanup", scope: !3, file: !3, line: 281, type: !378, isLocal: true, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DILocalVariable(name: "data", arg: 1, scope: !1162, file: !3, line: 281, type: !16)
!1165 = !DILocalVariable(name: "r", scope: !1162, file: !3, line: 283, type: !163)
!1166 = !DILocalVariable(name: "i", scope: !1162, file: !3, line: 285, type: !82)
!1167 = !DILocalVariable(name: "rec", scope: !1162, file: !3, line: 286, type: !807)
!1168 = !DILocation(line: 281, column: 28, scope: !1162)
!1169 = !DILocation(line: 283, column: 5, scope: !1162)
!1170 = !DILocation(line: 283, column: 22, scope: !1162)
!1171 = !DILocation(line: 283, column: 26, scope: !1162)
!1172 = !DILocation(line: 285, column: 5, scope: !1162)
!1173 = !DILocation(line: 285, column: 33, scope: !1162)
!1174 = !DILocation(line: 286, column: 5, scope: !1162)
!1175 = !DILocation(line: 286, column: 33, scope: !1162)
!1176 = !DILocation(line: 288, column: 9, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 288, column: 9)
!1178 = !DILocation(line: 288, column: 9, scope: !1162)
!1179 = !DILocation(line: 292, column: 35, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 288, column: 12)
!1181 = !DILocation(line: 292, column: 39, scope: !1180)
!1182 = !DILocation(line: 292, column: 42, scope: !1180)
!1183 = !DILocation(line: 292, column: 9, scope: !1180)
!1184 = !DILocation(line: 294, column: 35, scope: !1180)
!1185 = !DILocation(line: 294, column: 39, scope: !1180)
!1186 = !DILocation(line: 294, column: 42, scope: !1180)
!1187 = !DILocation(line: 294, column: 9, scope: !1180)
!1188 = !DILocation(line: 296, column: 35, scope: !1180)
!1189 = !DILocation(line: 296, column: 39, scope: !1180)
!1190 = !DILocation(line: 296, column: 42, scope: !1180)
!1191 = !DILocation(line: 296, column: 9, scope: !1180)
!1192 = !DILocation(line: 299, column: 35, scope: !1180)
!1193 = !DILocation(line: 299, column: 39, scope: !1180)
!1194 = !DILocation(line: 299, column: 42, scope: !1180)
!1195 = !DILocation(line: 299, column: 9, scope: !1180)
!1196 = !DILocation(line: 302, column: 13, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1180, file: !3, line: 302, column: 13)
!1198 = !DILocation(line: 302, column: 16, scope: !1197)
!1199 = !DILocation(line: 302, column: 13, scope: !1180)
!1200 = !DILocation(line: 303, column: 17, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1202, file: !3, line: 303, column: 17)
!1202 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 302, column: 23)
!1203 = !DILocation(line: 303, column: 20, scope: !1201)
!1204 = !DILocation(line: 303, column: 27, scope: !1201)
!1205 = !DILocation(line: 303, column: 17, scope: !1202)
!1206 = !DILocation(line: 304, column: 31, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1201, file: !3, line: 303, column: 38)
!1208 = !DILocation(line: 304, column: 34, scope: !1207)
!1209 = !DILocation(line: 304, column: 17, scope: !1207)
!1210 = !DILocation(line: 305, column: 13, scope: !1207)
!1211 = !DILocation(line: 307, column: 22, scope: !1202)
!1212 = !DILocation(line: 307, column: 25, scope: !1202)
!1213 = !DILocation(line: 307, column: 13, scope: !1202)
!1214 = !DILocation(line: 308, column: 9, scope: !1202)
!1215 = !DILocation(line: 311, column: 15, scope: !1180)
!1216 = !DILocation(line: 311, column: 18, scope: !1180)
!1217 = !DILocation(line: 311, column: 30, scope: !1180)
!1218 = !{!883, !821, i64 16}
!1219 = !DILocation(line: 311, column: 13, scope: !1180)
!1220 = !DILocation(line: 313, column: 16, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1180, file: !3, line: 313, column: 9)
!1222 = !DILocation(line: 313, column: 14, scope: !1221)
!1223 = !DILocation(line: 313, column: 21, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1221, file: !3, line: 313, column: 9)
!1225 = !DILocation(line: 313, column: 25, scope: !1224)
!1226 = !DILocation(line: 313, column: 28, scope: !1224)
!1227 = !DILocation(line: 313, column: 40, scope: !1224)
!1228 = !{!883, !828, i64 20}
!1229 = !DILocation(line: 313, column: 23, scope: !1224)
!1230 = !DILocation(line: 313, column: 9, scope: !1221)
!1231 = !DILocation(line: 314, column: 17, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 314, column: 17)
!1233 = distinct !DILexicalBlock(scope: !1224, file: !3, line: 313, column: 52)
!1234 = !DILocation(line: 314, column: 21, scope: !1232)
!1235 = !DILocation(line: 314, column: 24, scope: !1232)
!1236 = !{!1124, !821, i64 0}
!1237 = !DILocation(line: 314, column: 17, scope: !1233)
!1238 = !DILocation(line: 315, column: 38, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1232, file: !3, line: 314, column: 29)
!1240 = !DILocation(line: 315, column: 42, scope: !1239)
!1241 = !DILocation(line: 315, column: 45, scope: !1239)
!1242 = !DILocation(line: 315, column: 17, scope: !1239)
!1243 = !DILocation(line: 316, column: 13, scope: !1239)
!1244 = !DILocation(line: 318, column: 17, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 318, column: 17)
!1246 = !DILocation(line: 318, column: 21, scope: !1245)
!1247 = !DILocation(line: 318, column: 24, scope: !1245)
!1248 = !{!1124, !821, i64 4}
!1249 = !DILocation(line: 318, column: 17, scope: !1233)
!1250 = !DILocation(line: 319, column: 38, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1245, file: !3, line: 318, column: 29)
!1252 = !DILocation(line: 319, column: 42, scope: !1251)
!1253 = !DILocation(line: 319, column: 45, scope: !1251)
!1254 = !DILocation(line: 319, column: 17, scope: !1251)
!1255 = !DILocation(line: 320, column: 13, scope: !1251)
!1256 = !DILocation(line: 322, column: 17, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 322, column: 17)
!1258 = !DILocation(line: 322, column: 21, scope: !1257)
!1259 = !DILocation(line: 322, column: 24, scope: !1257)
!1260 = !{!1124, !821, i64 64}
!1261 = !DILocation(line: 322, column: 17, scope: !1233)
!1262 = !DILocation(line: 323, column: 35, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 322, column: 34)
!1264 = !DILocation(line: 323, column: 38, scope: !1263)
!1265 = !DILocation(line: 323, column: 42, scope: !1263)
!1266 = !DILocation(line: 323, column: 45, scope: !1263)
!1267 = !DILocation(line: 323, column: 55, scope: !1263)
!1268 = !{!1269, !821, i64 16}
!1269 = !{!"ngx_buf_s", !821, i64 0, !821, i64 4, !828, i64 8, !828, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !821, i64 28, !821, i64 32, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 36, !828, i64 37, !828, i64 37, !828, i64 37, !828, i64 40}
!1270 = !DILocation(line: 323, column: 17, scope: !1263)
!1271 = !DILocation(line: 324, column: 35, scope: !1263)
!1272 = !DILocation(line: 324, column: 38, scope: !1263)
!1273 = !DILocation(line: 324, column: 42, scope: !1263)
!1274 = !DILocation(line: 324, column: 45, scope: !1263)
!1275 = !DILocation(line: 324, column: 17, scope: !1263)
!1276 = !DILocation(line: 325, column: 13, scope: !1263)
!1277 = !DILocation(line: 327, column: 17, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 327, column: 17)
!1279 = !DILocation(line: 327, column: 21, scope: !1278)
!1280 = !DILocation(line: 327, column: 24, scope: !1278)
!1281 = !{!1124, !821, i64 68}
!1282 = !DILocation(line: 327, column: 17, scope: !1233)
!1283 = !DILocation(line: 328, column: 35, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1278, file: !3, line: 327, column: 35)
!1285 = !DILocation(line: 328, column: 38, scope: !1284)
!1286 = !DILocation(line: 328, column: 42, scope: !1284)
!1287 = !DILocation(line: 328, column: 45, scope: !1284)
!1288 = !DILocation(line: 328, column: 56, scope: !1284)
!1289 = !DILocation(line: 328, column: 17, scope: !1284)
!1290 = !DILocation(line: 329, column: 35, scope: !1284)
!1291 = !DILocation(line: 329, column: 38, scope: !1284)
!1292 = !DILocation(line: 329, column: 42, scope: !1284)
!1293 = !DILocation(line: 329, column: 45, scope: !1284)
!1294 = !DILocation(line: 329, column: 17, scope: !1284)
!1295 = !DILocation(line: 330, column: 13, scope: !1284)
!1296 = !DILocation(line: 331, column: 9, scope: !1233)
!1297 = !DILocation(line: 313, column: 48, scope: !1224)
!1298 = !DILocation(line: 313, column: 9, scope: !1224)
!1299 = distinct !{!1299, !1230, !1300}
!1300 = !DILocation(line: 331, column: 9, scope: !1221)
!1301 = !DILocation(line: 333, column: 18, scope: !1180)
!1302 = !DILocation(line: 333, column: 9, scope: !1180)
!1303 = !DILocation(line: 334, column: 5, scope: !1180)
!1304 = !DILocation(line: 335, column: 1, scope: !1162)
!1305 = distinct !DISubprogram(name: "ngx_resolver_rbtree_insert_value", scope: !3, file: !3, line: 3550, type: !393, isLocal: true, isDefinition: true, scopeLine: 3552, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1312, !1313}
!1307 = !DILocalVariable(name: "temp", arg: 1, scope: !1305, file: !3, line: 3550, type: !95)
!1308 = !DILocalVariable(name: "node", arg: 2, scope: !1305, file: !3, line: 3551, type: !95)
!1309 = !DILocalVariable(name: "sentinel", arg: 3, scope: !1305, file: !3, line: 3551, type: !95)
!1310 = !DILocalVariable(name: "p", scope: !1305, file: !3, line: 3553, type: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 32)
!1312 = !DILocalVariable(name: "rn", scope: !1305, file: !3, line: 3554, type: !84)
!1313 = !DILocalVariable(name: "rn_temp", scope: !1305, file: !3, line: 3554, type: !84)
!1314 = !DILocation(line: 3550, column: 53, scope: !1305)
!1315 = !DILocation(line: 3551, column: 24, scope: !1305)
!1316 = !DILocation(line: 3551, column: 49, scope: !1305)
!1317 = !DILocation(line: 3553, column: 5, scope: !1305)
!1318 = !DILocation(line: 3553, column: 28, scope: !1305)
!1319 = !DILocation(line: 3554, column: 5, scope: !1305)
!1320 = !DILocation(line: 3554, column: 28, scope: !1305)
!1321 = !DILocation(line: 3554, column: 33, scope: !1305)
!1322 = !DILocation(line: 3556, column: 5, scope: !1305)
!1323 = !DILocation(line: 3558, column: 13, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 3558, column: 13)
!1325 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 3556, column: 16)
!1326 = distinct !DILexicalBlock(scope: !1327, file: !3, line: 3556, column: 5)
!1327 = distinct !DILexicalBlock(scope: !1305, file: !3, line: 3556, column: 5)
!1328 = !DILocation(line: 3558, column: 19, scope: !1324)
!1329 = !{!886, !828, i64 0}
!1330 = !DILocation(line: 3558, column: 25, scope: !1324)
!1331 = !DILocation(line: 3558, column: 31, scope: !1324)
!1332 = !DILocation(line: 3558, column: 23, scope: !1324)
!1333 = !DILocation(line: 3558, column: 13, scope: !1325)
!1334 = !DILocation(line: 3560, column: 18, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1324, file: !3, line: 3558, column: 36)
!1336 = !DILocation(line: 3560, column: 24, scope: !1335)
!1337 = !DILocation(line: 3560, column: 15, scope: !1335)
!1338 = !DILocation(line: 3562, column: 9, scope: !1335)
!1339 = !DILocation(line: 3562, column: 20, scope: !1340)
!1340 = distinct !DILexicalBlock(scope: !1324, file: !3, line: 3562, column: 20)
!1341 = !DILocation(line: 3562, column: 26, scope: !1340)
!1342 = !DILocation(line: 3562, column: 32, scope: !1340)
!1343 = !DILocation(line: 3562, column: 38, scope: !1340)
!1344 = !DILocation(line: 3562, column: 30, scope: !1340)
!1345 = !DILocation(line: 3562, column: 20, scope: !1324)
!1346 = !DILocation(line: 3564, column: 18, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 3562, column: 43)
!1348 = !DILocation(line: 3564, column: 24, scope: !1347)
!1349 = !DILocation(line: 3564, column: 15, scope: !1347)
!1350 = !DILocation(line: 3566, column: 9, scope: !1347)
!1351 = !DILocation(line: 3568, column: 18, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 3566, column: 16)
!1353 = !DILocation(line: 3568, column: 16, scope: !1352)
!1354 = !DILocation(line: 3569, column: 23, scope: !1352)
!1355 = !DILocation(line: 3569, column: 21, scope: !1352)
!1356 = !DILocation(line: 3571, column: 31, scope: !1352)
!1357 = !DILocation(line: 3571, column: 35, scope: !1352)
!1358 = !{!1359, !821, i64 28}
!1359 = !{!"", !886, i64 0, !887, i64 20, !821, i64 28, !1360, i64 32, !1070, i64 48, !1070, i64 50, !821, i64 52, !821, i64 56, !822, i64 60, !822, i64 64, !1070, i64 66, !1070, i64 68, !1070, i64 70, !822, i64 72, !1070, i64 88, !888, i64 92, !888, i64 96, !828, i64 100, !828, i64 104, !828, i64 104, !828, i64 108, !821, i64 112}
!1360 = !{!"in6_addr", !822, i64 0}
!1361 = !DILocation(line: 3571, column: 41, scope: !1352)
!1362 = !DILocation(line: 3571, column: 50, scope: !1352)
!1363 = !DILocation(line: 3571, column: 56, scope: !1352)
!1364 = !DILocation(line: 3571, column: 60, scope: !1352)
!1365 = !{!1359, !1070, i64 48}
!1366 = !DILocation(line: 3571, column: 66, scope: !1352)
!1367 = !DILocation(line: 3571, column: 75, scope: !1352)
!1368 = !DILocation(line: 3571, column: 18, scope: !1352)
!1369 = !DILocation(line: 3572, column: 18, scope: !1352)
!1370 = !DILocation(line: 3571, column: 17, scope: !1352)
!1371 = !DILocation(line: 3572, column: 26, scope: !1352)
!1372 = !DILocation(line: 3572, column: 32, scope: !1352)
!1373 = !DILocation(line: 3572, column: 40, scope: !1352)
!1374 = !DILocation(line: 3572, column: 46, scope: !1352)
!1375 = !DILocation(line: 3571, column: 15, scope: !1352)
!1376 = !DILocation(line: 3575, column: 14, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 3575, column: 13)
!1378 = !DILocation(line: 3575, column: 13, scope: !1377)
!1379 = !DILocation(line: 3575, column: 19, scope: !1377)
!1380 = !DILocation(line: 3575, column: 16, scope: !1377)
!1381 = !DILocation(line: 3575, column: 13, scope: !1325)
!1382 = !DILocation(line: 3576, column: 13, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1377, file: !3, line: 3575, column: 29)
!1384 = !DILocation(line: 3579, column: 17, scope: !1325)
!1385 = !DILocation(line: 3579, column: 16, scope: !1325)
!1386 = !DILocation(line: 3579, column: 14, scope: !1325)
!1387 = !DILocation(line: 3556, column: 5, scope: !1326)
!1388 = distinct !{!1388, !1389, !1390}
!1389 = !DILocation(line: 3556, column: 5, scope: !1327)
!1390 = !DILocation(line: 3580, column: 5, scope: !1327)
!1391 = !DILocation(line: 3582, column: 10, scope: !1305)
!1392 = !DILocation(line: 3582, column: 6, scope: !1305)
!1393 = !DILocation(line: 3582, column: 8, scope: !1305)
!1394 = !DILocation(line: 3583, column: 20, scope: !1305)
!1395 = !DILocation(line: 3583, column: 5, scope: !1305)
!1396 = !DILocation(line: 3583, column: 11, scope: !1305)
!1397 = !DILocation(line: 3583, column: 18, scope: !1305)
!1398 = !{!886, !821, i64 12}
!1399 = !DILocation(line: 3584, column: 18, scope: !1305)
!1400 = !DILocation(line: 3584, column: 5, scope: !1305)
!1401 = !DILocation(line: 3584, column: 11, scope: !1305)
!1402 = !DILocation(line: 3584, column: 16, scope: !1305)
!1403 = !{!886, !821, i64 4}
!1404 = !DILocation(line: 3585, column: 19, scope: !1305)
!1405 = !DILocation(line: 3585, column: 5, scope: !1305)
!1406 = !DILocation(line: 3585, column: 11, scope: !1305)
!1407 = !DILocation(line: 3585, column: 17, scope: !1305)
!1408 = !{!886, !821, i64 8}
!1409 = !DILocation(line: 3586, column: 5, scope: !1305)
!1410 = !DILocation(line: 3587, column: 1, scope: !1305)
!1411 = distinct !DISubprogram(name: "ngx_resolver_rbtree_insert_addr6_value", scope: !3, file: !3, line: 3593, type: !393, isLocal: true, isDefinition: true, scopeLine: 3595, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1417, !1418}
!1413 = !DILocalVariable(name: "temp", arg: 1, scope: !1411, file: !3, line: 3593, type: !95)
!1414 = !DILocalVariable(name: "node", arg: 2, scope: !1411, file: !3, line: 3594, type: !95)
!1415 = !DILocalVariable(name: "sentinel", arg: 3, scope: !1411, file: !3, line: 3594, type: !95)
!1416 = !DILocalVariable(name: "p", scope: !1411, file: !3, line: 3596, type: !1311)
!1417 = !DILocalVariable(name: "rn", scope: !1411, file: !3, line: 3597, type: !84)
!1418 = !DILocalVariable(name: "rn_temp", scope: !1411, file: !3, line: 3597, type: !84)
!1419 = !DILocation(line: 3593, column: 59, scope: !1411)
!1420 = !DILocation(line: 3594, column: 24, scope: !1411)
!1421 = !DILocation(line: 3594, column: 49, scope: !1411)
!1422 = !DILocation(line: 3596, column: 5, scope: !1411)
!1423 = !DILocation(line: 3596, column: 28, scope: !1411)
!1424 = !DILocation(line: 3597, column: 5, scope: !1411)
!1425 = !DILocation(line: 3597, column: 28, scope: !1411)
!1426 = !DILocation(line: 3597, column: 33, scope: !1411)
!1427 = !DILocation(line: 3599, column: 5, scope: !1411)
!1428 = !DILocation(line: 3601, column: 13, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1430, file: !3, line: 3601, column: 13)
!1430 = distinct !DILexicalBlock(scope: !1431, file: !3, line: 3599, column: 16)
!1431 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 3599, column: 5)
!1432 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 3599, column: 5)
!1433 = !DILocation(line: 3601, column: 19, scope: !1429)
!1434 = !DILocation(line: 3601, column: 25, scope: !1429)
!1435 = !DILocation(line: 3601, column: 31, scope: !1429)
!1436 = !DILocation(line: 3601, column: 23, scope: !1429)
!1437 = !DILocation(line: 3601, column: 13, scope: !1430)
!1438 = !DILocation(line: 3603, column: 18, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1429, file: !3, line: 3601, column: 36)
!1440 = !DILocation(line: 3603, column: 24, scope: !1439)
!1441 = !DILocation(line: 3603, column: 15, scope: !1439)
!1442 = !DILocation(line: 3605, column: 9, scope: !1439)
!1443 = !DILocation(line: 3605, column: 20, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1429, file: !3, line: 3605, column: 20)
!1445 = !DILocation(line: 3605, column: 26, scope: !1444)
!1446 = !DILocation(line: 3605, column: 32, scope: !1444)
!1447 = !DILocation(line: 3605, column: 38, scope: !1444)
!1448 = !DILocation(line: 3605, column: 30, scope: !1444)
!1449 = !DILocation(line: 3605, column: 20, scope: !1429)
!1450 = !DILocation(line: 3607, column: 18, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 3605, column: 43)
!1452 = !DILocation(line: 3607, column: 24, scope: !1451)
!1453 = !DILocation(line: 3607, column: 15, scope: !1451)
!1454 = !DILocation(line: 3609, column: 9, scope: !1451)
!1455 = !DILocation(line: 3611, column: 18, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 3609, column: 16)
!1457 = !DILocation(line: 3611, column: 16, scope: !1456)
!1458 = !DILocation(line: 3612, column: 23, scope: !1456)
!1459 = !DILocation(line: 3612, column: 21, scope: !1456)
!1460 = !DILocation(line: 3614, column: 18, scope: !1456)
!1461 = !DILocation(line: 3615, column: 18, scope: !1456)
!1462 = !DILocation(line: 3614, column: 17, scope: !1456)
!1463 = !DILocation(line: 3615, column: 26, scope: !1456)
!1464 = !DILocation(line: 3615, column: 32, scope: !1456)
!1465 = !DILocation(line: 3615, column: 40, scope: !1456)
!1466 = !DILocation(line: 3615, column: 46, scope: !1456)
!1467 = !DILocation(line: 3614, column: 15, scope: !1456)
!1468 = !DILocation(line: 3618, column: 14, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1430, file: !3, line: 3618, column: 13)
!1470 = !DILocation(line: 3618, column: 13, scope: !1469)
!1471 = !DILocation(line: 3618, column: 19, scope: !1469)
!1472 = !DILocation(line: 3618, column: 16, scope: !1469)
!1473 = !DILocation(line: 3618, column: 13, scope: !1430)
!1474 = !DILocation(line: 3619, column: 13, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1469, file: !3, line: 3618, column: 29)
!1476 = !DILocation(line: 3622, column: 17, scope: !1430)
!1477 = !DILocation(line: 3622, column: 16, scope: !1430)
!1478 = !DILocation(line: 3622, column: 14, scope: !1430)
!1479 = !DILocation(line: 3599, column: 5, scope: !1431)
!1480 = distinct !{!1480, !1481, !1482}
!1481 = !DILocation(line: 3599, column: 5, scope: !1432)
!1482 = !DILocation(line: 3623, column: 5, scope: !1432)
!1483 = !DILocation(line: 3625, column: 10, scope: !1411)
!1484 = !DILocation(line: 3625, column: 6, scope: !1411)
!1485 = !DILocation(line: 3625, column: 8, scope: !1411)
!1486 = !DILocation(line: 3626, column: 20, scope: !1411)
!1487 = !DILocation(line: 3626, column: 5, scope: !1411)
!1488 = !DILocation(line: 3626, column: 11, scope: !1411)
!1489 = !DILocation(line: 3626, column: 18, scope: !1411)
!1490 = !DILocation(line: 3627, column: 18, scope: !1411)
!1491 = !DILocation(line: 3627, column: 5, scope: !1411)
!1492 = !DILocation(line: 3627, column: 11, scope: !1411)
!1493 = !DILocation(line: 3627, column: 16, scope: !1411)
!1494 = !DILocation(line: 3628, column: 19, scope: !1411)
!1495 = !DILocation(line: 3628, column: 5, scope: !1411)
!1496 = !DILocation(line: 3628, column: 11, scope: !1411)
!1497 = !DILocation(line: 3628, column: 17, scope: !1411)
!1498 = !DILocation(line: 3629, column: 5, scope: !1411)
!1499 = !DILocation(line: 3630, column: 1, scope: !1411)
!1500 = distinct !DISubprogram(name: "ngx_resolver_resend_handler", scope: !3, file: !3, line: 1435, type: !199, isLocal: true, isDefinition: true, scopeLine: 1436, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1502 = !DILocalVariable(name: "ev", arg: 1, scope: !1500, file: !3, line: 1435, type: !168)
!1503 = !DILocalVariable(name: "timer", scope: !1500, file: !3, line: 1437, type: !19)
!1504 = !DILocalVariable(name: "atimer", scope: !1500, file: !3, line: 1437, type: !19)
!1505 = !DILocalVariable(name: "stimer", scope: !1500, file: !3, line: 1437, type: !19)
!1506 = !DILocalVariable(name: "ntimer", scope: !1500, file: !3, line: 1437, type: !19)
!1507 = !DILocalVariable(name: "a6timer", scope: !1500, file: !3, line: 1439, type: !19)
!1508 = !DILocalVariable(name: "r", scope: !1500, file: !3, line: 1441, type: !163)
!1509 = !DILocation(line: 1435, column: 42, scope: !1500)
!1510 = !DILocation(line: 1437, column: 5, scope: !1500)
!1511 = !DILocation(line: 1437, column: 22, scope: !1500)
!1512 = !DILocation(line: 1437, column: 29, scope: !1500)
!1513 = !DILocation(line: 1437, column: 37, scope: !1500)
!1514 = !DILocation(line: 1437, column: 45, scope: !1500)
!1515 = !DILocation(line: 1439, column: 5, scope: !1500)
!1516 = !DILocation(line: 1439, column: 22, scope: !1500)
!1517 = !DILocation(line: 1441, column: 5, scope: !1500)
!1518 = !DILocation(line: 1441, column: 22, scope: !1500)
!1519 = !DILocation(line: 1443, column: 9, scope: !1500)
!1520 = !DILocation(line: 1443, column: 13, scope: !1500)
!1521 = !DILocation(line: 1443, column: 7, scope: !1500)
!1522 = !DILocation(line: 1450, column: 34, scope: !1500)
!1523 = !DILocation(line: 1450, column: 38, scope: !1500)
!1524 = !DILocation(line: 1450, column: 41, scope: !1500)
!1525 = !DILocation(line: 1450, column: 55, scope: !1500)
!1526 = !DILocation(line: 1450, column: 58, scope: !1500)
!1527 = !DILocation(line: 1450, column: 14, scope: !1500)
!1528 = !DILocation(line: 1450, column: 12, scope: !1500)
!1529 = !{!888, !888, i64 0}
!1530 = !DILocation(line: 1452, column: 34, scope: !1500)
!1531 = !DILocation(line: 1452, column: 38, scope: !1500)
!1532 = !DILocation(line: 1452, column: 41, scope: !1500)
!1533 = !DILocation(line: 1452, column: 54, scope: !1500)
!1534 = !DILocation(line: 1452, column: 57, scope: !1500)
!1535 = !DILocation(line: 1452, column: 14, scope: !1500)
!1536 = !DILocation(line: 1452, column: 12, scope: !1500)
!1537 = !DILocation(line: 1458, column: 34, scope: !1500)
!1538 = !DILocation(line: 1458, column: 38, scope: !1500)
!1539 = !DILocation(line: 1458, column: 41, scope: !1500)
!1540 = !DILocation(line: 1458, column: 55, scope: !1500)
!1541 = !DILocation(line: 1458, column: 58, scope: !1500)
!1542 = !DILocation(line: 1458, column: 14, scope: !1500)
!1543 = !DILocation(line: 1458, column: 12, scope: !1500)
!1544 = !DILocation(line: 1466, column: 35, scope: !1500)
!1545 = !DILocation(line: 1466, column: 39, scope: !1500)
!1546 = !DILocation(line: 1466, column: 42, scope: !1500)
!1547 = !DILocation(line: 1466, column: 57, scope: !1500)
!1548 = !DILocation(line: 1466, column: 60, scope: !1500)
!1549 = !DILocation(line: 1466, column: 15, scope: !1500)
!1550 = !DILocation(line: 1466, column: 13, scope: !1500)
!1551 = !DILocation(line: 1472, column: 13, scope: !1500)
!1552 = !DILocation(line: 1472, column: 11, scope: !1500)
!1553 = !DILocation(line: 1474, column: 9, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1474, column: 9)
!1555 = !DILocation(line: 1474, column: 15, scope: !1554)
!1556 = !DILocation(line: 1474, column: 9, scope: !1500)
!1557 = !DILocation(line: 1475, column: 17, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1554, file: !3, line: 1474, column: 21)
!1559 = !DILocation(line: 1475, column: 15, scope: !1558)
!1560 = !DILocation(line: 1477, column: 5, scope: !1558)
!1561 = !DILocation(line: 1477, column: 16, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1554, file: !3, line: 1477, column: 16)
!1563 = !DILocation(line: 1477, column: 16, scope: !1554)
!1564 = !DILocation(line: 1478, column: 17, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 1477, column: 24)
!1566 = !DILocation(line: 1478, column: 15, scope: !1565)
!1567 = !DILocation(line: 1479, column: 5, scope: !1565)
!1568 = !DILocation(line: 1481, column: 9, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1481, column: 9)
!1570 = !DILocation(line: 1481, column: 15, scope: !1569)
!1571 = !DILocation(line: 1481, column: 9, scope: !1500)
!1572 = !DILocation(line: 1482, column: 17, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 1481, column: 21)
!1574 = !DILocation(line: 1482, column: 15, scope: !1573)
!1575 = !DILocation(line: 1484, column: 5, scope: !1573)
!1576 = !DILocation(line: 1484, column: 16, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 1484, column: 16)
!1578 = !DILocation(line: 1484, column: 16, scope: !1569)
!1579 = !DILocation(line: 1485, column: 17, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 1484, column: 24)
!1581 = !DILocation(line: 1485, column: 15, scope: !1580)
!1582 = !DILocation(line: 1486, column: 5, scope: !1580)
!1583 = !DILocation(line: 1490, column: 9, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1490, column: 9)
!1585 = !DILocation(line: 1490, column: 15, scope: !1584)
!1586 = !DILocation(line: 1490, column: 9, scope: !1500)
!1587 = !DILocation(line: 1491, column: 17, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 1490, column: 21)
!1589 = !DILocation(line: 1491, column: 15, scope: !1588)
!1590 = !DILocation(line: 1493, column: 5, scope: !1588)
!1591 = !DILocation(line: 1493, column: 16, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 1493, column: 16)
!1593 = !DILocation(line: 1493, column: 16, scope: !1584)
!1594 = !DILocation(line: 1494, column: 17, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 1493, column: 25)
!1596 = !DILocation(line: 1494, column: 15, scope: !1595)
!1597 = !DILocation(line: 1495, column: 5, scope: !1595)
!1598 = !DILocation(line: 1499, column: 9, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1500, file: !3, line: 1499, column: 9)
!1600 = !DILocation(line: 1499, column: 9, scope: !1500)
!1601 = !DILocation(line: 1500, column: 23, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 1499, column: 16)
!1603 = !DILocation(line: 1500, column: 26, scope: !1602)
!1604 = !DILocation(line: 1500, column: 47, scope: !1602)
!1605 = !DILocation(line: 1500, column: 53, scope: !1602)
!1606 = !DILocation(line: 1500, column: 9, scope: !1602)
!1607 = !DILocation(line: 1501, column: 5, scope: !1602)
!1608 = !DILocation(line: 1502, column: 1, scope: !1500)
!1609 = distinct !DISubprogram(name: "ngx_array_init", scope: !250, file: !250, line: 32, type: !1610, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1612)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!8, !527, !258, !82, !134}
!1612 = !{!1613, !1614, !1615, !1616}
!1613 = !DILocalVariable(name: "array", arg: 1, scope: !1609, file: !250, line: 32, type: !527)
!1614 = !DILocalVariable(name: "pool", arg: 2, scope: !1609, file: !250, line: 32, type: !258)
!1615 = !DILocalVariable(name: "n", arg: 3, scope: !1609, file: !250, line: 32, type: !82)
!1616 = !DILocalVariable(name: "size", arg: 4, scope: !1609, file: !250, line: 32, type: !134)
!1617 = !DILocation(line: 32, column: 29, scope: !1609)
!1618 = !DILocation(line: 32, column: 48, scope: !1609)
!1619 = !DILocation(line: 32, column: 65, scope: !1609)
!1620 = !DILocation(line: 32, column: 75, scope: !1609)
!1621 = !DILocation(line: 39, column: 5, scope: !1609)
!1622 = !DILocation(line: 39, column: 12, scope: !1609)
!1623 = !DILocation(line: 39, column: 18, scope: !1609)
!1624 = !{!884, !828, i64 4}
!1625 = !DILocation(line: 40, column: 19, scope: !1609)
!1626 = !DILocation(line: 40, column: 5, scope: !1609)
!1627 = !DILocation(line: 40, column: 12, scope: !1609)
!1628 = !DILocation(line: 40, column: 17, scope: !1609)
!1629 = !{!884, !828, i64 8}
!1630 = !DILocation(line: 41, column: 21, scope: !1609)
!1631 = !DILocation(line: 41, column: 5, scope: !1609)
!1632 = !DILocation(line: 41, column: 12, scope: !1609)
!1633 = !DILocation(line: 41, column: 19, scope: !1609)
!1634 = !{!884, !828, i64 12}
!1635 = !DILocation(line: 42, column: 19, scope: !1609)
!1636 = !DILocation(line: 42, column: 5, scope: !1609)
!1637 = !DILocation(line: 42, column: 12, scope: !1609)
!1638 = !DILocation(line: 42, column: 17, scope: !1609)
!1639 = !{!884, !821, i64 16}
!1640 = !DILocation(line: 44, column: 30, scope: !1609)
!1641 = !DILocation(line: 44, column: 36, scope: !1609)
!1642 = !DILocation(line: 44, column: 40, scope: !1609)
!1643 = !DILocation(line: 44, column: 38, scope: !1609)
!1644 = !DILocation(line: 44, column: 19, scope: !1609)
!1645 = !DILocation(line: 44, column: 5, scope: !1609)
!1646 = !DILocation(line: 44, column: 12, scope: !1609)
!1647 = !DILocation(line: 44, column: 17, scope: !1609)
!1648 = !{!884, !821, i64 0}
!1649 = !DILocation(line: 45, column: 9, scope: !1650)
!1650 = distinct !DILexicalBlock(scope: !1609, file: !250, line: 45, column: 9)
!1651 = !DILocation(line: 45, column: 16, scope: !1650)
!1652 = !DILocation(line: 45, column: 21, scope: !1650)
!1653 = !DILocation(line: 45, column: 9, scope: !1609)
!1654 = !DILocation(line: 46, column: 9, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1650, file: !250, line: 45, column: 30)
!1656 = !DILocation(line: 49, column: 5, scope: !1609)
!1657 = !DILocation(line: 50, column: 1, scope: !1609)
!1658 = distinct !DISubprogram(name: "ngx_resolve_start", scope: !3, file: !3, line: 372, type: !1659, isLocal: false, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1661)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!157, !163, !157}
!1661 = !{!1662, !1663, !1664, !1665}
!1662 = !DILocalVariable(name: "r", arg: 1, scope: !1658, file: !3, line: 372, type: !163)
!1663 = !DILocalVariable(name: "temp", arg: 2, scope: !1658, file: !3, line: 372, type: !157)
!1664 = !DILocalVariable(name: "addr", scope: !1658, file: !3, line: 374, type: !21)
!1665 = !DILocalVariable(name: "ctx", scope: !1658, file: !3, line: 375, type: !157)
!1666 = !DILocation(line: 372, column: 35, scope: !1658)
!1667 = !DILocation(line: 372, column: 58, scope: !1658)
!1668 = !DILocation(line: 374, column: 5, scope: !1658)
!1669 = !DILocation(line: 374, column: 26, scope: !1658)
!1670 = !DILocation(line: 375, column: 5, scope: !1658)
!1671 = !DILocation(line: 375, column: 26, scope: !1658)
!1672 = !DILocation(line: 377, column: 9, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 377, column: 9)
!1674 = !DILocation(line: 377, column: 9, scope: !1658)
!1675 = !DILocation(line: 378, column: 30, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1673, file: !3, line: 377, column: 15)
!1677 = !DILocation(line: 378, column: 36, scope: !1676)
!1678 = !DILocation(line: 378, column: 41, scope: !1676)
!1679 = !{!1680, !821, i64 24}
!1680 = !{!"ngx_resolver_ctx_s", !821, i64 0, !821, i64 4, !821, i64 8, !828, i64 12, !828, i64 16, !998, i64 20, !998, i64 28, !888, i64 36, !828, i64 40, !821, i64 44, !1681, i64 48, !1682, i64 68, !828, i64 84, !828, i64 88, !821, i64 92, !821, i64 96, !821, i64 100, !828, i64 104, !828, i64 108, !828, i64 112, !821, i64 116}
!1681 = !{!"", !821, i64 0, !828, i64 4, !998, i64 8, !1070, i64 16, !1070, i64 18}
!1682 = !{!"sockaddr_in", !1070, i64 0, !1070, i64 2, !1683, i64 4, !822, i64 8}
!1683 = !{!"in_addr", !828, i64 0}
!1684 = !DILocation(line: 378, column: 47, scope: !1676)
!1685 = !DILocation(line: 378, column: 53, scope: !1676)
!1686 = !DILocation(line: 378, column: 58, scope: !1676)
!1687 = !{!1680, !828, i64 20}
!1688 = !DILocation(line: 378, column: 16, scope: !1676)
!1689 = !DILocation(line: 378, column: 14, scope: !1676)
!1690 = !DILocation(line: 380, column: 13, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1676, file: !3, line: 380, column: 13)
!1692 = !DILocation(line: 380, column: 18, scope: !1691)
!1693 = !DILocation(line: 380, column: 13, scope: !1676)
!1694 = !DILocation(line: 381, column: 30, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1691, file: !3, line: 380, column: 34)
!1696 = !DILocation(line: 381, column: 13, scope: !1695)
!1697 = !DILocation(line: 381, column: 19, scope: !1695)
!1698 = !DILocation(line: 381, column: 28, scope: !1695)
!1699 = !{!1680, !821, i64 4}
!1700 = !DILocation(line: 382, column: 13, scope: !1695)
!1701 = !DILocation(line: 382, column: 19, scope: !1695)
!1702 = !DILocation(line: 382, column: 25, scope: !1695)
!1703 = !{!1680, !828, i64 16}
!1704 = !DILocation(line: 383, column: 13, scope: !1695)
!1705 = !DILocation(line: 383, column: 19, scope: !1695)
!1706 = !DILocation(line: 383, column: 26, scope: !1695)
!1707 = !{!1680, !828, i64 40}
!1708 = !DILocation(line: 384, column: 28, scope: !1695)
!1709 = !DILocation(line: 384, column: 34, scope: !1695)
!1710 = !DILocation(line: 384, column: 13, scope: !1695)
!1711 = !DILocation(line: 384, column: 19, scope: !1695)
!1712 = !DILocation(line: 384, column: 25, scope: !1695)
!1713 = !{!1680, !821, i64 44}
!1714 = !DILocation(line: 385, column: 56, scope: !1695)
!1715 = !DILocation(line: 385, column: 62, scope: !1695)
!1716 = !DILocation(line: 385, column: 35, scope: !1695)
!1717 = !DILocation(line: 385, column: 13, scope: !1695)
!1718 = !DILocation(line: 385, column: 19, scope: !1695)
!1719 = !DILocation(line: 385, column: 24, scope: !1695)
!1720 = !DILocation(line: 385, column: 33, scope: !1695)
!1721 = !{!1680, !821, i64 48}
!1722 = !DILocation(line: 386, column: 13, scope: !1695)
!1723 = !DILocation(line: 386, column: 19, scope: !1695)
!1724 = !DILocation(line: 386, column: 24, scope: !1695)
!1725 = !DILocation(line: 386, column: 32, scope: !1695)
!1726 = !{!1680, !828, i64 52}
!1727 = !DILocation(line: 387, column: 13, scope: !1695)
!1728 = !DILocation(line: 388, column: 13, scope: !1695)
!1729 = !DILocation(line: 388, column: 19, scope: !1695)
!1730 = !DILocation(line: 388, column: 23, scope: !1695)
!1731 = !DILocation(line: 388, column: 34, scope: !1695)
!1732 = !{!1680, !1070, i64 68}
!1733 = !DILocation(line: 389, column: 41, scope: !1695)
!1734 = !DILocation(line: 389, column: 13, scope: !1695)
!1735 = !DILocation(line: 389, column: 19, scope: !1695)
!1736 = !DILocation(line: 389, column: 23, scope: !1695)
!1737 = !DILocation(line: 389, column: 32, scope: !1695)
!1738 = !DILocation(line: 389, column: 39, scope: !1695)
!1739 = !{!1680, !828, i64 72}
!1740 = !DILocation(line: 390, column: 13, scope: !1695)
!1741 = !DILocation(line: 390, column: 19, scope: !1695)
!1742 = !DILocation(line: 390, column: 25, scope: !1695)
!1743 = !{!1680, !828, i64 108}
!1744 = !DILocation(line: 392, column: 20, scope: !1695)
!1745 = !DILocation(line: 392, column: 13, scope: !1695)
!1746 = !DILocation(line: 394, column: 5, scope: !1676)
!1747 = !DILocation(line: 396, column: 9, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 396, column: 9)
!1749 = !DILocation(line: 396, column: 12, scope: !1748)
!1750 = !DILocation(line: 396, column: 24, scope: !1748)
!1751 = !DILocation(line: 396, column: 30, scope: !1748)
!1752 = !DILocation(line: 396, column: 9, scope: !1658)
!1753 = !DILocation(line: 397, column: 9, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1748, file: !3, line: 396, column: 36)
!1755 = !DILocation(line: 400, column: 31, scope: !1658)
!1756 = !DILocation(line: 400, column: 11, scope: !1658)
!1757 = !DILocation(line: 400, column: 9, scope: !1658)
!1758 = !DILocation(line: 402, column: 9, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 402, column: 9)
!1760 = !DILocation(line: 402, column: 9, scope: !1658)
!1761 = !DILocation(line: 403, column: 25, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 402, column: 14)
!1763 = !DILocation(line: 403, column: 9, scope: !1762)
!1764 = !DILocation(line: 403, column: 14, scope: !1762)
!1765 = !DILocation(line: 403, column: 23, scope: !1762)
!1766 = !DILocation(line: 404, column: 5, scope: !1762)
!1767 = !DILocation(line: 406, column: 12, scope: !1658)
!1768 = !DILocation(line: 406, column: 5, scope: !1658)
!1769 = !DILocation(line: 407, column: 1, scope: !1658)
!1770 = distinct !DISubprogram(name: "ngx_resolver_calloc", scope: !3, file: !3, line: 4111, type: !1771, isLocal: true, isDefinition: true, scopeLine: 4112, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1773)
!1771 = !DISubroutineType(types: !1772)
!1772 = !{!16, !163, !134}
!1773 = !{!1774, !1775, !1776}
!1774 = !DILocalVariable(name: "r", arg: 1, scope: !1770, file: !3, line: 4111, type: !163)
!1775 = !DILocalVariable(name: "size", arg: 2, scope: !1770, file: !3, line: 4111, type: !134)
!1776 = !DILocalVariable(name: "p", scope: !1770, file: !3, line: 4113, type: !110)
!1777 = !DILocation(line: 4111, column: 37, scope: !1770)
!1778 = !DILocation(line: 4111, column: 47, scope: !1770)
!1779 = !DILocation(line: 4113, column: 5, scope: !1770)
!1780 = !DILocation(line: 4113, column: 14, scope: !1770)
!1781 = !DILocation(line: 4115, column: 28, scope: !1770)
!1782 = !DILocation(line: 4115, column: 31, scope: !1770)
!1783 = !DILocation(line: 4115, column: 9, scope: !1770)
!1784 = !DILocation(line: 4115, column: 7, scope: !1770)
!1785 = !DILocation(line: 4117, column: 9, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1770, file: !3, line: 4117, column: 9)
!1787 = !DILocation(line: 4117, column: 9, scope: !1770)
!1788 = !DILocation(line: 4118, column: 9, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 4117, column: 12)
!1790 = !DILocation(line: 4119, column: 5, scope: !1789)
!1791 = !DILocation(line: 4121, column: 12, scope: !1770)
!1792 = !DILocation(line: 4122, column: 1, scope: !1770)
!1793 = !DILocation(line: 4121, column: 5, scope: !1770)
!1794 = distinct !DISubprogram(name: "ngx_resolve_name", scope: !3, file: !3, line: 411, type: !1795, isLocal: false, isDefinition: true, scopeLine: 412, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1797)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!8, !157}
!1797 = !{!1798, !1799, !1800, !1801, !1802}
!1798 = !DILocalVariable(name: "ctx", arg: 1, scope: !1794, file: !3, line: 411, type: !157)
!1799 = !DILocalVariable(name: "slen", scope: !1794, file: !3, line: 413, type: !134)
!1800 = !DILocalVariable(name: "rc", scope: !1794, file: !3, line: 414, type: !8)
!1801 = !DILocalVariable(name: "name", scope: !1794, file: !3, line: 415, type: !129)
!1802 = !DILocalVariable(name: "r", scope: !1794, file: !3, line: 416, type: !163)
!1803 = !DILocation(line: 411, column: 38, scope: !1794)
!1804 = !DILocation(line: 413, column: 5, scope: !1794)
!1805 = !DILocation(line: 413, column: 22, scope: !1794)
!1806 = !DILocation(line: 414, column: 5, scope: !1794)
!1807 = !DILocation(line: 414, column: 22, scope: !1794)
!1808 = !DILocation(line: 415, column: 5, scope: !1794)
!1809 = !DILocation(line: 415, column: 22, scope: !1794)
!1810 = !DILocation(line: 416, column: 5, scope: !1794)
!1811 = !DILocation(line: 416, column: 22, scope: !1794)
!1812 = !DILocation(line: 418, column: 9, scope: !1794)
!1813 = !DILocation(line: 418, column: 14, scope: !1794)
!1814 = !DILocation(line: 418, column: 7, scope: !1794)
!1815 = !DILocation(line: 420, column: 9, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 420, column: 9)
!1817 = !DILocation(line: 420, column: 14, scope: !1816)
!1818 = !DILocation(line: 420, column: 19, scope: !1816)
!1819 = !DILocation(line: 420, column: 23, scope: !1816)
!1820 = !DILocation(line: 420, column: 27, scope: !1816)
!1821 = !DILocation(line: 420, column: 30, scope: !1816)
!1822 = !DILocation(line: 420, column: 35, scope: !1816)
!1823 = !DILocation(line: 420, column: 40, scope: !1816)
!1824 = !DILocation(line: 420, column: 45, scope: !1816)
!1825 = !DILocation(line: 420, column: 50, scope: !1816)
!1826 = !DILocation(line: 420, column: 55, scope: !1816)
!1827 = !DILocation(line: 420, column: 59, scope: !1816)
!1828 = !{!822, !822, i64 0}
!1829 = !DILocation(line: 420, column: 64, scope: !1816)
!1830 = !DILocation(line: 420, column: 9, scope: !1794)
!1831 = !DILocation(line: 421, column: 9, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 420, column: 72)
!1833 = !DILocation(line: 421, column: 14, scope: !1832)
!1834 = !DILocation(line: 421, column: 19, scope: !1832)
!1835 = !DILocation(line: 421, column: 22, scope: !1832)
!1836 = !DILocation(line: 422, column: 5, scope: !1832)
!1837 = !DILocation(line: 427, column: 9, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 427, column: 9)
!1839 = !DILocation(line: 427, column: 14, scope: !1838)
!1840 = !DILocation(line: 427, column: 9, scope: !1794)
!1841 = !DILocation(line: 428, column: 9, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1838, file: !3, line: 427, column: 21)
!1843 = !DILocation(line: 428, column: 14, scope: !1842)
!1844 = !{!1680, !821, i64 96}
!1845 = !DILocation(line: 428, column: 22, scope: !1842)
!1846 = !DILocation(line: 429, column: 9, scope: !1842)
!1847 = !DILocation(line: 432, column: 9, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 432, column: 9)
!1849 = !DILocation(line: 432, column: 14, scope: !1848)
!1850 = !DILocation(line: 432, column: 22, scope: !1848)
!1851 = !{!1680, !828, i64 28}
!1852 = !DILocation(line: 432, column: 9, scope: !1794)
!1853 = !DILocation(line: 433, column: 16, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 432, column: 27)
!1855 = !DILocation(line: 433, column: 21, scope: !1854)
!1856 = !DILocation(line: 433, column: 29, scope: !1854)
!1857 = !DILocation(line: 433, column: 14, scope: !1854)
!1858 = !DILocation(line: 435, column: 25, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 435, column: 13)
!1860 = !DILocation(line: 435, column: 30, scope: !1859)
!1861 = !DILocation(line: 435, column: 38, scope: !1859)
!1862 = !{!1680, !821, i64 32}
!1863 = !DILocation(line: 436, column: 25, scope: !1859)
!1864 = !DILocation(line: 436, column: 30, scope: !1859)
!1865 = !DILocation(line: 436, column: 38, scope: !1859)
!1866 = !DILocation(line: 436, column: 45, scope: !1859)
!1867 = !DILocation(line: 436, column: 50, scope: !1859)
!1868 = !DILocation(line: 436, column: 58, scope: !1859)
!1869 = !DILocation(line: 436, column: 43, scope: !1859)
!1870 = !DILocation(line: 435, column: 13, scope: !1859)
!1871 = !DILocation(line: 437, column: 13, scope: !1859)
!1872 = !DILocation(line: 435, column: 13, scope: !1854)
!1873 = !DILocation(line: 439, column: 18, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1859, file: !3, line: 438, column: 9)
!1875 = !DILocation(line: 440, column: 9, scope: !1874)
!1876 = !DILocation(line: 442, column: 20, scope: !1854)
!1877 = !DILocation(line: 442, column: 25, scope: !1854)
!1878 = !DILocation(line: 442, column: 31, scope: !1854)
!1879 = !DILocation(line: 442, column: 36, scope: !1854)
!1880 = !DILocation(line: 442, column: 41, scope: !1854)
!1881 = !DILocation(line: 442, column: 29, scope: !1854)
!1882 = !DILocation(line: 442, column: 14, scope: !1854)
!1883 = !DILocation(line: 442, column: 18, scope: !1854)
!1884 = !DILocation(line: 444, column: 40, scope: !1854)
!1885 = !DILocation(line: 444, column: 48, scope: !1854)
!1886 = !DILocation(line: 444, column: 21, scope: !1854)
!1887 = !DILocation(line: 444, column: 14, scope: !1854)
!1888 = !DILocation(line: 444, column: 19, scope: !1854)
!1889 = !DILocation(line: 445, column: 18, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 445, column: 13)
!1891 = !DILocation(line: 445, column: 23, scope: !1890)
!1892 = !DILocation(line: 445, column: 13, scope: !1854)
!1893 = !DILocation(line: 446, column: 13, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1890, file: !3, line: 445, column: 32)
!1895 = !DILocation(line: 449, column: 13, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 449, column: 13)
!1897 = !DILocation(line: 449, column: 21, scope: !1896)
!1898 = !DILocation(line: 449, column: 26, scope: !1896)
!1899 = !DILocation(line: 449, column: 34, scope: !1896)
!1900 = !DILocation(line: 449, column: 18, scope: !1896)
!1901 = !DILocation(line: 449, column: 13, scope: !1854)
!1902 = !DILocation(line: 450, column: 30, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1896, file: !3, line: 449, column: 39)
!1904 = !DILocation(line: 450, column: 46, scope: !1903)
!1905 = !DILocation(line: 450, column: 51, scope: !1903)
!1906 = !DILocation(line: 450, column: 61, scope: !1903)
!1907 = !DILocation(line: 450, column: 66, scope: !1903)
!1908 = !DILocation(line: 450, column: 13, scope: !1903)
!1909 = !DILocation(line: 452, column: 9, scope: !1903)
!1910 = !DILocation(line: 453, column: 30, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1896, file: !3, line: 452, column: 16)
!1912 = !DILocation(line: 453, column: 52, scope: !1911)
!1913 = !DILocation(line: 453, column: 57, scope: !1911)
!1914 = !DILocation(line: 453, column: 67, scope: !1911)
!1915 = !DILocation(line: 453, column: 72, scope: !1911)
!1916 = !DILocation(line: 453, column: 13, scope: !1911)
!1917 = !DILocation(line: 458, column: 38, scope: !1854)
!1918 = !DILocation(line: 458, column: 41, scope: !1854)
!1919 = !DILocation(line: 458, column: 14, scope: !1854)
!1920 = !DILocation(line: 458, column: 12, scope: !1854)
!1921 = !DILocation(line: 460, column: 27, scope: !1854)
!1922 = !DILocation(line: 460, column: 35, scope: !1854)
!1923 = !DILocation(line: 460, column: 9, scope: !1854)
!1924 = !DILocation(line: 462, column: 5, scope: !1854)
!1925 = !DILocation(line: 465, column: 38, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1848, file: !3, line: 462, column: 12)
!1927 = !DILocation(line: 465, column: 41, scope: !1926)
!1928 = !DILocation(line: 465, column: 47, scope: !1926)
!1929 = !DILocation(line: 465, column: 52, scope: !1926)
!1930 = !DILocation(line: 465, column: 14, scope: !1926)
!1931 = !DILocation(line: 465, column: 12, scope: !1926)
!1932 = !DILocation(line: 468, column: 9, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 468, column: 9)
!1934 = !DILocation(line: 468, column: 12, scope: !1933)
!1935 = !DILocation(line: 468, column: 9, scope: !1794)
!1936 = !DILocation(line: 469, column: 9, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1933, file: !3, line: 468, column: 23)
!1938 = !DILocation(line: 474, column: 9, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 474, column: 9)
!1940 = !DILocation(line: 474, column: 12, scope: !1939)
!1941 = !DILocation(line: 474, column: 9, scope: !1794)
!1942 = !DILocation(line: 475, column: 9, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1939, file: !3, line: 474, column: 26)
!1944 = !DILocation(line: 480, column: 9, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 480, column: 9)
!1946 = !DILocation(line: 480, column: 14, scope: !1945)
!1947 = !{!1680, !821, i64 116}
!1948 = !DILocation(line: 480, column: 9, scope: !1794)
!1949 = !DILocation(line: 481, column: 27, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1945, file: !3, line: 480, column: 21)
!1951 = !DILocation(line: 481, column: 30, scope: !1950)
!1952 = !DILocation(line: 481, column: 35, scope: !1950)
!1953 = !DILocation(line: 481, column: 9, scope: !1950)
!1954 = !DILocation(line: 482, column: 5, scope: !1950)
!1955 = !DILocation(line: 484, column: 23, scope: !1794)
!1956 = !DILocation(line: 484, column: 26, scope: !1794)
!1957 = !DILocation(line: 484, column: 5, scope: !1794)
!1958 = !DILocation(line: 486, column: 5, scope: !1794)
!1959 = !DILocation(line: 487, column: 1, scope: !1794)
!1960 = distinct !DISubprogram(name: "ngx_strlchr", scope: !130, file: !130, line: 68, type: !1961, isLocal: true, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1963)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!110, !110, !110, !99}
!1963 = !{!1964, !1965, !1966}
!1964 = !DILocalVariable(name: "p", arg: 1, scope: !1960, file: !130, line: 68, type: !110)
!1965 = !DILocalVariable(name: "last", arg: 2, scope: !1960, file: !130, line: 68, type: !110)
!1966 = !DILocalVariable(name: "c", arg: 3, scope: !1960, file: !130, line: 68, type: !99)
!1967 = !DILocation(line: 68, column: 21, scope: !1960)
!1968 = !DILocation(line: 68, column: 32, scope: !1960)
!1969 = !DILocation(line: 68, column: 45, scope: !1960)
!1970 = !DILocation(line: 70, column: 5, scope: !1960)
!1971 = !DILocation(line: 70, column: 12, scope: !1960)
!1972 = !DILocation(line: 70, column: 16, scope: !1960)
!1973 = !DILocation(line: 70, column: 14, scope: !1960)
!1974 = !DILocation(line: 72, column: 14, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !1976, file: !130, line: 72, column: 13)
!1976 = distinct !DILexicalBlock(scope: !1960, file: !130, line: 70, column: 22)
!1977 = !DILocation(line: 72, column: 13, scope: !1975)
!1978 = !DILocation(line: 72, column: 19, scope: !1975)
!1979 = !DILocation(line: 72, column: 16, scope: !1975)
!1980 = !DILocation(line: 72, column: 13, scope: !1976)
!1981 = !DILocation(line: 73, column: 20, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1975, file: !130, line: 72, column: 22)
!1983 = !DILocation(line: 73, column: 13, scope: !1982)
!1984 = !DILocation(line: 76, column: 10, scope: !1976)
!1985 = distinct !{!1985, !1970, !1986}
!1986 = !DILocation(line: 77, column: 5, scope: !1960)
!1987 = !DILocation(line: 79, column: 5, scope: !1960)
!1988 = !DILocation(line: 80, column: 1, scope: !1960)
!1989 = distinct !DISubprogram(name: "ngx_resolver_alloc", scope: !3, file: !3, line: 4096, type: !1771, isLocal: true, isDefinition: true, scopeLine: 4097, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !1990)
!1990 = !{!1991, !1992, !1993}
!1991 = !DILocalVariable(name: "r", arg: 1, scope: !1989, file: !3, line: 4096, type: !163)
!1992 = !DILocalVariable(name: "size", arg: 2, scope: !1989, file: !3, line: 4096, type: !134)
!1993 = !DILocalVariable(name: "p", scope: !1989, file: !3, line: 4098, type: !110)
!1994 = !DILocation(line: 4096, column: 36, scope: !1989)
!1995 = !DILocation(line: 4096, column: 46, scope: !1989)
!1996 = !DILocation(line: 4098, column: 5, scope: !1989)
!1997 = !DILocation(line: 4098, column: 14, scope: !1989)
!1998 = !DILocation(line: 4102, column: 19, scope: !1989)
!1999 = !DILocation(line: 4102, column: 25, scope: !1989)
!2000 = !DILocation(line: 4102, column: 28, scope: !1989)
!2001 = !DILocation(line: 4102, column: 9, scope: !1989)
!2002 = !DILocation(line: 4102, column: 7, scope: !1989)
!2003 = !DILocation(line: 4106, column: 12, scope: !1989)
!2004 = !DILocation(line: 4107, column: 1, scope: !1989)
!2005 = !DILocation(line: 4106, column: 5, scope: !1989)
!2006 = distinct !DISubprogram(name: "ngx_resolve_name_locked", scope: !3, file: !3, line: 582, type: !2007, isLocal: true, isDefinition: true, scopeLine: 584, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !2009)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!8, !163, !157, !760}
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2022, !2023, !2024, !2025}
!2010 = !DILocalVariable(name: "r", arg: 1, scope: !2006, file: !3, line: 582, type: !163)
!2011 = !DILocalVariable(name: "ctx", arg: 2, scope: !2006, file: !3, line: 582, type: !157)
!2012 = !DILocalVariable(name: "name", arg: 3, scope: !2006, file: !3, line: 583, type: !760)
!2013 = !DILocalVariable(name: "hash", scope: !2006, file: !3, line: 585, type: !23)
!2014 = !DILocalVariable(name: "rc", scope: !2006, file: !3, line: 586, type: !8)
!2015 = !DILocalVariable(name: "cname", scope: !2006, file: !3, line: 587, type: !129)
!2016 = !DILocalVariable(name: "i", scope: !2006, file: !3, line: 588, type: !82)
!2017 = !DILocalVariable(name: "naddrs", scope: !2006, file: !3, line: 588, type: !82)
!2018 = !DILocalVariable(name: "resend_queue", scope: !2006, file: !3, line: 589, type: !107)
!2019 = !DILocalVariable(name: "expire_queue", scope: !2006, file: !3, line: 589, type: !107)
!2020 = !DILocalVariable(name: "tree", scope: !2006, file: !3, line: 590, type: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!2022 = !DILocalVariable(name: "next", scope: !2006, file: !3, line: 591, type: !157)
!2023 = !DILocalVariable(name: "last", scope: !2006, file: !3, line: 591, type: !157)
!2024 = !DILocalVariable(name: "addrs", scope: !2006, file: !3, line: 592, type: !424)
!2025 = !DILocalVariable(name: "rn", scope: !2006, file: !3, line: 593, type: !84)
!2026 = !DILocation(line: 582, column: 41, scope: !2006)
!2027 = !DILocation(line: 582, column: 64, scope: !2006)
!2028 = !DILocation(line: 583, column: 16, scope: !2006)
!2029 = !DILocation(line: 585, column: 5, scope: !2006)
!2030 = !DILocation(line: 585, column: 27, scope: !2006)
!2031 = !DILocation(line: 586, column: 5, scope: !2006)
!2032 = !DILocation(line: 586, column: 27, scope: !2006)
!2033 = !DILocation(line: 587, column: 5, scope: !2006)
!2034 = !DILocation(line: 587, column: 27, scope: !2006)
!2035 = !DILocation(line: 588, column: 5, scope: !2006)
!2036 = !DILocation(line: 588, column: 27, scope: !2006)
!2037 = !DILocation(line: 588, column: 30, scope: !2006)
!2038 = !DILocation(line: 589, column: 5, scope: !2006)
!2039 = !DILocation(line: 589, column: 27, scope: !2006)
!2040 = !DILocation(line: 589, column: 42, scope: !2006)
!2041 = !DILocation(line: 590, column: 5, scope: !2006)
!2042 = !DILocation(line: 590, column: 27, scope: !2006)
!2043 = !DILocation(line: 591, column: 5, scope: !2006)
!2044 = !DILocation(line: 591, column: 27, scope: !2006)
!2045 = !DILocation(line: 591, column: 34, scope: !2006)
!2046 = !DILocation(line: 592, column: 5, scope: !2006)
!2047 = !DILocation(line: 592, column: 27, scope: !2006)
!2048 = !DILocation(line: 593, column: 5, scope: !2006)
!2049 = !DILocation(line: 593, column: 27, scope: !2006)
!2050 = !DILocation(line: 595, column: 16, scope: !2006)
!2051 = !DILocation(line: 595, column: 22, scope: !2006)
!2052 = !DILocation(line: 595, column: 28, scope: !2006)
!2053 = !DILocation(line: 595, column: 34, scope: !2006)
!2054 = !DILocation(line: 595, column: 40, scope: !2006)
!2055 = !DILocation(line: 595, column: 46, scope: !2006)
!2056 = !DILocation(line: 595, column: 5, scope: !2006)
!2057 = !DILocation(line: 597, column: 28, scope: !2006)
!2058 = !DILocation(line: 597, column: 34, scope: !2006)
!2059 = !DILocation(line: 597, column: 40, scope: !2006)
!2060 = !DILocation(line: 597, column: 46, scope: !2006)
!2061 = !DILocation(line: 597, column: 12, scope: !2006)
!2062 = !DILocation(line: 597, column: 10, scope: !2006)
!2063 = !DILocation(line: 599, column: 9, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 599, column: 9)
!2065 = !DILocation(line: 599, column: 14, scope: !2064)
!2066 = !DILocation(line: 599, column: 22, scope: !2064)
!2067 = !DILocation(line: 599, column: 9, scope: !2006)
!2068 = !DILocation(line: 600, column: 38, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 599, column: 27)
!2070 = !DILocation(line: 600, column: 41, scope: !2069)
!2071 = !DILocation(line: 600, column: 47, scope: !2069)
!2072 = !DILocation(line: 600, column: 14, scope: !2069)
!2073 = !DILocation(line: 600, column: 12, scope: !2069)
!2074 = !DILocation(line: 602, column: 17, scope: !2069)
!2075 = !DILocation(line: 602, column: 20, scope: !2069)
!2076 = !DILocation(line: 602, column: 14, scope: !2069)
!2077 = !DILocation(line: 603, column: 25, scope: !2069)
!2078 = !DILocation(line: 603, column: 28, scope: !2069)
!2079 = !DILocation(line: 603, column: 22, scope: !2069)
!2080 = !DILocation(line: 604, column: 25, scope: !2069)
!2081 = !DILocation(line: 604, column: 28, scope: !2069)
!2082 = !DILocation(line: 604, column: 22, scope: !2069)
!2083 = !DILocation(line: 606, column: 5, scope: !2069)
!2084 = !DILocation(line: 607, column: 39, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 606, column: 12)
!2086 = !DILocation(line: 607, column: 42, scope: !2085)
!2087 = !DILocation(line: 607, column: 48, scope: !2085)
!2088 = !DILocation(line: 607, column: 14, scope: !2085)
!2089 = !DILocation(line: 607, column: 12, scope: !2085)
!2090 = !DILocation(line: 609, column: 17, scope: !2085)
!2091 = !DILocation(line: 609, column: 20, scope: !2085)
!2092 = !DILocation(line: 609, column: 14, scope: !2085)
!2093 = !DILocation(line: 610, column: 25, scope: !2085)
!2094 = !DILocation(line: 610, column: 28, scope: !2085)
!2095 = !DILocation(line: 610, column: 22, scope: !2085)
!2096 = !DILocation(line: 611, column: 25, scope: !2085)
!2097 = !DILocation(line: 611, column: 28, scope: !2085)
!2098 = !DILocation(line: 611, column: 22, scope: !2085)
!2099 = !DILocation(line: 614, column: 9, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 614, column: 9)
!2101 = !DILocation(line: 614, column: 9, scope: !2006)
!2102 = !DILocation(line: 617, column: 21, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 617, column: 9)
!2104 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 614, column: 13)
!2105 = !DILocation(line: 617, column: 19, scope: !2103)
!2106 = !DILocation(line: 617, column: 14, scope: !2103)
!2107 = !DILocation(line: 617, column: 26, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2103, file: !3, line: 617, column: 9)
!2109 = !DILocation(line: 617, column: 32, scope: !2108)
!2110 = !{!1680, !821, i64 0}
!2111 = !DILocation(line: 617, column: 9, scope: !2103)
!2112 = !DILocation(line: 617, column: 45, scope: !2108)
!2113 = !DILocation(line: 617, column: 51, scope: !2108)
!2114 = !DILocation(line: 617, column: 43, scope: !2108)
!2115 = !DILocation(line: 617, column: 9, scope: !2108)
!2116 = distinct !{!2116, !2111, !2117}
!2117 = !DILocation(line: 617, column: 56, scope: !2103)
!2118 = !DILocation(line: 619, column: 13, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 619, column: 13)
!2120 = !DILocation(line: 619, column: 17, scope: !2119)
!2121 = !{!1359, !888, i64 96}
!2122 = !DILocation(line: 619, column: 26, scope: !2119)
!2123 = !{!2124, !888, i64 0}
!2124 = !{!"", !888, i64 0, !828, i64 4, !828, i64 8}
!2125 = !DILocation(line: 619, column: 23, scope: !2119)
!2126 = !DILocation(line: 619, column: 13, scope: !2104)
!2127 = !DILocation(line: 623, column: 13, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 619, column: 38)
!2129 = !DILocation(line: 625, column: 26, scope: !2128)
!2130 = !DILocation(line: 625, column: 39, scope: !2128)
!2131 = !DILocation(line: 625, column: 42, scope: !2128)
!2132 = !DILocation(line: 625, column: 37, scope: !2128)
!2133 = !DILocation(line: 625, column: 13, scope: !2128)
!2134 = !DILocation(line: 625, column: 17, scope: !2128)
!2135 = !DILocation(line: 625, column: 24, scope: !2128)
!2136 = !{!1359, !888, i64 92}
!2137 = !DILocation(line: 627, column: 13, scope: !2128)
!2138 = !DILocation(line: 629, column: 23, scope: !2128)
!2139 = !DILocation(line: 629, column: 27, scope: !2128)
!2140 = !{!1359, !1070, i64 66}
!2141 = !DILocation(line: 629, column: 34, scope: !2128)
!2142 = !DILocation(line: 629, column: 22, scope: !2128)
!2143 = !DILocation(line: 629, column: 57, scope: !2128)
!2144 = !DILocation(line: 629, column: 61, scope: !2128)
!2145 = !DILocation(line: 629, column: 20, scope: !2128)
!2146 = !DILocation(line: 631, column: 24, scope: !2128)
!2147 = !DILocation(line: 631, column: 28, scope: !2128)
!2148 = !{!1359, !1070, i64 88}
!2149 = !DILocation(line: 631, column: 36, scope: !2128)
!2150 = !DILocation(line: 631, column: 23, scope: !2128)
!2151 = !DILocation(line: 631, column: 59, scope: !2128)
!2152 = !DILocation(line: 631, column: 63, scope: !2128)
!2153 = !DILocation(line: 631, column: 20, scope: !2128)
!2154 = !DILocation(line: 634, column: 17, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 634, column: 17)
!2156 = !DILocation(line: 634, column: 17, scope: !2128)
!2157 = !DILocation(line: 636, column: 21, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 636, column: 21)
!2159 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 634, column: 25)
!2160 = !DILocation(line: 636, column: 28, scope: !2158)
!2161 = !DILocation(line: 636, column: 33, scope: !2158)
!2162 = !DILocation(line: 636, column: 36, scope: !2158)
!2163 = !DILocation(line: 636, column: 40, scope: !2158)
!2164 = !DILocation(line: 636, column: 47, scope: !2158)
!2165 = !DILocation(line: 636, column: 21, scope: !2159)
!2166 = !DILocation(line: 637, column: 27, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 636, column: 53)
!2168 = !DILocation(line: 639, column: 17, scope: !2167)
!2169 = !DILocation(line: 640, column: 49, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 639, column: 24)
!2171 = !DILocation(line: 640, column: 52, scope: !2170)
!2172 = !DILocation(line: 640, column: 29, scope: !2170)
!2173 = !DILocation(line: 640, column: 27, scope: !2170)
!2174 = !DILocation(line: 641, column: 25, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 641, column: 25)
!2176 = !DILocation(line: 641, column: 31, scope: !2175)
!2177 = !DILocation(line: 641, column: 25, scope: !2170)
!2178 = !DILocation(line: 642, column: 25, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2175, file: !3, line: 641, column: 40)
!2180 = !DILocation(line: 646, column: 30, scope: !2159)
!2181 = !DILocation(line: 646, column: 34, scope: !2159)
!2182 = !{!1359, !821, i64 112}
!2183 = !DILocation(line: 646, column: 17, scope: !2159)
!2184 = !DILocation(line: 646, column: 23, scope: !2159)
!2185 = !DILocation(line: 646, column: 28, scope: !2159)
!2186 = !DILocation(line: 647, column: 17, scope: !2159)
!2187 = !DILocation(line: 647, column: 21, scope: !2159)
!2188 = !DILocation(line: 647, column: 29, scope: !2159)
!2189 = !DILocation(line: 651, column: 17, scope: !2159)
!2190 = distinct !{!2190, !2189, !2191}
!2191 = !DILocation(line: 673, column: 29, scope: !2159)
!2192 = !DILocation(line: 652, column: 21, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 651, column: 20)
!2194 = !DILocation(line: 652, column: 26, scope: !2193)
!2195 = !DILocation(line: 652, column: 32, scope: !2193)
!2196 = !DILocation(line: 653, column: 34, scope: !2193)
!2197 = !DILocation(line: 653, column: 38, scope: !2193)
!2198 = !DILocation(line: 653, column: 21, scope: !2193)
!2199 = !DILocation(line: 653, column: 26, scope: !2193)
!2200 = !DILocation(line: 653, column: 32, scope: !2193)
!2201 = !{!1680, !888, i64 36}
!2202 = !DILocation(line: 654, column: 35, scope: !2193)
!2203 = !DILocation(line: 654, column: 21, scope: !2193)
!2204 = !DILocation(line: 654, column: 26, scope: !2193)
!2205 = !DILocation(line: 654, column: 33, scope: !2193)
!2206 = !DILocation(line: 656, column: 25, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 656, column: 25)
!2208 = !DILocation(line: 656, column: 31, scope: !2207)
!2209 = !DILocation(line: 656, column: 25, scope: !2193)
!2210 = !DILocation(line: 657, column: 39, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 656, column: 40)
!2212 = !DILocation(line: 657, column: 44, scope: !2211)
!2213 = !DILocation(line: 657, column: 25, scope: !2211)
!2214 = !DILocation(line: 657, column: 30, scope: !2211)
!2215 = !DILocation(line: 657, column: 36, scope: !2211)
!2216 = !DILocation(line: 658, column: 67, scope: !2211)
!2217 = !DILocation(line: 658, column: 72, scope: !2211)
!2218 = !DILocation(line: 658, column: 46, scope: !2211)
!2219 = !DILocation(line: 658, column: 25, scope: !2211)
!2220 = !DILocation(line: 658, column: 30, scope: !2211)
!2221 = !DILocation(line: 658, column: 35, scope: !2211)
!2222 = !DILocation(line: 658, column: 44, scope: !2211)
!2223 = !DILocation(line: 659, column: 25, scope: !2211)
!2224 = !DILocation(line: 659, column: 30, scope: !2211)
!2225 = !DILocation(line: 659, column: 35, scope: !2211)
!2226 = !DILocation(line: 659, column: 43, scope: !2211)
!2227 = !DILocation(line: 660, column: 25, scope: !2211)
!2228 = !DILocation(line: 661, column: 25, scope: !2211)
!2229 = !DILocation(line: 661, column: 30, scope: !2211)
!2230 = !DILocation(line: 661, column: 34, scope: !2211)
!2231 = !DILocation(line: 661, column: 45, scope: !2211)
!2232 = !DILocation(line: 662, column: 52, scope: !2211)
!2233 = !DILocation(line: 662, column: 56, scope: !2211)
!2234 = !DILocation(line: 662, column: 58, scope: !2211)
!2235 = !DILocation(line: 662, column: 25, scope: !2211)
!2236 = !DILocation(line: 662, column: 30, scope: !2211)
!2237 = !DILocation(line: 662, column: 34, scope: !2211)
!2238 = !DILocation(line: 662, column: 43, scope: !2211)
!2239 = !DILocation(line: 662, column: 50, scope: !2211)
!2240 = !DILocation(line: 664, column: 21, scope: !2211)
!2241 = !DILocation(line: 665, column: 38, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 664, column: 28)
!2243 = !DILocation(line: 665, column: 25, scope: !2242)
!2244 = !DILocation(line: 665, column: 30, scope: !2242)
!2245 = !DILocation(line: 665, column: 36, scope: !2242)
!2246 = !DILocation(line: 668, column: 28, scope: !2193)
!2247 = !DILocation(line: 668, column: 33, scope: !2193)
!2248 = !DILocation(line: 668, column: 26, scope: !2193)
!2249 = !DILocation(line: 670, column: 21, scope: !2193)
!2250 = !DILocation(line: 670, column: 26, scope: !2193)
!2251 = !DILocation(line: 670, column: 34, scope: !2193)
!2252 = !DILocation(line: 672, column: 27, scope: !2193)
!2253 = !DILocation(line: 672, column: 25, scope: !2193)
!2254 = !DILocation(line: 673, column: 17, scope: !2193)
!2255 = !DILocation(line: 673, column: 26, scope: !2159)
!2256 = !DILocation(line: 675, column: 21, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 675, column: 21)
!2258 = !DILocation(line: 675, column: 27, scope: !2257)
!2259 = !DILocation(line: 675, column: 21, scope: !2159)
!2260 = !DILocation(line: 676, column: 39, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 675, column: 36)
!2262 = !DILocation(line: 676, column: 42, scope: !2261)
!2263 = !DILocation(line: 676, column: 49, scope: !2261)
!2264 = !{!1681, !821, i64 0}
!2265 = !DILocation(line: 676, column: 21, scope: !2261)
!2266 = !DILocation(line: 677, column: 39, scope: !2261)
!2267 = !DILocation(line: 677, column: 42, scope: !2261)
!2268 = !DILocation(line: 677, column: 21, scope: !2261)
!2269 = !DILocation(line: 678, column: 17, scope: !2261)
!2270 = !DILocation(line: 680, column: 17, scope: !2159)
!2271 = !DILocation(line: 683, column: 17, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 683, column: 17)
!2273 = !DILocation(line: 683, column: 21, scope: !2272)
!2274 = !{!1359, !1070, i64 68}
!2275 = !DILocation(line: 683, column: 17, scope: !2128)
!2276 = !DILocation(line: 684, column: 30, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 683, column: 28)
!2278 = !DILocation(line: 684, column: 34, scope: !2277)
!2279 = !DILocation(line: 684, column: 17, scope: !2277)
!2280 = !DILocation(line: 684, column: 23, scope: !2277)
!2281 = !DILocation(line: 684, column: 28, scope: !2277)
!2282 = !DILocation(line: 685, column: 17, scope: !2277)
!2283 = !DILocation(line: 685, column: 21, scope: !2277)
!2284 = !DILocation(line: 685, column: 29, scope: !2277)
!2285 = !DILocation(line: 689, column: 17, scope: !2277)
!2286 = distinct !{!2286, !2285, !2287}
!2287 = !DILocation(line: 695, column: 29, scope: !2277)
!2288 = !DILocation(line: 690, column: 28, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2277, file: !3, line: 689, column: 20)
!2290 = !DILocation(line: 690, column: 33, scope: !2289)
!2291 = !DILocation(line: 690, column: 26, scope: !2289)
!2292 = !DILocation(line: 692, column: 52, scope: !2289)
!2293 = !DILocation(line: 692, column: 57, scope: !2289)
!2294 = !DILocation(line: 692, column: 21, scope: !2289)
!2295 = !DILocation(line: 694, column: 27, scope: !2289)
!2296 = !DILocation(line: 694, column: 25, scope: !2289)
!2297 = !DILocation(line: 695, column: 17, scope: !2289)
!2298 = !DILocation(line: 695, column: 26, scope: !2277)
!2299 = !DILocation(line: 697, column: 17, scope: !2277)
!2300 = !DILocation(line: 702, column: 17, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 702, column: 17)
!2302 = !DILocation(line: 702, column: 22, scope: !2301)
!2303 = !DILocation(line: 702, column: 31, scope: !2301)
!2304 = !{!1680, !828, i64 112}
!2305 = !DILocation(line: 702, column: 34, scope: !2301)
!2306 = !DILocation(line: 702, column: 17, scope: !2128)
!2307 = !DILocation(line: 704, column: 29, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2301, file: !3, line: 702, column: 64)
!2309 = !DILocation(line: 704, column: 33, scope: !2308)
!2310 = !{!1359, !1070, i64 70}
!2311 = !DILocation(line: 704, column: 23, scope: !2308)
!2312 = !DILocation(line: 704, column: 27, scope: !2308)
!2313 = !DILocation(line: 705, column: 30, scope: !2308)
!2314 = !DILocation(line: 705, column: 34, scope: !2308)
!2315 = !DILocation(line: 705, column: 36, scope: !2308)
!2316 = !DILocation(line: 705, column: 23, scope: !2308)
!2317 = !DILocation(line: 705, column: 28, scope: !2308)
!2318 = !DILocation(line: 707, column: 48, scope: !2308)
!2319 = !DILocation(line: 707, column: 51, scope: !2308)
!2320 = !DILocation(line: 707, column: 24, scope: !2308)
!2321 = !DILocation(line: 707, column: 17, scope: !2308)
!2322 = !DILocation(line: 710, column: 26, scope: !2128)
!2323 = !DILocation(line: 710, column: 30, scope: !2128)
!2324 = !DILocation(line: 710, column: 13, scope: !2128)
!2325 = !DILocation(line: 710, column: 19, scope: !2128)
!2326 = !DILocation(line: 710, column: 24, scope: !2128)
!2327 = !DILocation(line: 711, column: 13, scope: !2128)
!2328 = !DILocation(line: 711, column: 17, scope: !2128)
!2329 = !DILocation(line: 711, column: 25, scope: !2128)
!2330 = !DILocation(line: 715, column: 13, scope: !2128)
!2331 = distinct !{!2331, !2330, !2332}
!2332 = !DILocation(line: 723, column: 25, scope: !2128)
!2333 = !DILocation(line: 716, column: 17, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2128, file: !3, line: 715, column: 16)
!2335 = !DILocation(line: 716, column: 22, scope: !2334)
!2336 = !DILocation(line: 716, column: 28, scope: !2334)
!2337 = !DILocation(line: 717, column: 30, scope: !2334)
!2338 = !DILocation(line: 717, column: 44, scope: !2334)
!2339 = !DILocation(line: 717, column: 47, scope: !2334)
!2340 = !DILocation(line: 717, column: 55, scope: !2334)
!2341 = !DILocation(line: 717, column: 58, scope: !2334)
!2342 = !DILocation(line: 717, column: 41, scope: !2334)
!2343 = !DILocation(line: 717, column: 17, scope: !2334)
!2344 = !DILocation(line: 717, column: 22, scope: !2334)
!2345 = !DILocation(line: 717, column: 28, scope: !2334)
!2346 = !DILocation(line: 718, column: 24, scope: !2334)
!2347 = !DILocation(line: 718, column: 29, scope: !2334)
!2348 = !DILocation(line: 718, column: 22, scope: !2334)
!2349 = !DILocation(line: 720, column: 17, scope: !2334)
!2350 = !DILocation(line: 720, column: 22, scope: !2334)
!2351 = !DILocation(line: 720, column: 30, scope: !2334)
!2352 = !DILocation(line: 722, column: 23, scope: !2334)
!2353 = !DILocation(line: 722, column: 21, scope: !2334)
!2354 = !DILocation(line: 723, column: 13, scope: !2334)
!2355 = !DILocation(line: 723, column: 22, scope: !2128)
!2356 = !DILocation(line: 725, column: 13, scope: !2128)
!2357 = !DILocation(line: 728, column: 13, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 728, column: 13)
!2359 = !DILocation(line: 728, column: 17, scope: !2358)
!2360 = !DILocation(line: 728, column: 13, scope: !2104)
!2361 = !DILocation(line: 730, column: 17, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 730, column: 17)
!2363 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 728, column: 26)
!2364 = !DILocation(line: 730, column: 22, scope: !2362)
!2365 = !DILocation(line: 730, column: 28, scope: !2362)
!2366 = !DILocation(line: 730, column: 36, scope: !2362)
!2367 = !DILocation(line: 730, column: 39, scope: !2362)
!2368 = !DILocation(line: 730, column: 44, scope: !2362)
!2369 = !{!1680, !828, i64 104}
!2370 = !DILocation(line: 730, column: 17, scope: !2363)
!2371 = !DILocation(line: 731, column: 50, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 730, column: 53)
!2373 = !DILocation(line: 731, column: 30, scope: !2372)
!2374 = !DILocation(line: 731, column: 17, scope: !2372)
!2375 = !DILocation(line: 731, column: 22, scope: !2372)
!2376 = !DILocation(line: 731, column: 28, scope: !2372)
!2377 = !DILocation(line: 732, column: 21, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 732, column: 21)
!2379 = !DILocation(line: 732, column: 26, scope: !2378)
!2380 = !DILocation(line: 732, column: 32, scope: !2378)
!2381 = !DILocation(line: 732, column: 21, scope: !2372)
!2382 = !DILocation(line: 733, column: 21, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 732, column: 41)
!2384 = !DILocation(line: 736, column: 17, scope: !2372)
!2385 = !DILocation(line: 736, column: 22, scope: !2372)
!2386 = !DILocation(line: 736, column: 29, scope: !2372)
!2387 = !DILocation(line: 736, column: 37, scope: !2372)
!2388 = !DILocation(line: 737, column: 36, scope: !2372)
!2389 = !DILocation(line: 737, column: 17, scope: !2372)
!2390 = !DILocation(line: 737, column: 22, scope: !2372)
!2391 = !DILocation(line: 737, column: 29, scope: !2372)
!2392 = !DILocation(line: 737, column: 34, scope: !2372)
!2393 = !DILocation(line: 738, column: 35, scope: !2372)
!2394 = !DILocation(line: 738, column: 38, scope: !2372)
!2395 = !DILocation(line: 738, column: 17, scope: !2372)
!2396 = !DILocation(line: 738, column: 22, scope: !2372)
!2397 = !DILocation(line: 738, column: 29, scope: !2372)
!2398 = !DILocation(line: 738, column: 33, scope: !2372)
!2399 = !DILocation(line: 739, column: 17, scope: !2372)
!2400 = !DILocation(line: 739, column: 22, scope: !2372)
!2401 = !DILocation(line: 739, column: 28, scope: !2372)
!2402 = !{!1680, !828, i64 12}
!2403 = !DILocation(line: 741, column: 31, scope: !2372)
!2404 = !DILocation(line: 741, column: 36, scope: !2372)
!2405 = !DILocation(line: 741, column: 43, scope: !2372)
!2406 = !DILocation(line: 741, column: 48, scope: !2372)
!2407 = !DILocation(line: 741, column: 17, scope: !2372)
!2408 = !DILocation(line: 742, column: 13, scope: !2372)
!2409 = !DILocation(line: 744, column: 26, scope: !2363)
!2410 = !DILocation(line: 744, column: 30, scope: !2363)
!2411 = !DILocation(line: 744, column: 13, scope: !2363)
!2412 = !DILocation(line: 744, column: 19, scope: !2363)
!2413 = !DILocation(line: 744, column: 24, scope: !2363)
!2414 = !DILocation(line: 745, column: 27, scope: !2363)
!2415 = !DILocation(line: 745, column: 13, scope: !2363)
!2416 = !DILocation(line: 745, column: 17, scope: !2363)
!2417 = !DILocation(line: 745, column: 25, scope: !2363)
!2418 = !DILocation(line: 746, column: 13, scope: !2363)
!2419 = !DILocation(line: 746, column: 18, scope: !2363)
!2420 = !DILocation(line: 746, column: 24, scope: !2363)
!2421 = !DILocation(line: 748, column: 13, scope: !2363)
!2422 = distinct !{!2422, !2421, !2423}
!2423 = !DILocation(line: 751, column: 25, scope: !2363)
!2424 = !DILocation(line: 749, column: 29, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 748, column: 16)
!2426 = !DILocation(line: 749, column: 17, scope: !2425)
!2427 = !DILocation(line: 749, column: 22, scope: !2425)
!2428 = !DILocation(line: 749, column: 27, scope: !2425)
!2429 = !{!1680, !821, i64 8}
!2430 = !DILocation(line: 750, column: 23, scope: !2425)
!2431 = !DILocation(line: 750, column: 28, scope: !2425)
!2432 = !DILocation(line: 750, column: 21, scope: !2425)
!2433 = !DILocation(line: 751, column: 13, scope: !2425)
!2434 = !DILocation(line: 751, column: 22, scope: !2363)
!2435 = !DILocation(line: 753, column: 13, scope: !2363)
!2436 = !DILocation(line: 756, column: 9, scope: !2104)
!2437 = !DILocation(line: 760, column: 13, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 760, column: 13)
!2439 = !DILocation(line: 760, column: 17, scope: !2438)
!2440 = !{!1359, !821, i64 52}
!2441 = !DILocation(line: 760, column: 13, scope: !2104)
!2442 = !DILocation(line: 761, column: 38, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 760, column: 24)
!2444 = !DILocation(line: 761, column: 41, scope: !2443)
!2445 = !DILocation(line: 761, column: 45, scope: !2443)
!2446 = !DILocation(line: 761, column: 13, scope: !2443)
!2447 = !DILocation(line: 762, column: 13, scope: !2443)
!2448 = !DILocation(line: 762, column: 17, scope: !2443)
!2449 = !DILocation(line: 762, column: 23, scope: !2443)
!2450 = !DILocation(line: 764, column: 13, scope: !2443)
!2451 = !DILocation(line: 764, column: 17, scope: !2443)
!2452 = !DILocation(line: 764, column: 24, scope: !2443)
!2453 = !{!1359, !821, i64 56}
!2454 = !DILocation(line: 766, column: 9, scope: !2443)
!2455 = !DILocation(line: 768, column: 13, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 768, column: 13)
!2457 = !DILocation(line: 768, column: 17, scope: !2456)
!2458 = !DILocation(line: 768, column: 13, scope: !2104)
!2459 = !DILocation(line: 769, column: 38, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2456, file: !3, line: 768, column: 24)
!2461 = !DILocation(line: 769, column: 41, scope: !2460)
!2462 = !DILocation(line: 769, column: 45, scope: !2460)
!2463 = !DILocation(line: 769, column: 47, scope: !2460)
!2464 = !DILocation(line: 769, column: 13, scope: !2460)
!2465 = !DILocation(line: 770, column: 9, scope: !2460)
!2466 = !DILocation(line: 772, column: 13, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 772, column: 13)
!2468 = !DILocation(line: 772, column: 17, scope: !2467)
!2469 = !DILocation(line: 772, column: 24, scope: !2467)
!2470 = !DILocation(line: 772, column: 28, scope: !2467)
!2471 = !DILocation(line: 772, column: 31, scope: !2467)
!2472 = !DILocation(line: 772, column: 35, scope: !2467)
!2473 = !DILocation(line: 772, column: 42, scope: !2467)
!2474 = !DILocation(line: 772, column: 13, scope: !2104)
!2475 = !DILocation(line: 773, column: 38, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 772, column: 59)
!2477 = !DILocation(line: 773, column: 41, scope: !2476)
!2478 = !DILocation(line: 773, column: 45, scope: !2476)
!2479 = !DILocation(line: 773, column: 47, scope: !2476)
!2480 = !DILocation(line: 773, column: 13, scope: !2476)
!2481 = !DILocation(line: 774, column: 9, scope: !2476)
!2482 = !DILocation(line: 777, column: 13, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 777, column: 13)
!2484 = !DILocation(line: 777, column: 17, scope: !2483)
!2485 = !DILocation(line: 777, column: 25, scope: !2483)
!2486 = !DILocation(line: 777, column: 29, scope: !2483)
!2487 = !DILocation(line: 777, column: 32, scope: !2483)
!2488 = !DILocation(line: 777, column: 36, scope: !2483)
!2489 = !DILocation(line: 777, column: 44, scope: !2483)
!2490 = !DILocation(line: 777, column: 13, scope: !2104)
!2491 = !DILocation(line: 778, column: 38, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 777, column: 61)
!2493 = !DILocation(line: 778, column: 41, scope: !2492)
!2494 = !DILocation(line: 778, column: 45, scope: !2492)
!2495 = !DILocation(line: 778, column: 48, scope: !2492)
!2496 = !DILocation(line: 778, column: 13, scope: !2492)
!2497 = !DILocation(line: 779, column: 9, scope: !2492)
!2498 = !DILocation(line: 782, column: 13, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 782, column: 13)
!2500 = !DILocation(line: 782, column: 17, scope: !2499)
!2501 = !DILocation(line: 782, column: 13, scope: !2104)
!2502 = !DILocation(line: 783, column: 20, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 783, column: 13)
!2504 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 782, column: 24)
!2505 = !DILocation(line: 783, column: 18, scope: !2503)
!2506 = !DILocation(line: 783, column: 25, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2503, file: !3, line: 783, column: 13)
!2508 = !DILocation(line: 783, column: 42, scope: !2507)
!2509 = !DILocation(line: 783, column: 46, scope: !2507)
!2510 = !DILocation(line: 783, column: 29, scope: !2507)
!2511 = !DILocation(line: 783, column: 27, scope: !2507)
!2512 = !DILocation(line: 783, column: 13, scope: !2503)
!2513 = !DILocation(line: 784, column: 21, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 784, column: 21)
!2515 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 783, column: 58)
!2516 = !DILocation(line: 784, column: 25, scope: !2514)
!2517 = !DILocation(line: 784, column: 27, scope: !2514)
!2518 = !DILocation(line: 784, column: 32, scope: !2514)
!2519 = !DILocation(line: 784, column: 35, scope: !2514)
!2520 = !DILocation(line: 784, column: 40, scope: !2514)
!2521 = !{!2522, !821, i64 4}
!2522 = !{!"", !998, i64 0, !1070, i64 8, !1070, i64 10, !1070, i64 12}
!2523 = !DILocation(line: 784, column: 21, scope: !2515)
!2524 = !DILocation(line: 785, column: 46, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 784, column: 46)
!2526 = !DILocation(line: 785, column: 49, scope: !2525)
!2527 = !DILocation(line: 785, column: 53, scope: !2525)
!2528 = !DILocation(line: 785, column: 55, scope: !2525)
!2529 = !DILocation(line: 785, column: 60, scope: !2525)
!2530 = !DILocation(line: 785, column: 63, scope: !2525)
!2531 = !DILocation(line: 785, column: 68, scope: !2525)
!2532 = !DILocation(line: 785, column: 21, scope: !2525)
!2533 = !DILocation(line: 786, column: 17, scope: !2525)
!2534 = !DILocation(line: 787, column: 13, scope: !2515)
!2535 = !DILocation(line: 783, column: 54, scope: !2507)
!2536 = !DILocation(line: 783, column: 13, scope: !2507)
!2537 = distinct !{!2537, !2512, !2538}
!2538 = !DILocation(line: 787, column: 13, scope: !2503)
!2539 = !DILocation(line: 789, column: 38, scope: !2504)
!2540 = !DILocation(line: 789, column: 41, scope: !2504)
!2541 = !DILocation(line: 789, column: 45, scope: !2504)
!2542 = !DILocation(line: 789, column: 47, scope: !2504)
!2543 = !DILocation(line: 789, column: 13, scope: !2504)
!2544 = !DILocation(line: 790, column: 9, scope: !2504)
!2545 = !DILocation(line: 794, column: 5, scope: !2104)
!2546 = !DILocation(line: 796, column: 33, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 794, column: 12)
!2548 = !DILocation(line: 796, column: 14, scope: !2547)
!2549 = !DILocation(line: 796, column: 12, scope: !2547)
!2550 = !DILocation(line: 797, column: 13, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 797, column: 13)
!2552 = !DILocation(line: 797, column: 16, scope: !2551)
!2553 = !DILocation(line: 797, column: 13, scope: !2547)
!2554 = !DILocation(line: 798, column: 13, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 797, column: 25)
!2556 = !DILocation(line: 801, column: 37, scope: !2547)
!2557 = !DILocation(line: 801, column: 40, scope: !2547)
!2558 = !DILocation(line: 801, column: 46, scope: !2547)
!2559 = !DILocation(line: 801, column: 52, scope: !2547)
!2560 = !DILocation(line: 801, column: 58, scope: !2547)
!2561 = !DILocation(line: 801, column: 20, scope: !2547)
!2562 = !DILocation(line: 801, column: 9, scope: !2547)
!2563 = !DILocation(line: 801, column: 13, scope: !2547)
!2564 = !DILocation(line: 801, column: 18, scope: !2547)
!2565 = !DILocation(line: 802, column: 13, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 802, column: 13)
!2567 = !DILocation(line: 802, column: 17, scope: !2566)
!2568 = !DILocation(line: 802, column: 22, scope: !2566)
!2569 = !DILocation(line: 802, column: 13, scope: !2547)
!2570 = !DILocation(line: 803, column: 31, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 802, column: 31)
!2572 = !DILocation(line: 803, column: 34, scope: !2571)
!2573 = !DILocation(line: 803, column: 13, scope: !2571)
!2574 = !DILocation(line: 804, column: 13, scope: !2571)
!2575 = !DILocation(line: 807, column: 24, scope: !2547)
!2576 = !DILocation(line: 807, column: 9, scope: !2547)
!2577 = !DILocation(line: 807, column: 13, scope: !2547)
!2578 = !DILocation(line: 807, column: 18, scope: !2547)
!2579 = !DILocation(line: 807, column: 22, scope: !2547)
!2580 = !{!1359, !828, i64 0}
!2581 = !DILocation(line: 808, column: 30, scope: !2547)
!2582 = !DILocation(line: 808, column: 36, scope: !2547)
!2583 = !DILocation(line: 808, column: 20, scope: !2547)
!2584 = !DILocation(line: 808, column: 9, scope: !2547)
!2585 = !DILocation(line: 808, column: 13, scope: !2547)
!2586 = !DILocation(line: 808, column: 18, scope: !2547)
!2587 = !DILocation(line: 809, column: 9, scope: !2547)
!2588 = !DILocation(line: 809, column: 13, scope: !2547)
!2589 = !DILocation(line: 809, column: 19, scope: !2547)
!2590 = !DILocation(line: 811, column: 9, scope: !2547)
!2591 = !DILocation(line: 811, column: 13, scope: !2547)
!2592 = !DILocation(line: 811, column: 20, scope: !2547)
!2593 = !DILocation(line: 814, column: 27, scope: !2547)
!2594 = !DILocation(line: 814, column: 34, scope: !2547)
!2595 = !DILocation(line: 814, column: 38, scope: !2547)
!2596 = !DILocation(line: 814, column: 9, scope: !2547)
!2597 = !DILocation(line: 817, column: 9, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 817, column: 9)
!2599 = !DILocation(line: 817, column: 14, scope: !2598)
!2600 = !DILocation(line: 817, column: 22, scope: !2598)
!2601 = !DILocation(line: 817, column: 9, scope: !2006)
!2602 = !DILocation(line: 818, column: 44, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 817, column: 27)
!2604 = !DILocation(line: 818, column: 47, scope: !2603)
!2605 = !DILocation(line: 818, column: 51, scope: !2603)
!2606 = !DILocation(line: 818, column: 14, scope: !2603)
!2607 = !DILocation(line: 818, column: 12, scope: !2603)
!2608 = !DILocation(line: 820, column: 5, scope: !2603)
!2609 = !DILocation(line: 821, column: 45, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 820, column: 12)
!2611 = !DILocation(line: 821, column: 48, scope: !2610)
!2612 = !DILocation(line: 821, column: 52, scope: !2610)
!2613 = !DILocation(line: 821, column: 14, scope: !2610)
!2614 = !DILocation(line: 821, column: 12, scope: !2610)
!2615 = !DILocation(line: 824, column: 9, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 824, column: 9)
!2617 = !DILocation(line: 824, column: 12, scope: !2616)
!2618 = !DILocation(line: 824, column: 9, scope: !2006)
!2619 = !DILocation(line: 825, column: 9, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 824, column: 26)
!2621 = !DILocation(line: 828, column: 9, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 828, column: 9)
!2623 = !DILocation(line: 828, column: 12, scope: !2622)
!2624 = !DILocation(line: 828, column: 9, scope: !2006)
!2625 = !DILocation(line: 829, column: 27, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 828, column: 29)
!2627 = !DILocation(line: 829, column: 34, scope: !2626)
!2628 = !DILocation(line: 829, column: 38, scope: !2626)
!2629 = !DILocation(line: 829, column: 9, scope: !2626)
!2630 = !DILocation(line: 831, column: 27, scope: !2626)
!2631 = !DILocation(line: 831, column: 30, scope: !2626)
!2632 = !DILocation(line: 831, column: 34, scope: !2626)
!2633 = !DILocation(line: 831, column: 9, scope: !2626)
!2634 = !DILocation(line: 832, column: 27, scope: !2626)
!2635 = !DILocation(line: 832, column: 30, scope: !2626)
!2636 = !DILocation(line: 832, column: 34, scope: !2626)
!2637 = !DILocation(line: 832, column: 9, scope: !2626)
!2638 = !DILocation(line: 833, column: 27, scope: !2626)
!2639 = !DILocation(line: 833, column: 30, scope: !2626)
!2640 = !DILocation(line: 833, column: 9, scope: !2626)
!2641 = !DILocation(line: 835, column: 9, scope: !2626)
!2642 = distinct !{!2642, !2641, !2643}
!2643 = !DILocation(line: 842, column: 21, scope: !2626)
!2644 = !DILocation(line: 836, column: 13, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 835, column: 12)
!2646 = !DILocation(line: 836, column: 18, scope: !2645)
!2647 = !DILocation(line: 836, column: 24, scope: !2645)
!2648 = !DILocation(line: 837, column: 20, scope: !2645)
!2649 = !DILocation(line: 837, column: 25, scope: !2645)
!2650 = !DILocation(line: 837, column: 18, scope: !2645)
!2651 = !DILocation(line: 839, column: 13, scope: !2645)
!2652 = !DILocation(line: 839, column: 18, scope: !2645)
!2653 = !DILocation(line: 839, column: 26, scope: !2645)
!2654 = !DILocation(line: 841, column: 19, scope: !2645)
!2655 = !DILocation(line: 841, column: 17, scope: !2645)
!2656 = !DILocation(line: 842, column: 9, scope: !2645)
!2657 = !DILocation(line: 842, column: 18, scope: !2626)
!2658 = !DILocation(line: 844, column: 9, scope: !2626)
!2659 = !DILocation(line: 847, column: 27, scope: !2006)
!2660 = !DILocation(line: 847, column: 30, scope: !2006)
!2661 = !DILocation(line: 847, column: 45, scope: !2006)
!2662 = !{!883, !828, i64 36}
!2663 = !DILocation(line: 847, column: 5, scope: !2006)
!2664 = !DILocation(line: 847, column: 9, scope: !2006)
!2665 = !DILocation(line: 847, column: 25, scope: !2006)
!2666 = !{!1359, !828, i64 108}
!2667 = !DILocation(line: 848, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 848, column: 9)
!2669 = !DILocation(line: 848, column: 12, scope: !2668)
!2670 = !DILocation(line: 848, column: 31, scope: !2668)
!2671 = !DILocation(line: 848, column: 34, scope: !2668)
!2672 = !DILocation(line: 848, column: 46, scope: !2668)
!2673 = !DILocation(line: 848, column: 28, scope: !2668)
!2674 = !DILocation(line: 848, column: 9, scope: !2006)
!2675 = !DILocation(line: 849, column: 9, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 848, column: 53)
!2677 = !DILocation(line: 849, column: 12, scope: !2676)
!2678 = !DILocation(line: 849, column: 28, scope: !2676)
!2679 = !DILocation(line: 850, column: 5, scope: !2676)
!2680 = !DILocation(line: 852, column: 5, scope: !2006)
!2681 = !DILocation(line: 852, column: 9, scope: !2006)
!2682 = !DILocation(line: 852, column: 16, scope: !2006)
!2683 = !DILocation(line: 853, column: 5, scope: !2006)
!2684 = !DILocation(line: 853, column: 9, scope: !2006)
!2685 = !DILocation(line: 853, column: 13, scope: !2006)
!2686 = !DILocation(line: 855, column: 19, scope: !2006)
!2687 = !DILocation(line: 855, column: 22, scope: !2006)
!2688 = !DILocation(line: 855, column: 5, scope: !2006)
!2689 = !DILocation(line: 855, column: 9, scope: !2006)
!2690 = !DILocation(line: 855, column: 17, scope: !2006)
!2691 = !DILocation(line: 856, column: 5, scope: !2006)
!2692 = !DILocation(line: 856, column: 9, scope: !2006)
!2693 = !DILocation(line: 856, column: 14, scope: !2006)
!2694 = !DILocation(line: 858, column: 5, scope: !2006)
!2695 = !DILocation(line: 858, column: 9, scope: !2006)
!2696 = !DILocation(line: 858, column: 15, scope: !2006)
!2697 = !DILocation(line: 860, column: 33, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 860, column: 9)
!2699 = !DILocation(line: 860, column: 36, scope: !2698)
!2700 = !DILocation(line: 860, column: 9, scope: !2698)
!2701 = !DILocation(line: 860, column: 40, scope: !2698)
!2702 = !DILocation(line: 860, column: 9, scope: !2006)
!2703 = !DILocation(line: 861, column: 9, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 860, column: 51)
!2705 = !DILocation(line: 864, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 864, column: 9)
!2707 = !DILocation(line: 864, column: 14, scope: !2706)
!2708 = !DILocation(line: 864, column: 20, scope: !2706)
!2709 = !DILocation(line: 864, column: 28, scope: !2706)
!2710 = !DILocation(line: 864, column: 31, scope: !2706)
!2711 = !DILocation(line: 864, column: 36, scope: !2706)
!2712 = !DILocation(line: 864, column: 9, scope: !2006)
!2713 = !DILocation(line: 865, column: 42, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 864, column: 45)
!2715 = !DILocation(line: 865, column: 22, scope: !2714)
!2716 = !DILocation(line: 865, column: 9, scope: !2714)
!2717 = !DILocation(line: 865, column: 14, scope: !2714)
!2718 = !DILocation(line: 865, column: 20, scope: !2714)
!2719 = !DILocation(line: 866, column: 13, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 866, column: 13)
!2721 = !DILocation(line: 866, column: 18, scope: !2720)
!2722 = !DILocation(line: 866, column: 24, scope: !2720)
!2723 = !DILocation(line: 866, column: 13, scope: !2714)
!2724 = !DILocation(line: 867, column: 13, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 866, column: 33)
!2726 = !DILocation(line: 870, column: 9, scope: !2714)
!2727 = !DILocation(line: 870, column: 14, scope: !2714)
!2728 = !DILocation(line: 870, column: 21, scope: !2714)
!2729 = !DILocation(line: 870, column: 29, scope: !2714)
!2730 = !DILocation(line: 871, column: 28, scope: !2714)
!2731 = !DILocation(line: 871, column: 9, scope: !2714)
!2732 = !DILocation(line: 871, column: 14, scope: !2714)
!2733 = !DILocation(line: 871, column: 21, scope: !2714)
!2734 = !DILocation(line: 871, column: 26, scope: !2714)
!2735 = !DILocation(line: 872, column: 27, scope: !2714)
!2736 = !DILocation(line: 872, column: 30, scope: !2714)
!2737 = !DILocation(line: 872, column: 9, scope: !2714)
!2738 = !DILocation(line: 872, column: 14, scope: !2714)
!2739 = !DILocation(line: 872, column: 21, scope: !2714)
!2740 = !DILocation(line: 872, column: 25, scope: !2714)
!2741 = !DILocation(line: 873, column: 9, scope: !2714)
!2742 = !DILocation(line: 873, column: 14, scope: !2714)
!2743 = !DILocation(line: 873, column: 20, scope: !2714)
!2744 = !DILocation(line: 875, column: 23, scope: !2714)
!2745 = !DILocation(line: 875, column: 28, scope: !2714)
!2746 = !DILocation(line: 875, column: 35, scope: !2714)
!2747 = !DILocation(line: 875, column: 40, scope: !2714)
!2748 = !DILocation(line: 875, column: 9, scope: !2714)
!2749 = !DILocation(line: 876, column: 5, scope: !2714)
!2750 = !DILocation(line: 878, column: 35, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 878, column: 9)
!2752 = !DILocation(line: 878, column: 9, scope: !2751)
!2753 = !DILocation(line: 878, column: 9, scope: !2006)
!2754 = !DILocation(line: 879, column: 23, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 878, column: 39)
!2756 = !DILocation(line: 879, column: 26, scope: !2755)
!2757 = !DILocation(line: 879, column: 47, scope: !2755)
!2758 = !DILocation(line: 879, column: 50, scope: !2755)
!2759 = !DILocation(line: 879, column: 65, scope: !2755)
!2760 = !DILocation(line: 879, column: 9, scope: !2755)
!2761 = !DILocation(line: 880, column: 5, scope: !2755)
!2762 = !DILocation(line: 882, column: 18, scope: !2006)
!2763 = !DILocation(line: 882, column: 31, scope: !2006)
!2764 = !DILocation(line: 882, column: 34, scope: !2006)
!2765 = !DILocation(line: 882, column: 29, scope: !2006)
!2766 = !DILocation(line: 882, column: 5, scope: !2006)
!2767 = !DILocation(line: 882, column: 9, scope: !2006)
!2768 = !DILocation(line: 882, column: 16, scope: !2006)
!2769 = !DILocation(line: 884, column: 5, scope: !2006)
!2770 = !DILocation(line: 886, column: 5, scope: !2006)
!2771 = !DILocation(line: 886, column: 9, scope: !2006)
!2772 = !DILocation(line: 886, column: 14, scope: !2006)
!2773 = !{!1359, !822, i64 64}
!2774 = !DILocation(line: 887, column: 5, scope: !2006)
!2775 = !DILocation(line: 887, column: 9, scope: !2006)
!2776 = !DILocation(line: 887, column: 15, scope: !2006)
!2777 = !DILocation(line: 888, column: 5, scope: !2006)
!2778 = !DILocation(line: 888, column: 9, scope: !2006)
!2779 = !DILocation(line: 888, column: 15, scope: !2006)
!2780 = !DILocation(line: 889, column: 5, scope: !2006)
!2781 = !DILocation(line: 889, column: 9, scope: !2006)
!2782 = !DILocation(line: 889, column: 13, scope: !2006)
!2783 = !{!1359, !828, i64 100}
!2784 = !DILocation(line: 890, column: 19, scope: !2006)
!2785 = !DILocation(line: 890, column: 5, scope: !2006)
!2786 = !DILocation(line: 890, column: 9, scope: !2006)
!2787 = !DILocation(line: 890, column: 17, scope: !2006)
!2788 = !DILocation(line: 892, column: 5, scope: !2006)
!2789 = !DILocation(line: 892, column: 10, scope: !2006)
!2790 = !DILocation(line: 892, column: 16, scope: !2006)
!2791 = !DILocation(line: 894, column: 5, scope: !2006)
!2792 = distinct !{!2792, !2791, !2793}
!2793 = !DILocation(line: 897, column: 17, scope: !2006)
!2794 = !DILocation(line: 895, column: 21, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 894, column: 8)
!2796 = !DILocation(line: 895, column: 9, scope: !2795)
!2797 = !DILocation(line: 895, column: 14, scope: !2795)
!2798 = !DILocation(line: 895, column: 19, scope: !2795)
!2799 = !DILocation(line: 896, column: 15, scope: !2795)
!2800 = !DILocation(line: 896, column: 20, scope: !2795)
!2801 = !DILocation(line: 896, column: 13, scope: !2795)
!2802 = !DILocation(line: 897, column: 5, scope: !2795)
!2803 = !DILocation(line: 897, column: 14, scope: !2006)
!2804 = !DILocation(line: 899, column: 5, scope: !2006)
!2805 = !DILocation(line: 903, column: 23, scope: !2006)
!2806 = !DILocation(line: 903, column: 30, scope: !2006)
!2807 = !DILocation(line: 903, column: 34, scope: !2006)
!2808 = !DILocation(line: 903, column: 5, scope: !2006)
!2809 = !DILocation(line: 905, column: 9, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 905, column: 9)
!2811 = !DILocation(line: 905, column: 13, scope: !2810)
!2812 = !DILocation(line: 905, column: 9, scope: !2006)
!2813 = !DILocation(line: 906, column: 27, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 905, column: 20)
!2815 = !DILocation(line: 906, column: 30, scope: !2814)
!2816 = !DILocation(line: 906, column: 34, scope: !2814)
!2817 = !DILocation(line: 906, column: 9, scope: !2814)
!2818 = !DILocation(line: 907, column: 5, scope: !2814)
!2819 = !DILocation(line: 909, column: 23, scope: !2006)
!2820 = !DILocation(line: 909, column: 26, scope: !2006)
!2821 = !DILocation(line: 909, column: 30, scope: !2006)
!2822 = !DILocation(line: 909, column: 5, scope: !2006)
!2823 = !DILocation(line: 911, column: 23, scope: !2006)
!2824 = !DILocation(line: 911, column: 26, scope: !2006)
!2825 = !DILocation(line: 911, column: 5, scope: !2006)
!2826 = !DILocation(line: 913, column: 5, scope: !2006)
!2827 = !DILocation(line: 914, column: 1, scope: !2006)
!2828 = distinct !DISubprogram(name: "ngx_resolver_free", scope: !3, file: !3, line: 4126, type: !2829, isLocal: true, isDefinition: true, scopeLine: 4127, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !2831)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{null, !163, !16}
!2831 = !{!2832, !2833}
!2832 = !DILocalVariable(name: "r", arg: 1, scope: !2828, file: !3, line: 4126, type: !163)
!2833 = !DILocalVariable(name: "p", arg: 2, scope: !2828, file: !3, line: 4126, type: !16)
!2834 = !DILocation(line: 4126, column: 35, scope: !2828)
!2835 = !DILocation(line: 4126, column: 44, scope: !2828)
!2836 = !DILocation(line: 4130, column: 14, scope: !2828)
!2837 = !DILocation(line: 4130, column: 5, scope: !2828)
!2838 = !DILocation(line: 4133, column: 1, scope: !2828)
!2839 = distinct !DISubprogram(name: "ngx_resolve_name_done", scope: !3, file: !3, line: 491, type: !462, isLocal: false, isDefinition: true, scopeLine: 492, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2847}
!2841 = !DILocalVariable(name: "ctx", arg: 1, scope: !2839, file: !3, line: 491, type: !157)
!2842 = !DILocalVariable(name: "i", scope: !2839, file: !3, line: 493, type: !82)
!2843 = !DILocalVariable(name: "r", scope: !2839, file: !3, line: 494, type: !163)
!2844 = !DILocalVariable(name: "w", scope: !2839, file: !3, line: 495, type: !157)
!2845 = !DILocalVariable(name: "p", scope: !2839, file: !3, line: 495, type: !2846)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!2847 = !DILocalVariable(name: "rn", scope: !2839, file: !3, line: 496, type: !84)
!2848 = !DILocation(line: 491, column: 43, scope: !2839)
!2849 = !DILocation(line: 493, column: 5, scope: !2839)
!2850 = !DILocation(line: 493, column: 27, scope: !2839)
!2851 = !DILocation(line: 494, column: 5, scope: !2839)
!2852 = !DILocation(line: 494, column: 27, scope: !2839)
!2853 = !DILocation(line: 495, column: 5, scope: !2839)
!2854 = !DILocation(line: 495, column: 27, scope: !2839)
!2855 = !DILocation(line: 495, column: 32, scope: !2839)
!2856 = !DILocation(line: 496, column: 5, scope: !2839)
!2857 = !DILocation(line: 496, column: 27, scope: !2839)
!2858 = !DILocation(line: 498, column: 9, scope: !2839)
!2859 = !DILocation(line: 498, column: 14, scope: !2839)
!2860 = !DILocation(line: 498, column: 7, scope: !2839)
!2861 = !DILocation(line: 503, column: 9, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 503, column: 9)
!2863 = !DILocation(line: 503, column: 14, scope: !2862)
!2864 = !DILocation(line: 503, column: 9, scope: !2839)
!2865 = !DILocation(line: 504, column: 9, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 503, column: 21)
!2867 = !DILocation(line: 507, column: 9, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 507, column: 9)
!2869 = !DILocation(line: 507, column: 14, scope: !2868)
!2870 = !DILocation(line: 507, column: 20, scope: !2868)
!2871 = !DILocation(line: 507, column: 23, scope: !2868)
!2872 = !DILocation(line: 507, column: 28, scope: !2868)
!2873 = !DILocation(line: 507, column: 35, scope: !2868)
!2874 = !DILocation(line: 507, column: 9, scope: !2839)
!2875 = !DILocation(line: 508, column: 23, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 507, column: 46)
!2877 = !DILocation(line: 508, column: 28, scope: !2876)
!2878 = !DILocation(line: 508, column: 9, scope: !2876)
!2879 = !DILocation(line: 509, column: 5, scope: !2876)
!2880 = !DILocation(line: 513, column: 9, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 513, column: 9)
!2882 = !DILocation(line: 513, column: 14, scope: !2881)
!2883 = !{!1680, !828, i64 88}
!2884 = !DILocation(line: 513, column: 9, scope: !2839)
!2885 = !DILocation(line: 514, column: 16, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 514, column: 9)
!2887 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 513, column: 21)
!2888 = !DILocation(line: 514, column: 14, scope: !2886)
!2889 = !DILocation(line: 514, column: 21, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 514, column: 9)
!2891 = !DILocation(line: 514, column: 25, scope: !2890)
!2892 = !DILocation(line: 514, column: 30, scope: !2890)
!2893 = !DILocation(line: 514, column: 23, scope: !2890)
!2894 = !DILocation(line: 514, column: 9, scope: !2886)
!2895 = !DILocation(line: 515, column: 17, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2897, file: !3, line: 515, column: 17)
!2897 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 514, column: 42)
!2898 = !DILocation(line: 515, column: 22, scope: !2896)
!2899 = !{!1680, !821, i64 92}
!2900 = !DILocation(line: 515, column: 27, scope: !2896)
!2901 = !DILocation(line: 515, column: 30, scope: !2896)
!2902 = !{!2903, !821, i64 16}
!2903 = !{!"", !998, i64 0, !1070, i64 8, !1070, i64 10, !1070, i64 12, !821, i64 16, !828, i64 20, !828, i64 24, !821, i64 28}
!2904 = !DILocation(line: 515, column: 17, scope: !2897)
!2905 = !DILocation(line: 516, column: 39, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 515, column: 35)
!2907 = !DILocation(line: 516, column: 44, scope: !2906)
!2908 = !DILocation(line: 516, column: 49, scope: !2906)
!2909 = !DILocation(line: 516, column: 52, scope: !2906)
!2910 = !DILocation(line: 516, column: 17, scope: !2906)
!2911 = !DILocation(line: 517, column: 13, scope: !2906)
!2912 = !DILocation(line: 519, column: 17, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2897, file: !3, line: 519, column: 17)
!2914 = !DILocation(line: 519, column: 22, scope: !2913)
!2915 = !DILocation(line: 519, column: 27, scope: !2913)
!2916 = !DILocation(line: 519, column: 30, scope: !2913)
!2917 = !{!2903, !821, i64 28}
!2918 = !DILocation(line: 519, column: 17, scope: !2897)
!2919 = !DILocation(line: 520, column: 35, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 519, column: 37)
!2921 = !DILocation(line: 520, column: 38, scope: !2920)
!2922 = !DILocation(line: 520, column: 43, scope: !2920)
!2923 = !DILocation(line: 520, column: 48, scope: !2920)
!2924 = !DILocation(line: 520, column: 51, scope: !2920)
!2925 = !DILocation(line: 520, column: 58, scope: !2920)
!2926 = !DILocation(line: 520, column: 17, scope: !2920)
!2927 = !DILocation(line: 521, column: 35, scope: !2920)
!2928 = !DILocation(line: 521, column: 38, scope: !2920)
!2929 = !DILocation(line: 521, column: 43, scope: !2920)
!2930 = !DILocation(line: 521, column: 48, scope: !2920)
!2931 = !DILocation(line: 521, column: 51, scope: !2920)
!2932 = !DILocation(line: 521, column: 17, scope: !2920)
!2933 = !DILocation(line: 522, column: 13, scope: !2920)
!2934 = !DILocation(line: 524, column: 31, scope: !2897)
!2935 = !DILocation(line: 524, column: 34, scope: !2897)
!2936 = !DILocation(line: 524, column: 39, scope: !2897)
!2937 = !DILocation(line: 524, column: 44, scope: !2897)
!2938 = !DILocation(line: 524, column: 47, scope: !2897)
!2939 = !DILocation(line: 524, column: 52, scope: !2897)
!2940 = !{!2903, !821, i64 4}
!2941 = !DILocation(line: 524, column: 13, scope: !2897)
!2942 = !DILocation(line: 525, column: 9, scope: !2897)
!2943 = !DILocation(line: 514, column: 38, scope: !2890)
!2944 = !DILocation(line: 514, column: 9, scope: !2890)
!2945 = distinct !{!2945, !2894, !2946}
!2946 = !DILocation(line: 525, column: 9, scope: !2886)
!2947 = !DILocation(line: 527, column: 27, scope: !2887)
!2948 = !DILocation(line: 527, column: 30, scope: !2887)
!2949 = !DILocation(line: 527, column: 35, scope: !2887)
!2950 = !DILocation(line: 527, column: 9, scope: !2887)
!2951 = !DILocation(line: 528, column: 5, scope: !2887)
!2952 = !DILocation(line: 530, column: 9, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 530, column: 9)
!2954 = !DILocation(line: 530, column: 14, scope: !2953)
!2955 = !DILocation(line: 530, column: 20, scope: !2953)
!2956 = !DILocation(line: 530, column: 33, scope: !2953)
!2957 = !DILocation(line: 530, column: 36, scope: !2953)
!2958 = !DILocation(line: 530, column: 41, scope: !2953)
!2959 = !DILocation(line: 530, column: 47, scope: !2953)
!2960 = !DILocation(line: 530, column: 9, scope: !2839)
!2961 = !DILocation(line: 532, column: 14, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 530, column: 72)
!2963 = !DILocation(line: 532, column: 19, scope: !2962)
!2964 = !DILocation(line: 532, column: 12, scope: !2962)
!2965 = !DILocation(line: 534, column: 13, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2962, file: !3, line: 534, column: 13)
!2967 = !DILocation(line: 534, column: 13, scope: !2962)
!2968 = !DILocation(line: 535, column: 18, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 534, column: 17)
!2970 = !DILocation(line: 535, column: 22, scope: !2969)
!2971 = !DILocation(line: 535, column: 15, scope: !2969)
!2972 = !DILocation(line: 536, column: 17, scope: !2969)
!2973 = !DILocation(line: 536, column: 21, scope: !2969)
!2974 = !DILocation(line: 536, column: 15, scope: !2969)
!2975 = !DILocation(line: 538, column: 13, scope: !2969)
!2976 = !DILocation(line: 538, column: 20, scope: !2969)
!2977 = !DILocation(line: 539, column: 21, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 539, column: 21)
!2979 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 538, column: 23)
!2980 = !DILocation(line: 539, column: 26, scope: !2978)
!2981 = !DILocation(line: 539, column: 23, scope: !2978)
!2982 = !DILocation(line: 539, column: 21, scope: !2979)
!2983 = !DILocation(line: 540, column: 26, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 539, column: 31)
!2985 = !DILocation(line: 540, column: 29, scope: !2984)
!2986 = !DILocation(line: 540, column: 22, scope: !2984)
!2987 = !DILocation(line: 540, column: 24, scope: !2984)
!2988 = !DILocation(line: 542, column: 21, scope: !2984)
!2989 = !DILocation(line: 545, column: 22, scope: !2979)
!2990 = !DILocation(line: 545, column: 25, scope: !2979)
!2991 = !DILocation(line: 545, column: 19, scope: !2979)
!2992 = !DILocation(line: 546, column: 21, scope: !2979)
!2993 = !DILocation(line: 546, column: 24, scope: !2979)
!2994 = !DILocation(line: 546, column: 19, scope: !2979)
!2995 = distinct !{!2995, !2975, !2996}
!2996 = !DILocation(line: 547, column: 13, scope: !2969)
!2997 = !DILocation(line: 549, column: 13, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 549, column: 13)
!2999 = !{!1125, !828, i64 0}
!3000 = !DILocation(line: 549, column: 13, scope: !2969)
!3001 = !DILocation(line: 551, column: 9, scope: !2969)
!3002 = !DILocation(line: 552, column: 5, scope: !2962)
!3003 = !DILocation(line: 530, column: 50, scope: !2953)
!3004 = !DILocation(line: 556, column: 9, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 556, column: 9)
!3006 = !DILocation(line: 556, column: 14, scope: !3005)
!3007 = !DILocation(line: 556, column: 22, scope: !3005)
!3008 = !DILocation(line: 556, column: 9, scope: !2839)
!3009 = !DILocation(line: 557, column: 29, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 556, column: 27)
!3011 = !DILocation(line: 557, column: 33, scope: !3010)
!3012 = !DILocation(line: 557, column: 36, scope: !3010)
!3013 = !DILocation(line: 557, column: 49, scope: !3010)
!3014 = !DILocation(line: 557, column: 52, scope: !3010)
!3015 = !DILocation(line: 557, column: 9, scope: !3010)
!3016 = !DILocation(line: 559, column: 5, scope: !3010)
!3017 = !DILocation(line: 560, column: 29, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 559, column: 12)
!3019 = !DILocation(line: 560, column: 33, scope: !3018)
!3020 = !DILocation(line: 560, column: 36, scope: !3018)
!3021 = !DILocation(line: 560, column: 50, scope: !3018)
!3022 = !DILocation(line: 560, column: 53, scope: !3018)
!3023 = !DILocation(line: 560, column: 9, scope: !3018)
!3024 = !DILocation(line: 567, column: 9, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 567, column: 9)
!3026 = !DILocation(line: 567, column: 14, scope: !3025)
!3027 = !DILocation(line: 567, column: 9, scope: !2839)
!3028 = !DILocation(line: 568, column: 34, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 567, column: 21)
!3030 = !DILocation(line: 568, column: 37, scope: !3029)
!3031 = !DILocation(line: 568, column: 42, scope: !3029)
!3032 = !DILocation(line: 568, column: 9, scope: !3029)
!3033 = !DILocation(line: 569, column: 5, scope: !3029)
!3034 = !DILocation(line: 571, column: 30, scope: !2839)
!3035 = !DILocation(line: 571, column: 33, scope: !2839)
!3036 = !DILocation(line: 571, column: 5, scope: !2839)
!3037 = !DILocation(line: 575, column: 9, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 575, column: 9)
!3039 = !DILocation(line: 575, column: 12, scope: !3038)
!3040 = !DILocation(line: 575, column: 19, scope: !3038)
!3041 = !DILocation(line: 575, column: 29, scope: !3038)
!3042 = !DILocation(line: 575, column: 58, scope: !3038)
!3043 = !DILocation(line: 575, column: 32, scope: !3038)
!3044 = !DILocation(line: 575, column: 9, scope: !2839)
!3045 = !DILocation(line: 576, column: 23, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 575, column: 62)
!3047 = !DILocation(line: 576, column: 26, scope: !3046)
!3048 = !DILocation(line: 576, column: 9, scope: !3046)
!3049 = !DILocation(line: 577, column: 5, scope: !3046)
!3050 = !DILocation(line: 578, column: 1, scope: !2839)
!3051 = distinct !DISubprogram(name: "ngx_event_del_timer", scope: !3052, file: !3052, line: 32, type: !199, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3053)
!3052 = !DIFile(filename: "src/event/ngx_event_timer.h", directory: "/home/sam/Projects/nginx-1.12.2")
!3053 = !{!3054}
!3054 = !DILocalVariable(name: "ev", arg: 1, scope: !3051, file: !3052, line: 32, type: !168)
!3055 = !DILocation(line: 32, column: 34, scope: !3051)
!3056 = !DILocation(line: 38, column: 49, scope: !3051)
!3057 = !DILocation(line: 38, column: 53, scope: !3051)
!3058 = !DILocation(line: 38, column: 5, scope: !3051)
!3059 = !DILocation(line: 46, column: 5, scope: !3051)
!3060 = !DILocation(line: 46, column: 9, scope: !3051)
!3061 = !DILocation(line: 46, column: 19, scope: !3051)
!3062 = !DILocation(line: 47, column: 1, scope: !3051)
!3063 = distinct !DISubprogram(name: "ngx_resolver_expire", scope: !3, file: !3, line: 1238, type: !3064, isLocal: true, isDefinition: true, scopeLine: 1239, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3066)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{null, !163, !2021, !107}
!3066 = !{!3067, !3068, !3069, !3070, !3071, !3072, !3073}
!3067 = !DILocalVariable(name: "r", arg: 1, scope: !3063, file: !3, line: 1238, type: !163)
!3068 = !DILocalVariable(name: "tree", arg: 2, scope: !3063, file: !3, line: 1238, type: !2021)
!3069 = !DILocalVariable(name: "queue", arg: 3, scope: !3063, file: !3, line: 1238, type: !107)
!3070 = !DILocalVariable(name: "now", scope: !3063, file: !3, line: 1240, type: !19)
!3071 = !DILocalVariable(name: "i", scope: !3063, file: !3, line: 1241, type: !82)
!3072 = !DILocalVariable(name: "q", scope: !3063, file: !3, line: 1242, type: !107)
!3073 = !DILocalVariable(name: "rn", scope: !3063, file: !3, line: 1243, type: !84)
!3074 = !DILocation(line: 1238, column: 37, scope: !3063)
!3075 = !DILocation(line: 1238, column: 54, scope: !3063)
!3076 = !DILocation(line: 1238, column: 73, scope: !3063)
!3077 = !DILocation(line: 1240, column: 5, scope: !3063)
!3078 = !DILocation(line: 1240, column: 27, scope: !3063)
!3079 = !DILocation(line: 1241, column: 5, scope: !3063)
!3080 = !DILocation(line: 1241, column: 27, scope: !3063)
!3081 = !DILocation(line: 1242, column: 5, scope: !3063)
!3082 = !DILocation(line: 1242, column: 27, scope: !3063)
!3083 = !DILocation(line: 1243, column: 5, scope: !3063)
!3084 = !DILocation(line: 1243, column: 27, scope: !3063)
!3085 = !DILocation(line: 1247, column: 11, scope: !3063)
!3086 = !DILocation(line: 1247, column: 9, scope: !3063)
!3087 = !DILocation(line: 1249, column: 12, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 1249, column: 5)
!3089 = !DILocation(line: 1249, column: 10, scope: !3088)
!3090 = !DILocation(line: 1249, column: 17, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 1249, column: 5)
!3092 = !DILocation(line: 1249, column: 19, scope: !3091)
!3093 = !DILocation(line: 1249, column: 5, scope: !3088)
!3094 = !DILocation(line: 1250, column: 13, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 1250, column: 13)
!3096 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1249, column: 29)
!3097 = !DILocation(line: 1250, column: 13, scope: !3096)
!3098 = !DILocation(line: 1251, column: 13, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 1250, column: 37)
!3100 = !DILocation(line: 1254, column: 13, scope: !3096)
!3101 = !DILocation(line: 1254, column: 11, scope: !3096)
!3102 = !DILocation(line: 1256, column: 14, scope: !3096)
!3103 = !DILocation(line: 1256, column: 12, scope: !3096)
!3104 = !DILocation(line: 1258, column: 13, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 1258, column: 13)
!3106 = !DILocation(line: 1258, column: 20, scope: !3105)
!3107 = !DILocation(line: 1258, column: 24, scope: !3105)
!3108 = !DILocation(line: 1258, column: 17, scope: !3105)
!3109 = !DILocation(line: 1258, column: 13, scope: !3096)
!3110 = !DILocation(line: 1259, column: 13, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 1258, column: 32)
!3112 = !DILocation(line: 1265, column: 9, scope: !3096)
!3113 = !DILocation(line: 1267, column: 27, scope: !3096)
!3114 = !DILocation(line: 1267, column: 34, scope: !3096)
!3115 = !DILocation(line: 1267, column: 38, scope: !3096)
!3116 = !DILocation(line: 1267, column: 9, scope: !3096)
!3117 = !DILocation(line: 1269, column: 32, scope: !3096)
!3118 = !DILocation(line: 1269, column: 35, scope: !3096)
!3119 = !DILocation(line: 1269, column: 9, scope: !3096)
!3120 = !DILocation(line: 1270, column: 5, scope: !3096)
!3121 = !DILocation(line: 1249, column: 25, scope: !3091)
!3122 = !DILocation(line: 1249, column: 5, scope: !3091)
!3123 = distinct !{!3123, !3093, !3124}
!3124 = !DILocation(line: 1270, column: 5, scope: !3088)
!3125 = !DILocation(line: 1271, column: 1, scope: !3063)
!3126 = distinct !DISubprogram(name: "ngx_resolver_free_locked", scope: !3, file: !3, line: 4137, type: !2829, isLocal: true, isDefinition: true, scopeLine: 4138, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3127)
!3127 = !{!3128, !3129}
!3128 = !DILocalVariable(name: "r", arg: 1, scope: !3126, file: !3, line: 4137, type: !163)
!3129 = !DILocalVariable(name: "p", arg: 2, scope: !3126, file: !3, line: 4137, type: !16)
!3130 = !DILocation(line: 4137, column: 42, scope: !3126)
!3131 = !DILocation(line: 4137, column: 51, scope: !3126)
!3132 = !DILocation(line: 4139, column: 14, scope: !3126)
!3133 = !DILocation(line: 4139, column: 5, scope: !3126)
!3134 = !DILocation(line: 4140, column: 1, scope: !3126)
!3135 = distinct !DISubprogram(name: "ngx_resolver_resend_empty", scope: !3, file: !3, line: 1556, type: !3136, isLocal: true, isDefinition: true, scopeLine: 1557, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3138)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!82, !163}
!3138 = !{!3139}
!3139 = !DILocalVariable(name: "r", arg: 1, scope: !3135, file: !3, line: 1556, type: !163)
!3140 = !DILocation(line: 1556, column: 43, scope: !3135)
!3141 = !DILocation(line: 1558, column: 12, scope: !3135)
!3142 = !DILocation(line: 1559, column: 12, scope: !3135)
!3143 = !DILocation(line: 1559, column: 15, scope: !3135)
!3144 = !DILocation(line: 1561, column: 12, scope: !3135)
!3145 = !DILocation(line: 1561, column: 15, scope: !3135)
!3146 = !DILocation(line: 1563, column: 12, scope: !3135)
!3147 = !DILocation(line: 1563, column: 15, scope: !3135)
!3148 = !DILocation(line: 1558, column: 5, scope: !3135)
!3149 = distinct !DISubprogram(name: "ngx_resolve_addr", scope: !3, file: !3, line: 918, type: !1795, isLocal: false, isDefinition: true, scopeLine: 919, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161}
!3151 = !DILocalVariable(name: "ctx", arg: 1, scope: !3149, file: !3, line: 918, type: !157)
!3152 = !DILocalVariable(name: "name", scope: !3149, file: !3, line: 920, type: !110)
!3153 = !DILocalVariable(name: "addr", scope: !3149, file: !3, line: 921, type: !21)
!3154 = !DILocalVariable(name: "resend_queue", scope: !3149, file: !3, line: 922, type: !107)
!3155 = !DILocalVariable(name: "expire_queue", scope: !3149, file: !3, line: 922, type: !107)
!3156 = !DILocalVariable(name: "tree", scope: !3149, file: !3, line: 923, type: !2021)
!3157 = !DILocalVariable(name: "r", scope: !3149, file: !3, line: 924, type: !163)
!3158 = !DILocalVariable(name: "sin", scope: !3149, file: !3, line: 925, type: !65)
!3159 = !DILocalVariable(name: "rn", scope: !3149, file: !3, line: 926, type: !84)
!3160 = !DILocalVariable(name: "hash", scope: !3149, file: !3, line: 928, type: !23)
!3161 = !DILocalVariable(name: "sin6", scope: !3149, file: !3, line: 929, type: !36)
!3162 = !DILocation(line: 918, column: 38, scope: !3149)
!3163 = !DILocation(line: 920, column: 5, scope: !3149)
!3164 = !DILocation(line: 920, column: 27, scope: !3149)
!3165 = !DILocation(line: 921, column: 5, scope: !3149)
!3166 = !DILocation(line: 921, column: 27, scope: !3149)
!3167 = !DILocation(line: 922, column: 5, scope: !3149)
!3168 = !DILocation(line: 922, column: 27, scope: !3149)
!3169 = !DILocation(line: 922, column: 42, scope: !3149)
!3170 = !DILocation(line: 923, column: 5, scope: !3149)
!3171 = !DILocation(line: 923, column: 27, scope: !3149)
!3172 = !DILocation(line: 924, column: 5, scope: !3149)
!3173 = !DILocation(line: 924, column: 27, scope: !3149)
!3174 = !DILocation(line: 925, column: 5, scope: !3149)
!3175 = !DILocation(line: 925, column: 27, scope: !3149)
!3176 = !DILocation(line: 926, column: 5, scope: !3149)
!3177 = !DILocation(line: 926, column: 27, scope: !3149)
!3178 = !DILocation(line: 928, column: 5, scope: !3149)
!3179 = !DILocation(line: 928, column: 27, scope: !3149)
!3180 = !DILocation(line: 929, column: 5, scope: !3149)
!3181 = !DILocation(line: 929, column: 27, scope: !3149)
!3182 = !DILocation(line: 933, column: 10, scope: !3149)
!3183 = !DILocation(line: 935, column: 10, scope: !3149)
!3184 = !DILocation(line: 936, column: 10, scope: !3149)
!3185 = !DILocation(line: 940, column: 9, scope: !3149)
!3186 = !DILocation(line: 940, column: 14, scope: !3149)
!3187 = !DILocation(line: 940, column: 7, scope: !3149)
!3188 = !DILocation(line: 942, column: 13, scope: !3149)
!3189 = !DILocation(line: 942, column: 18, scope: !3149)
!3190 = !DILocation(line: 942, column: 23, scope: !3149)
!3191 = !DILocation(line: 942, column: 33, scope: !3149)
!3192 = !{!3193, !1070, i64 0}
!3193 = !{!"sockaddr", !1070, i64 0, !822, i64 2}
!3194 = !DILocation(line: 942, column: 5, scope: !3149)
!3195 = !DILocation(line: 946, column: 40, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 942, column: 44)
!3197 = !DILocation(line: 946, column: 45, scope: !3196)
!3198 = !DILocation(line: 946, column: 50, scope: !3196)
!3199 = !DILocation(line: 946, column: 16, scope: !3196)
!3200 = !DILocation(line: 946, column: 14, scope: !3196)
!3201 = !DILocation(line: 947, column: 32, scope: !3196)
!3202 = !DILocation(line: 947, column: 38, scope: !3196)
!3203 = !DILocation(line: 947, column: 48, scope: !3196)
!3204 = !DILocation(line: 947, column: 16, scope: !3196)
!3205 = !DILocation(line: 947, column: 14, scope: !3196)
!3206 = !DILocation(line: 951, column: 40, scope: !3196)
!3207 = !DILocation(line: 951, column: 44, scope: !3196)
!3208 = !DILocation(line: 951, column: 50, scope: !3196)
!3209 = !DILocation(line: 951, column: 61, scope: !3196)
!3210 = !DILocation(line: 951, column: 14, scope: !3196)
!3211 = !DILocation(line: 951, column: 12, scope: !3196)
!3212 = !DILocation(line: 953, column: 17, scope: !3196)
!3213 = !DILocation(line: 953, column: 20, scope: !3196)
!3214 = !DILocation(line: 953, column: 14, scope: !3196)
!3215 = !DILocation(line: 954, column: 25, scope: !3196)
!3216 = !DILocation(line: 954, column: 28, scope: !3196)
!3217 = !DILocation(line: 954, column: 22, scope: !3196)
!3218 = !DILocation(line: 955, column: 25, scope: !3196)
!3219 = !DILocation(line: 955, column: 28, scope: !3196)
!3220 = !DILocation(line: 955, column: 22, scope: !3196)
!3221 = !DILocation(line: 957, column: 9, scope: !3196)
!3222 = !DILocation(line: 961, column: 38, scope: !3196)
!3223 = !DILocation(line: 961, column: 43, scope: !3196)
!3224 = !DILocation(line: 961, column: 48, scope: !3196)
!3225 = !DILocation(line: 961, column: 15, scope: !3196)
!3226 = !DILocation(line: 961, column: 13, scope: !3196)
!3227 = !DILocation(line: 962, column: 22, scope: !3196)
!3228 = !DILocation(line: 962, column: 27, scope: !3196)
!3229 = !DILocation(line: 962, column: 36, scope: !3196)
!3230 = !{!1682, !828, i64 4}
!3231 = !DILocation(line: 962, column: 16, scope: !3196)
!3232 = !DILocation(line: 962, column: 14, scope: !3196)
!3233 = !DILocation(line: 966, column: 39, scope: !3196)
!3234 = !DILocation(line: 966, column: 42, scope: !3196)
!3235 = !DILocation(line: 966, column: 14, scope: !3196)
!3236 = !DILocation(line: 966, column: 12, scope: !3196)
!3237 = !DILocation(line: 968, column: 17, scope: !3196)
!3238 = !DILocation(line: 968, column: 20, scope: !3196)
!3239 = !DILocation(line: 968, column: 14, scope: !3196)
!3240 = !DILocation(line: 969, column: 25, scope: !3196)
!3241 = !DILocation(line: 969, column: 28, scope: !3196)
!3242 = !DILocation(line: 969, column: 22, scope: !3196)
!3243 = !DILocation(line: 970, column: 25, scope: !3196)
!3244 = !DILocation(line: 970, column: 28, scope: !3196)
!3245 = !DILocation(line: 970, column: 22, scope: !3196)
!3246 = !DILocation(line: 971, column: 5, scope: !3196)
!3247 = !DILocation(line: 973, column: 9, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 973, column: 9)
!3249 = !DILocation(line: 973, column: 9, scope: !3149)
!3250 = !DILocation(line: 975, column: 13, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 975, column: 13)
!3252 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 973, column: 13)
!3253 = !DILocation(line: 975, column: 17, scope: !3251)
!3254 = !DILocation(line: 975, column: 26, scope: !3251)
!3255 = !DILocation(line: 975, column: 23, scope: !3251)
!3256 = !DILocation(line: 975, column: 13, scope: !3252)
!3257 = !DILocation(line: 979, column: 13, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 975, column: 38)
!3259 = !DILocation(line: 981, column: 26, scope: !3258)
!3260 = !DILocation(line: 981, column: 39, scope: !3258)
!3261 = !DILocation(line: 981, column: 42, scope: !3258)
!3262 = !DILocation(line: 981, column: 37, scope: !3258)
!3263 = !DILocation(line: 981, column: 13, scope: !3258)
!3264 = !DILocation(line: 981, column: 17, scope: !3258)
!3265 = !DILocation(line: 981, column: 24, scope: !3258)
!3266 = !DILocation(line: 983, column: 13, scope: !3258)
!3267 = !DILocation(line: 985, column: 37, scope: !3258)
!3268 = !DILocation(line: 985, column: 40, scope: !3258)
!3269 = !DILocation(line: 985, column: 44, scope: !3258)
!3270 = !DILocation(line: 985, column: 50, scope: !3258)
!3271 = !DILocation(line: 985, column: 54, scope: !3258)
!3272 = !DILocation(line: 985, column: 20, scope: !3258)
!3273 = !DILocation(line: 985, column: 18, scope: !3258)
!3274 = !DILocation(line: 986, column: 17, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 986, column: 17)
!3276 = !DILocation(line: 986, column: 22, scope: !3275)
!3277 = !DILocation(line: 986, column: 17, scope: !3258)
!3278 = !DILocation(line: 987, column: 17, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 986, column: 31)
!3280 = !DILocation(line: 990, column: 29, scope: !3258)
!3281 = !DILocation(line: 990, column: 33, scope: !3258)
!3282 = !DILocation(line: 990, column: 13, scope: !3258)
!3283 = !DILocation(line: 990, column: 18, scope: !3258)
!3284 = !DILocation(line: 990, column: 23, scope: !3258)
!3285 = !DILocation(line: 990, column: 27, scope: !3258)
!3286 = !DILocation(line: 991, column: 30, scope: !3258)
!3287 = !DILocation(line: 991, column: 13, scope: !3258)
!3288 = !DILocation(line: 991, column: 18, scope: !3258)
!3289 = !DILocation(line: 991, column: 23, scope: !3258)
!3290 = !DILocation(line: 991, column: 28, scope: !3258)
!3291 = !DILocation(line: 995, column: 13, scope: !3258)
!3292 = !DILocation(line: 995, column: 18, scope: !3258)
!3293 = !DILocation(line: 995, column: 24, scope: !3258)
!3294 = !DILocation(line: 996, column: 26, scope: !3258)
!3295 = !DILocation(line: 996, column: 30, scope: !3258)
!3296 = !DILocation(line: 996, column: 13, scope: !3258)
!3297 = !DILocation(line: 996, column: 18, scope: !3258)
!3298 = !DILocation(line: 996, column: 24, scope: !3258)
!3299 = !DILocation(line: 998, column: 13, scope: !3258)
!3300 = !DILocation(line: 998, column: 18, scope: !3258)
!3301 = !DILocation(line: 998, column: 26, scope: !3258)
!3302 = !DILocation(line: 1000, column: 31, scope: !3258)
!3303 = !DILocation(line: 1000, column: 34, scope: !3258)
!3304 = !DILocation(line: 1000, column: 13, scope: !3258)
!3305 = !DILocation(line: 1002, column: 13, scope: !3258)
!3306 = !DILocation(line: 1005, column: 13, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 1005, column: 13)
!3308 = !DILocation(line: 1005, column: 17, scope: !3307)
!3309 = !DILocation(line: 1005, column: 13, scope: !3252)
!3310 = !DILocation(line: 1007, column: 17, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 1007, column: 17)
!3312 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 1005, column: 26)
!3313 = !DILocation(line: 1007, column: 22, scope: !3311)
!3314 = !DILocation(line: 1007, column: 28, scope: !3311)
!3315 = !DILocation(line: 1007, column: 36, scope: !3311)
!3316 = !DILocation(line: 1007, column: 39, scope: !3311)
!3317 = !DILocation(line: 1007, column: 44, scope: !3311)
!3318 = !DILocation(line: 1007, column: 17, scope: !3312)
!3319 = !DILocation(line: 1008, column: 50, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 1007, column: 53)
!3321 = !DILocation(line: 1008, column: 30, scope: !3320)
!3322 = !DILocation(line: 1008, column: 17, scope: !3320)
!3323 = !DILocation(line: 1008, column: 22, scope: !3320)
!3324 = !DILocation(line: 1008, column: 28, scope: !3320)
!3325 = !DILocation(line: 1009, column: 21, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 1009, column: 21)
!3327 = !DILocation(line: 1009, column: 26, scope: !3326)
!3328 = !DILocation(line: 1009, column: 32, scope: !3326)
!3329 = !DILocation(line: 1009, column: 21, scope: !3320)
!3330 = !DILocation(line: 1010, column: 21, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1009, column: 41)
!3332 = !DILocation(line: 1013, column: 17, scope: !3320)
!3333 = !DILocation(line: 1013, column: 22, scope: !3320)
!3334 = !DILocation(line: 1013, column: 29, scope: !3320)
!3335 = !DILocation(line: 1013, column: 37, scope: !3320)
!3336 = !DILocation(line: 1014, column: 36, scope: !3320)
!3337 = !DILocation(line: 1014, column: 17, scope: !3320)
!3338 = !DILocation(line: 1014, column: 22, scope: !3320)
!3339 = !DILocation(line: 1014, column: 29, scope: !3320)
!3340 = !DILocation(line: 1014, column: 34, scope: !3320)
!3341 = !DILocation(line: 1015, column: 35, scope: !3320)
!3342 = !DILocation(line: 1015, column: 38, scope: !3320)
!3343 = !DILocation(line: 1015, column: 17, scope: !3320)
!3344 = !DILocation(line: 1015, column: 22, scope: !3320)
!3345 = !DILocation(line: 1015, column: 29, scope: !3320)
!3346 = !DILocation(line: 1015, column: 33, scope: !3320)
!3347 = !DILocation(line: 1016, column: 17, scope: !3320)
!3348 = !DILocation(line: 1016, column: 22, scope: !3320)
!3349 = !DILocation(line: 1016, column: 28, scope: !3320)
!3350 = !DILocation(line: 1018, column: 31, scope: !3320)
!3351 = !DILocation(line: 1018, column: 36, scope: !3320)
!3352 = !DILocation(line: 1018, column: 43, scope: !3320)
!3353 = !DILocation(line: 1018, column: 48, scope: !3320)
!3354 = !DILocation(line: 1018, column: 17, scope: !3320)
!3355 = !DILocation(line: 1019, column: 13, scope: !3320)
!3356 = !DILocation(line: 1021, column: 25, scope: !3312)
!3357 = !DILocation(line: 1021, column: 29, scope: !3312)
!3358 = !DILocation(line: 1021, column: 13, scope: !3312)
!3359 = !DILocation(line: 1021, column: 18, scope: !3312)
!3360 = !DILocation(line: 1021, column: 23, scope: !3312)
!3361 = !DILocation(line: 1022, column: 27, scope: !3312)
!3362 = !DILocation(line: 1022, column: 13, scope: !3312)
!3363 = !DILocation(line: 1022, column: 17, scope: !3312)
!3364 = !DILocation(line: 1022, column: 25, scope: !3312)
!3365 = !DILocation(line: 1023, column: 13, scope: !3312)
!3366 = !DILocation(line: 1023, column: 18, scope: !3312)
!3367 = !DILocation(line: 1023, column: 24, scope: !3312)
!3368 = !DILocation(line: 1024, column: 25, scope: !3312)
!3369 = !DILocation(line: 1024, column: 13, scope: !3312)
!3370 = !DILocation(line: 1024, column: 18, scope: !3312)
!3371 = !DILocation(line: 1024, column: 23, scope: !3312)
!3372 = !DILocation(line: 1028, column: 13, scope: !3312)
!3373 = !DILocation(line: 1031, column: 9, scope: !3252)
!3374 = !DILocation(line: 1033, column: 27, scope: !3252)
!3375 = !DILocation(line: 1033, column: 30, scope: !3252)
!3376 = !DILocation(line: 1033, column: 34, scope: !3252)
!3377 = !DILocation(line: 1033, column: 9, scope: !3252)
!3378 = !DILocation(line: 1034, column: 9, scope: !3252)
!3379 = !DILocation(line: 1034, column: 13, scope: !3252)
!3380 = !DILocation(line: 1034, column: 19, scope: !3252)
!3381 = !DILocation(line: 1036, column: 9, scope: !3252)
!3382 = !DILocation(line: 1036, column: 13, scope: !3252)
!3383 = !DILocation(line: 1036, column: 20, scope: !3252)
!3384 = !DILocation(line: 1039, column: 5, scope: !3252)
!3385 = !DILocation(line: 1040, column: 33, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1039, column: 12)
!3387 = !DILocation(line: 1040, column: 14, scope: !3386)
!3388 = !DILocation(line: 1040, column: 12, scope: !3386)
!3389 = !DILocation(line: 1041, column: 13, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1041, column: 13)
!3391 = !DILocation(line: 1041, column: 16, scope: !3390)
!3392 = !DILocation(line: 1041, column: 13, scope: !3386)
!3393 = !DILocation(line: 1042, column: 13, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1041, column: 25)
!3395 = !DILocation(line: 1045, column: 17, scope: !3386)
!3396 = !DILocation(line: 1045, column: 22, scope: !3386)
!3397 = !DILocation(line: 1045, column: 27, scope: !3386)
!3398 = !DILocation(line: 1045, column: 37, scope: !3386)
!3399 = !DILocation(line: 1045, column: 9, scope: !3386)
!3400 = !DILocation(line: 1049, column: 13, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1045, column: 48)
!3402 = !DILocation(line: 1049, column: 17, scope: !3401)
!3403 = !DILocation(line: 1049, column: 25, scope: !3401)
!3404 = !DILocation(line: 1049, column: 31, scope: !3401)
!3405 = !{i64 0, i64 16, !1828, i64 0, i64 16, !1828, i64 0, i64 16, !1828}
!3406 = !DILocation(line: 1050, column: 28, scope: !3401)
!3407 = !DILocation(line: 1050, column: 13, scope: !3401)
!3408 = !DILocation(line: 1050, column: 17, scope: !3401)
!3409 = !DILocation(line: 1050, column: 22, scope: !3401)
!3410 = !DILocation(line: 1050, column: 26, scope: !3401)
!3411 = !DILocation(line: 1051, column: 13, scope: !3401)
!3412 = !DILocation(line: 1055, column: 28, scope: !3401)
!3413 = !DILocation(line: 1055, column: 13, scope: !3401)
!3414 = !DILocation(line: 1055, column: 17, scope: !3401)
!3415 = !DILocation(line: 1055, column: 22, scope: !3401)
!3416 = !DILocation(line: 1055, column: 26, scope: !3401)
!3417 = !DILocation(line: 1056, column: 9, scope: !3401)
!3418 = !DILocation(line: 1058, column: 9, scope: !3386)
!3419 = !DILocation(line: 1058, column: 13, scope: !3386)
!3420 = !DILocation(line: 1058, column: 19, scope: !3386)
!3421 = !DILocation(line: 1060, column: 9, scope: !3386)
!3422 = !DILocation(line: 1060, column: 13, scope: !3386)
!3423 = !DILocation(line: 1060, column: 20, scope: !3386)
!3424 = !DILocation(line: 1063, column: 27, scope: !3386)
!3425 = !DILocation(line: 1063, column: 34, scope: !3386)
!3426 = !DILocation(line: 1063, column: 38, scope: !3386)
!3427 = !DILocation(line: 1063, column: 9, scope: !3386)
!3428 = !DILocation(line: 1066, column: 40, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1066, column: 9)
!3430 = !DILocation(line: 1066, column: 43, scope: !3429)
!3431 = !DILocation(line: 1066, column: 48, scope: !3429)
!3432 = !DILocation(line: 1066, column: 53, scope: !3429)
!3433 = !DILocation(line: 1066, column: 9, scope: !3429)
!3434 = !DILocation(line: 1066, column: 59, scope: !3429)
!3435 = !DILocation(line: 1066, column: 9, scope: !3149)
!3436 = !DILocation(line: 1067, column: 9, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1066, column: 70)
!3438 = !DILocation(line: 1070, column: 27, scope: !3149)
!3439 = !DILocation(line: 1070, column: 30, scope: !3149)
!3440 = !DILocation(line: 1070, column: 45, scope: !3149)
!3441 = !DILocation(line: 1070, column: 5, scope: !3149)
!3442 = !DILocation(line: 1070, column: 9, scope: !3149)
!3443 = !DILocation(line: 1070, column: 25, scope: !3149)
!3444 = !DILocation(line: 1071, column: 9, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1071, column: 9)
!3446 = !DILocation(line: 1071, column: 12, scope: !3445)
!3447 = !DILocation(line: 1071, column: 31, scope: !3445)
!3448 = !DILocation(line: 1071, column: 34, scope: !3445)
!3449 = !DILocation(line: 1071, column: 46, scope: !3445)
!3450 = !DILocation(line: 1071, column: 28, scope: !3445)
!3451 = !DILocation(line: 1071, column: 9, scope: !3149)
!3452 = !DILocation(line: 1072, column: 9, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1071, column: 53)
!3454 = !DILocation(line: 1072, column: 12, scope: !3453)
!3455 = !DILocation(line: 1072, column: 28, scope: !3453)
!3456 = !DILocation(line: 1073, column: 5, scope: !3453)
!3457 = !DILocation(line: 1075, column: 5, scope: !3149)
!3458 = !DILocation(line: 1075, column: 9, scope: !3149)
!3459 = !DILocation(line: 1075, column: 16, scope: !3149)
!3460 = !DILocation(line: 1076, column: 5, scope: !3149)
!3461 = !DILocation(line: 1076, column: 9, scope: !3149)
!3462 = !DILocation(line: 1076, column: 13, scope: !3149)
!3463 = !DILocation(line: 1078, column: 5, scope: !3149)
!3464 = !DILocation(line: 1078, column: 9, scope: !3149)
!3465 = !DILocation(line: 1078, column: 17, scope: !3149)
!3466 = !DILocation(line: 1079, column: 5, scope: !3149)
!3467 = !DILocation(line: 1079, column: 9, scope: !3149)
!3468 = !DILocation(line: 1079, column: 14, scope: !3149)
!3469 = !DILocation(line: 1081, column: 5, scope: !3149)
!3470 = !DILocation(line: 1081, column: 9, scope: !3149)
!3471 = !DILocation(line: 1081, column: 15, scope: !3149)
!3472 = !DILocation(line: 1083, column: 33, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1083, column: 9)
!3474 = !DILocation(line: 1083, column: 36, scope: !3473)
!3475 = !DILocation(line: 1083, column: 9, scope: !3473)
!3476 = !DILocation(line: 1083, column: 40, scope: !3473)
!3477 = !DILocation(line: 1083, column: 9, scope: !3149)
!3478 = !DILocation(line: 1084, column: 9, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 1083, column: 51)
!3480 = !DILocation(line: 1087, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1087, column: 9)
!3482 = !DILocation(line: 1087, column: 14, scope: !3481)
!3483 = !DILocation(line: 1087, column: 20, scope: !3481)
!3484 = !DILocation(line: 1087, column: 28, scope: !3481)
!3485 = !DILocation(line: 1087, column: 31, scope: !3481)
!3486 = !DILocation(line: 1087, column: 36, scope: !3481)
!3487 = !DILocation(line: 1087, column: 9, scope: !3149)
!3488 = !DILocation(line: 1088, column: 42, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 1087, column: 45)
!3490 = !DILocation(line: 1088, column: 22, scope: !3489)
!3491 = !DILocation(line: 1088, column: 9, scope: !3489)
!3492 = !DILocation(line: 1088, column: 14, scope: !3489)
!3493 = !DILocation(line: 1088, column: 20, scope: !3489)
!3494 = !DILocation(line: 1089, column: 13, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 1089, column: 13)
!3496 = !DILocation(line: 1089, column: 18, scope: !3495)
!3497 = !DILocation(line: 1089, column: 24, scope: !3495)
!3498 = !DILocation(line: 1089, column: 13, scope: !3489)
!3499 = !DILocation(line: 1090, column: 13, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1089, column: 33)
!3501 = !DILocation(line: 1093, column: 9, scope: !3489)
!3502 = !DILocation(line: 1093, column: 14, scope: !3489)
!3503 = !DILocation(line: 1093, column: 21, scope: !3489)
!3504 = !DILocation(line: 1093, column: 29, scope: !3489)
!3505 = !DILocation(line: 1094, column: 28, scope: !3489)
!3506 = !DILocation(line: 1094, column: 9, scope: !3489)
!3507 = !DILocation(line: 1094, column: 14, scope: !3489)
!3508 = !DILocation(line: 1094, column: 21, scope: !3489)
!3509 = !DILocation(line: 1094, column: 26, scope: !3489)
!3510 = !DILocation(line: 1095, column: 27, scope: !3489)
!3511 = !DILocation(line: 1095, column: 30, scope: !3489)
!3512 = !DILocation(line: 1095, column: 9, scope: !3489)
!3513 = !DILocation(line: 1095, column: 14, scope: !3489)
!3514 = !DILocation(line: 1095, column: 21, scope: !3489)
!3515 = !DILocation(line: 1095, column: 25, scope: !3489)
!3516 = !DILocation(line: 1096, column: 9, scope: !3489)
!3517 = !DILocation(line: 1096, column: 14, scope: !3489)
!3518 = !DILocation(line: 1096, column: 20, scope: !3489)
!3519 = !DILocation(line: 1098, column: 23, scope: !3489)
!3520 = !DILocation(line: 1098, column: 28, scope: !3489)
!3521 = !DILocation(line: 1098, column: 35, scope: !3489)
!3522 = !DILocation(line: 1098, column: 40, scope: !3489)
!3523 = !DILocation(line: 1098, column: 9, scope: !3489)
!3524 = !DILocation(line: 1099, column: 5, scope: !3489)
!3525 = !DILocation(line: 1101, column: 35, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1101, column: 9)
!3527 = !DILocation(line: 1101, column: 9, scope: !3526)
!3528 = !DILocation(line: 1101, column: 9, scope: !3149)
!3529 = !DILocation(line: 1102, column: 23, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 1101, column: 39)
!3531 = !DILocation(line: 1102, column: 26, scope: !3530)
!3532 = !DILocation(line: 1102, column: 47, scope: !3530)
!3533 = !DILocation(line: 1102, column: 50, scope: !3530)
!3534 = !DILocation(line: 1102, column: 65, scope: !3530)
!3535 = !DILocation(line: 1102, column: 9, scope: !3530)
!3536 = !DILocation(line: 1103, column: 5, scope: !3530)
!3537 = !DILocation(line: 1105, column: 18, scope: !3149)
!3538 = !DILocation(line: 1105, column: 31, scope: !3149)
!3539 = !DILocation(line: 1105, column: 34, scope: !3149)
!3540 = !DILocation(line: 1105, column: 29, scope: !3149)
!3541 = !DILocation(line: 1105, column: 5, scope: !3149)
!3542 = !DILocation(line: 1105, column: 9, scope: !3149)
!3543 = !DILocation(line: 1105, column: 16, scope: !3149)
!3544 = !DILocation(line: 1107, column: 5, scope: !3149)
!3545 = !DILocation(line: 1109, column: 5, scope: !3149)
!3546 = !DILocation(line: 1109, column: 9, scope: !3149)
!3547 = !DILocation(line: 1109, column: 14, scope: !3149)
!3548 = !DILocation(line: 1110, column: 5, scope: !3149)
!3549 = !DILocation(line: 1110, column: 9, scope: !3149)
!3550 = !DILocation(line: 1110, column: 15, scope: !3149)
!3551 = !DILocation(line: 1111, column: 5, scope: !3149)
!3552 = !DILocation(line: 1111, column: 9, scope: !3149)
!3553 = !DILocation(line: 1111, column: 14, scope: !3149)
!3554 = !DILocation(line: 1112, column: 5, scope: !3149)
!3555 = !DILocation(line: 1112, column: 9, scope: !3149)
!3556 = !DILocation(line: 1112, column: 14, scope: !3149)
!3557 = !DILocation(line: 1113, column: 5, scope: !3149)
!3558 = !DILocation(line: 1113, column: 9, scope: !3149)
!3559 = !DILocation(line: 1113, column: 15, scope: !3149)
!3560 = !DILocation(line: 1114, column: 5, scope: !3149)
!3561 = !DILocation(line: 1114, column: 9, scope: !3149)
!3562 = !DILocation(line: 1114, column: 13, scope: !3149)
!3563 = !DILocation(line: 1115, column: 19, scope: !3149)
!3564 = !DILocation(line: 1115, column: 5, scope: !3149)
!3565 = !DILocation(line: 1115, column: 9, scope: !3149)
!3566 = !DILocation(line: 1115, column: 17, scope: !3149)
!3567 = !DILocation(line: 1119, column: 5, scope: !3149)
!3568 = !DILocation(line: 1119, column: 10, scope: !3149)
!3569 = !DILocation(line: 1119, column: 16, scope: !3149)
!3570 = !DILocation(line: 1120, column: 17, scope: !3149)
!3571 = !DILocation(line: 1120, column: 5, scope: !3149)
!3572 = !DILocation(line: 1120, column: 10, scope: !3149)
!3573 = !DILocation(line: 1120, column: 15, scope: !3149)
!3574 = !DILocation(line: 1122, column: 5, scope: !3149)
!3575 = !DILocation(line: 1126, column: 9, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1126, column: 9)
!3577 = !DILocation(line: 1126, column: 9, scope: !3149)
!3578 = !DILocation(line: 1127, column: 27, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 1126, column: 13)
!3580 = !DILocation(line: 1127, column: 34, scope: !3579)
!3581 = !DILocation(line: 1127, column: 38, scope: !3579)
!3582 = !DILocation(line: 1127, column: 9, scope: !3579)
!3583 = !DILocation(line: 1129, column: 13, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3579, file: !3, line: 1129, column: 13)
!3585 = !DILocation(line: 1129, column: 17, scope: !3584)
!3586 = !DILocation(line: 1129, column: 13, scope: !3579)
!3587 = !DILocation(line: 1130, column: 31, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1129, column: 24)
!3589 = !DILocation(line: 1130, column: 34, scope: !3588)
!3590 = !DILocation(line: 1130, column: 38, scope: !3588)
!3591 = !DILocation(line: 1130, column: 13, scope: !3588)
!3592 = !DILocation(line: 1131, column: 9, scope: !3588)
!3593 = !DILocation(line: 1133, column: 27, scope: !3579)
!3594 = !DILocation(line: 1133, column: 30, scope: !3579)
!3595 = !DILocation(line: 1133, column: 9, scope: !3579)
!3596 = !DILocation(line: 1134, column: 5, scope: !3579)
!3597 = !DILocation(line: 1138, column: 9, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1138, column: 9)
!3599 = !DILocation(line: 1138, column: 14, scope: !3598)
!3600 = !DILocation(line: 1138, column: 9, scope: !3149)
!3601 = !DILocation(line: 1139, column: 27, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 1138, column: 21)
!3603 = !DILocation(line: 1139, column: 30, scope: !3602)
!3604 = !DILocation(line: 1139, column: 35, scope: !3602)
!3605 = !DILocation(line: 1139, column: 9, scope: !3602)
!3606 = !DILocation(line: 1140, column: 5, scope: !3602)
!3607 = !DILocation(line: 1142, column: 23, scope: !3149)
!3608 = !DILocation(line: 1142, column: 26, scope: !3149)
!3609 = !DILocation(line: 1142, column: 5, scope: !3149)
!3610 = !DILocation(line: 1144, column: 5, scope: !3149)
!3611 = !DILocation(line: 1145, column: 1, scope: !3149)
!3612 = distinct !DISubprogram(name: "ngx_crc32_short", scope: !3613, file: !3613, line: 21, type: !3614, isLocal: true, isDefinition: true, scopeLine: 22, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3616)
!3613 = !DIFile(filename: "src/core/ngx_crc32.h", directory: "/home/sam/Projects/nginx-1.12.2")
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!23, !110, !134}
!3616 = !{!3617, !3618, !3619, !3620}
!3617 = !DILocalVariable(name: "p", arg: 1, scope: !3612, file: !3613, line: 21, type: !110)
!3618 = !DILocalVariable(name: "len", arg: 2, scope: !3612, file: !3613, line: 21, type: !134)
!3619 = !DILocalVariable(name: "c", scope: !3612, file: !3613, line: 23, type: !99)
!3620 = !DILocalVariable(name: "crc", scope: !3612, file: !3613, line: 24, type: !23)
!3621 = !DILocation(line: 21, column: 25, scope: !3612)
!3622 = !DILocation(line: 21, column: 35, scope: !3612)
!3623 = !DILocation(line: 23, column: 5, scope: !3612)
!3624 = !DILocation(line: 23, column: 15, scope: !3612)
!3625 = !DILocation(line: 24, column: 5, scope: !3612)
!3626 = !DILocation(line: 24, column: 15, scope: !3612)
!3627 = !DILocation(line: 26, column: 9, scope: !3612)
!3628 = !DILocation(line: 28, column: 5, scope: !3612)
!3629 = !DILocation(line: 28, column: 15, scope: !3612)
!3630 = !DILocation(line: 29, column: 15, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3612, file: !3613, line: 28, column: 19)
!3632 = !DILocation(line: 29, column: 13, scope: !3631)
!3633 = !DILocation(line: 29, column: 11, scope: !3631)
!3634 = !DILocation(line: 30, column: 15, scope: !3631)
!3635 = !DILocation(line: 30, column: 38, scope: !3631)
!3636 = !DILocation(line: 30, column: 45, scope: !3631)
!3637 = !DILocation(line: 30, column: 47, scope: !3631)
!3638 = !DILocation(line: 30, column: 42, scope: !3631)
!3639 = !DILocation(line: 30, column: 55, scope: !3631)
!3640 = !DILocation(line: 30, column: 65, scope: !3631)
!3641 = !DILocation(line: 30, column: 69, scope: !3631)
!3642 = !DILocation(line: 30, column: 62, scope: !3631)
!3643 = !DILocation(line: 30, column: 13, scope: !3631)
!3644 = !DILocation(line: 31, column: 15, scope: !3631)
!3645 = !DILocation(line: 31, column: 38, scope: !3631)
!3646 = !DILocation(line: 31, column: 45, scope: !3631)
!3647 = !DILocation(line: 31, column: 47, scope: !3631)
!3648 = !DILocation(line: 31, column: 42, scope: !3631)
!3649 = !DILocation(line: 31, column: 54, scope: !3631)
!3650 = !DILocation(line: 31, column: 64, scope: !3631)
!3651 = !DILocation(line: 31, column: 68, scope: !3631)
!3652 = !DILocation(line: 31, column: 61, scope: !3631)
!3653 = !DILocation(line: 31, column: 13, scope: !3631)
!3654 = distinct !{!3654, !3628, !3655}
!3655 = !DILocation(line: 32, column: 5, scope: !3612)
!3656 = !DILocation(line: 34, column: 12, scope: !3612)
!3657 = !DILocation(line: 34, column: 16, scope: !3612)
!3658 = !DILocation(line: 35, column: 1, scope: !3612)
!3659 = !DILocation(line: 34, column: 5, scope: !3612)
!3660 = distinct !DISubprogram(name: "ngx_resolver_lookup_addr6", scope: !3, file: !3, line: 3506, type: !3661, isLocal: true, isDefinition: true, scopeLine: 3508, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3663)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!84, !163, !148, !23}
!3663 = !{!3664, !3665, !3666, !3667, !3668, !3669, !3670}
!3664 = !DILocalVariable(name: "r", arg: 1, scope: !3660, file: !3, line: 3506, type: !163)
!3665 = !DILocalVariable(name: "addr", arg: 2, scope: !3660, file: !3, line: 3506, type: !148)
!3666 = !DILocalVariable(name: "hash", arg: 3, scope: !3660, file: !3, line: 3507, type: !23)
!3667 = !DILocalVariable(name: "rc", scope: !3660, file: !3, line: 3509, type: !8)
!3668 = !DILocalVariable(name: "node", scope: !3660, file: !3, line: 3510, type: !95)
!3669 = !DILocalVariable(name: "sentinel", scope: !3660, file: !3, line: 3510, type: !95)
!3670 = !DILocalVariable(name: "rn", scope: !3660, file: !3, line: 3511, type: !84)
!3671 = !DILocation(line: 3506, column: 43, scope: !3660)
!3672 = !DILocation(line: 3506, column: 63, scope: !3660)
!3673 = !DILocation(line: 3507, column: 14, scope: !3660)
!3674 = !DILocation(line: 3509, column: 5, scope: !3660)
!3675 = !DILocation(line: 3509, column: 27, scope: !3660)
!3676 = !DILocation(line: 3510, column: 5, scope: !3660)
!3677 = !DILocation(line: 3510, column: 27, scope: !3660)
!3678 = !DILocation(line: 3510, column: 34, scope: !3660)
!3679 = !DILocation(line: 3511, column: 5, scope: !3660)
!3680 = !DILocation(line: 3511, column: 27, scope: !3660)
!3681 = !DILocation(line: 3513, column: 12, scope: !3660)
!3682 = !DILocation(line: 3513, column: 15, scope: !3660)
!3683 = !DILocation(line: 3513, column: 28, scope: !3660)
!3684 = !{!883, !821, i64 188}
!3685 = !DILocation(line: 3513, column: 10, scope: !3660)
!3686 = !DILocation(line: 3514, column: 16, scope: !3660)
!3687 = !DILocation(line: 3514, column: 19, scope: !3660)
!3688 = !DILocation(line: 3514, column: 32, scope: !3660)
!3689 = !{!883, !821, i64 192}
!3690 = !DILocation(line: 3514, column: 14, scope: !3660)
!3691 = !DILocation(line: 3516, column: 5, scope: !3660)
!3692 = !DILocation(line: 3516, column: 12, scope: !3660)
!3693 = !DILocation(line: 3516, column: 20, scope: !3660)
!3694 = !DILocation(line: 3516, column: 17, scope: !3660)
!3695 = !DILocation(line: 3518, column: 13, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3518, column: 13)
!3697 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 3516, column: 30)
!3698 = !DILocation(line: 3518, column: 20, scope: !3696)
!3699 = !DILocation(line: 3518, column: 26, scope: !3696)
!3700 = !DILocation(line: 3518, column: 18, scope: !3696)
!3701 = !DILocation(line: 3518, column: 13, scope: !3697)
!3702 = !DILocation(line: 3519, column: 20, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 3518, column: 31)
!3704 = !DILocation(line: 3519, column: 26, scope: !3703)
!3705 = !DILocation(line: 3519, column: 18, scope: !3703)
!3706 = !DILocation(line: 3520, column: 13, scope: !3703)
!3707 = distinct !{!3707, !3691, !3708}
!3708 = !DILocation(line: 3539, column: 5, scope: !3660)
!3709 = !DILocation(line: 3523, column: 13, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3523, column: 13)
!3711 = !DILocation(line: 3523, column: 20, scope: !3710)
!3712 = !DILocation(line: 3523, column: 26, scope: !3710)
!3713 = !DILocation(line: 3523, column: 18, scope: !3710)
!3714 = !DILocation(line: 3523, column: 13, scope: !3697)
!3715 = !DILocation(line: 3524, column: 20, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 3523, column: 31)
!3717 = !DILocation(line: 3524, column: 26, scope: !3716)
!3718 = !DILocation(line: 3524, column: 18, scope: !3716)
!3719 = !DILocation(line: 3525, column: 13, scope: !3716)
!3720 = !DILocation(line: 3530, column: 14, scope: !3697)
!3721 = !DILocation(line: 3530, column: 12, scope: !3697)
!3722 = !DILocation(line: 3532, column: 14, scope: !3697)
!3723 = !DILocation(line: 3532, column: 12, scope: !3697)
!3724 = !DILocation(line: 3534, column: 13, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3697, file: !3, line: 3534, column: 13)
!3726 = !DILocation(line: 3534, column: 16, scope: !3725)
!3727 = !DILocation(line: 3534, column: 13, scope: !3697)
!3728 = !DILocation(line: 3535, column: 20, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 3534, column: 22)
!3730 = !DILocation(line: 3535, column: 13, scope: !3729)
!3731 = !DILocation(line: 3538, column: 17, scope: !3697)
!3732 = !DILocation(line: 3538, column: 20, scope: !3697)
!3733 = !DILocation(line: 3538, column: 16, scope: !3697)
!3734 = !DILocation(line: 3538, column: 27, scope: !3697)
!3735 = !DILocation(line: 3538, column: 33, scope: !3697)
!3736 = !DILocation(line: 3538, column: 40, scope: !3697)
!3737 = !DILocation(line: 3538, column: 46, scope: !3697)
!3738 = !DILocation(line: 3538, column: 14, scope: !3697)
!3739 = !DILocation(line: 3543, column: 5, scope: !3660)
!3740 = !DILocation(line: 3544, column: 1, scope: !3660)
!3741 = distinct !DISubprogram(name: "ngx_resolver_lookup_addr", scope: !3, file: !3, line: 3473, type: !3742, isLocal: true, isDefinition: true, scopeLine: 3474, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3744)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!84, !163, !21}
!3744 = !{!3745, !3746, !3747, !3748}
!3745 = !DILocalVariable(name: "r", arg: 1, scope: !3741, file: !3, line: 3473, type: !163)
!3746 = !DILocalVariable(name: "addr", arg: 2, scope: !3741, file: !3, line: 3473, type: !21)
!3747 = !DILocalVariable(name: "node", scope: !3741, file: !3, line: 3475, type: !95)
!3748 = !DILocalVariable(name: "sentinel", scope: !3741, file: !3, line: 3475, type: !95)
!3749 = !DILocation(line: 3473, column: 42, scope: !3741)
!3750 = !DILocation(line: 3473, column: 55, scope: !3741)
!3751 = !DILocation(line: 3475, column: 5, scope: !3741)
!3752 = !DILocation(line: 3475, column: 25, scope: !3741)
!3753 = !DILocation(line: 3475, column: 32, scope: !3741)
!3754 = !DILocation(line: 3477, column: 12, scope: !3741)
!3755 = !DILocation(line: 3477, column: 15, scope: !3741)
!3756 = !DILocation(line: 3477, column: 27, scope: !3741)
!3757 = !{!883, !821, i64 104}
!3758 = !DILocation(line: 3477, column: 10, scope: !3741)
!3759 = !DILocation(line: 3478, column: 16, scope: !3741)
!3760 = !DILocation(line: 3478, column: 19, scope: !3741)
!3761 = !DILocation(line: 3478, column: 31, scope: !3741)
!3762 = !{!883, !821, i64 108}
!3763 = !DILocation(line: 3478, column: 14, scope: !3741)
!3764 = !DILocation(line: 3480, column: 5, scope: !3741)
!3765 = !DILocation(line: 3480, column: 12, scope: !3741)
!3766 = !DILocation(line: 3480, column: 20, scope: !3741)
!3767 = !DILocation(line: 3480, column: 17, scope: !3741)
!3768 = !DILocation(line: 3482, column: 13, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 3482, column: 13)
!3770 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 3480, column: 30)
!3771 = !DILocation(line: 3482, column: 20, scope: !3769)
!3772 = !DILocation(line: 3482, column: 26, scope: !3769)
!3773 = !DILocation(line: 3482, column: 18, scope: !3769)
!3774 = !DILocation(line: 3482, column: 13, scope: !3770)
!3775 = !DILocation(line: 3483, column: 20, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 3482, column: 31)
!3777 = !DILocation(line: 3483, column: 26, scope: !3776)
!3778 = !DILocation(line: 3483, column: 18, scope: !3776)
!3779 = !DILocation(line: 3484, column: 13, scope: !3776)
!3780 = distinct !{!3780, !3764, !3781}
!3781 = !DILocation(line: 3495, column: 5, scope: !3741)
!3782 = !DILocation(line: 3487, column: 13, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 3487, column: 13)
!3784 = !DILocation(line: 3487, column: 20, scope: !3783)
!3785 = !DILocation(line: 3487, column: 26, scope: !3783)
!3786 = !DILocation(line: 3487, column: 18, scope: !3783)
!3787 = !DILocation(line: 3487, column: 13, scope: !3770)
!3788 = !DILocation(line: 3488, column: 20, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 3487, column: 31)
!3790 = !DILocation(line: 3488, column: 26, scope: !3789)
!3791 = !DILocation(line: 3488, column: 18, scope: !3789)
!3792 = !DILocation(line: 3489, column: 13, scope: !3789)
!3793 = !DILocation(line: 3494, column: 16, scope: !3770)
!3794 = !DILocation(line: 3494, column: 9, scope: !3770)
!3795 = !DILocation(line: 3499, column: 5, scope: !3741)
!3796 = !DILocation(line: 3500, column: 1, scope: !3741)
!3797 = distinct !DISubprogram(name: "ngx_resolver_dup", scope: !3, file: !3, line: 4144, type: !3798, isLocal: true, isDefinition: true, scopeLine: 4145, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!16, !163, !16, !134}
!3800 = !{!3801, !3802, !3803, !3804}
!3801 = !DILocalVariable(name: "r", arg: 1, scope: !3797, file: !3, line: 4144, type: !163)
!3802 = !DILocalVariable(name: "src", arg: 2, scope: !3797, file: !3, line: 4144, type: !16)
!3803 = !DILocalVariable(name: "size", arg: 3, scope: !3797, file: !3, line: 4144, type: !134)
!3804 = !DILocalVariable(name: "dst", scope: !3797, file: !3, line: 4146, type: !16)
!3805 = !DILocation(line: 4144, column: 34, scope: !3797)
!3806 = !DILocation(line: 4144, column: 43, scope: !3797)
!3807 = !DILocation(line: 4144, column: 55, scope: !3797)
!3808 = !DILocation(line: 4146, column: 5, scope: !3797)
!3809 = !DILocation(line: 4146, column: 12, scope: !3797)
!3810 = !DILocation(line: 4148, column: 30, scope: !3797)
!3811 = !DILocation(line: 4148, column: 33, scope: !3797)
!3812 = !DILocation(line: 4148, column: 11, scope: !3797)
!3813 = !DILocation(line: 4148, column: 9, scope: !3797)
!3814 = !DILocation(line: 4150, column: 9, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 4150, column: 9)
!3816 = !DILocation(line: 4150, column: 13, scope: !3815)
!3817 = !DILocation(line: 4150, column: 9, scope: !3797)
!3818 = !DILocation(line: 4151, column: 16, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 4150, column: 22)
!3820 = !DILocation(line: 4151, column: 9, scope: !3819)
!3821 = !DILocation(line: 4154, column: 5, scope: !3797)
!3822 = !DILocation(line: 4156, column: 12, scope: !3797)
!3823 = !DILocation(line: 4156, column: 5, scope: !3797)
!3824 = !DILocation(line: 4157, column: 1, scope: !3797)
!3825 = distinct !DISubprogram(name: "ngx_resolver_timeout_handler", scope: !3, file: !3, line: 4038, type: !199, isLocal: true, isDefinition: true, scopeLine: 4039, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3826)
!3826 = !{!3827, !3828}
!3827 = !DILocalVariable(name: "ev", arg: 1, scope: !3825, file: !3, line: 4038, type: !168)
!3828 = !DILocalVariable(name: "ctx", scope: !3825, file: !3, line: 4040, type: !157)
!3829 = !DILocation(line: 4038, column: 43, scope: !3825)
!3830 = !DILocation(line: 4040, column: 5, scope: !3825)
!3831 = !DILocation(line: 4040, column: 26, scope: !3825)
!3832 = !DILocation(line: 4042, column: 11, scope: !3825)
!3833 = !DILocation(line: 4042, column: 15, scope: !3825)
!3834 = !DILocation(line: 4042, column: 9, scope: !3825)
!3835 = !DILocation(line: 4044, column: 5, scope: !3825)
!3836 = !DILocation(line: 4044, column: 10, scope: !3825)
!3837 = !DILocation(line: 4044, column: 16, scope: !3825)
!3838 = !DILocation(line: 4046, column: 5, scope: !3825)
!3839 = !DILocation(line: 4046, column: 10, scope: !3825)
!3840 = !DILocation(line: 4046, column: 18, scope: !3825)
!3841 = !DILocation(line: 4047, column: 1, scope: !3825)
!3842 = distinct !DISubprogram(name: "ngx_event_add_timer", scope: !3052, file: !3052, line: 51, type: !3843, isLocal: true, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{null, !168, !78}
!3845 = !{!3846, !3847, !3848, !3849}
!3846 = !DILocalVariable(name: "ev", arg: 1, scope: !3842, file: !3052, line: 51, type: !168)
!3847 = !DILocalVariable(name: "timer", arg: 2, scope: !3842, file: !3052, line: 51, type: !78)
!3848 = !DILocalVariable(name: "key", scope: !3842, file: !3052, line: 53, type: !78)
!3849 = !DILocalVariable(name: "diff", scope: !3842, file: !3052, line: 54, type: !493)
!3850 = !DILocation(line: 51, column: 34, scope: !3842)
!3851 = !DILocation(line: 51, column: 49, scope: !3842)
!3852 = !DILocation(line: 53, column: 5, scope: !3842)
!3853 = !DILocation(line: 53, column: 21, scope: !3842)
!3854 = !DILocation(line: 54, column: 5, scope: !3842)
!3855 = !DILocation(line: 54, column: 21, scope: !3842)
!3856 = !DILocation(line: 56, column: 11, scope: !3842)
!3857 = !DILocation(line: 56, column: 30, scope: !3842)
!3858 = !DILocation(line: 56, column: 28, scope: !3842)
!3859 = !DILocation(line: 56, column: 9, scope: !3842)
!3860 = !DILocation(line: 58, column: 9, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3842, file: !3052, line: 58, column: 9)
!3862 = !DILocation(line: 58, column: 13, scope: !3861)
!3863 = !DILocation(line: 58, column: 9, scope: !3842)
!3864 = !DILocation(line: 66, column: 34, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3861, file: !3052, line: 58, column: 24)
!3866 = !DILocation(line: 66, column: 40, scope: !3865)
!3867 = !DILocation(line: 66, column: 44, scope: !3865)
!3868 = !DILocation(line: 66, column: 50, scope: !3865)
!3869 = !{!923, !828, i64 20}
!3870 = !DILocation(line: 66, column: 38, scope: !3865)
!3871 = !DILocation(line: 66, column: 14, scope: !3865)
!3872 = !DILocation(line: 68, column: 13, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3865, file: !3052, line: 68, column: 13)
!3874 = !DILocation(line: 68, column: 27, scope: !3873)
!3875 = !DILocation(line: 68, column: 13, scope: !3865)
!3876 = !DILocation(line: 72, column: 13, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !3052, line: 68, column: 51)
!3878 = !DILocation(line: 75, column: 23, scope: !3865)
!3879 = !DILocation(line: 75, column: 9, scope: !3865)
!3880 = !DILocation(line: 76, column: 5, scope: !3865)
!3881 = !DILocation(line: 78, column: 21, scope: !3842)
!3882 = !DILocation(line: 78, column: 5, scope: !3842)
!3883 = !DILocation(line: 78, column: 9, scope: !3842)
!3884 = !DILocation(line: 78, column: 15, scope: !3842)
!3885 = !DILocation(line: 78, column: 19, scope: !3842)
!3886 = !DILocation(line: 84, column: 49, scope: !3842)
!3887 = !DILocation(line: 84, column: 53, scope: !3842)
!3888 = !DILocation(line: 84, column: 5, scope: !3842)
!3889 = !DILocation(line: 86, column: 5, scope: !3842)
!3890 = !DILocation(line: 86, column: 9, scope: !3842)
!3891 = !DILocation(line: 86, column: 19, scope: !3842)
!3892 = !DILocation(line: 87, column: 1, scope: !3842)
!3893 = distinct !DISubprogram(name: "ngx_resolver_create_addr_query", scope: !3, file: !3, line: 3848, type: !3894, isLocal: true, isDefinition: true, scopeLine: 3850, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!8, !163, !84, !424}
!3896 = !{!3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908}
!3897 = !DILocalVariable(name: "r", arg: 1, scope: !3893, file: !3, line: 3848, type: !163)
!3898 = !DILocalVariable(name: "rn", arg: 2, scope: !3893, file: !3, line: 3848, type: !84)
!3899 = !DILocalVariable(name: "addr", arg: 3, scope: !3893, file: !3, line: 3849, type: !424)
!3900 = !DILocalVariable(name: "p", scope: !3893, file: !3, line: 3851, type: !110)
!3901 = !DILocalVariable(name: "d", scope: !3893, file: !3, line: 3851, type: !110)
!3902 = !DILocalVariable(name: "len", scope: !3893, file: !3, line: 3852, type: !134)
!3903 = !DILocalVariable(name: "inaddr", scope: !3893, file: !3, line: 3853, type: !21)
!3904 = !DILocalVariable(name: "n", scope: !3893, file: !3, line: 3854, type: !8)
!3905 = !DILocalVariable(name: "ident", scope: !3893, file: !3, line: 3855, type: !82)
!3906 = !DILocalVariable(name: "query", scope: !3893, file: !3, line: 3856, type: !469)
!3907 = !DILocalVariable(name: "sin", scope: !3893, file: !3, line: 3857, type: !65)
!3908 = !DILocalVariable(name: "sin6", scope: !3893, file: !3, line: 3859, type: !36)
!3909 = !DILocation(line: 3848, column: 48, scope: !3893)
!3910 = !DILocation(line: 3848, column: 72, scope: !3893)
!3911 = !DILocation(line: 3849, column: 26, scope: !3893)
!3912 = !DILocation(line: 3851, column: 5, scope: !3893)
!3913 = !DILocation(line: 3851, column: 27, scope: !3893)
!3914 = !DILocation(line: 3851, column: 31, scope: !3893)
!3915 = !DILocation(line: 3852, column: 5, scope: !3893)
!3916 = !DILocation(line: 3852, column: 27, scope: !3893)
!3917 = !DILocation(line: 3853, column: 5, scope: !3893)
!3918 = !DILocation(line: 3853, column: 27, scope: !3893)
!3919 = !DILocation(line: 3854, column: 5, scope: !3893)
!3920 = !DILocation(line: 3854, column: 27, scope: !3893)
!3921 = !DILocation(line: 3855, column: 5, scope: !3893)
!3922 = !DILocation(line: 3855, column: 27, scope: !3893)
!3923 = !DILocation(line: 3856, column: 5, scope: !3893)
!3924 = !DILocation(line: 3856, column: 27, scope: !3893)
!3925 = !DILocation(line: 3857, column: 5, scope: !3893)
!3926 = !DILocation(line: 3857, column: 27, scope: !3893)
!3927 = !DILocation(line: 3859, column: 5, scope: !3893)
!3928 = !DILocation(line: 3859, column: 27, scope: !3893)
!3929 = !DILocation(line: 3862, column: 13, scope: !3893)
!3930 = !DILocation(line: 3862, column: 19, scope: !3893)
!3931 = !DILocation(line: 3862, column: 29, scope: !3893)
!3932 = !DILocation(line: 3862, column: 5, scope: !3893)
!3933 = !DILocation(line: 3866, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 3862, column: 40)
!3935 = !DILocation(line: 3870, column: 9, scope: !3934)
!3936 = !DILocation(line: 3874, column: 13, scope: !3934)
!3937 = !DILocation(line: 3877, column: 5, scope: !3934)
!3938 = !DILocation(line: 3879, column: 28, scope: !3893)
!3939 = !DILocation(line: 3879, column: 31, scope: !3893)
!3940 = !DILocation(line: 3879, column: 9, scope: !3893)
!3941 = !DILocation(line: 3879, column: 7, scope: !3893)
!3942 = !DILocation(line: 3880, column: 9, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 3880, column: 9)
!3944 = !DILocation(line: 3880, column: 11, scope: !3943)
!3945 = !DILocation(line: 3880, column: 9, scope: !3893)
!3946 = !DILocation(line: 3881, column: 9, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 3880, column: 20)
!3948 = !DILocation(line: 3884, column: 17, scope: !3893)
!3949 = !DILocation(line: 3884, column: 5, scope: !3893)
!3950 = !DILocation(line: 3884, column: 9, scope: !3893)
!3951 = !DILocation(line: 3884, column: 15, scope: !3893)
!3952 = !DILocation(line: 3885, column: 36, scope: !3893)
!3953 = !DILocation(line: 3885, column: 13, scope: !3893)
!3954 = !DILocation(line: 3885, column: 11, scope: !3893)
!3955 = !DILocation(line: 3887, column: 13, scope: !3893)
!3956 = !DILocation(line: 3887, column: 11, scope: !3893)
!3957 = !DILocation(line: 3889, column: 34, scope: !3893)
!3958 = !DILocation(line: 3889, column: 40, scope: !3893)
!3959 = !DILocation(line: 3889, column: 46, scope: !3893)
!3960 = !DILocation(line: 3889, column: 23, scope: !3893)
!3961 = !DILocation(line: 3889, column: 5, scope: !3893)
!3962 = !DILocation(line: 3889, column: 12, scope: !3893)
!3963 = !DILocation(line: 3889, column: 21, scope: !3893)
!3964 = !{!3965, !822, i64 0}
!3965 = !{!"", !822, i64 0, !822, i64 1, !822, i64 2, !822, i64 3, !822, i64 4, !822, i64 5, !822, i64 6, !822, i64 7, !822, i64 8, !822, i64 9, !822, i64 10, !822, i64 11}
!3966 = !DILocation(line: 3890, column: 33, scope: !3893)
!3967 = !DILocation(line: 3890, column: 39, scope: !3893)
!3968 = !DILocation(line: 3890, column: 23, scope: !3893)
!3969 = !DILocation(line: 3890, column: 5, scope: !3893)
!3970 = !DILocation(line: 3890, column: 12, scope: !3893)
!3971 = !DILocation(line: 3890, column: 21, scope: !3893)
!3972 = !{!3965, !822, i64 1}
!3973 = !DILocation(line: 3893, column: 5, scope: !3893)
!3974 = !DILocation(line: 3893, column: 12, scope: !3893)
!3975 = !DILocation(line: 3893, column: 21, scope: !3893)
!3976 = !{!3965, !822, i64 2}
!3977 = !DILocation(line: 3893, column: 26, scope: !3893)
!3978 = !DILocation(line: 3893, column: 33, scope: !3893)
!3979 = !DILocation(line: 3893, column: 42, scope: !3893)
!3980 = !{!3965, !822, i64 3}
!3981 = !DILocation(line: 3896, column: 5, scope: !3893)
!3982 = !DILocation(line: 3896, column: 12, scope: !3893)
!3983 = !DILocation(line: 3896, column: 19, scope: !3893)
!3984 = !{!3965, !822, i64 4}
!3985 = !DILocation(line: 3896, column: 24, scope: !3893)
!3986 = !DILocation(line: 3896, column: 31, scope: !3893)
!3987 = !DILocation(line: 3896, column: 38, scope: !3893)
!3988 = !{!3965, !822, i64 5}
!3989 = !DILocation(line: 3897, column: 5, scope: !3893)
!3990 = !DILocation(line: 3897, column: 12, scope: !3893)
!3991 = !DILocation(line: 3897, column: 19, scope: !3893)
!3992 = !{!3965, !822, i64 6}
!3993 = !DILocation(line: 3897, column: 24, scope: !3893)
!3994 = !DILocation(line: 3897, column: 31, scope: !3893)
!3995 = !DILocation(line: 3897, column: 38, scope: !3893)
!3996 = !{!3965, !822, i64 7}
!3997 = !DILocation(line: 3898, column: 5, scope: !3893)
!3998 = !DILocation(line: 3898, column: 12, scope: !3893)
!3999 = !DILocation(line: 3898, column: 19, scope: !3893)
!4000 = !{!3965, !822, i64 8}
!4001 = !DILocation(line: 3898, column: 24, scope: !3893)
!4002 = !DILocation(line: 3898, column: 31, scope: !3893)
!4003 = !DILocation(line: 3898, column: 38, scope: !3893)
!4004 = !{!3965, !822, i64 9}
!4005 = !DILocation(line: 3899, column: 5, scope: !3893)
!4006 = !DILocation(line: 3899, column: 12, scope: !3893)
!4007 = !DILocation(line: 3899, column: 19, scope: !3893)
!4008 = !{!3965, !822, i64 10}
!4009 = !DILocation(line: 3899, column: 24, scope: !3893)
!4010 = !DILocation(line: 3899, column: 31, scope: !3893)
!4011 = !DILocation(line: 3899, column: 38, scope: !3893)
!4012 = !{!3965, !822, i64 11}
!4013 = !DILocation(line: 3901, column: 7, scope: !3893)
!4014 = !DILocation(line: 3903, column: 13, scope: !3893)
!4015 = !DILocation(line: 3903, column: 19, scope: !3893)
!4016 = !DILocation(line: 3903, column: 29, scope: !3893)
!4017 = !DILocation(line: 3903, column: 5, scope: !3893)
!4018 = !DILocation(line: 3907, column: 40, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 3903, column: 40)
!4020 = !DILocation(line: 3907, column: 46, scope: !4019)
!4021 = !DILocation(line: 3907, column: 16, scope: !4019)
!4022 = !DILocation(line: 3907, column: 14, scope: !4019)
!4023 = !DILocation(line: 3909, column: 16, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 3909, column: 9)
!4025 = !DILocation(line: 3909, column: 14, scope: !4024)
!4026 = !DILocation(line: 3909, column: 22, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3909, column: 9)
!4028 = !DILocation(line: 3909, column: 24, scope: !4027)
!4029 = !DILocation(line: 3909, column: 9, scope: !4024)
!4030 = !DILocation(line: 3910, column: 29, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 3909, column: 35)
!4032 = !DILocation(line: 3911, column: 29, scope: !4031)
!4033 = !DILocation(line: 3911, column: 35, scope: !4031)
!4034 = !DILocation(line: 3911, column: 45, scope: !4031)
!4035 = !DILocation(line: 3911, column: 53, scope: !4031)
!4036 = !DILocation(line: 3911, column: 56, scope: !4031)
!4037 = !DILocation(line: 3912, column: 30, scope: !4031)
!4038 = !DILocation(line: 3912, column: 36, scope: !4031)
!4039 = !DILocation(line: 3912, column: 46, scope: !4031)
!4040 = !DILocation(line: 3912, column: 54, scope: !4031)
!4041 = !DILocation(line: 3912, column: 57, scope: !4031)
!4042 = !DILocation(line: 3912, column: 63, scope: !4031)
!4043 = !DILocation(line: 3910, column: 17, scope: !4031)
!4044 = !DILocation(line: 3910, column: 15, scope: !4031)
!4045 = !DILocation(line: 3913, column: 9, scope: !4031)
!4046 = !DILocation(line: 3909, column: 31, scope: !4027)
!4047 = !DILocation(line: 3909, column: 9, scope: !4027)
!4048 = distinct !{!4048, !4029, !4049}
!4049 = !DILocation(line: 3913, column: 9, scope: !4024)
!4050 = !DILocation(line: 3915, column: 13, scope: !4019)
!4051 = !DILocation(line: 3915, column: 11, scope: !4019)
!4052 = !DILocation(line: 3917, column: 9, scope: !4019)
!4053 = !DILocation(line: 3922, column: 38, scope: !4019)
!4054 = !DILocation(line: 3922, column: 44, scope: !4019)
!4055 = !DILocation(line: 3922, column: 15, scope: !4019)
!4056 = !DILocation(line: 3922, column: 13, scope: !4019)
!4057 = !DILocation(line: 3923, column: 24, scope: !4019)
!4058 = !DILocation(line: 3923, column: 29, scope: !4019)
!4059 = !DILocation(line: 3923, column: 38, scope: !4019)
!4060 = !DILocation(line: 3923, column: 18, scope: !4019)
!4061 = !DILocation(line: 3923, column: 16, scope: !4019)
!4062 = !DILocation(line: 3925, column: 16, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 3925, column: 9)
!4064 = !DILocation(line: 3925, column: 14, scope: !4063)
!4065 = !DILocation(line: 3925, column: 21, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 3925, column: 9)
!4067 = !DILocation(line: 3925, column: 23, scope: !4066)
!4068 = !DILocation(line: 3925, column: 9, scope: !4063)
!4069 = !DILocation(line: 3926, column: 30, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 3925, column: 37)
!4071 = !DILocation(line: 3926, column: 44, scope: !4070)
!4072 = !DILocation(line: 3926, column: 54, scope: !4070)
!4073 = !DILocation(line: 3926, column: 51, scope: !4070)
!4074 = !DILocation(line: 3926, column: 57, scope: !4070)
!4075 = !DILocation(line: 3926, column: 17, scope: !4070)
!4076 = !DILocation(line: 3926, column: 15, scope: !4070)
!4077 = !DILocation(line: 3927, column: 28, scope: !4070)
!4078 = !DILocation(line: 3927, column: 33, scope: !4070)
!4079 = !DILocation(line: 3927, column: 30, scope: !4070)
!4080 = !DILocation(line: 3927, column: 18, scope: !4070)
!4081 = !DILocation(line: 3927, column: 14, scope: !4070)
!4082 = !DILocation(line: 3927, column: 16, scope: !4070)
!4083 = !DILocation(line: 3928, column: 17, scope: !4070)
!4084 = !DILocation(line: 3928, column: 15, scope: !4070)
!4085 = !DILocation(line: 3929, column: 9, scope: !4070)
!4086 = !DILocation(line: 3925, column: 31, scope: !4066)
!4087 = !DILocation(line: 3925, column: 9, scope: !4066)
!4088 = distinct !{!4088, !4068, !4089}
!4089 = !DILocation(line: 3929, column: 9, scope: !4063)
!4090 = !DILocation(line: 3931, column: 13, scope: !4019)
!4091 = !DILocation(line: 3931, column: 11, scope: !4019)
!4092 = !DILocation(line: 3932, column: 5, scope: !4019)
!4093 = !DILocation(line: 3935, column: 9, scope: !3893)
!4094 = !DILocation(line: 3935, column: 7, scope: !3893)
!4095 = !DILocation(line: 3937, column: 27, scope: !3893)
!4096 = !DILocation(line: 3937, column: 31, scope: !3893)
!4097 = !DILocation(line: 3937, column: 35, scope: !3893)
!4098 = !DILocation(line: 3937, column: 29, scope: !3893)
!4099 = !DILocation(line: 3937, column: 16, scope: !3893)
!4100 = !DILocation(line: 3937, column: 5, scope: !3893)
!4101 = !DILocation(line: 3937, column: 9, scope: !3893)
!4102 = !DILocation(line: 3937, column: 14, scope: !3893)
!4103 = !{!1359, !1070, i64 50}
!4104 = !DILocation(line: 3939, column: 5, scope: !3893)
!4105 = !DILocation(line: 3940, column: 1, scope: !3893)
!4106 = distinct !DISubprogram(name: "ngx_resolver_send_query", scope: !3, file: !3, line: 1275, type: !4107, isLocal: true, isDefinition: true, scopeLine: 1276, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4109)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!8, !163, !84}
!4109 = !{!4110, !4111, !4112, !4113}
!4110 = !DILocalVariable(name: "r", arg: 1, scope: !4106, file: !3, line: 1275, type: !163)
!4111 = !DILocalVariable(name: "rn", arg: 2, scope: !4106, file: !3, line: 1275, type: !84)
!4112 = !DILocalVariable(name: "rc", scope: !4106, file: !3, line: 1277, type: !8)
!4113 = !DILocalVariable(name: "rec", scope: !4106, file: !3, line: 1278, type: !807)
!4114 = !DILocation(line: 1275, column: 41, scope: !4106)
!4115 = !DILocation(line: 1275, column: 65, scope: !4106)
!4116 = !DILocation(line: 1277, column: 5, scope: !4106)
!4117 = !DILocation(line: 1277, column: 33, scope: !4106)
!4118 = !DILocation(line: 1278, column: 5, scope: !4106)
!4119 = !DILocation(line: 1278, column: 33, scope: !4106)
!4120 = !DILocation(line: 1280, column: 11, scope: !4106)
!4121 = !DILocation(line: 1280, column: 14, scope: !4106)
!4122 = !DILocation(line: 1280, column: 26, scope: !4106)
!4123 = !DILocation(line: 1280, column: 9, scope: !4106)
!4124 = !DILocation(line: 1281, column: 12, scope: !4106)
!4125 = !DILocation(line: 1281, column: 16, scope: !4106)
!4126 = !DILocation(line: 1281, column: 20, scope: !4106)
!4127 = !DILocation(line: 1281, column: 9, scope: !4106)
!4128 = !DILocation(line: 1283, column: 9, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1283, column: 9)
!4130 = !DILocation(line: 1283, column: 14, scope: !4129)
!4131 = !DILocation(line: 1283, column: 18, scope: !4129)
!4132 = !{!1124, !821, i64 40}
!4133 = !DILocation(line: 1283, column: 26, scope: !4129)
!4134 = !DILocation(line: 1283, column: 9, scope: !4106)
!4135 = !DILocation(line: 1284, column: 9, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 1283, column: 35)
!4137 = !DILocation(line: 1284, column: 14, scope: !4136)
!4138 = !DILocation(line: 1284, column: 21, scope: !4136)
!4139 = !DILocation(line: 1284, column: 24, scope: !4136)
!4140 = !DILocation(line: 1284, column: 20, scope: !4136)
!4141 = !{i64 0, i64 4, !827, i64 4, i64 4, !820, i64 8, i64 4, !1529, i64 12, i64 4, !1529, i64 16, i64 4, !820, i64 20, i64 4, !820, i64 24, i64 4, !820, i64 28, i64 4, !820, i64 32, i64 4, !820, i64 36, i64 4, !820}
!4142 = !DILocation(line: 1285, column: 9, scope: !4136)
!4143 = !DILocation(line: 1285, column: 14, scope: !4136)
!4144 = !DILocation(line: 1285, column: 18, scope: !4136)
!4145 = !DILocation(line: 1285, column: 26, scope: !4136)
!4146 = !DILocation(line: 1286, column: 25, scope: !4136)
!4147 = !DILocation(line: 1286, column: 9, scope: !4136)
!4148 = !DILocation(line: 1286, column: 14, scope: !4136)
!4149 = !DILocation(line: 1286, column: 18, scope: !4136)
!4150 = !DILocation(line: 1286, column: 23, scope: !4136)
!4151 = !{!1124, !821, i64 44}
!4152 = !DILocation(line: 1287, column: 9, scope: !4136)
!4153 = !DILocation(line: 1287, column: 14, scope: !4136)
!4154 = !DILocation(line: 1287, column: 18, scope: !4136)
!4155 = !DILocation(line: 1287, column: 25, scope: !4136)
!4156 = !{!1124, !821, i64 56}
!4157 = !DILocation(line: 1288, column: 5, scope: !4136)
!4158 = !DILocation(line: 1290, column: 9, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1290, column: 9)
!4160 = !DILocation(line: 1290, column: 13, scope: !4159)
!4161 = !DILocation(line: 1290, column: 20, scope: !4159)
!4162 = !DILocation(line: 1290, column: 9, scope: !4106)
!4163 = !DILocation(line: 1291, column: 14, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 1290, column: 37)
!4165 = !DILocation(line: 1291, column: 18, scope: !4164)
!4166 = !DILocation(line: 1291, column: 52, scope: !4164)
!4167 = !DILocation(line: 1291, column: 55, scope: !4164)
!4168 = !DILocation(line: 1291, column: 60, scope: !4164)
!4169 = !DILocation(line: 1291, column: 64, scope: !4164)
!4170 = !DILocation(line: 1291, column: 71, scope: !4164)
!4171 = !DILocation(line: 1291, column: 75, scope: !4164)
!4172 = !DILocation(line: 1291, column: 24, scope: !4164)
!4173 = !DILocation(line: 1292, column: 52, scope: !4164)
!4174 = !DILocation(line: 1292, column: 55, scope: !4164)
!4175 = !DILocation(line: 1292, column: 60, scope: !4164)
!4176 = !DILocation(line: 1292, column: 64, scope: !4164)
!4177 = !DILocation(line: 1292, column: 71, scope: !4164)
!4178 = !DILocation(line: 1292, column: 75, scope: !4164)
!4179 = !DILocation(line: 1292, column: 24, scope: !4164)
!4180 = !DILocation(line: 1291, column: 12, scope: !4164)
!4181 = !DILocation(line: 1294, column: 13, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 1294, column: 13)
!4183 = !DILocation(line: 1294, column: 16, scope: !4182)
!4184 = !DILocation(line: 1294, column: 13, scope: !4164)
!4185 = !DILocation(line: 1295, column: 20, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 1294, column: 27)
!4187 = !DILocation(line: 1295, column: 13, scope: !4186)
!4188 = !DILocation(line: 1297, column: 5, scope: !4164)
!4189 = !DILocation(line: 1301, column: 9, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1301, column: 9)
!4191 = !DILocation(line: 1301, column: 13, scope: !4190)
!4192 = !DILocation(line: 1301, column: 20, scope: !4190)
!4193 = !DILocation(line: 1301, column: 23, scope: !4190)
!4194 = !DILocation(line: 1301, column: 27, scope: !4190)
!4195 = !DILocation(line: 1301, column: 35, scope: !4190)
!4196 = !DILocation(line: 1301, column: 9, scope: !4106)
!4197 = !DILocation(line: 1302, column: 14, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 1301, column: 52)
!4199 = !DILocation(line: 1302, column: 18, scope: !4198)
!4200 = !DILocation(line: 1303, column: 51, scope: !4198)
!4201 = !DILocation(line: 1303, column: 54, scope: !4198)
!4202 = !DILocation(line: 1303, column: 59, scope: !4198)
!4203 = !DILocation(line: 1303, column: 63, scope: !4198)
!4204 = !DILocation(line: 1303, column: 71, scope: !4198)
!4205 = !DILocation(line: 1303, column: 75, scope: !4198)
!4206 = !DILocation(line: 1303, column: 23, scope: !4198)
!4207 = !DILocation(line: 1304, column: 51, scope: !4198)
!4208 = !DILocation(line: 1304, column: 54, scope: !4198)
!4209 = !DILocation(line: 1304, column: 59, scope: !4198)
!4210 = !DILocation(line: 1304, column: 63, scope: !4198)
!4211 = !DILocation(line: 1304, column: 71, scope: !4198)
!4212 = !DILocation(line: 1304, column: 75, scope: !4198)
!4213 = !DILocation(line: 1304, column: 23, scope: !4198)
!4214 = !DILocation(line: 1302, column: 12, scope: !4198)
!4215 = !DILocation(line: 1306, column: 13, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 1306, column: 13)
!4217 = !DILocation(line: 1306, column: 16, scope: !4216)
!4218 = !DILocation(line: 1306, column: 13, scope: !4198)
!4219 = !DILocation(line: 1307, column: 20, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 1306, column: 27)
!4221 = !DILocation(line: 1307, column: 13, scope: !4220)
!4222 = !DILocation(line: 1309, column: 5, scope: !4198)
!4223 = !DILocation(line: 1313, column: 5, scope: !4106)
!4224 = !DILocation(line: 1314, column: 1, scope: !4106)
!4225 = distinct !DISubprogram(name: "ngx_resolve_addr_done", scope: !3, file: !3, line: 1149, type: !462, isLocal: false, isDefinition: true, scopeLine: 1150, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4226)
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4241}
!4227 = !DILocalVariable(name: "ctx", arg: 1, scope: !4225, file: !3, line: 1149, type: !157)
!4228 = !DILocalVariable(name: "expire_queue", scope: !4225, file: !3, line: 1151, type: !107)
!4229 = !DILocalVariable(name: "tree", scope: !4225, file: !3, line: 1152, type: !2021)
!4230 = !DILocalVariable(name: "r", scope: !4225, file: !3, line: 1153, type: !163)
!4231 = !DILocalVariable(name: "w", scope: !4225, file: !3, line: 1154, type: !157)
!4232 = !DILocalVariable(name: "p", scope: !4225, file: !3, line: 1154, type: !2846)
!4233 = !DILocalVariable(name: "rn", scope: !4225, file: !3, line: 1155, type: !84)
!4234 = !DILocalVariable(name: "text", scope: !4235, file: !3, line: 1203, type: !4238)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 1202, column: 9)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !3, line: 1182, column: 72)
!4237 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1182, column: 9)
!4238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 904, elements: !4239)
!4239 = !{!4240}
!4240 = !DISubrange(count: 113)
!4241 = !DILocalVariable(name: "addrtext", scope: !4235, file: !3, line: 1204, type: !129)
!4242 = !DILocation(line: 1149, column: 43, scope: !4225)
!4243 = !DILocation(line: 1151, column: 5, scope: !4225)
!4244 = !DILocation(line: 1151, column: 27, scope: !4225)
!4245 = !DILocation(line: 1152, column: 5, scope: !4225)
!4246 = !DILocation(line: 1152, column: 27, scope: !4225)
!4247 = !DILocation(line: 1153, column: 5, scope: !4225)
!4248 = !DILocation(line: 1153, column: 27, scope: !4225)
!4249 = !DILocation(line: 1154, column: 5, scope: !4225)
!4250 = !DILocation(line: 1154, column: 27, scope: !4225)
!4251 = !DILocation(line: 1154, column: 32, scope: !4225)
!4252 = !DILocation(line: 1155, column: 5, scope: !4225)
!4253 = !DILocation(line: 1155, column: 27, scope: !4225)
!4254 = !DILocation(line: 1157, column: 9, scope: !4225)
!4255 = !DILocation(line: 1157, column: 14, scope: !4225)
!4256 = !DILocation(line: 1157, column: 7, scope: !4225)
!4257 = !DILocation(line: 1159, column: 13, scope: !4225)
!4258 = !DILocation(line: 1159, column: 18, scope: !4225)
!4259 = !DILocation(line: 1159, column: 23, scope: !4225)
!4260 = !DILocation(line: 1159, column: 33, scope: !4225)
!4261 = !DILocation(line: 1159, column: 5, scope: !4225)
!4262 = !DILocation(line: 1163, column: 17, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1159, column: 44)
!4264 = !DILocation(line: 1163, column: 20, scope: !4263)
!4265 = !DILocation(line: 1163, column: 14, scope: !4263)
!4266 = !DILocation(line: 1164, column: 25, scope: !4263)
!4267 = !DILocation(line: 1164, column: 28, scope: !4263)
!4268 = !DILocation(line: 1164, column: 22, scope: !4263)
!4269 = !DILocation(line: 1165, column: 9, scope: !4263)
!4270 = !DILocation(line: 1169, column: 17, scope: !4263)
!4271 = !DILocation(line: 1169, column: 20, scope: !4263)
!4272 = !DILocation(line: 1169, column: 14, scope: !4263)
!4273 = !DILocation(line: 1170, column: 25, scope: !4263)
!4274 = !DILocation(line: 1170, column: 28, scope: !4263)
!4275 = !DILocation(line: 1170, column: 22, scope: !4263)
!4276 = !DILocation(line: 1171, column: 5, scope: !4263)
!4277 = !DILocation(line: 1176, column: 9, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1176, column: 9)
!4279 = !DILocation(line: 1176, column: 14, scope: !4278)
!4280 = !DILocation(line: 1176, column: 20, scope: !4278)
!4281 = !DILocation(line: 1176, column: 23, scope: !4278)
!4282 = !DILocation(line: 1176, column: 28, scope: !4278)
!4283 = !DILocation(line: 1176, column: 35, scope: !4278)
!4284 = !DILocation(line: 1176, column: 9, scope: !4225)
!4285 = !DILocation(line: 1177, column: 23, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 1176, column: 46)
!4287 = !DILocation(line: 1177, column: 28, scope: !4286)
!4288 = !DILocation(line: 1177, column: 9, scope: !4286)
!4289 = !DILocation(line: 1178, column: 5, scope: !4286)
!4290 = !DILocation(line: 1182, column: 9, scope: !4237)
!4291 = !DILocation(line: 1182, column: 14, scope: !4237)
!4292 = !DILocation(line: 1182, column: 20, scope: !4237)
!4293 = !DILocation(line: 1182, column: 33, scope: !4237)
!4294 = !DILocation(line: 1182, column: 36, scope: !4237)
!4295 = !DILocation(line: 1182, column: 41, scope: !4237)
!4296 = !DILocation(line: 1182, column: 47, scope: !4237)
!4297 = !DILocation(line: 1182, column: 9, scope: !4225)
!4298 = !DILocation(line: 1184, column: 14, scope: !4236)
!4299 = !DILocation(line: 1184, column: 19, scope: !4236)
!4300 = !DILocation(line: 1184, column: 12, scope: !4236)
!4301 = !DILocation(line: 1186, column: 13, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 1186, column: 13)
!4303 = !DILocation(line: 1186, column: 13, scope: !4236)
!4304 = !DILocation(line: 1187, column: 18, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1186, column: 17)
!4306 = !DILocation(line: 1187, column: 22, scope: !4305)
!4307 = !DILocation(line: 1187, column: 15, scope: !4305)
!4308 = !DILocation(line: 1188, column: 17, scope: !4305)
!4309 = !DILocation(line: 1188, column: 21, scope: !4305)
!4310 = !DILocation(line: 1188, column: 15, scope: !4305)
!4311 = !DILocation(line: 1190, column: 13, scope: !4305)
!4312 = !DILocation(line: 1190, column: 20, scope: !4305)
!4313 = !DILocation(line: 1191, column: 21, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 1191, column: 21)
!4315 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 1190, column: 23)
!4316 = !DILocation(line: 1191, column: 26, scope: !4314)
!4317 = !DILocation(line: 1191, column: 23, scope: !4314)
!4318 = !DILocation(line: 1191, column: 21, scope: !4315)
!4319 = !DILocation(line: 1192, column: 26, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 1191, column: 31)
!4321 = !DILocation(line: 1192, column: 29, scope: !4320)
!4322 = !DILocation(line: 1192, column: 22, scope: !4320)
!4323 = !DILocation(line: 1192, column: 24, scope: !4320)
!4324 = !DILocation(line: 1194, column: 21, scope: !4320)
!4325 = !DILocation(line: 1197, column: 22, scope: !4315)
!4326 = !DILocation(line: 1197, column: 25, scope: !4315)
!4327 = !DILocation(line: 1197, column: 19, scope: !4315)
!4328 = !DILocation(line: 1198, column: 21, scope: !4315)
!4329 = !DILocation(line: 1198, column: 24, scope: !4315)
!4330 = !DILocation(line: 1198, column: 19, scope: !4315)
!4331 = distinct !{!4331, !4311, !4332}
!4332 = !DILocation(line: 1199, column: 13, scope: !4305)
!4333 = !DILocation(line: 1200, column: 9, scope: !4305)
!4334 = !DILocation(line: 1203, column: 13, scope: !4235)
!4335 = !DILocation(line: 1203, column: 24, scope: !4235)
!4336 = !DILocation(line: 1204, column: 13, scope: !4235)
!4337 = !DILocation(line: 1204, column: 24, scope: !4235)
!4338 = !DILocation(line: 1206, column: 29, scope: !4235)
!4339 = !DILocation(line: 1206, column: 22, scope: !4235)
!4340 = !DILocation(line: 1206, column: 27, scope: !4235)
!4341 = !DILocation(line: 1207, column: 42, scope: !4235)
!4342 = !DILocation(line: 1207, column: 47, scope: !4235)
!4343 = !DILocation(line: 1207, column: 52, scope: !4235)
!4344 = !DILocation(line: 1207, column: 62, scope: !4235)
!4345 = !DILocation(line: 1207, column: 67, scope: !4235)
!4346 = !DILocation(line: 1207, column: 72, scope: !4235)
!4347 = !DILocation(line: 1208, column: 42, scope: !4235)
!4348 = !DILocation(line: 1207, column: 28, scope: !4235)
!4349 = !DILocation(line: 1207, column: 22, scope: !4235)
!4350 = !DILocation(line: 1207, column: 26, scope: !4235)
!4351 = !DILocation(line: 1210, column: 13, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 1210, column: 13)
!4353 = !DILocation(line: 1210, column: 13, scope: !4235)
!4354 = !DILocation(line: 1212, column: 9, scope: !4236)
!4355 = !DILocation(line: 1213, column: 5, scope: !4236)
!4356 = !DILocation(line: 1182, column: 50, scope: !4237)
!4357 = !DILocation(line: 1217, column: 25, scope: !4225)
!4358 = !DILocation(line: 1217, column: 28, scope: !4225)
!4359 = !DILocation(line: 1217, column: 34, scope: !4225)
!4360 = !DILocation(line: 1217, column: 5, scope: !4225)
!4361 = !DILocation(line: 1223, column: 9, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1223, column: 9)
!4363 = !DILocation(line: 1223, column: 14, scope: !4362)
!4364 = !DILocation(line: 1223, column: 9, scope: !4225)
!4365 = !DILocation(line: 1224, column: 34, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1223, column: 21)
!4367 = !DILocation(line: 1224, column: 37, scope: !4366)
!4368 = !DILocation(line: 1224, column: 42, scope: !4366)
!4369 = !DILocation(line: 1224, column: 9, scope: !4366)
!4370 = !DILocation(line: 1225, column: 5, scope: !4366)
!4371 = !DILocation(line: 1227, column: 30, scope: !4225)
!4372 = !DILocation(line: 1227, column: 33, scope: !4225)
!4373 = !DILocation(line: 1227, column: 5, scope: !4225)
!4374 = !DILocation(line: 1231, column: 9, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1231, column: 9)
!4376 = !DILocation(line: 1231, column: 12, scope: !4375)
!4377 = !DILocation(line: 1231, column: 19, scope: !4375)
!4378 = !DILocation(line: 1231, column: 29, scope: !4375)
!4379 = !DILocation(line: 1231, column: 58, scope: !4375)
!4380 = !DILocation(line: 1231, column: 32, scope: !4375)
!4381 = !DILocation(line: 1231, column: 9, scope: !4225)
!4382 = !DILocation(line: 1232, column: 23, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1231, column: 62)
!4384 = !DILocation(line: 1232, column: 26, scope: !4383)
!4385 = !DILocation(line: 1232, column: 9, scope: !4383)
!4386 = !DILocation(line: 1233, column: 5, scope: !4383)
!4387 = !DILocation(line: 1234, column: 1, scope: !4225)
!4388 = !DILocation(line: 4337, column: 33, scope: !2)
!4389 = !DILocation(line: 4347, column: 9, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !2, file: !3, line: 4347, column: 9)
!4391 = !DILocation(line: 4347, column: 13, scope: !4390)
!4392 = !DILocation(line: 4347, column: 17, scope: !4390)
!4393 = !DILocation(line: 4347, column: 20, scope: !4390)
!4394 = !DILocation(line: 4347, column: 24, scope: !4390)
!4395 = !DILocation(line: 4347, column: 9, scope: !2)
!4396 = !DILocation(line: 4348, column: 23, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 4347, column: 29)
!4398 = !DILocation(line: 4348, column: 27, scope: !4397)
!4399 = !DILocation(line: 4348, column: 16, scope: !4397)
!4400 = !DILocation(line: 4348, column: 9, scope: !4397)
!4401 = !DILocation(line: 4351, column: 9, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !2, file: !3, line: 4351, column: 9)
!4403 = !DILocation(line: 4351, column: 13, scope: !4402)
!4404 = !DILocation(line: 4351, column: 9, scope: !2)
!4405 = !DILocation(line: 4352, column: 9, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 4351, column: 38)
!4407 = !DILocation(line: 4355, column: 5, scope: !2)
!4408 = !DILocation(line: 4356, column: 1, scope: !2)
!4409 = distinct !DISubprogram(name: "ngx_resolver_cleanup_tree", scope: !3, file: !3, line: 339, type: !4410, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4412)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{null, !163, !2021}
!4412 = !{!4413, !4414, !4415, !4416, !4417}
!4413 = !DILocalVariable(name: "r", arg: 1, scope: !4409, file: !3, line: 339, type: !163)
!4414 = !DILocalVariable(name: "tree", arg: 2, scope: !4409, file: !3, line: 339, type: !2021)
!4415 = !DILocalVariable(name: "ctx", scope: !4409, file: !3, line: 341, type: !157)
!4416 = !DILocalVariable(name: "next", scope: !4409, file: !3, line: 341, type: !157)
!4417 = !DILocalVariable(name: "rn", scope: !4409, file: !3, line: 342, type: !84)
!4418 = !DILocation(line: 339, column: 43, scope: !4409)
!4419 = !DILocation(line: 339, column: 60, scope: !4409)
!4420 = !DILocation(line: 341, column: 5, scope: !4409)
!4421 = !DILocation(line: 341, column: 27, scope: !4409)
!4422 = !DILocation(line: 341, column: 33, scope: !4409)
!4423 = !DILocation(line: 342, column: 5, scope: !4409)
!4424 = !DILocation(line: 342, column: 27, scope: !4409)
!4425 = !DILocation(line: 344, column: 5, scope: !4409)
!4426 = !DILocation(line: 344, column: 12, scope: !4409)
!4427 = !DILocation(line: 344, column: 18, scope: !4409)
!4428 = !DILocation(line: 344, column: 26, scope: !4409)
!4429 = !DILocation(line: 344, column: 32, scope: !4409)
!4430 = !DILocation(line: 344, column: 23, scope: !4409)
!4431 = !DILocation(line: 346, column: 14, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 344, column: 42)
!4433 = !DILocation(line: 346, column: 12, scope: !4432)
!4434 = !DILocation(line: 348, column: 9, scope: !4432)
!4435 = !DILocation(line: 350, column: 20, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 350, column: 9)
!4437 = !DILocation(line: 350, column: 24, scope: !4436)
!4438 = !DILocation(line: 350, column: 18, scope: !4436)
!4439 = !DILocation(line: 350, column: 14, scope: !4436)
!4440 = !DILocation(line: 350, column: 33, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 350, column: 9)
!4442 = !DILocation(line: 350, column: 9, scope: !4436)
!4443 = !DILocation(line: 351, column: 20, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 350, column: 50)
!4445 = !DILocation(line: 351, column: 25, scope: !4444)
!4446 = !DILocation(line: 351, column: 18, scope: !4444)
!4447 = !DILocation(line: 353, column: 17, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 353, column: 17)
!4449 = !DILocation(line: 353, column: 22, scope: !4448)
!4450 = !DILocation(line: 353, column: 17, scope: !4444)
!4451 = !DILocation(line: 354, column: 21, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !3, line: 354, column: 21)
!4453 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 353, column: 29)
!4454 = !DILocation(line: 354, column: 26, scope: !4452)
!4455 = !DILocation(line: 354, column: 33, scope: !4452)
!4456 = !DILocation(line: 354, column: 21, scope: !4453)
!4457 = !DILocation(line: 355, column: 35, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 354, column: 44)
!4459 = !DILocation(line: 355, column: 40, scope: !4458)
!4460 = !DILocation(line: 355, column: 21, scope: !4458)
!4461 = !DILocation(line: 356, column: 17, scope: !4458)
!4462 = !DILocation(line: 358, column: 35, scope: !4453)
!4463 = !DILocation(line: 358, column: 38, scope: !4453)
!4464 = !DILocation(line: 358, column: 43, scope: !4453)
!4465 = !DILocation(line: 358, column: 17, scope: !4453)
!4466 = !DILocation(line: 359, column: 13, scope: !4453)
!4467 = !DILocation(line: 361, column: 31, scope: !4444)
!4468 = !DILocation(line: 361, column: 34, scope: !4444)
!4469 = !DILocation(line: 361, column: 13, scope: !4444)
!4470 = !DILocation(line: 362, column: 9, scope: !4444)
!4471 = !DILocation(line: 350, column: 44, scope: !4441)
!4472 = !DILocation(line: 350, column: 42, scope: !4441)
!4473 = !DILocation(line: 350, column: 9, scope: !4441)
!4474 = distinct !{!4474, !4442, !4475}
!4475 = !DILocation(line: 362, column: 9, scope: !4436)
!4476 = !DILocation(line: 364, column: 27, scope: !4432)
!4477 = !DILocation(line: 364, column: 34, scope: !4432)
!4478 = !DILocation(line: 364, column: 38, scope: !4432)
!4479 = !DILocation(line: 364, column: 9, scope: !4432)
!4480 = !DILocation(line: 366, column: 32, scope: !4432)
!4481 = !DILocation(line: 366, column: 35, scope: !4432)
!4482 = !DILocation(line: 366, column: 9, scope: !4432)
!4483 = distinct !{!4483, !4425, !4484}
!4484 = !DILocation(line: 367, column: 5, scope: !4409)
!4485 = !DILocation(line: 368, column: 1, scope: !4409)
!4486 = distinct !DISubprogram(name: "ngx_rbtree_min", scope: !81, file: !81, line: 74, type: !4487, isLocal: true, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4489)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!95, !95, !95}
!4489 = !{!4490, !4491}
!4490 = !DILocalVariable(name: "node", arg: 1, scope: !4486, file: !81, line: 74, type: !95)
!4491 = !DILocalVariable(name: "sentinel", arg: 2, scope: !4486, file: !81, line: 74, type: !95)
!4492 = !DILocation(line: 74, column: 35, scope: !4486)
!4493 = !DILocation(line: 74, column: 60, scope: !4486)
!4494 = !DILocation(line: 76, column: 5, scope: !4486)
!4495 = !DILocation(line: 76, column: 12, scope: !4486)
!4496 = !DILocation(line: 76, column: 18, scope: !4486)
!4497 = !DILocation(line: 76, column: 26, scope: !4486)
!4498 = !DILocation(line: 76, column: 23, scope: !4486)
!4499 = !DILocation(line: 77, column: 16, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4486, file: !81, line: 76, column: 36)
!4501 = !DILocation(line: 77, column: 22, scope: !4500)
!4502 = !DILocation(line: 77, column: 14, scope: !4500)
!4503 = distinct !{!4503, !4494, !4504}
!4504 = !DILocation(line: 78, column: 5, scope: !4486)
!4505 = !DILocation(line: 80, column: 12, scope: !4486)
!4506 = !DILocation(line: 80, column: 5, scope: !4486)
!4507 = distinct !DISubprogram(name: "ngx_resolver_free_node", scope: !3, file: !3, line: 4051, type: !4508, isLocal: true, isDefinition: true, scopeLine: 4052, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4510)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{null, !163, !84}
!4510 = !{!4511, !4512, !4513}
!4511 = !DILocalVariable(name: "r", arg: 1, scope: !4507, file: !3, line: 4051, type: !163)
!4512 = !DILocalVariable(name: "rn", arg: 2, scope: !4507, file: !3, line: 4051, type: !84)
!4513 = !DILocalVariable(name: "i", scope: !4507, file: !3, line: 4053, type: !82)
!4514 = !DILocation(line: 4051, column: 40, scope: !4507)
!4515 = !DILocation(line: 4051, column: 64, scope: !4507)
!4516 = !DILocation(line: 4053, column: 5, scope: !4507)
!4517 = !DILocation(line: 4053, column: 17, scope: !4507)
!4518 = !DILocation(line: 4057, column: 9, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4057, column: 9)
!4520 = !DILocation(line: 4057, column: 13, scope: !4519)
!4521 = !DILocation(line: 4057, column: 9, scope: !4507)
!4522 = !DILocation(line: 4058, column: 34, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 4057, column: 20)
!4524 = !DILocation(line: 4058, column: 37, scope: !4523)
!4525 = !DILocation(line: 4058, column: 41, scope: !4523)
!4526 = !DILocation(line: 4058, column: 9, scope: !4523)
!4527 = !DILocation(line: 4059, column: 5, scope: !4523)
!4528 = !DILocation(line: 4061, column: 9, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4061, column: 9)
!4530 = !DILocation(line: 4061, column: 13, scope: !4529)
!4531 = !DILocation(line: 4061, column: 9, scope: !4507)
!4532 = !DILocation(line: 4062, column: 34, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 4061, column: 19)
!4534 = !DILocation(line: 4062, column: 37, scope: !4533)
!4535 = !DILocation(line: 4062, column: 41, scope: !4533)
!4536 = !DILocation(line: 4062, column: 9, scope: !4533)
!4537 = !DILocation(line: 4063, column: 5, scope: !4533)
!4538 = !DILocation(line: 4065, column: 9, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4065, column: 9)
!4540 = !DILocation(line: 4065, column: 13, scope: !4539)
!4541 = !DILocation(line: 4065, column: 9, scope: !4507)
!4542 = !DILocation(line: 4066, column: 34, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 4065, column: 20)
!4544 = !DILocation(line: 4066, column: 37, scope: !4543)
!4545 = !DILocation(line: 4066, column: 41, scope: !4543)
!4546 = !DILocation(line: 4066, column: 43, scope: !4543)
!4547 = !DILocation(line: 4066, column: 9, scope: !4543)
!4548 = !DILocation(line: 4067, column: 5, scope: !4543)
!4549 = !DILocation(line: 4069, column: 9, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4069, column: 9)
!4551 = !DILocation(line: 4069, column: 13, scope: !4550)
!4552 = !DILocation(line: 4069, column: 20, scope: !4550)
!4553 = !DILocation(line: 4069, column: 24, scope: !4550)
!4554 = !DILocation(line: 4069, column: 27, scope: !4550)
!4555 = !DILocation(line: 4069, column: 31, scope: !4550)
!4556 = !DILocation(line: 4069, column: 38, scope: !4550)
!4557 = !DILocation(line: 4069, column: 9, scope: !4507)
!4558 = !DILocation(line: 4070, column: 34, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 4069, column: 55)
!4560 = !DILocation(line: 4070, column: 37, scope: !4559)
!4561 = !DILocation(line: 4070, column: 41, scope: !4559)
!4562 = !DILocation(line: 4070, column: 43, scope: !4559)
!4563 = !DILocation(line: 4070, column: 9, scope: !4559)
!4564 = !DILocation(line: 4071, column: 5, scope: !4559)
!4565 = !DILocation(line: 4074, column: 9, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4074, column: 9)
!4567 = !DILocation(line: 4074, column: 13, scope: !4566)
!4568 = !DILocation(line: 4074, column: 21, scope: !4566)
!4569 = !DILocation(line: 4074, column: 25, scope: !4566)
!4570 = !DILocation(line: 4074, column: 28, scope: !4566)
!4571 = !DILocation(line: 4074, column: 32, scope: !4566)
!4572 = !DILocation(line: 4074, column: 40, scope: !4566)
!4573 = !DILocation(line: 4074, column: 9, scope: !4507)
!4574 = !DILocation(line: 4075, column: 34, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 4074, column: 57)
!4576 = !DILocation(line: 4075, column: 37, scope: !4575)
!4577 = !DILocation(line: 4075, column: 41, scope: !4575)
!4578 = !DILocation(line: 4075, column: 44, scope: !4575)
!4579 = !DILocation(line: 4075, column: 9, scope: !4575)
!4580 = !DILocation(line: 4076, column: 5, scope: !4575)
!4581 = !DILocation(line: 4079, column: 9, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 4079, column: 9)
!4583 = !DILocation(line: 4079, column: 13, scope: !4582)
!4584 = !DILocation(line: 4079, column: 9, scope: !4507)
!4585 = !DILocation(line: 4080, column: 16, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 4080, column: 9)
!4587 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 4079, column: 20)
!4588 = !DILocation(line: 4080, column: 14, scope: !4586)
!4589 = !DILocation(line: 4080, column: 21, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 4080, column: 9)
!4591 = !DILocation(line: 4080, column: 38, scope: !4590)
!4592 = !DILocation(line: 4080, column: 42, scope: !4590)
!4593 = !DILocation(line: 4080, column: 25, scope: !4590)
!4594 = !DILocation(line: 4080, column: 23, scope: !4590)
!4595 = !DILocation(line: 4080, column: 9, scope: !4586)
!4596 = !DILocation(line: 4081, column: 17, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 4081, column: 17)
!4598 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 4080, column: 54)
!4599 = !DILocation(line: 4081, column: 21, scope: !4597)
!4600 = !DILocation(line: 4081, column: 23, scope: !4597)
!4601 = !DILocation(line: 4081, column: 28, scope: !4597)
!4602 = !DILocation(line: 4081, column: 31, scope: !4597)
!4603 = !DILocation(line: 4081, column: 36, scope: !4597)
!4604 = !DILocation(line: 4081, column: 17, scope: !4598)
!4605 = !DILocation(line: 4082, column: 42, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 4081, column: 42)
!4607 = !DILocation(line: 4082, column: 45, scope: !4606)
!4608 = !DILocation(line: 4082, column: 49, scope: !4606)
!4609 = !DILocation(line: 4082, column: 51, scope: !4606)
!4610 = !DILocation(line: 4082, column: 56, scope: !4606)
!4611 = !DILocation(line: 4082, column: 59, scope: !4606)
!4612 = !DILocation(line: 4082, column: 64, scope: !4606)
!4613 = !DILocation(line: 4082, column: 17, scope: !4606)
!4614 = !DILocation(line: 4083, column: 13, scope: !4606)
!4615 = !DILocation(line: 4084, column: 9, scope: !4598)
!4616 = !DILocation(line: 4080, column: 50, scope: !4590)
!4617 = !DILocation(line: 4080, column: 9, scope: !4590)
!4618 = distinct !{!4618, !4595, !4619}
!4619 = !DILocation(line: 4084, column: 9, scope: !4586)
!4620 = !DILocation(line: 4086, column: 34, scope: !4587)
!4621 = !DILocation(line: 4086, column: 37, scope: !4587)
!4622 = !DILocation(line: 4086, column: 41, scope: !4587)
!4623 = !DILocation(line: 4086, column: 43, scope: !4587)
!4624 = !DILocation(line: 4086, column: 9, scope: !4587)
!4625 = !DILocation(line: 4087, column: 5, scope: !4587)
!4626 = !DILocation(line: 4089, column: 30, scope: !4507)
!4627 = !DILocation(line: 4089, column: 33, scope: !4507)
!4628 = !DILocation(line: 4089, column: 5, scope: !4507)
!4629 = !DILocation(line: 4092, column: 1, scope: !4507)
!4630 = distinct !DISubprogram(name: "ngx_resolver_lookup_srv", scope: !3, file: !3, line: 3432, type: !4631, isLocal: true, isDefinition: true, scopeLine: 3433, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!84, !163, !760, !23}
!4633 = !{!4634, !4635, !4636, !4637, !4638, !4639, !4640}
!4634 = !DILocalVariable(name: "r", arg: 1, scope: !4630, file: !3, line: 3432, type: !163)
!4635 = !DILocalVariable(name: "name", arg: 2, scope: !4630, file: !3, line: 3432, type: !760)
!4636 = !DILocalVariable(name: "hash", arg: 3, scope: !4630, file: !3, line: 3432, type: !23)
!4637 = !DILocalVariable(name: "rc", scope: !4630, file: !3, line: 3434, type: !8)
!4638 = !DILocalVariable(name: "node", scope: !4630, file: !3, line: 3435, type: !95)
!4639 = !DILocalVariable(name: "sentinel", scope: !4630, file: !3, line: 3435, type: !95)
!4640 = !DILocalVariable(name: "rn", scope: !4630, file: !3, line: 3436, type: !84)
!4641 = !DILocation(line: 3432, column: 41, scope: !4630)
!4642 = !DILocation(line: 3432, column: 55, scope: !4630)
!4643 = !DILocation(line: 3432, column: 70, scope: !4630)
!4644 = !DILocation(line: 3434, column: 5, scope: !4630)
!4645 = !DILocation(line: 3434, column: 27, scope: !4630)
!4646 = !DILocation(line: 3435, column: 5, scope: !4630)
!4647 = !DILocation(line: 3435, column: 27, scope: !4630)
!4648 = !DILocation(line: 3435, column: 34, scope: !4630)
!4649 = !DILocation(line: 3436, column: 5, scope: !4630)
!4650 = !DILocation(line: 3436, column: 27, scope: !4630)
!4651 = !DILocation(line: 3438, column: 12, scope: !4630)
!4652 = !DILocation(line: 3438, column: 15, scope: !4630)
!4653 = !DILocation(line: 3438, column: 26, scope: !4630)
!4654 = !{!883, !821, i64 72}
!4655 = !DILocation(line: 3438, column: 10, scope: !4630)
!4656 = !DILocation(line: 3439, column: 16, scope: !4630)
!4657 = !DILocation(line: 3439, column: 19, scope: !4630)
!4658 = !DILocation(line: 3439, column: 30, scope: !4630)
!4659 = !{!883, !821, i64 76}
!4660 = !DILocation(line: 3439, column: 14, scope: !4630)
!4661 = !DILocation(line: 3441, column: 5, scope: !4630)
!4662 = !DILocation(line: 3441, column: 12, scope: !4630)
!4663 = !DILocation(line: 3441, column: 20, scope: !4630)
!4664 = !DILocation(line: 3441, column: 17, scope: !4630)
!4665 = !DILocation(line: 3443, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 3443, column: 13)
!4667 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 3441, column: 30)
!4668 = !DILocation(line: 3443, column: 20, scope: !4666)
!4669 = !DILocation(line: 3443, column: 26, scope: !4666)
!4670 = !DILocation(line: 3443, column: 18, scope: !4666)
!4671 = !DILocation(line: 3443, column: 13, scope: !4667)
!4672 = !DILocation(line: 3444, column: 20, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 3443, column: 31)
!4674 = !DILocation(line: 3444, column: 26, scope: !4673)
!4675 = !DILocation(line: 3444, column: 18, scope: !4673)
!4676 = !DILocation(line: 3445, column: 13, scope: !4673)
!4677 = distinct !{!4677, !4661, !4678}
!4678 = !DILocation(line: 3464, column: 5, scope: !4630)
!4679 = !DILocation(line: 3448, column: 13, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 3448, column: 13)
!4681 = !DILocation(line: 3448, column: 20, scope: !4680)
!4682 = !DILocation(line: 3448, column: 26, scope: !4680)
!4683 = !DILocation(line: 3448, column: 18, scope: !4680)
!4684 = !DILocation(line: 3448, column: 13, scope: !4667)
!4685 = !DILocation(line: 3449, column: 20, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 3448, column: 31)
!4687 = !DILocation(line: 3449, column: 26, scope: !4686)
!4688 = !DILocation(line: 3449, column: 18, scope: !4686)
!4689 = !DILocation(line: 3450, column: 13, scope: !4686)
!4690 = !DILocation(line: 3455, column: 14, scope: !4667)
!4691 = !DILocation(line: 3455, column: 12, scope: !4667)
!4692 = !DILocation(line: 3457, column: 27, scope: !4667)
!4693 = !DILocation(line: 3457, column: 33, scope: !4667)
!4694 = !DILocation(line: 3457, column: 39, scope: !4667)
!4695 = !DILocation(line: 3457, column: 43, scope: !4667)
!4696 = !DILocation(line: 3457, column: 49, scope: !4667)
!4697 = !DILocation(line: 3457, column: 55, scope: !4667)
!4698 = !DILocation(line: 3457, column: 60, scope: !4667)
!4699 = !DILocation(line: 3457, column: 64, scope: !4667)
!4700 = !DILocation(line: 3457, column: 14, scope: !4667)
!4701 = !DILocation(line: 3457, column: 12, scope: !4667)
!4702 = !DILocation(line: 3459, column: 13, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 3459, column: 13)
!4704 = !DILocation(line: 3459, column: 16, scope: !4703)
!4705 = !DILocation(line: 3459, column: 13, scope: !4667)
!4706 = !DILocation(line: 3460, column: 20, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 3459, column: 22)
!4708 = !DILocation(line: 3460, column: 13, scope: !4707)
!4709 = !DILocation(line: 3463, column: 17, scope: !4667)
!4710 = !DILocation(line: 3463, column: 20, scope: !4667)
!4711 = !DILocation(line: 3463, column: 16, scope: !4667)
!4712 = !DILocation(line: 3463, column: 27, scope: !4667)
!4713 = !DILocation(line: 3463, column: 33, scope: !4667)
!4714 = !DILocation(line: 3463, column: 40, scope: !4667)
!4715 = !DILocation(line: 3463, column: 46, scope: !4667)
!4716 = !DILocation(line: 3463, column: 14, scope: !4667)
!4717 = !DILocation(line: 3468, column: 5, scope: !4630)
!4718 = !DILocation(line: 3469, column: 1, scope: !4630)
!4719 = distinct !DISubprogram(name: "ngx_resolver_lookup_name", scope: !3, file: !3, line: 3391, type: !4631, isLocal: true, isDefinition: true, scopeLine: 3392, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4720)
!4720 = !{!4721, !4722, !4723, !4724, !4725, !4726, !4727}
!4721 = !DILocalVariable(name: "r", arg: 1, scope: !4719, file: !3, line: 3391, type: !163)
!4722 = !DILocalVariable(name: "name", arg: 2, scope: !4719, file: !3, line: 3391, type: !760)
!4723 = !DILocalVariable(name: "hash", arg: 3, scope: !4719, file: !3, line: 3391, type: !23)
!4724 = !DILocalVariable(name: "rc", scope: !4719, file: !3, line: 3393, type: !8)
!4725 = !DILocalVariable(name: "node", scope: !4719, file: !3, line: 3394, type: !95)
!4726 = !DILocalVariable(name: "sentinel", scope: !4719, file: !3, line: 3394, type: !95)
!4727 = !DILocalVariable(name: "rn", scope: !4719, file: !3, line: 3395, type: !84)
!4728 = !DILocation(line: 3391, column: 42, scope: !4719)
!4729 = !DILocation(line: 3391, column: 56, scope: !4719)
!4730 = !DILocation(line: 3391, column: 71, scope: !4719)
!4731 = !DILocation(line: 3393, column: 5, scope: !4719)
!4732 = !DILocation(line: 3393, column: 27, scope: !4719)
!4733 = !DILocation(line: 3394, column: 5, scope: !4719)
!4734 = !DILocation(line: 3394, column: 27, scope: !4719)
!4735 = !DILocation(line: 3394, column: 34, scope: !4719)
!4736 = !DILocation(line: 3395, column: 5, scope: !4719)
!4737 = !DILocation(line: 3395, column: 27, scope: !4719)
!4738 = !DILocation(line: 3397, column: 12, scope: !4719)
!4739 = !DILocation(line: 3397, column: 15, scope: !4719)
!4740 = !DILocation(line: 3397, column: 27, scope: !4719)
!4741 = !{!883, !821, i64 40}
!4742 = !DILocation(line: 3397, column: 10, scope: !4719)
!4743 = !DILocation(line: 3398, column: 16, scope: !4719)
!4744 = !DILocation(line: 3398, column: 19, scope: !4719)
!4745 = !DILocation(line: 3398, column: 31, scope: !4719)
!4746 = !{!883, !821, i64 44}
!4747 = !DILocation(line: 3398, column: 14, scope: !4719)
!4748 = !DILocation(line: 3400, column: 5, scope: !4719)
!4749 = !DILocation(line: 3400, column: 12, scope: !4719)
!4750 = !DILocation(line: 3400, column: 20, scope: !4719)
!4751 = !DILocation(line: 3400, column: 17, scope: !4719)
!4752 = !DILocation(line: 3402, column: 13, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3402, column: 13)
!4754 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 3400, column: 30)
!4755 = !DILocation(line: 3402, column: 20, scope: !4753)
!4756 = !DILocation(line: 3402, column: 26, scope: !4753)
!4757 = !DILocation(line: 3402, column: 18, scope: !4753)
!4758 = !DILocation(line: 3402, column: 13, scope: !4754)
!4759 = !DILocation(line: 3403, column: 20, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 3402, column: 31)
!4761 = !DILocation(line: 3403, column: 26, scope: !4760)
!4762 = !DILocation(line: 3403, column: 18, scope: !4760)
!4763 = !DILocation(line: 3404, column: 13, scope: !4760)
!4764 = distinct !{!4764, !4748, !4765}
!4765 = !DILocation(line: 3423, column: 5, scope: !4719)
!4766 = !DILocation(line: 3407, column: 13, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3407, column: 13)
!4768 = !DILocation(line: 3407, column: 20, scope: !4767)
!4769 = !DILocation(line: 3407, column: 26, scope: !4767)
!4770 = !DILocation(line: 3407, column: 18, scope: !4767)
!4771 = !DILocation(line: 3407, column: 13, scope: !4754)
!4772 = !DILocation(line: 3408, column: 20, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 3407, column: 31)
!4774 = !DILocation(line: 3408, column: 26, scope: !4773)
!4775 = !DILocation(line: 3408, column: 18, scope: !4773)
!4776 = !DILocation(line: 3409, column: 13, scope: !4773)
!4777 = !DILocation(line: 3414, column: 14, scope: !4754)
!4778 = !DILocation(line: 3414, column: 12, scope: !4754)
!4779 = !DILocation(line: 3416, column: 27, scope: !4754)
!4780 = !DILocation(line: 3416, column: 33, scope: !4754)
!4781 = !DILocation(line: 3416, column: 39, scope: !4754)
!4782 = !DILocation(line: 3416, column: 43, scope: !4754)
!4783 = !DILocation(line: 3416, column: 49, scope: !4754)
!4784 = !DILocation(line: 3416, column: 55, scope: !4754)
!4785 = !DILocation(line: 3416, column: 60, scope: !4754)
!4786 = !DILocation(line: 3416, column: 64, scope: !4754)
!4787 = !DILocation(line: 3416, column: 14, scope: !4754)
!4788 = !DILocation(line: 3416, column: 12, scope: !4754)
!4789 = !DILocation(line: 3418, column: 13, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3418, column: 13)
!4791 = !DILocation(line: 3418, column: 16, scope: !4790)
!4792 = !DILocation(line: 3418, column: 13, scope: !4754)
!4793 = !DILocation(line: 3419, column: 20, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 3418, column: 22)
!4795 = !DILocation(line: 3419, column: 13, scope: !4794)
!4796 = !DILocation(line: 3422, column: 17, scope: !4754)
!4797 = !DILocation(line: 3422, column: 20, scope: !4754)
!4798 = !DILocation(line: 3422, column: 16, scope: !4754)
!4799 = !DILocation(line: 3422, column: 27, scope: !4754)
!4800 = !DILocation(line: 3422, column: 33, scope: !4754)
!4801 = !DILocation(line: 3422, column: 40, scope: !4754)
!4802 = !DILocation(line: 3422, column: 46, scope: !4754)
!4803 = !DILocation(line: 3422, column: 14, scope: !4754)
!4804 = !DILocation(line: 3427, column: 5, scope: !4719)
!4805 = !DILocation(line: 3428, column: 1, scope: !4719)
!4806 = distinct !DISubprogram(name: "ngx_resolver_export", scope: !3, file: !3, line: 4161, type: !4807, isLocal: true, isDefinition: true, scopeLine: 4163, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !4809)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!424, !163, !84, !82}
!4809 = !{!4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4820, !4821, !4822, !4823}
!4810 = !DILocalVariable(name: "r", arg: 1, scope: !4806, file: !3, line: 4161, type: !163)
!4811 = !DILocalVariable(name: "rn", arg: 2, scope: !4806, file: !3, line: 4161, type: !84)
!4812 = !DILocalVariable(name: "rotate", arg: 3, scope: !4806, file: !3, line: 4162, type: !82)
!4813 = !DILocalVariable(name: "d", scope: !4806, file: !3, line: 4164, type: !82)
!4814 = !DILocalVariable(name: "i", scope: !4806, file: !3, line: 4164, type: !82)
!4815 = !DILocalVariable(name: "j", scope: !4806, file: !3, line: 4164, type: !82)
!4816 = !DILocalVariable(name: "n", scope: !4806, file: !3, line: 4164, type: !82)
!4817 = !DILocalVariable(name: "addr", scope: !4806, file: !3, line: 4165, type: !121)
!4818 = !DILocalVariable(name: "sockaddr", scope: !4806, file: !3, line: 4166, type: !4819)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 32)
!4820 = !DILocalVariable(name: "sin", scope: !4806, file: !3, line: 4167, type: !65)
!4821 = !DILocalVariable(name: "dst", scope: !4806, file: !3, line: 4168, type: !424)
!4822 = !DILocalVariable(name: "addr6", scope: !4806, file: !3, line: 4170, type: !148)
!4823 = !DILocalVariable(name: "sin6", scope: !4806, file: !3, line: 4171, type: !36)
!4824 = !DILocation(line: 4161, column: 37, scope: !4806)
!4825 = !DILocation(line: 4161, column: 61, scope: !4806)
!4826 = !DILocation(line: 4162, column: 16, scope: !4806)
!4827 = !DILocation(line: 4164, column: 5, scope: !4806)
!4828 = !DILocation(line: 4164, column: 27, scope: !4806)
!4829 = !DILocation(line: 4164, column: 30, scope: !4806)
!4830 = !DILocation(line: 4164, column: 33, scope: !4806)
!4831 = !DILocation(line: 4164, column: 36, scope: !4806)
!4832 = !DILocation(line: 4165, column: 5, scope: !4806)
!4833 = !DILocation(line: 4165, column: 27, scope: !4806)
!4834 = !DILocation(line: 4166, column: 5, scope: !4806)
!4835 = !DILocation(line: 4166, column: 27, scope: !4806)
!4836 = !DILocation(line: 4167, column: 5, scope: !4806)
!4837 = !DILocation(line: 4167, column: 27, scope: !4806)
!4838 = !DILocation(line: 4168, column: 5, scope: !4806)
!4839 = !DILocation(line: 4168, column: 27, scope: !4806)
!4840 = !DILocation(line: 4170, column: 5, scope: !4806)
!4841 = !DILocation(line: 4170, column: 27, scope: !4806)
!4842 = !DILocation(line: 4171, column: 5, scope: !4806)
!4843 = !DILocation(line: 4171, column: 27, scope: !4806)
!4844 = !DILocation(line: 4174, column: 9, scope: !4806)
!4845 = !DILocation(line: 4174, column: 13, scope: !4806)
!4846 = !DILocation(line: 4174, column: 7, scope: !4806)
!4847 = !DILocation(line: 4176, column: 10, scope: !4806)
!4848 = !DILocation(line: 4176, column: 14, scope: !4806)
!4849 = !DILocation(line: 4176, column: 7, scope: !4806)
!4850 = !DILocation(line: 4179, column: 31, scope: !4806)
!4851 = !DILocation(line: 4179, column: 34, scope: !4806)
!4852 = !DILocation(line: 4179, column: 36, scope: !4806)
!4853 = !DILocation(line: 4179, column: 11, scope: !4806)
!4854 = !DILocation(line: 4179, column: 9, scope: !4806)
!4855 = !DILocation(line: 4180, column: 9, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 4180, column: 9)
!4857 = !DILocation(line: 4180, column: 13, scope: !4856)
!4858 = !DILocation(line: 4180, column: 9, scope: !4806)
!4859 = !DILocation(line: 4181, column: 9, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 4180, column: 22)
!4861 = !DILocation(line: 4184, column: 36, scope: !4806)
!4862 = !DILocation(line: 4184, column: 39, scope: !4806)
!4863 = !DILocation(line: 4184, column: 41, scope: !4806)
!4864 = !DILocation(line: 4184, column: 16, scope: !4806)
!4865 = !DILocation(line: 4184, column: 14, scope: !4806)
!4866 = !DILocation(line: 4185, column: 9, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 4185, column: 9)
!4868 = !DILocation(line: 4185, column: 18, scope: !4867)
!4869 = !DILocation(line: 4185, column: 9, scope: !4806)
!4870 = !DILocation(line: 4186, column: 27, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 4185, column: 27)
!4872 = !DILocation(line: 4186, column: 30, scope: !4871)
!4873 = !DILocation(line: 4186, column: 9, scope: !4871)
!4874 = !DILocation(line: 4187, column: 9, scope: !4871)
!4875 = !DILocation(line: 4190, column: 7, scope: !4806)
!4876 = !DILocation(line: 4191, column: 9, scope: !4806)
!4877 = !DILocation(line: 4191, column: 18, scope: !4806)
!4878 = !DILocation(line: 4191, column: 33, scope: !4806)
!4879 = !DILocation(line: 4191, column: 31, scope: !4806)
!4880 = !DILocation(line: 4191, column: 7, scope: !4806)
!4881 = !DILocation(line: 4193, column: 9, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 4193, column: 9)
!4883 = !DILocation(line: 4193, column: 13, scope: !4882)
!4884 = !DILocation(line: 4193, column: 9, scope: !4806)
!4885 = !DILocation(line: 4194, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 4193, column: 21)
!4887 = !DILocation(line: 4194, column: 22, scope: !4886)
!4888 = !DILocation(line: 4194, column: 37, scope: !4886)
!4889 = !DILocation(line: 4194, column: 41, scope: !4886)
!4890 = !DILocation(line: 4194, column: 35, scope: !4886)
!4891 = !DILocation(line: 4194, column: 11, scope: !4886)
!4892 = !DILocation(line: 4196, column: 17, scope: !4886)
!4893 = !DILocation(line: 4196, column: 21, scope: !4886)
!4894 = !DILocation(line: 4196, column: 28, scope: !4886)
!4895 = !DILocation(line: 4196, column: 16, scope: !4886)
!4896 = !DILocation(line: 4196, column: 37, scope: !4886)
!4897 = !DILocation(line: 4196, column: 41, scope: !4886)
!4898 = !DILocation(line: 4196, column: 43, scope: !4886)
!4899 = !DILocation(line: 4196, column: 50, scope: !4886)
!4900 = !DILocation(line: 4196, column: 54, scope: !4886)
!4901 = !DILocation(line: 4196, column: 56, scope: !4886)
!4902 = !DILocation(line: 4196, column: 14, scope: !4886)
!4903 = !DILocation(line: 4198, column: 9, scope: !4886)
!4904 = distinct !{!4904, !4903, !4905}
!4905 = !DILocation(line: 4212, column: 47, scope: !4886)
!4906 = !DILocation(line: 4199, column: 20, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 4198, column: 12)
!4908 = !DILocation(line: 4199, column: 29, scope: !4907)
!4909 = !DILocation(line: 4199, column: 32, scope: !4907)
!4910 = !DILocation(line: 4199, column: 17, scope: !4907)
!4911 = !DILocation(line: 4200, column: 13, scope: !4907)
!4912 = !DILocation(line: 4200, column: 18, scope: !4907)
!4913 = !DILocation(line: 4200, column: 29, scope: !4907)
!4914 = !{!1682, !1070, i64 0}
!4915 = !DILocation(line: 4201, column: 36, scope: !4907)
!4916 = !DILocation(line: 4201, column: 42, scope: !4907)
!4917 = !DILocation(line: 4201, column: 13, scope: !4907)
!4918 = !DILocation(line: 4201, column: 18, scope: !4907)
!4919 = !DILocation(line: 4201, column: 27, scope: !4907)
!4920 = !DILocation(line: 4201, column: 34, scope: !4907)
!4921 = !DILocation(line: 4202, column: 51, scope: !4907)
!4922 = !DILocation(line: 4202, column: 31, scope: !4907)
!4923 = !DILocation(line: 4202, column: 13, scope: !4907)
!4924 = !DILocation(line: 4202, column: 17, scope: !4907)
!4925 = !DILocation(line: 4202, column: 20, scope: !4907)
!4926 = !DILocation(line: 4202, column: 29, scope: !4907)
!4927 = !DILocation(line: 4203, column: 13, scope: !4907)
!4928 = !DILocation(line: 4203, column: 18, scope: !4907)
!4929 = !DILocation(line: 4203, column: 22, scope: !4907)
!4930 = !DILocation(line: 4203, column: 30, scope: !4907)
!4931 = !{!1681, !828, i64 4}
!4932 = !DILocation(line: 4205, column: 17, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 4205, column: 17)
!4934 = !DILocation(line: 4205, column: 22, scope: !4933)
!4935 = !DILocation(line: 4205, column: 19, scope: !4933)
!4936 = !DILocation(line: 4205, column: 17, scope: !4907)
!4937 = !DILocation(line: 4206, column: 19, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 4205, column: 25)
!4939 = !DILocation(line: 4207, column: 13, scope: !4938)
!4940 = !DILocation(line: 4209, column: 17, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 4209, column: 17)
!4942 = !DILocation(line: 4209, column: 35, scope: !4941)
!4943 = !DILocation(line: 4209, column: 39, scope: !4941)
!4944 = !DILocation(line: 4209, column: 22, scope: !4941)
!4945 = !DILocation(line: 4209, column: 19, scope: !4941)
!4946 = !DILocation(line: 4209, column: 17, scope: !4907)
!4947 = !DILocation(line: 4210, column: 19, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 4209, column: 47)
!4949 = !DILocation(line: 4211, column: 13, scope: !4948)
!4950 = !DILocation(line: 4212, column: 9, scope: !4907)
!4951 = !DILocation(line: 4212, column: 18, scope: !4886)
!4952 = !DILocation(line: 4212, column: 37, scope: !4886)
!4953 = !DILocation(line: 4212, column: 41, scope: !4886)
!4954 = !DILocation(line: 4212, column: 24, scope: !4886)
!4955 = !DILocation(line: 4212, column: 22, scope: !4886)
!4956 = !DILocation(line: 4213, column: 5, scope: !4886)
!4957 = !DILocation(line: 4216, column: 9, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 4216, column: 9)
!4959 = !DILocation(line: 4216, column: 13, scope: !4958)
!4960 = !DILocation(line: 4216, column: 9, scope: !4806)
!4961 = !DILocation(line: 4217, column: 13, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 4216, column: 22)
!4963 = !DILocation(line: 4217, column: 22, scope: !4962)
!4964 = !DILocation(line: 4217, column: 37, scope: !4962)
!4965 = !DILocation(line: 4217, column: 41, scope: !4962)
!4966 = !DILocation(line: 4217, column: 35, scope: !4962)
!4967 = !DILocation(line: 4217, column: 11, scope: !4962)
!4968 = !DILocation(line: 4219, column: 18, scope: !4962)
!4969 = !DILocation(line: 4219, column: 22, scope: !4962)
!4970 = !DILocation(line: 4219, column: 30, scope: !4962)
!4971 = !DILocation(line: 4219, column: 17, scope: !4962)
!4972 = !DILocation(line: 4219, column: 39, scope: !4962)
!4973 = !DILocation(line: 4219, column: 43, scope: !4962)
!4974 = !DILocation(line: 4219, column: 46, scope: !4962)
!4975 = !DILocation(line: 4219, column: 54, scope: !4962)
!4976 = !DILocation(line: 4219, column: 58, scope: !4962)
!4977 = !DILocation(line: 4219, column: 61, scope: !4962)
!4978 = !DILocation(line: 4219, column: 15, scope: !4962)
!4979 = !DILocation(line: 4221, column: 9, scope: !4962)
!4980 = distinct !{!4980, !4979, !4981}
!4981 = !DILocation(line: 4235, column: 25, scope: !4962)
!4982 = !DILocation(line: 4222, column: 21, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 4221, column: 12)
!4984 = !DILocation(line: 4222, column: 30, scope: !4983)
!4985 = !DILocation(line: 4222, column: 33, scope: !4983)
!4986 = !DILocation(line: 4222, column: 18, scope: !4983)
!4987 = !DILocation(line: 4223, column: 13, scope: !4983)
!4988 = !DILocation(line: 4223, column: 19, scope: !4983)
!4989 = !DILocation(line: 4223, column: 31, scope: !4983)
!4990 = !{!4991, !1070, i64 0}
!4991 = !{!"sockaddr_in6", !1070, i64 0, !1070, i64 2, !828, i64 4, !1360, i64 8, !828, i64 24}
!4992 = !DILocation(line: 4224, column: 13, scope: !4983)
!4993 = !DILocation(line: 4225, column: 51, scope: !4983)
!4994 = !DILocation(line: 4225, column: 31, scope: !4983)
!4995 = !DILocation(line: 4225, column: 13, scope: !4983)
!4996 = !DILocation(line: 4225, column: 17, scope: !4983)
!4997 = !DILocation(line: 4225, column: 20, scope: !4983)
!4998 = !DILocation(line: 4225, column: 29, scope: !4983)
!4999 = !DILocation(line: 4226, column: 13, scope: !4983)
!5000 = !DILocation(line: 4226, column: 18, scope: !4983)
!5001 = !DILocation(line: 4226, column: 22, scope: !4983)
!5002 = !DILocation(line: 4226, column: 30, scope: !4983)
!5003 = !DILocation(line: 4228, column: 17, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 4228, column: 17)
!5005 = !DILocation(line: 4228, column: 22, scope: !5004)
!5006 = !DILocation(line: 4228, column: 19, scope: !5004)
!5007 = !DILocation(line: 4228, column: 17, scope: !4983)
!5008 = !DILocation(line: 4229, column: 19, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5004, file: !3, line: 4228, column: 25)
!5010 = !DILocation(line: 4230, column: 13, scope: !5009)
!5011 = !DILocation(line: 4232, column: 17, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 4232, column: 17)
!5013 = !DILocation(line: 4232, column: 22, scope: !5012)
!5014 = !DILocation(line: 4232, column: 26, scope: !5012)
!5015 = !DILocation(line: 4232, column: 19, scope: !5012)
!5016 = !DILocation(line: 4232, column: 17, scope: !4983)
!5017 = !DILocation(line: 4233, column: 19, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 4232, column: 35)
!5019 = !DILocation(line: 4234, column: 13, scope: !5018)
!5020 = !DILocation(line: 4235, column: 9, scope: !4983)
!5021 = !DILocation(line: 4235, column: 18, scope: !4962)
!5022 = !DILocation(line: 4235, column: 24, scope: !4962)
!5023 = !DILocation(line: 4235, column: 22, scope: !4962)
!5024 = !DILocation(line: 4236, column: 5, scope: !4962)
!5025 = !DILocation(line: 4239, column: 12, scope: !4806)
!5026 = !DILocation(line: 4239, column: 5, scope: !4806)
!5027 = !DILocation(line: 4240, column: 1, scope: !4806)
!5028 = distinct !DISubprogram(name: "ngx_resolver_resolve_srv_names", scope: !3, file: !3, line: 2936, type: !5029, isLocal: true, isDefinition: true, scopeLine: 2937, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !5031)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{null, !157, !84}
!5031 = !{!5032, !5033, !5034, !5035, !5036, !5037}
!5032 = !DILocalVariable(name: "ctx", arg: 1, scope: !5028, file: !3, line: 2936, type: !157)
!5033 = !DILocalVariable(name: "rn", arg: 2, scope: !5028, file: !3, line: 2936, type: !84)
!5034 = !DILocalVariable(name: "i", scope: !5028, file: !3, line: 2938, type: !82)
!5035 = !DILocalVariable(name: "r", scope: !5028, file: !3, line: 2939, type: !163)
!5036 = !DILocalVariable(name: "cctx", scope: !5028, file: !3, line: 2940, type: !157)
!5037 = !DILocalVariable(name: "srvs", scope: !5028, file: !3, line: 2941, type: !439)
!5038 = !DILocation(line: 2936, column: 52, scope: !5028)
!5039 = !DILocation(line: 2936, column: 78, scope: !5028)
!5040 = !DILocation(line: 2938, column: 5, scope: !5028)
!5041 = !DILocation(line: 2938, column: 31, scope: !5028)
!5042 = !DILocation(line: 2939, column: 5, scope: !5028)
!5043 = !DILocation(line: 2939, column: 31, scope: !5028)
!5044 = !DILocation(line: 2940, column: 5, scope: !5028)
!5045 = !DILocation(line: 2940, column: 31, scope: !5028)
!5046 = !DILocation(line: 2941, column: 5, scope: !5028)
!5047 = !DILocation(line: 2941, column: 31, scope: !5028)
!5048 = !DILocation(line: 2943, column: 9, scope: !5028)
!5049 = !DILocation(line: 2943, column: 14, scope: !5028)
!5050 = !DILocation(line: 2943, column: 7, scope: !5028)
!5051 = !DILocation(line: 2945, column: 5, scope: !5028)
!5052 = !DILocation(line: 2945, column: 10, scope: !5028)
!5053 = !DILocation(line: 2945, column: 15, scope: !5028)
!5054 = !DILocation(line: 2946, column: 5, scope: !5028)
!5055 = !DILocation(line: 2946, column: 10, scope: !5028)
!5056 = !DILocation(line: 2946, column: 16, scope: !5028)
!5057 = !DILocation(line: 2947, column: 18, scope: !5028)
!5058 = !DILocation(line: 2947, column: 22, scope: !5028)
!5059 = !DILocation(line: 2947, column: 5, scope: !5028)
!5060 = !DILocation(line: 2947, column: 10, scope: !5028)
!5061 = !DILocation(line: 2947, column: 16, scope: !5028)
!5062 = !DILocation(line: 2948, column: 18, scope: !5028)
!5063 = !DILocation(line: 2948, column: 22, scope: !5028)
!5064 = !DILocation(line: 2948, column: 5, scope: !5028)
!5065 = !DILocation(line: 2948, column: 10, scope: !5028)
!5066 = !DILocation(line: 2948, column: 16, scope: !5028)
!5067 = !{!1680, !828, i64 84}
!5068 = !DILocation(line: 2950, column: 32, scope: !5028)
!5069 = !DILocation(line: 2950, column: 35, scope: !5028)
!5070 = !DILocation(line: 2950, column: 39, scope: !5028)
!5071 = !DILocation(line: 2950, column: 45, scope: !5028)
!5072 = !DILocation(line: 2950, column: 12, scope: !5028)
!5073 = !DILocation(line: 2950, column: 10, scope: !5028)
!5074 = !DILocation(line: 2951, column: 9, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2951, column: 9)
!5076 = !DILocation(line: 2951, column: 14, scope: !5075)
!5077 = !DILocation(line: 2951, column: 9, scope: !5028)
!5078 = !DILocation(line: 2952, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 2951, column: 23)
!5080 = !DILocation(line: 2955, column: 17, scope: !5028)
!5081 = !DILocation(line: 2955, column: 5, scope: !5028)
!5082 = !DILocation(line: 2955, column: 10, scope: !5028)
!5083 = !DILocation(line: 2955, column: 15, scope: !5028)
!5084 = !DILocation(line: 2956, column: 18, scope: !5028)
!5085 = !DILocation(line: 2956, column: 22, scope: !5028)
!5086 = !DILocation(line: 2956, column: 5, scope: !5028)
!5087 = !DILocation(line: 2956, column: 10, scope: !5028)
!5088 = !DILocation(line: 2956, column: 16, scope: !5028)
!5089 = !DILocation(line: 2958, column: 9, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2958, column: 9)
!5091 = !DILocation(line: 2958, column: 14, scope: !5090)
!5092 = !DILocation(line: 2958, column: 20, scope: !5090)
!5093 = !DILocation(line: 2958, column: 23, scope: !5090)
!5094 = !DILocation(line: 2958, column: 28, scope: !5090)
!5095 = !DILocation(line: 2958, column: 35, scope: !5090)
!5096 = !DILocation(line: 2958, column: 9, scope: !5028)
!5097 = !DILocation(line: 2959, column: 23, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 2958, column: 46)
!5099 = !DILocation(line: 2959, column: 28, scope: !5098)
!5100 = !DILocation(line: 2959, column: 9, scope: !5098)
!5101 = !DILocation(line: 2960, column: 5, scope: !5098)
!5102 = !DILocation(line: 2962, column: 12, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 2962, column: 5)
!5104 = !DILocation(line: 2962, column: 10, scope: !5103)
!5105 = !DILocation(line: 2962, column: 17, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 2962, column: 5)
!5107 = !DILocation(line: 2962, column: 34, scope: !5106)
!5108 = !DILocation(line: 2962, column: 38, scope: !5106)
!5109 = !DILocation(line: 2962, column: 21, scope: !5106)
!5110 = !DILocation(line: 2962, column: 19, scope: !5106)
!5111 = !DILocation(line: 2962, column: 5, scope: !5103)
!5112 = !DILocation(line: 2963, column: 48, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 2962, column: 50)
!5114 = !DILocation(line: 2963, column: 51, scope: !5113)
!5115 = !DILocation(line: 2963, column: 55, scope: !5113)
!5116 = !DILocation(line: 2963, column: 57, scope: !5113)
!5117 = !DILocation(line: 2963, column: 62, scope: !5113)
!5118 = !DILocation(line: 2963, column: 65, scope: !5113)
!5119 = !DILocation(line: 2963, column: 70, scope: !5113)
!5120 = !{!2522, !828, i64 0}
!5121 = !DILocation(line: 2963, column: 29, scope: !5113)
!5122 = !DILocation(line: 2963, column: 9, scope: !5113)
!5123 = !DILocation(line: 2963, column: 14, scope: !5113)
!5124 = !DILocation(line: 2963, column: 17, scope: !5113)
!5125 = !DILocation(line: 2963, column: 22, scope: !5113)
!5126 = !DILocation(line: 2963, column: 27, scope: !5113)
!5127 = !DILocation(line: 2964, column: 13, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2964, column: 13)
!5129 = !DILocation(line: 2964, column: 18, scope: !5128)
!5130 = !DILocation(line: 2964, column: 21, scope: !5128)
!5131 = !DILocation(line: 2964, column: 26, scope: !5128)
!5132 = !DILocation(line: 2964, column: 31, scope: !5128)
!5133 = !DILocation(line: 2964, column: 13, scope: !5113)
!5134 = !DILocation(line: 2965, column: 13, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 2964, column: 40)
!5136 = !DILocation(line: 2968, column: 28, scope: !5113)
!5137 = !DILocation(line: 2968, column: 32, scope: !5113)
!5138 = !DILocation(line: 2968, column: 34, scope: !5113)
!5139 = !DILocation(line: 2968, column: 39, scope: !5113)
!5140 = !DILocation(line: 2968, column: 42, scope: !5113)
!5141 = !DILocation(line: 2968, column: 47, scope: !5113)
!5142 = !DILocation(line: 2968, column: 9, scope: !5113)
!5143 = !DILocation(line: 2968, column: 14, scope: !5113)
!5144 = !DILocation(line: 2968, column: 17, scope: !5113)
!5145 = !DILocation(line: 2968, column: 22, scope: !5113)
!5146 = !DILocation(line: 2968, column: 26, scope: !5113)
!5147 = !{!2903, !828, i64 0}
!5148 = !DILocation(line: 2969, column: 9, scope: !5113)
!5149 = !DILocation(line: 2972, column: 34, scope: !5113)
!5150 = !DILocation(line: 2972, column: 16, scope: !5113)
!5151 = !DILocation(line: 2972, column: 14, scope: !5113)
!5152 = !DILocation(line: 2973, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2973, column: 13)
!5154 = !DILocation(line: 2973, column: 18, scope: !5153)
!5155 = !DILocation(line: 2973, column: 13, scope: !5113)
!5156 = !DILocation(line: 2974, column: 13, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 2973, column: 27)
!5158 = !DILocation(line: 2977, column: 9, scope: !5113)
!5159 = !DILocation(line: 2977, column: 15, scope: !5113)
!5160 = !DILocation(line: 2977, column: 22, scope: !5113)
!5161 = !DILocation(line: 2977, column: 27, scope: !5113)
!5162 = !DILocation(line: 2977, column: 30, scope: !5113)
!5163 = !DILocation(line: 2978, column: 9, scope: !5113)
!5164 = !DILocation(line: 2978, column: 15, scope: !5113)
!5165 = !DILocation(line: 2978, column: 23, scope: !5113)
!5166 = !DILocation(line: 2979, column: 22, scope: !5113)
!5167 = !DILocation(line: 2979, column: 9, scope: !5113)
!5168 = !DILocation(line: 2979, column: 15, scope: !5113)
!5169 = !DILocation(line: 2979, column: 20, scope: !5113)
!5170 = !{!1680, !821, i64 100}
!5171 = !DILocation(line: 2980, column: 23, scope: !5113)
!5172 = !DILocation(line: 2980, column: 28, scope: !5113)
!5173 = !DILocation(line: 2980, column: 9, scope: !5113)
!5174 = !DILocation(line: 2980, column: 15, scope: !5113)
!5175 = !DILocation(line: 2980, column: 20, scope: !5113)
!5176 = !DILocation(line: 2981, column: 25, scope: !5113)
!5177 = !DILocation(line: 2981, column: 30, scope: !5113)
!5178 = !DILocation(line: 2981, column: 9, scope: !5113)
!5179 = !DILocation(line: 2981, column: 15, scope: !5113)
!5180 = !DILocation(line: 2981, column: 23, scope: !5113)
!5181 = !DILocation(line: 2983, column: 28, scope: !5113)
!5182 = !DILocation(line: 2983, column: 32, scope: !5113)
!5183 = !DILocation(line: 2983, column: 34, scope: !5113)
!5184 = !DILocation(line: 2983, column: 39, scope: !5113)
!5185 = !DILocation(line: 2983, column: 42, scope: !5113)
!5186 = !{!2522, !1070, i64 8}
!5187 = !DILocation(line: 2983, column: 9, scope: !5113)
!5188 = !DILocation(line: 2983, column: 14, scope: !5113)
!5189 = !DILocation(line: 2983, column: 17, scope: !5113)
!5190 = !DILocation(line: 2983, column: 26, scope: !5113)
!5191 = !{!2903, !1070, i64 8}
!5192 = !DILocation(line: 2984, column: 26, scope: !5113)
!5193 = !DILocation(line: 2984, column: 30, scope: !5113)
!5194 = !DILocation(line: 2984, column: 32, scope: !5113)
!5195 = !DILocation(line: 2984, column: 37, scope: !5113)
!5196 = !DILocation(line: 2984, column: 40, scope: !5113)
!5197 = !{!2522, !1070, i64 10}
!5198 = !DILocation(line: 2984, column: 9, scope: !5113)
!5199 = !DILocation(line: 2984, column: 14, scope: !5113)
!5200 = !DILocation(line: 2984, column: 17, scope: !5113)
!5201 = !DILocation(line: 2984, column: 24, scope: !5113)
!5202 = !{!2903, !1070, i64 10}
!5203 = !DILocation(line: 2985, column: 24, scope: !5113)
!5204 = !DILocation(line: 2985, column: 28, scope: !5113)
!5205 = !DILocation(line: 2985, column: 30, scope: !5113)
!5206 = !DILocation(line: 2985, column: 35, scope: !5113)
!5207 = !DILocation(line: 2985, column: 38, scope: !5113)
!5208 = !{!2522, !1070, i64 12}
!5209 = !DILocation(line: 2985, column: 9, scope: !5113)
!5210 = !DILocation(line: 2985, column: 14, scope: !5113)
!5211 = !DILocation(line: 2985, column: 17, scope: !5113)
!5212 = !DILocation(line: 2985, column: 22, scope: !5113)
!5213 = !{!2903, !1070, i64 12}
!5214 = !DILocation(line: 2986, column: 23, scope: !5113)
!5215 = !DILocation(line: 2986, column: 9, scope: !5113)
!5216 = !DILocation(line: 2986, column: 14, scope: !5113)
!5217 = !DILocation(line: 2986, column: 17, scope: !5113)
!5218 = !DILocation(line: 2986, column: 21, scope: !5113)
!5219 = !DILocation(line: 2988, column: 30, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 2988, column: 13)
!5221 = !DILocation(line: 2988, column: 13, scope: !5220)
!5222 = !DILocation(line: 2988, column: 36, scope: !5220)
!5223 = !DILocation(line: 2988, column: 13, scope: !5113)
!5224 = !DILocation(line: 2989, column: 13, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 2988, column: 50)
!5226 = !DILocation(line: 2989, column: 18, scope: !5225)
!5227 = !DILocation(line: 2989, column: 21, scope: !5225)
!5228 = !DILocation(line: 2989, column: 25, scope: !5225)
!5229 = !DILocation(line: 2990, column: 13, scope: !5225)
!5230 = !DILocation(line: 2992, column: 5, scope: !5113)
!5231 = !DILocation(line: 2962, column: 46, scope: !5106)
!5232 = !DILocation(line: 2962, column: 5, scope: !5106)
!5233 = distinct !{!5233, !5111, !5234}
!5234 = !DILocation(line: 2992, column: 5, scope: !5103)
!5235 = !DILocation(line: 2994, column: 5, scope: !5028)
!5236 = !DILocation(line: 2998, column: 5, scope: !5028)
!5237 = !DILocation(line: 2998, column: 10, scope: !5028)
!5238 = !DILocation(line: 2998, column: 16, scope: !5028)
!5239 = !DILocation(line: 2999, column: 18, scope: !5028)
!5240 = !DILocation(line: 2999, column: 32, scope: !5028)
!5241 = !DILocation(line: 2999, column: 35, scope: !5028)
!5242 = !DILocation(line: 2999, column: 43, scope: !5028)
!5243 = !DILocation(line: 2999, column: 46, scope: !5028)
!5244 = !DILocation(line: 2999, column: 29, scope: !5028)
!5245 = !DILocation(line: 2999, column: 5, scope: !5028)
!5246 = !DILocation(line: 2999, column: 10, scope: !5028)
!5247 = !DILocation(line: 2999, column: 16, scope: !5028)
!5248 = !DILocation(line: 3001, column: 5, scope: !5028)
!5249 = !DILocation(line: 3001, column: 10, scope: !5028)
!5250 = !DILocation(line: 3001, column: 18, scope: !5028)
!5251 = !DILocation(line: 3002, column: 1, scope: !5028)
!5252 = distinct !DISubprogram(name: "ngx_resolver_create_srv_query", scope: !3, file: !3, line: 3760, type: !5253, isLocal: true, isDefinition: true, scopeLine: 3762, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !5255)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!8, !163, !84, !760}
!5255 = !{!5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265}
!5256 = !DILocalVariable(name: "r", arg: 1, scope: !5252, file: !3, line: 3760, type: !163)
!5257 = !DILocalVariable(name: "rn", arg: 2, scope: !5252, file: !3, line: 3760, type: !84)
!5258 = !DILocalVariable(name: "name", arg: 3, scope: !5252, file: !3, line: 3761, type: !760)
!5259 = !DILocalVariable(name: "p", scope: !5252, file: !3, line: 3763, type: !110)
!5260 = !DILocalVariable(name: "s", scope: !5252, file: !3, line: 3763, type: !110)
!5261 = !DILocalVariable(name: "len", scope: !5252, file: !3, line: 3764, type: !134)
!5262 = !DILocalVariable(name: "nlen", scope: !5252, file: !3, line: 3764, type: !134)
!5263 = !DILocalVariable(name: "ident", scope: !5252, file: !3, line: 3765, type: !82)
!5264 = !DILocalVariable(name: "qs", scope: !5252, file: !3, line: 3766, type: !485)
!5265 = !DILocalVariable(name: "query", scope: !5252, file: !3, line: 3767, type: !469)
!5266 = !DILocation(line: 3760, column: 47, scope: !5252)
!5267 = !DILocation(line: 3760, column: 71, scope: !5252)
!5268 = !DILocation(line: 3761, column: 16, scope: !5252)
!5269 = !DILocation(line: 3763, column: 5, scope: !5252)
!5270 = !DILocation(line: 3763, column: 26, scope: !5252)
!5271 = !DILocation(line: 3763, column: 30, scope: !5252)
!5272 = !DILocation(line: 3764, column: 5, scope: !5252)
!5273 = !DILocation(line: 3764, column: 26, scope: !5252)
!5274 = !DILocation(line: 3764, column: 31, scope: !5252)
!5275 = !DILocation(line: 3765, column: 5, scope: !5252)
!5276 = !DILocation(line: 3765, column: 26, scope: !5252)
!5277 = !DILocation(line: 3766, column: 5, scope: !5252)
!5278 = !DILocation(line: 3766, column: 26, scope: !5252)
!5279 = !DILocation(line: 3767, column: 5, scope: !5252)
!5280 = !DILocation(line: 3767, column: 26, scope: !5252)
!5281 = !DILocation(line: 3769, column: 12, scope: !5252)
!5282 = !DILocation(line: 3769, column: 18, scope: !5252)
!5283 = !DILocation(line: 3769, column: 29, scope: !5252)
!5284 = !DILocation(line: 3769, column: 35, scope: !5252)
!5285 = !DILocation(line: 3769, column: 27, scope: !5252)
!5286 = !DILocation(line: 3769, column: 39, scope: !5252)
!5287 = !DILocation(line: 3769, column: 10, scope: !5252)
!5288 = !DILocation(line: 3771, column: 40, scope: !5252)
!5289 = !DILocation(line: 3771, column: 38, scope: !5252)
!5290 = !DILocation(line: 3771, column: 45, scope: !5252)
!5291 = !DILocation(line: 3771, column: 9, scope: !5252)
!5292 = !DILocation(line: 3773, column: 28, scope: !5252)
!5293 = !DILocation(line: 3773, column: 31, scope: !5252)
!5294 = !DILocation(line: 3773, column: 9, scope: !5252)
!5295 = !DILocation(line: 3773, column: 7, scope: !5252)
!5296 = !DILocation(line: 3774, column: 9, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 3774, column: 9)
!5298 = !DILocation(line: 3774, column: 11, scope: !5297)
!5299 = !DILocation(line: 3774, column: 9, scope: !5252)
!5300 = !DILocation(line: 3775, column: 9, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 3774, column: 20)
!5302 = !DILocation(line: 3778, column: 26, scope: !5252)
!5303 = !DILocation(line: 3778, column: 16, scope: !5252)
!5304 = !DILocation(line: 3778, column: 5, scope: !5252)
!5305 = !DILocation(line: 3778, column: 9, scope: !5252)
!5306 = !DILocation(line: 3778, column: 14, scope: !5252)
!5307 = !DILocation(line: 3779, column: 17, scope: !5252)
!5308 = !DILocation(line: 3779, column: 5, scope: !5252)
!5309 = !DILocation(line: 3779, column: 9, scope: !5252)
!5310 = !DILocation(line: 3779, column: 15, scope: !5252)
!5311 = !DILocation(line: 3781, column: 36, scope: !5252)
!5312 = !DILocation(line: 3781, column: 13, scope: !5252)
!5313 = !DILocation(line: 3781, column: 11, scope: !5252)
!5314 = !DILocation(line: 3783, column: 13, scope: !5252)
!5315 = !DILocation(line: 3783, column: 11, scope: !5252)
!5316 = !DILocation(line: 3788, column: 34, scope: !5252)
!5317 = !DILocation(line: 3788, column: 40, scope: !5252)
!5318 = !DILocation(line: 3788, column: 46, scope: !5252)
!5319 = !DILocation(line: 3788, column: 23, scope: !5252)
!5320 = !DILocation(line: 3788, column: 5, scope: !5252)
!5321 = !DILocation(line: 3788, column: 12, scope: !5252)
!5322 = !DILocation(line: 3788, column: 21, scope: !5252)
!5323 = !DILocation(line: 3789, column: 33, scope: !5252)
!5324 = !DILocation(line: 3789, column: 39, scope: !5252)
!5325 = !DILocation(line: 3789, column: 23, scope: !5252)
!5326 = !DILocation(line: 3789, column: 5, scope: !5252)
!5327 = !DILocation(line: 3789, column: 12, scope: !5252)
!5328 = !DILocation(line: 3789, column: 21, scope: !5252)
!5329 = !DILocation(line: 3792, column: 5, scope: !5252)
!5330 = !DILocation(line: 3792, column: 12, scope: !5252)
!5331 = !DILocation(line: 3792, column: 21, scope: !5252)
!5332 = !DILocation(line: 3792, column: 26, scope: !5252)
!5333 = !DILocation(line: 3792, column: 33, scope: !5252)
!5334 = !DILocation(line: 3792, column: 42, scope: !5252)
!5335 = !DILocation(line: 3795, column: 5, scope: !5252)
!5336 = !DILocation(line: 3795, column: 12, scope: !5252)
!5337 = !DILocation(line: 3795, column: 19, scope: !5252)
!5338 = !DILocation(line: 3795, column: 24, scope: !5252)
!5339 = !DILocation(line: 3795, column: 31, scope: !5252)
!5340 = !DILocation(line: 3795, column: 38, scope: !5252)
!5341 = !DILocation(line: 3796, column: 5, scope: !5252)
!5342 = !DILocation(line: 3796, column: 12, scope: !5252)
!5343 = !DILocation(line: 3796, column: 19, scope: !5252)
!5344 = !DILocation(line: 3796, column: 24, scope: !5252)
!5345 = !DILocation(line: 3796, column: 31, scope: !5252)
!5346 = !DILocation(line: 3796, column: 38, scope: !5252)
!5347 = !DILocation(line: 3797, column: 5, scope: !5252)
!5348 = !DILocation(line: 3797, column: 12, scope: !5252)
!5349 = !DILocation(line: 3797, column: 19, scope: !5252)
!5350 = !DILocation(line: 3797, column: 24, scope: !5252)
!5351 = !DILocation(line: 3797, column: 31, scope: !5252)
!5352 = !DILocation(line: 3797, column: 38, scope: !5252)
!5353 = !DILocation(line: 3798, column: 5, scope: !5252)
!5354 = !DILocation(line: 3798, column: 12, scope: !5252)
!5355 = !DILocation(line: 3798, column: 19, scope: !5252)
!5356 = !DILocation(line: 3798, column: 24, scope: !5252)
!5357 = !DILocation(line: 3798, column: 31, scope: !5252)
!5358 = !DILocation(line: 3798, column: 38, scope: !5252)
!5359 = !DILocation(line: 3800, column: 39, scope: !5252)
!5360 = !DILocation(line: 3800, column: 37, scope: !5252)
!5361 = !DILocation(line: 3800, column: 7, scope: !5252)
!5362 = !DILocation(line: 3802, column: 32, scope: !5252)
!5363 = !DILocation(line: 3802, column: 10, scope: !5252)
!5364 = !DILocation(line: 3802, column: 8, scope: !5252)
!5365 = !DILocation(line: 3805, column: 5, scope: !5252)
!5366 = !DILocation(line: 3805, column: 9, scope: !5252)
!5367 = !DILocation(line: 3805, column: 17, scope: !5252)
!5368 = !{!5369, !822, i64 0}
!5369 = !{!"", !822, i64 0, !822, i64 1, !822, i64 2, !822, i64 3}
!5370 = !DILocation(line: 3805, column: 22, scope: !5252)
!5371 = !DILocation(line: 3805, column: 26, scope: !5252)
!5372 = !DILocation(line: 3805, column: 34, scope: !5252)
!5373 = !{!5369, !822, i64 1}
!5374 = !DILocation(line: 3808, column: 5, scope: !5252)
!5375 = !DILocation(line: 3808, column: 9, scope: !5252)
!5376 = !DILocation(line: 3808, column: 18, scope: !5252)
!5377 = !{!5369, !822, i64 2}
!5378 = !DILocation(line: 3808, column: 23, scope: !5252)
!5379 = !DILocation(line: 3808, column: 27, scope: !5252)
!5380 = !DILocation(line: 3808, column: 36, scope: !5252)
!5381 = !{!5369, !822, i64 3}
!5382 = !DILocation(line: 3812, column: 9, scope: !5252)
!5383 = !DILocation(line: 3813, column: 6, scope: !5252)
!5384 = !DILocation(line: 3814, column: 7, scope: !5252)
!5385 = !DILocation(line: 3814, column: 10, scope: !5252)
!5386 = !DILocation(line: 3816, column: 9, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 3816, column: 9)
!5388 = !DILocation(line: 3816, column: 15, scope: !5387)
!5389 = !DILocation(line: 3816, column: 19, scope: !5387)
!5390 = !DILocation(line: 3816, column: 9, scope: !5252)
!5391 = !DILocation(line: 3817, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 3816, column: 26)
!5393 = !DILocation(line: 3820, column: 14, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 3820, column: 5)
!5395 = !DILocation(line: 3820, column: 20, scope: !5394)
!5396 = !DILocation(line: 3820, column: 27, scope: !5394)
!5397 = !DILocation(line: 3820, column: 33, scope: !5394)
!5398 = !DILocation(line: 3820, column: 25, scope: !5394)
!5399 = !DILocation(line: 3820, column: 37, scope: !5394)
!5400 = !DILocation(line: 3820, column: 12, scope: !5394)
!5401 = !DILocation(line: 3820, column: 10, scope: !5394)
!5402 = !DILocation(line: 3820, column: 42, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 3820, column: 5)
!5404 = !DILocation(line: 3820, column: 47, scope: !5403)
!5405 = !DILocation(line: 3820, column: 53, scope: !5403)
!5406 = !DILocation(line: 3820, column: 44, scope: !5403)
!5407 = !DILocation(line: 3820, column: 5, scope: !5394)
!5408 = !DILocation(line: 3821, column: 14, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 3821, column: 13)
!5410 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 3820, column: 64)
!5411 = !DILocation(line: 3821, column: 13, scope: !5409)
!5412 = !DILocation(line: 3821, column: 16, scope: !5409)
!5413 = !DILocation(line: 3821, column: 13, scope: !5410)
!5414 = !DILocation(line: 3822, column: 19, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 3821, column: 24)
!5416 = !DILocation(line: 3822, column: 18, scope: !5415)
!5417 = !DILocation(line: 3822, column: 14, scope: !5415)
!5418 = !DILocation(line: 3822, column: 16, scope: !5415)
!5419 = !DILocation(line: 3823, column: 16, scope: !5415)
!5420 = !DILocation(line: 3825, column: 9, scope: !5415)
!5421 = !DILocation(line: 3826, column: 17, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 3826, column: 17)
!5423 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 3825, column: 16)
!5424 = !DILocation(line: 3826, column: 21, scope: !5422)
!5425 = !DILocation(line: 3826, column: 26, scope: !5422)
!5426 = !DILocation(line: 3826, column: 29, scope: !5422)
!5427 = !DILocation(line: 3826, column: 33, scope: !5422)
!5428 = !DILocation(line: 3826, column: 17, scope: !5423)
!5429 = !DILocation(line: 3827, column: 17, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3826, column: 40)
!5431 = !DILocation(line: 3830, column: 27, scope: !5423)
!5432 = !DILocation(line: 3830, column: 18, scope: !5423)
!5433 = !DILocation(line: 3830, column: 14, scope: !5423)
!5434 = !DILocation(line: 3830, column: 16, scope: !5423)
!5435 = !DILocation(line: 3831, column: 17, scope: !5423)
!5436 = !DILocation(line: 3834, column: 10, scope: !5410)
!5437 = !DILocation(line: 3835, column: 5, scope: !5410)
!5438 = !DILocation(line: 3820, column: 60, scope: !5403)
!5439 = !DILocation(line: 3820, column: 5, scope: !5403)
!5440 = distinct !{!5440, !5407, !5441}
!5441 = !DILocation(line: 3835, column: 5, scope: !5394)
!5442 = !DILocation(line: 3837, column: 9, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 3837, column: 9)
!5444 = !DILocation(line: 3837, column: 13, scope: !5443)
!5445 = !DILocation(line: 3837, column: 18, scope: !5443)
!5446 = !DILocation(line: 3837, column: 21, scope: !5443)
!5447 = !DILocation(line: 3837, column: 25, scope: !5443)
!5448 = !DILocation(line: 3837, column: 9, scope: !5252)
!5449 = !DILocation(line: 3838, column: 9, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 3837, column: 32)
!5451 = !DILocation(line: 3841, column: 19, scope: !5252)
!5452 = !DILocation(line: 3841, column: 10, scope: !5252)
!5453 = !DILocation(line: 3841, column: 6, scope: !5252)
!5454 = !DILocation(line: 3841, column: 8, scope: !5252)
!5455 = !DILocation(line: 3843, column: 5, scope: !5252)
!5456 = !DILocation(line: 3844, column: 1, scope: !5252)
!5457 = distinct !DISubprogram(name: "ngx_resolver_create_name_query", scope: !3, file: !3, line: 3636, type: !5253, isLocal: true, isDefinition: true, scopeLine: 3638, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !5458)
!5458 = !{!5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468}
!5459 = !DILocalVariable(name: "r", arg: 1, scope: !5457, file: !3, line: 3636, type: !163)
!5460 = !DILocalVariable(name: "rn", arg: 2, scope: !5457, file: !3, line: 3636, type: !84)
!5461 = !DILocalVariable(name: "name", arg: 3, scope: !5457, file: !3, line: 3637, type: !760)
!5462 = !DILocalVariable(name: "p", scope: !5457, file: !3, line: 3639, type: !110)
!5463 = !DILocalVariable(name: "s", scope: !5457, file: !3, line: 3639, type: !110)
!5464 = !DILocalVariable(name: "len", scope: !5457, file: !3, line: 3640, type: !134)
!5465 = !DILocalVariable(name: "nlen", scope: !5457, file: !3, line: 3640, type: !134)
!5466 = !DILocalVariable(name: "ident", scope: !5457, file: !3, line: 3641, type: !82)
!5467 = !DILocalVariable(name: "qs", scope: !5457, file: !3, line: 3642, type: !485)
!5468 = !DILocalVariable(name: "query", scope: !5457, file: !3, line: 3643, type: !469)
!5469 = !DILocation(line: 3636, column: 48, scope: !5457)
!5470 = !DILocation(line: 3636, column: 72, scope: !5457)
!5471 = !DILocation(line: 3637, column: 16, scope: !5457)
!5472 = !DILocation(line: 3639, column: 5, scope: !5457)
!5473 = !DILocation(line: 3639, column: 26, scope: !5457)
!5474 = !DILocation(line: 3639, column: 30, scope: !5457)
!5475 = !DILocation(line: 3640, column: 5, scope: !5457)
!5476 = !DILocation(line: 3640, column: 26, scope: !5457)
!5477 = !DILocation(line: 3640, column: 31, scope: !5457)
!5478 = !DILocation(line: 3641, column: 5, scope: !5457)
!5479 = !DILocation(line: 3641, column: 26, scope: !5457)
!5480 = !DILocation(line: 3642, column: 5, scope: !5457)
!5481 = !DILocation(line: 3642, column: 26, scope: !5457)
!5482 = !DILocation(line: 3643, column: 5, scope: !5457)
!5483 = !DILocation(line: 3643, column: 26, scope: !5457)
!5484 = !DILocation(line: 3645, column: 12, scope: !5457)
!5485 = !DILocation(line: 3645, column: 18, scope: !5457)
!5486 = !DILocation(line: 3645, column: 29, scope: !5457)
!5487 = !DILocation(line: 3645, column: 35, scope: !5457)
!5488 = !DILocation(line: 3645, column: 27, scope: !5457)
!5489 = !DILocation(line: 3645, column: 39, scope: !5457)
!5490 = !DILocation(line: 3645, column: 10, scope: !5457)
!5491 = !DILocation(line: 3647, column: 40, scope: !5457)
!5492 = !DILocation(line: 3647, column: 38, scope: !5457)
!5493 = !DILocation(line: 3647, column: 45, scope: !5457)
!5494 = !DILocation(line: 3647, column: 9, scope: !5457)
!5495 = !DILocation(line: 3650, column: 28, scope: !5457)
!5496 = !DILocation(line: 3650, column: 31, scope: !5457)
!5497 = !DILocation(line: 3650, column: 34, scope: !5457)
!5498 = !DILocation(line: 3650, column: 41, scope: !5457)
!5499 = !DILocation(line: 3650, column: 45, scope: !5457)
!5500 = !DILocation(line: 3650, column: 51, scope: !5457)
!5501 = !DILocation(line: 3650, column: 9, scope: !5457)
!5502 = !DILocation(line: 3650, column: 7, scope: !5457)
!5503 = !DILocation(line: 3654, column: 9, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3654, column: 9)
!5505 = !DILocation(line: 3654, column: 11, scope: !5504)
!5506 = !DILocation(line: 3654, column: 9, scope: !5457)
!5507 = !DILocation(line: 3655, column: 9, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 3654, column: 20)
!5509 = !DILocation(line: 3658, column: 26, scope: !5457)
!5510 = !DILocation(line: 3658, column: 16, scope: !5457)
!5511 = !DILocation(line: 3658, column: 5, scope: !5457)
!5512 = !DILocation(line: 3658, column: 9, scope: !5457)
!5513 = !DILocation(line: 3658, column: 14, scope: !5457)
!5514 = !DILocation(line: 3659, column: 17, scope: !5457)
!5515 = !DILocation(line: 3659, column: 5, scope: !5457)
!5516 = !DILocation(line: 3659, column: 9, scope: !5457)
!5517 = !DILocation(line: 3659, column: 15, scope: !5457)
!5518 = !DILocation(line: 3662, column: 9, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3662, column: 9)
!5520 = !DILocation(line: 3662, column: 12, scope: !5519)
!5521 = !DILocation(line: 3662, column: 9, scope: !5457)
!5522 = !DILocation(line: 3663, column: 22, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 3662, column: 18)
!5524 = !DILocation(line: 3663, column: 26, scope: !5523)
!5525 = !DILocation(line: 3663, column: 24, scope: !5523)
!5526 = !DILocation(line: 3663, column: 9, scope: !5523)
!5527 = !DILocation(line: 3663, column: 13, scope: !5523)
!5528 = !DILocation(line: 3663, column: 20, scope: !5523)
!5529 = !DILocation(line: 3664, column: 5, scope: !5523)
!5530 = !DILocation(line: 3667, column: 36, scope: !5457)
!5531 = !DILocation(line: 3667, column: 13, scope: !5457)
!5532 = !DILocation(line: 3667, column: 11, scope: !5457)
!5533 = !DILocation(line: 3669, column: 13, scope: !5457)
!5534 = !DILocation(line: 3669, column: 11, scope: !5457)
!5535 = !DILocation(line: 3674, column: 34, scope: !5457)
!5536 = !DILocation(line: 3674, column: 40, scope: !5457)
!5537 = !DILocation(line: 3674, column: 46, scope: !5457)
!5538 = !DILocation(line: 3674, column: 23, scope: !5457)
!5539 = !DILocation(line: 3674, column: 5, scope: !5457)
!5540 = !DILocation(line: 3674, column: 12, scope: !5457)
!5541 = !DILocation(line: 3674, column: 21, scope: !5457)
!5542 = !DILocation(line: 3675, column: 33, scope: !5457)
!5543 = !DILocation(line: 3675, column: 39, scope: !5457)
!5544 = !DILocation(line: 3675, column: 23, scope: !5457)
!5545 = !DILocation(line: 3675, column: 5, scope: !5457)
!5546 = !DILocation(line: 3675, column: 12, scope: !5457)
!5547 = !DILocation(line: 3675, column: 21, scope: !5457)
!5548 = !DILocation(line: 3678, column: 5, scope: !5457)
!5549 = !DILocation(line: 3678, column: 12, scope: !5457)
!5550 = !DILocation(line: 3678, column: 21, scope: !5457)
!5551 = !DILocation(line: 3678, column: 26, scope: !5457)
!5552 = !DILocation(line: 3678, column: 33, scope: !5457)
!5553 = !DILocation(line: 3678, column: 42, scope: !5457)
!5554 = !DILocation(line: 3681, column: 5, scope: !5457)
!5555 = !DILocation(line: 3681, column: 12, scope: !5457)
!5556 = !DILocation(line: 3681, column: 19, scope: !5457)
!5557 = !DILocation(line: 3681, column: 24, scope: !5457)
!5558 = !DILocation(line: 3681, column: 31, scope: !5457)
!5559 = !DILocation(line: 3681, column: 38, scope: !5457)
!5560 = !DILocation(line: 3682, column: 5, scope: !5457)
!5561 = !DILocation(line: 3682, column: 12, scope: !5457)
!5562 = !DILocation(line: 3682, column: 19, scope: !5457)
!5563 = !DILocation(line: 3682, column: 24, scope: !5457)
!5564 = !DILocation(line: 3682, column: 31, scope: !5457)
!5565 = !DILocation(line: 3682, column: 38, scope: !5457)
!5566 = !DILocation(line: 3683, column: 5, scope: !5457)
!5567 = !DILocation(line: 3683, column: 12, scope: !5457)
!5568 = !DILocation(line: 3683, column: 19, scope: !5457)
!5569 = !DILocation(line: 3683, column: 24, scope: !5457)
!5570 = !DILocation(line: 3683, column: 31, scope: !5457)
!5571 = !DILocation(line: 3683, column: 38, scope: !5457)
!5572 = !DILocation(line: 3684, column: 5, scope: !5457)
!5573 = !DILocation(line: 3684, column: 12, scope: !5457)
!5574 = !DILocation(line: 3684, column: 19, scope: !5457)
!5575 = !DILocation(line: 3684, column: 24, scope: !5457)
!5576 = !DILocation(line: 3684, column: 31, scope: !5457)
!5577 = !DILocation(line: 3684, column: 38, scope: !5457)
!5578 = !DILocation(line: 3686, column: 39, scope: !5457)
!5579 = !DILocation(line: 3686, column: 37, scope: !5457)
!5580 = !DILocation(line: 3686, column: 7, scope: !5457)
!5581 = !DILocation(line: 3688, column: 32, scope: !5457)
!5582 = !DILocation(line: 3688, column: 10, scope: !5457)
!5583 = !DILocation(line: 3688, column: 8, scope: !5457)
!5584 = !DILocation(line: 3691, column: 5, scope: !5457)
!5585 = !DILocation(line: 3691, column: 9, scope: !5457)
!5586 = !DILocation(line: 3691, column: 17, scope: !5457)
!5587 = !DILocation(line: 3691, column: 22, scope: !5457)
!5588 = !DILocation(line: 3691, column: 26, scope: !5457)
!5589 = !DILocation(line: 3691, column: 34, scope: !5457)
!5590 = !DILocation(line: 3694, column: 5, scope: !5457)
!5591 = !DILocation(line: 3694, column: 9, scope: !5457)
!5592 = !DILocation(line: 3694, column: 18, scope: !5457)
!5593 = !DILocation(line: 3694, column: 23, scope: !5457)
!5594 = !DILocation(line: 3694, column: 27, scope: !5457)
!5595 = !DILocation(line: 3694, column: 36, scope: !5457)
!5596 = !DILocation(line: 3698, column: 9, scope: !5457)
!5597 = !DILocation(line: 3699, column: 6, scope: !5457)
!5598 = !DILocation(line: 3700, column: 7, scope: !5457)
!5599 = !DILocation(line: 3700, column: 10, scope: !5457)
!5600 = !DILocation(line: 3702, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3702, column: 9)
!5602 = !DILocation(line: 3702, column: 15, scope: !5601)
!5603 = !DILocation(line: 3702, column: 19, scope: !5601)
!5604 = !DILocation(line: 3702, column: 9, scope: !5457)
!5605 = !DILocation(line: 3703, column: 9, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3702, column: 26)
!5607 = !DILocation(line: 3706, column: 14, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3706, column: 5)
!5609 = !DILocation(line: 3706, column: 20, scope: !5608)
!5610 = !DILocation(line: 3706, column: 27, scope: !5608)
!5611 = !DILocation(line: 3706, column: 33, scope: !5608)
!5612 = !DILocation(line: 3706, column: 25, scope: !5608)
!5613 = !DILocation(line: 3706, column: 37, scope: !5608)
!5614 = !DILocation(line: 3706, column: 12, scope: !5608)
!5615 = !DILocation(line: 3706, column: 10, scope: !5608)
!5616 = !DILocation(line: 3706, column: 42, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 3706, column: 5)
!5618 = !DILocation(line: 3706, column: 47, scope: !5617)
!5619 = !DILocation(line: 3706, column: 53, scope: !5617)
!5620 = !DILocation(line: 3706, column: 44, scope: !5617)
!5621 = !DILocation(line: 3706, column: 5, scope: !5608)
!5622 = !DILocation(line: 3707, column: 14, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 3707, column: 13)
!5624 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 3706, column: 64)
!5625 = !DILocation(line: 3707, column: 13, scope: !5623)
!5626 = !DILocation(line: 3707, column: 16, scope: !5623)
!5627 = !DILocation(line: 3707, column: 13, scope: !5624)
!5628 = !DILocation(line: 3708, column: 19, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 3707, column: 24)
!5630 = !DILocation(line: 3708, column: 18, scope: !5629)
!5631 = !DILocation(line: 3708, column: 14, scope: !5629)
!5632 = !DILocation(line: 3708, column: 16, scope: !5629)
!5633 = !DILocation(line: 3709, column: 16, scope: !5629)
!5634 = !DILocation(line: 3711, column: 9, scope: !5629)
!5635 = !DILocation(line: 3712, column: 17, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 3712, column: 17)
!5637 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 3711, column: 16)
!5638 = !DILocation(line: 3712, column: 21, scope: !5636)
!5639 = !DILocation(line: 3712, column: 26, scope: !5636)
!5640 = !DILocation(line: 3712, column: 29, scope: !5636)
!5641 = !DILocation(line: 3712, column: 33, scope: !5636)
!5642 = !DILocation(line: 3712, column: 17, scope: !5637)
!5643 = !DILocation(line: 3713, column: 17, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 3712, column: 40)
!5645 = !DILocation(line: 3716, column: 27, scope: !5637)
!5646 = !DILocation(line: 3716, column: 18, scope: !5637)
!5647 = !DILocation(line: 3716, column: 14, scope: !5637)
!5648 = !DILocation(line: 3716, column: 16, scope: !5637)
!5649 = !DILocation(line: 3717, column: 17, scope: !5637)
!5650 = !DILocation(line: 3720, column: 10, scope: !5624)
!5651 = !DILocation(line: 3721, column: 5, scope: !5624)
!5652 = !DILocation(line: 3706, column: 60, scope: !5617)
!5653 = !DILocation(line: 3706, column: 5, scope: !5617)
!5654 = distinct !{!5654, !5621, !5655}
!5655 = !DILocation(line: 3721, column: 5, scope: !5608)
!5656 = !DILocation(line: 3723, column: 9, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3723, column: 9)
!5658 = !DILocation(line: 3723, column: 13, scope: !5657)
!5659 = !DILocation(line: 3723, column: 18, scope: !5657)
!5660 = !DILocation(line: 3723, column: 21, scope: !5657)
!5661 = !DILocation(line: 3723, column: 25, scope: !5657)
!5662 = !DILocation(line: 3723, column: 9, scope: !5457)
!5663 = !DILocation(line: 3724, column: 9, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 3723, column: 32)
!5665 = !DILocation(line: 3727, column: 19, scope: !5457)
!5666 = !DILocation(line: 3727, column: 10, scope: !5457)
!5667 = !DILocation(line: 3727, column: 6, scope: !5457)
!5668 = !DILocation(line: 3727, column: 8, scope: !5457)
!5669 = !DILocation(line: 3730, column: 10, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 3730, column: 9)
!5671 = !DILocation(line: 3730, column: 13, scope: !5670)
!5672 = !DILocation(line: 3730, column: 9, scope: !5457)
!5673 = !DILocation(line: 3731, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 3730, column: 19)
!5675 = !DILocation(line: 3734, column: 9, scope: !5457)
!5676 = !DILocation(line: 3734, column: 13, scope: !5457)
!5677 = !DILocation(line: 3734, column: 7, scope: !5457)
!5678 = !DILocation(line: 3736, column: 5, scope: !5457)
!5679 = !DILocation(line: 3738, column: 36, scope: !5457)
!5680 = !DILocation(line: 3738, column: 13, scope: !5457)
!5681 = !DILocation(line: 3738, column: 11, scope: !5457)
!5682 = !DILocation(line: 3740, column: 13, scope: !5457)
!5683 = !DILocation(line: 3740, column: 11, scope: !5457)
!5684 = !DILocation(line: 3745, column: 34, scope: !5457)
!5685 = !DILocation(line: 3745, column: 40, scope: !5457)
!5686 = !DILocation(line: 3745, column: 46, scope: !5457)
!5687 = !DILocation(line: 3745, column: 23, scope: !5457)
!5688 = !DILocation(line: 3745, column: 5, scope: !5457)
!5689 = !DILocation(line: 3745, column: 12, scope: !5457)
!5690 = !DILocation(line: 3745, column: 21, scope: !5457)
!5691 = !DILocation(line: 3746, column: 33, scope: !5457)
!5692 = !DILocation(line: 3746, column: 39, scope: !5457)
!5693 = !DILocation(line: 3746, column: 23, scope: !5457)
!5694 = !DILocation(line: 3746, column: 5, scope: !5457)
!5695 = !DILocation(line: 3746, column: 12, scope: !5457)
!5696 = !DILocation(line: 3746, column: 21, scope: !5457)
!5697 = !DILocation(line: 3748, column: 39, scope: !5457)
!5698 = !DILocation(line: 3748, column: 37, scope: !5457)
!5699 = !DILocation(line: 3748, column: 7, scope: !5457)
!5700 = !DILocation(line: 3750, column: 32, scope: !5457)
!5701 = !DILocation(line: 3750, column: 10, scope: !5457)
!5702 = !DILocation(line: 3750, column: 8, scope: !5457)
!5703 = !DILocation(line: 3752, column: 5, scope: !5457)
!5704 = !DILocation(line: 3752, column: 9, scope: !5457)
!5705 = !DILocation(line: 3752, column: 17, scope: !5457)
!5706 = !DILocation(line: 3755, column: 5, scope: !5457)
!5707 = !DILocation(line: 3756, column: 1, scope: !5457)
!5708 = distinct !DISubprogram(name: "ngx_resolver_srv_names_handler", scope: !3, file: !3, line: 3006, type: !462, isLocal: true, isDefinition: true, scopeLine: 3007, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !5709)
!5709 = !{!5710, !5711, !5712, !5713, !5714, !5715, !5716}
!5710 = !DILocalVariable(name: "cctx", arg: 1, scope: !5708, file: !3, line: 3006, type: !157)
!5711 = !DILocalVariable(name: "i", scope: !5708, file: !3, line: 3008, type: !82)
!5712 = !DILocalVariable(name: "addrs", scope: !5708, file: !3, line: 3009, type: !451)
!5713 = !DILocalVariable(name: "r", scope: !5708, file: !3, line: 3010, type: !163)
!5714 = !DILocalVariable(name: "sockaddr", scope: !5708, file: !3, line: 3011, type: !4819)
!5715 = !DILocalVariable(name: "ctx", scope: !5708, file: !3, line: 3012, type: !157)
!5716 = !DILocalVariable(name: "srv", scope: !5708, file: !3, line: 3013, type: !439)
!5717 = !DILocation(line: 3006, column: 52, scope: !5708)
!5718 = !DILocation(line: 3008, column: 5, scope: !5708)
!5719 = !DILocation(line: 3008, column: 31, scope: !5708)
!5720 = !DILocation(line: 3009, column: 5, scope: !5708)
!5721 = !DILocation(line: 3009, column: 31, scope: !5708)
!5722 = !DILocation(line: 3010, column: 5, scope: !5708)
!5723 = !DILocation(line: 3010, column: 31, scope: !5708)
!5724 = !DILocation(line: 3011, column: 5, scope: !5708)
!5725 = !DILocation(line: 3011, column: 31, scope: !5708)
!5726 = !DILocation(line: 3012, column: 5, scope: !5708)
!5727 = !DILocation(line: 3012, column: 31, scope: !5708)
!5728 = !DILocation(line: 3013, column: 5, scope: !5708)
!5729 = !DILocation(line: 3013, column: 31, scope: !5708)
!5730 = !DILocation(line: 3015, column: 9, scope: !5708)
!5731 = !DILocation(line: 3015, column: 15, scope: !5708)
!5732 = !DILocation(line: 3015, column: 7, scope: !5708)
!5733 = !DILocation(line: 3016, column: 11, scope: !5708)
!5734 = !DILocation(line: 3016, column: 17, scope: !5708)
!5735 = !DILocation(line: 3016, column: 9, scope: !5708)
!5736 = !DILocation(line: 3017, column: 11, scope: !5708)
!5737 = !DILocation(line: 3017, column: 17, scope: !5708)
!5738 = !DILocation(line: 3017, column: 9, scope: !5708)
!5739 = !DILocation(line: 3019, column: 5, scope: !5708)
!5740 = !DILocation(line: 3019, column: 10, scope: !5708)
!5741 = !DILocation(line: 3019, column: 15, scope: !5708)
!5742 = !DILocation(line: 3021, column: 5, scope: !5708)
!5743 = !DILocation(line: 3021, column: 10, scope: !5708)
!5744 = !DILocation(line: 3021, column: 14, scope: !5708)
!5745 = !DILocation(line: 3022, column: 18, scope: !5708)
!5746 = !DILocation(line: 3022, column: 24, scope: !5708)
!5747 = !DILocation(line: 3022, column: 5, scope: !5708)
!5748 = !DILocation(line: 3022, column: 10, scope: !5708)
!5749 = !DILocation(line: 3022, column: 16, scope: !5708)
!5750 = !{!2903, !828, i64 20}
!5751 = !DILocation(line: 3024, column: 9, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 3024, column: 9)
!5753 = !DILocation(line: 3024, column: 15, scope: !5752)
!5754 = !DILocation(line: 3024, column: 9, scope: !5708)
!5755 = !DILocation(line: 3026, column: 22, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 3024, column: 23)
!5757 = !DILocation(line: 3026, column: 9, scope: !5756)
!5758 = !DILocation(line: 3026, column: 14, scope: !5756)
!5759 = !DILocation(line: 3026, column: 20, scope: !5756)
!5760 = !DILocation(line: 3028, column: 37, scope: !5756)
!5761 = !DILocation(line: 3028, column: 40, scope: !5756)
!5762 = !DILocation(line: 3028, column: 46, scope: !5756)
!5763 = !DILocation(line: 3028, column: 53, scope: !5756)
!5764 = !DILocation(line: 3028, column: 17, scope: !5756)
!5765 = !DILocation(line: 3028, column: 15, scope: !5756)
!5766 = !DILocation(line: 3029, column: 13, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3029, column: 13)
!5768 = !DILocation(line: 3029, column: 19, scope: !5767)
!5769 = !DILocation(line: 3029, column: 13, scope: !5756)
!5770 = !DILocation(line: 3030, column: 35, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 3029, column: 28)
!5772 = !DILocation(line: 3030, column: 13, scope: !5771)
!5773 = !DILocation(line: 3032, column: 13, scope: !5771)
!5774 = !DILocation(line: 3032, column: 18, scope: !5771)
!5775 = !DILocation(line: 3032, column: 24, scope: !5771)
!5776 = !DILocation(line: 3033, column: 26, scope: !5771)
!5777 = !DILocation(line: 3033, column: 40, scope: !5771)
!5778 = !DILocation(line: 3033, column: 43, scope: !5771)
!5779 = !DILocation(line: 3033, column: 51, scope: !5771)
!5780 = !DILocation(line: 3033, column: 54, scope: !5771)
!5781 = !DILocation(line: 3033, column: 37, scope: !5771)
!5782 = !DILocation(line: 3033, column: 13, scope: !5771)
!5783 = !DILocation(line: 3033, column: 18, scope: !5771)
!5784 = !DILocation(line: 3033, column: 24, scope: !5771)
!5785 = !DILocation(line: 3035, column: 13, scope: !5771)
!5786 = !DILocation(line: 3035, column: 18, scope: !5771)
!5787 = !DILocation(line: 3035, column: 26, scope: !5771)
!5788 = !DILocation(line: 3036, column: 13, scope: !5771)
!5789 = !DILocation(line: 3039, column: 39, scope: !5756)
!5790 = !DILocation(line: 3039, column: 42, scope: !5756)
!5791 = !DILocation(line: 3039, column: 48, scope: !5756)
!5792 = !DILocation(line: 3039, column: 55, scope: !5756)
!5793 = !DILocation(line: 3039, column: 20, scope: !5756)
!5794 = !DILocation(line: 3039, column: 18, scope: !5756)
!5795 = !DILocation(line: 3040, column: 13, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3040, column: 13)
!5797 = !DILocation(line: 3040, column: 22, scope: !5796)
!5798 = !DILocation(line: 3040, column: 13, scope: !5756)
!5799 = !DILocation(line: 3041, column: 31, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 3040, column: 31)
!5801 = !DILocation(line: 3041, column: 34, scope: !5800)
!5802 = !DILocation(line: 3041, column: 13, scope: !5800)
!5803 = !DILocation(line: 3042, column: 35, scope: !5800)
!5804 = !DILocation(line: 3042, column: 13, scope: !5800)
!5805 = !DILocation(line: 3044, column: 13, scope: !5800)
!5806 = !DILocation(line: 3044, column: 18, scope: !5800)
!5807 = !DILocation(line: 3044, column: 24, scope: !5800)
!5808 = !DILocation(line: 3045, column: 26, scope: !5800)
!5809 = !DILocation(line: 3045, column: 40, scope: !5800)
!5810 = !DILocation(line: 3045, column: 43, scope: !5800)
!5811 = !DILocation(line: 3045, column: 51, scope: !5800)
!5812 = !DILocation(line: 3045, column: 54, scope: !5800)
!5813 = !DILocation(line: 3045, column: 37, scope: !5800)
!5814 = !DILocation(line: 3045, column: 13, scope: !5800)
!5815 = !DILocation(line: 3045, column: 18, scope: !5800)
!5816 = !DILocation(line: 3045, column: 24, scope: !5800)
!5817 = !DILocation(line: 3047, column: 13, scope: !5800)
!5818 = !DILocation(line: 3047, column: 18, scope: !5800)
!5819 = !DILocation(line: 3047, column: 26, scope: !5800)
!5820 = !DILocation(line: 3048, column: 13, scope: !5800)
!5821 = !DILocation(line: 3051, column: 16, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3051, column: 9)
!5823 = !DILocation(line: 3051, column: 14, scope: !5822)
!5824 = !DILocation(line: 3051, column: 21, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 3051, column: 9)
!5826 = !DILocation(line: 3051, column: 25, scope: !5825)
!5827 = !DILocation(line: 3051, column: 31, scope: !5825)
!5828 = !DILocation(line: 3051, column: 23, scope: !5825)
!5829 = !DILocation(line: 3051, column: 9, scope: !5822)
!5830 = !DILocation(line: 3052, column: 34, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 3051, column: 44)
!5832 = !DILocation(line: 3052, column: 43, scope: !5831)
!5833 = !DILocation(line: 3052, column: 46, scope: !5831)
!5834 = !DILocation(line: 3052, column: 13, scope: !5831)
!5835 = !DILocation(line: 3052, column: 19, scope: !5831)
!5836 = !DILocation(line: 3052, column: 22, scope: !5831)
!5837 = !DILocation(line: 3052, column: 31, scope: !5831)
!5838 = !DILocation(line: 3053, column: 32, scope: !5831)
!5839 = !DILocation(line: 3053, column: 38, scope: !5831)
!5840 = !DILocation(line: 3053, column: 44, scope: !5831)
!5841 = !DILocation(line: 3053, column: 47, scope: !5831)
!5842 = !DILocation(line: 3053, column: 13, scope: !5831)
!5843 = !DILocation(line: 3053, column: 19, scope: !5831)
!5844 = !DILocation(line: 3053, column: 22, scope: !5831)
!5845 = !DILocation(line: 3053, column: 30, scope: !5831)
!5846 = !DILocation(line: 3055, column: 13, scope: !5831)
!5847 = !DILocation(line: 3058, column: 31, scope: !5831)
!5848 = !DILocation(line: 3058, column: 37, scope: !5831)
!5849 = !DILocation(line: 3058, column: 40, scope: !5831)
!5850 = !DILocation(line: 3058, column: 50, scope: !5831)
!5851 = !DILocation(line: 3058, column: 55, scope: !5831)
!5852 = !DILocation(line: 3058, column: 13, scope: !5831)
!5853 = !DILocation(line: 3059, column: 9, scope: !5831)
!5854 = !DILocation(line: 3051, column: 40, scope: !5825)
!5855 = !DILocation(line: 3051, column: 9, scope: !5825)
!5856 = distinct !{!5856, !5829, !5857}
!5857 = !DILocation(line: 3059, column: 9, scope: !5822)
!5858 = !DILocation(line: 3061, column: 22, scope: !5756)
!5859 = !DILocation(line: 3061, column: 9, scope: !5756)
!5860 = !DILocation(line: 3061, column: 14, scope: !5756)
!5861 = !DILocation(line: 3061, column: 20, scope: !5756)
!5862 = !DILocation(line: 3062, column: 23, scope: !5756)
!5863 = !DILocation(line: 3062, column: 29, scope: !5756)
!5864 = !DILocation(line: 3062, column: 9, scope: !5756)
!5865 = !DILocation(line: 3062, column: 14, scope: !5756)
!5866 = !DILocation(line: 3062, column: 21, scope: !5756)
!5867 = !{!2903, !828, i64 24}
!5868 = !DILocation(line: 3063, column: 5, scope: !5756)
!5869 = !DILocation(line: 3065, column: 27, scope: !5708)
!5870 = !DILocation(line: 3065, column: 5, scope: !5708)
!5871 = !DILocation(line: 3067, column: 9, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 3067, column: 9)
!5873 = !DILocation(line: 3067, column: 14, scope: !5872)
!5874 = !DILocation(line: 3067, column: 20, scope: !5872)
!5875 = !DILocation(line: 3067, column: 9, scope: !5708)
!5876 = !DILocation(line: 3068, column: 33, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 3067, column: 26)
!5878 = !DILocation(line: 3068, column: 36, scope: !5877)
!5879 = !DILocation(line: 3068, column: 9, scope: !5877)
!5880 = !DILocation(line: 3069, column: 5, scope: !5877)
!5881 = !DILocation(line: 3070, column: 1, scope: !5708)
!5882 = distinct !DISubprogram(name: "ngx_resolver_report_srv", scope: !3, file: !3, line: 4244, type: !5883, isLocal: true, isDefinition: true, scopeLine: 4245, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !5885)
!5883 = !DISubroutineType(types: !5884)
!5884 = !{null, !163, !157}
!5885 = !{!5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899}
!5886 = !DILocalVariable(name: "r", arg: 1, scope: !5882, file: !3, line: 4244, type: !163)
!5887 = !DILocalVariable(name: "ctx", arg: 2, scope: !5882, file: !3, line: 4244, type: !157)
!5888 = !DILocalVariable(name: "naddrs", scope: !5882, file: !3, line: 4246, type: !82)
!5889 = !DILocalVariable(name: "nsrvs", scope: !5882, file: !3, line: 4246, type: !82)
!5890 = !DILocalVariable(name: "nw", scope: !5882, file: !3, line: 4246, type: !82)
!5891 = !DILocalVariable(name: "i", scope: !5882, file: !3, line: 4246, type: !82)
!5892 = !DILocalVariable(name: "j", scope: !5882, file: !3, line: 4246, type: !82)
!5893 = !DILocalVariable(name: "k", scope: !5882, file: !3, line: 4246, type: !82)
!5894 = !DILocalVariable(name: "l", scope: !5882, file: !3, line: 4246, type: !82)
!5895 = !DILocalVariable(name: "m", scope: !5882, file: !3, line: 4246, type: !82)
!5896 = !DILocalVariable(name: "n", scope: !5882, file: !3, line: 4246, type: !82)
!5897 = !DILocalVariable(name: "w", scope: !5882, file: !3, line: 4246, type: !82)
!5898 = !DILocalVariable(name: "addrs", scope: !5882, file: !3, line: 4247, type: !424)
!5899 = !DILocalVariable(name: "srvs", scope: !5882, file: !3, line: 4248, type: !439)
!5900 = !DILocation(line: 4244, column: 41, scope: !5882)
!5901 = !DILocation(line: 4244, column: 64, scope: !5882)
!5902 = !DILocation(line: 4246, column: 5, scope: !5882)
!5903 = !DILocation(line: 4246, column: 31, scope: !5882)
!5904 = !DILocation(line: 4246, column: 39, scope: !5882)
!5905 = !DILocation(line: 4246, column: 46, scope: !5882)
!5906 = !DILocation(line: 4246, column: 50, scope: !5882)
!5907 = !DILocation(line: 4246, column: 53, scope: !5882)
!5908 = !DILocation(line: 4246, column: 56, scope: !5882)
!5909 = !DILocation(line: 4246, column: 59, scope: !5882)
!5910 = !DILocation(line: 4246, column: 62, scope: !5882)
!5911 = !DILocation(line: 4246, column: 65, scope: !5882)
!5912 = !DILocation(line: 4246, column: 68, scope: !5882)
!5913 = !DILocation(line: 4247, column: 5, scope: !5882)
!5914 = !DILocation(line: 4247, column: 31, scope: !5882)
!5915 = !DILocation(line: 4248, column: 5, scope: !5882)
!5916 = !DILocation(line: 4248, column: 31, scope: !5882)
!5917 = !DILocation(line: 4250, column: 12, scope: !5882)
!5918 = !DILocation(line: 4252, column: 12, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4252, column: 5)
!5920 = !DILocation(line: 4252, column: 10, scope: !5919)
!5921 = !DILocation(line: 4252, column: 17, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 4252, column: 5)
!5923 = !DILocation(line: 4252, column: 21, scope: !5922)
!5924 = !DILocation(line: 4252, column: 26, scope: !5922)
!5925 = !DILocation(line: 4252, column: 19, scope: !5922)
!5926 = !DILocation(line: 4252, column: 5, scope: !5919)
!5927 = !DILocation(line: 4253, column: 19, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 4252, column: 38)
!5929 = !DILocation(line: 4253, column: 24, scope: !5928)
!5930 = !DILocation(line: 4253, column: 29, scope: !5928)
!5931 = !DILocation(line: 4253, column: 32, scope: !5928)
!5932 = !DILocation(line: 4253, column: 16, scope: !5928)
!5933 = !DILocation(line: 4254, column: 5, scope: !5928)
!5934 = !DILocation(line: 4252, column: 34, scope: !5922)
!5935 = !DILocation(line: 4252, column: 5, scope: !5922)
!5936 = distinct !{!5936, !5926, !5937}
!5937 = !DILocation(line: 4254, column: 5, scope: !5919)
!5938 = !DILocation(line: 4256, column: 9, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4256, column: 9)
!5940 = !DILocation(line: 4256, column: 16, scope: !5939)
!5941 = !DILocation(line: 4256, column: 9, scope: !5882)
!5942 = !DILocation(line: 4257, column: 9, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 4256, column: 22)
!5944 = !DILocation(line: 4257, column: 14, scope: !5943)
!5945 = !DILocation(line: 4257, column: 20, scope: !5943)
!5946 = !DILocation(line: 4258, column: 22, scope: !5943)
!5947 = !DILocation(line: 4258, column: 36, scope: !5943)
!5948 = !DILocation(line: 4258, column: 39, scope: !5943)
!5949 = !DILocation(line: 4258, column: 47, scope: !5943)
!5950 = !DILocation(line: 4258, column: 50, scope: !5943)
!5951 = !DILocation(line: 4258, column: 33, scope: !5943)
!5952 = !DILocation(line: 4258, column: 9, scope: !5943)
!5953 = !DILocation(line: 4258, column: 14, scope: !5943)
!5954 = !DILocation(line: 4258, column: 20, scope: !5943)
!5955 = !DILocation(line: 4260, column: 9, scope: !5943)
!5956 = !DILocation(line: 4260, column: 14, scope: !5943)
!5957 = !DILocation(line: 4260, column: 22, scope: !5943)
!5958 = !DILocation(line: 4261, column: 9, scope: !5943)
!5959 = !DILocation(line: 4264, column: 33, scope: !5882)
!5960 = !DILocation(line: 4264, column: 36, scope: !5882)
!5961 = !DILocation(line: 4264, column: 43, scope: !5882)
!5962 = !DILocation(line: 4264, column: 13, scope: !5882)
!5963 = !DILocation(line: 4264, column: 11, scope: !5882)
!5964 = !DILocation(line: 4265, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4265, column: 9)
!5966 = !DILocation(line: 4265, column: 15, scope: !5965)
!5967 = !DILocation(line: 4265, column: 9, scope: !5882)
!5968 = !DILocation(line: 4266, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 4265, column: 24)
!5970 = !DILocation(line: 4266, column: 14, scope: !5969)
!5971 = !DILocation(line: 4266, column: 20, scope: !5969)
!5972 = !DILocation(line: 4267, column: 22, scope: !5969)
!5973 = !DILocation(line: 4267, column: 36, scope: !5969)
!5974 = !DILocation(line: 4267, column: 39, scope: !5969)
!5975 = !DILocation(line: 4267, column: 47, scope: !5969)
!5976 = !DILocation(line: 4267, column: 50, scope: !5969)
!5977 = !DILocation(line: 4267, column: 33, scope: !5969)
!5978 = !DILocation(line: 4267, column: 9, scope: !5969)
!5979 = !DILocation(line: 4267, column: 14, scope: !5969)
!5980 = !DILocation(line: 4267, column: 20, scope: !5969)
!5981 = !DILocation(line: 4269, column: 9, scope: !5969)
!5982 = !DILocation(line: 4269, column: 14, scope: !5969)
!5983 = !DILocation(line: 4269, column: 22, scope: !5969)
!5984 = !DILocation(line: 4270, column: 9, scope: !5969)
!5985 = !DILocation(line: 4273, column: 12, scope: !5882)
!5986 = !DILocation(line: 4273, column: 17, scope: !5882)
!5987 = !DILocation(line: 4273, column: 10, scope: !5882)
!5988 = !DILocation(line: 4274, column: 13, scope: !5882)
!5989 = !DILocation(line: 4274, column: 18, scope: !5882)
!5990 = !DILocation(line: 4274, column: 11, scope: !5882)
!5991 = !DILocation(line: 4276, column: 7, scope: !5882)
!5992 = !DILocation(line: 4277, column: 7, scope: !5882)
!5993 = !DILocation(line: 4279, column: 5, scope: !5882)
!5994 = distinct !{!5994, !5993, !5995}
!5995 = !DILocation(line: 4324, column: 28, scope: !5882)
!5996 = !DILocation(line: 4280, column: 12, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 4279, column: 8)
!5998 = !DILocation(line: 4282, column: 18, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4282, column: 9)
!6000 = !DILocation(line: 4282, column: 16, scope: !5999)
!6001 = !DILocation(line: 4282, column: 14, scope: !5999)
!6002 = !DILocation(line: 4282, column: 21, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 4282, column: 9)
!6004 = !DILocation(line: 4282, column: 25, scope: !6003)
!6005 = !DILocation(line: 4282, column: 23, scope: !6003)
!6006 = !DILocation(line: 4282, column: 9, scope: !5999)
!6007 = !DILocation(line: 4283, column: 17, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 4283, column: 17)
!6009 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4282, column: 37)
!6010 = !DILocation(line: 4283, column: 22, scope: !6008)
!6011 = !DILocation(line: 4283, column: 25, scope: !6008)
!6012 = !DILocation(line: 4283, column: 37, scope: !6008)
!6013 = !DILocation(line: 4283, column: 42, scope: !6008)
!6014 = !DILocation(line: 4283, column: 45, scope: !6008)
!6015 = !DILocation(line: 4283, column: 34, scope: !6008)
!6016 = !DILocation(line: 4283, column: 17, scope: !6009)
!6017 = !DILocation(line: 4284, column: 17, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 4283, column: 55)
!6019 = !DILocation(line: 4287, column: 19, scope: !6009)
!6020 = !DILocation(line: 4287, column: 24, scope: !6009)
!6021 = !DILocation(line: 4287, column: 27, scope: !6009)
!6022 = !DILocation(line: 4287, column: 36, scope: !6009)
!6023 = !DILocation(line: 4287, column: 41, scope: !6009)
!6024 = !DILocation(line: 4287, column: 44, scope: !6009)
!6025 = !DILocation(line: 4287, column: 34, scope: !6009)
!6026 = !DILocation(line: 4287, column: 16, scope: !6009)
!6027 = !DILocation(line: 4288, column: 9, scope: !6009)
!6028 = !DILocation(line: 4282, column: 33, scope: !6003)
!6029 = !DILocation(line: 4282, column: 9, scope: !6003)
!6030 = distinct !{!6030, !6006, !6031}
!6031 = !DILocation(line: 4288, column: 9, scope: !5999)
!6032 = !DILocation(line: 4290, column: 13, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4290, column: 13)
!6034 = !DILocation(line: 4290, column: 16, scope: !6033)
!6035 = !DILocation(line: 4290, column: 13, scope: !5997)
!6036 = !DILocation(line: 4291, column: 13, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 4290, column: 22)
!6038 = !DILocation(line: 4294, column: 13, scope: !5997)
!6039 = !DILocation(line: 4294, column: 28, scope: !5997)
!6040 = !DILocation(line: 4294, column: 26, scope: !5997)
!6041 = !DILocation(line: 4294, column: 11, scope: !5997)
!6042 = !DILocation(line: 4296, column: 18, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4296, column: 9)
!6044 = !DILocation(line: 4296, column: 16, scope: !6043)
!6045 = !DILocation(line: 4296, column: 14, scope: !6043)
!6046 = !DILocation(line: 4296, column: 21, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 4296, column: 9)
!6048 = !DILocation(line: 4296, column: 25, scope: !6047)
!6049 = !DILocation(line: 4296, column: 23, scope: !6047)
!6050 = !DILocation(line: 4296, column: 9, scope: !6043)
!6051 = !DILocation(line: 4297, column: 17, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 4297, column: 17)
!6053 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4296, column: 33)
!6054 = !DILocation(line: 4297, column: 21, scope: !6052)
!6055 = !DILocation(line: 4297, column: 26, scope: !6052)
!6056 = !DILocation(line: 4297, column: 29, scope: !6052)
!6057 = !DILocation(line: 4297, column: 38, scope: !6052)
!6058 = !DILocation(line: 4297, column: 43, scope: !6052)
!6059 = !DILocation(line: 4297, column: 46, scope: !6052)
!6060 = !DILocation(line: 4297, column: 36, scope: !6052)
!6061 = !DILocation(line: 4297, column: 19, scope: !6052)
!6062 = !DILocation(line: 4297, column: 17, scope: !6053)
!6063 = !DILocation(line: 4298, column: 17, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4297, column: 54)
!6065 = !DILocation(line: 4301, column: 18, scope: !6053)
!6066 = !DILocation(line: 4301, column: 23, scope: !6053)
!6067 = !DILocation(line: 4301, column: 26, scope: !6053)
!6068 = !DILocation(line: 4301, column: 35, scope: !6053)
!6069 = !DILocation(line: 4301, column: 40, scope: !6053)
!6070 = !DILocation(line: 4301, column: 43, scope: !6053)
!6071 = !DILocation(line: 4301, column: 33, scope: !6053)
!6072 = !DILocation(line: 4301, column: 15, scope: !6053)
!6073 = !DILocation(line: 4302, column: 9, scope: !6053)
!6074 = !DILocation(line: 4296, column: 29, scope: !6047)
!6075 = !DILocation(line: 4296, column: 9, scope: !6047)
!6076 = distinct !{!6076, !6050, !6077}
!6077 = !DILocation(line: 4302, column: 9, scope: !6043)
!6078 = !DILocation(line: 4304, column: 18, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 4304, column: 9)
!6080 = !DILocation(line: 4304, column: 16, scope: !6079)
!6081 = !DILocation(line: 4304, column: 14, scope: !6079)
!6082 = !DILocation(line: 4304, column: 21, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 4304, column: 9)
!6084 = !DILocation(line: 4304, column: 25, scope: !6083)
!6085 = !DILocation(line: 4304, column: 23, scope: !6083)
!6086 = !DILocation(line: 4304, column: 9, scope: !6079)
!6087 = !DILocation(line: 4306, column: 20, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 4306, column: 13)
!6089 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 4304, column: 33)
!6090 = !DILocation(line: 4306, column: 18, scope: !6088)
!6091 = !DILocation(line: 4306, column: 25, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 4306, column: 13)
!6093 = !DILocation(line: 4306, column: 29, scope: !6092)
!6094 = !DILocation(line: 4306, column: 34, scope: !6092)
!6095 = !DILocation(line: 4306, column: 37, scope: !6092)
!6096 = !DILocation(line: 4306, column: 27, scope: !6092)
!6097 = !DILocation(line: 4306, column: 13, scope: !6088)
!6098 = !DILocation(line: 4307, column: 36, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 4306, column: 50)
!6100 = !DILocation(line: 4307, column: 41, scope: !6099)
!6101 = !DILocation(line: 4307, column: 44, scope: !6099)
!6102 = !DILocation(line: 4307, column: 50, scope: !6099)
!6103 = !DILocation(line: 4307, column: 53, scope: !6099)
!6104 = !DILocation(line: 4307, column: 17, scope: !6099)
!6105 = !DILocation(line: 4307, column: 23, scope: !6099)
!6106 = !DILocation(line: 4307, column: 26, scope: !6099)
!6107 = !DILocation(line: 4307, column: 34, scope: !6099)
!6108 = !DILocation(line: 4308, column: 37, scope: !6099)
!6109 = !DILocation(line: 4308, column: 42, scope: !6099)
!6110 = !DILocation(line: 4308, column: 45, scope: !6099)
!6111 = !DILocation(line: 4308, column: 51, scope: !6099)
!6112 = !DILocation(line: 4308, column: 54, scope: !6099)
!6113 = !DILocation(line: 4308, column: 17, scope: !6099)
!6114 = !DILocation(line: 4308, column: 23, scope: !6099)
!6115 = !DILocation(line: 4308, column: 26, scope: !6099)
!6116 = !DILocation(line: 4308, column: 35, scope: !6099)
!6117 = !DILocation(line: 4309, column: 17, scope: !6099)
!6118 = !DILocation(line: 4309, column: 23, scope: !6099)
!6119 = !DILocation(line: 4309, column: 26, scope: !6099)
!6120 = !DILocation(line: 4309, column: 33, scope: !6099)
!6121 = !DILocation(line: 4309, column: 38, scope: !6099)
!6122 = !DILocation(line: 4309, column: 41, scope: !6099)
!6123 = !DILocation(line: 4310, column: 37, scope: !6099)
!6124 = !DILocation(line: 4310, column: 42, scope: !6099)
!6125 = !DILocation(line: 4310, column: 45, scope: !6099)
!6126 = !DILocation(line: 4310, column: 17, scope: !6099)
!6127 = !DILocation(line: 4310, column: 23, scope: !6099)
!6128 = !DILocation(line: 4310, column: 26, scope: !6099)
!6129 = !DILocation(line: 4310, column: 35, scope: !6099)
!6130 = !{!1681, !1070, i64 16}
!6131 = !DILocation(line: 4311, column: 35, scope: !6099)
!6132 = !DILocation(line: 4311, column: 40, scope: !6099)
!6133 = !DILocation(line: 4311, column: 43, scope: !6099)
!6134 = !DILocation(line: 4311, column: 17, scope: !6099)
!6135 = !DILocation(line: 4311, column: 23, scope: !6099)
!6136 = !DILocation(line: 4311, column: 26, scope: !6099)
!6137 = !DILocation(line: 4311, column: 33, scope: !6099)
!6138 = !{!1681, !1070, i64 18}
!6139 = !DILocation(line: 4312, column: 18, scope: !6099)
!6140 = !DILocation(line: 4313, column: 13, scope: !6099)
!6141 = !DILocation(line: 4306, column: 46, scope: !6092)
!6142 = !DILocation(line: 4306, column: 13, scope: !6092)
!6143 = distinct !{!6143, !6097, !6144}
!6144 = !DILocation(line: 4313, column: 13, scope: !6088)
!6145 = !DILocation(line: 4315, column: 17, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 4315, column: 17)
!6147 = !DILocation(line: 4315, column: 24, scope: !6146)
!6148 = !DILocation(line: 4315, column: 21, scope: !6146)
!6149 = !DILocation(line: 4315, column: 17, scope: !6089)
!6150 = !DILocation(line: 4316, column: 21, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 4315, column: 27)
!6152 = !DILocation(line: 4316, column: 19, scope: !6151)
!6153 = !DILocation(line: 4317, column: 13, scope: !6151)
!6154 = !DILocation(line: 4318, column: 9, scope: !6089)
!6155 = !DILocation(line: 4304, column: 29, scope: !6083)
!6156 = !DILocation(line: 4304, column: 9, scope: !6083)
!6157 = distinct !{!6157, !6086, !6158}
!6158 = !DILocation(line: 4318, column: 9, scope: !6079)
!6159 = !DILocation(line: 4322, column: 13, scope: !5997)
!6160 = !DILocation(line: 4322, column: 11, scope: !5997)
!6161 = !DILocation(line: 4324, column: 5, scope: !5997)
!6162 = !DILocation(line: 4324, column: 14, scope: !5882)
!6163 = !DILocation(line: 4324, column: 18, scope: !5882)
!6164 = !DILocation(line: 4324, column: 23, scope: !5882)
!6165 = !DILocation(line: 4324, column: 16, scope: !5882)
!6166 = !DILocation(line: 4326, column: 5, scope: !5882)
!6167 = !DILocation(line: 4326, column: 10, scope: !5882)
!6168 = !DILocation(line: 4326, column: 16, scope: !5882)
!6169 = !DILocation(line: 4327, column: 18, scope: !5882)
!6170 = !DILocation(line: 4327, column: 5, scope: !5882)
!6171 = !DILocation(line: 4327, column: 10, scope: !5882)
!6172 = !DILocation(line: 4327, column: 16, scope: !5882)
!6173 = !DILocation(line: 4328, column: 19, scope: !5882)
!6174 = !DILocation(line: 4328, column: 5, scope: !5882)
!6175 = !DILocation(line: 4328, column: 10, scope: !5882)
!6176 = !DILocation(line: 4328, column: 17, scope: !5882)
!6177 = !DILocation(line: 4330, column: 5, scope: !5882)
!6178 = !DILocation(line: 4330, column: 10, scope: !5882)
!6179 = !DILocation(line: 4330, column: 18, scope: !5882)
!6180 = !DILocation(line: 4332, column: 23, scope: !5882)
!6181 = !DILocation(line: 4332, column: 26, scope: !5882)
!6182 = !DILocation(line: 4332, column: 5, scope: !5882)
!6183 = !DILocation(line: 4333, column: 1, scope: !5882)
!6184 = distinct !DISubprogram(name: "ngx_resolver_log_error", scope: !3, file: !3, line: 4360, type: !232, isLocal: true, isDefinition: true, scopeLine: 4361, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6185)
!6185 = !{!6186, !6187, !6188, !6189, !6190}
!6186 = !DILocalVariable(name: "log", arg: 1, scope: !6184, file: !3, line: 4360, type: !203)
!6187 = !DILocalVariable(name: "buf", arg: 2, scope: !6184, file: !3, line: 4360, type: !110)
!6188 = !DILocalVariable(name: "len", arg: 3, scope: !6184, file: !3, line: 4360, type: !134)
!6189 = !DILocalVariable(name: "p", scope: !6184, file: !3, line: 4362, type: !110)
!6190 = !DILocalVariable(name: "rec", scope: !6184, file: !3, line: 4363, type: !807)
!6191 = !DILocation(line: 4360, column: 35, scope: !6184)
!6192 = !DILocation(line: 4360, column: 48, scope: !6184)
!6193 = !DILocation(line: 4360, column: 60, scope: !6184)
!6194 = !DILocation(line: 4362, column: 5, scope: !6184)
!6195 = !DILocation(line: 4362, column: 33, scope: !6184)
!6196 = !DILocation(line: 4363, column: 5, scope: !6184)
!6197 = !DILocation(line: 4363, column: 33, scope: !6184)
!6198 = !DILocation(line: 4365, column: 9, scope: !6184)
!6199 = !DILocation(line: 4365, column: 7, scope: !6184)
!6200 = !DILocation(line: 4367, column: 9, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 4367, column: 9)
!6202 = !DILocation(line: 4367, column: 14, scope: !6201)
!6203 = !{!1125, !821, i64 32}
!6204 = !DILocation(line: 4367, column: 9, scope: !6184)
!6205 = !DILocation(line: 4368, column: 26, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 4367, column: 22)
!6207 = !DILocation(line: 4368, column: 31, scope: !6206)
!6208 = !DILocation(line: 4368, column: 49, scope: !6206)
!6209 = !DILocation(line: 4368, column: 54, scope: !6206)
!6210 = !DILocation(line: 4368, column: 13, scope: !6206)
!6211 = !DILocation(line: 4368, column: 11, scope: !6206)
!6212 = !DILocation(line: 4369, column: 16, scope: !6206)
!6213 = !DILocation(line: 4369, column: 20, scope: !6206)
!6214 = !DILocation(line: 4369, column: 18, scope: !6206)
!6215 = !DILocation(line: 4369, column: 13, scope: !6206)
!6216 = !DILocation(line: 4370, column: 5, scope: !6206)
!6217 = !DILocation(line: 4372, column: 11, scope: !6184)
!6218 = !DILocation(line: 4372, column: 16, scope: !6184)
!6219 = !{!1125, !821, i64 20}
!6220 = !DILocation(line: 4372, column: 9, scope: !6184)
!6221 = !DILocation(line: 4374, column: 9, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 4374, column: 9)
!6223 = !DILocation(line: 4374, column: 9, scope: !6184)
!6224 = !DILocation(line: 4375, column: 26, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 4374, column: 14)
!6226 = !DILocation(line: 4375, column: 29, scope: !6225)
!6227 = !DILocation(line: 4375, column: 53, scope: !6225)
!6228 = !DILocation(line: 4375, column: 58, scope: !6225)
!6229 = !DILocation(line: 4375, column: 13, scope: !6225)
!6230 = !DILocation(line: 4375, column: 11, scope: !6225)
!6231 = !DILocation(line: 4376, column: 5, scope: !6225)
!6232 = !DILocation(line: 4378, column: 12, scope: !6184)
!6233 = !DILocation(line: 4379, column: 1, scope: !6184)
!6234 = !DILocation(line: 4378, column: 5, scope: !6184)
!6235 = distinct !DISubprogram(name: "ngx_resolver_send_tcp_query", scope: !3, file: !3, line: 1349, type: !6236, isLocal: true, isDefinition: true, scopeLine: 1351, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6238)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!8, !163, !807, !110, !76}
!6238 = !{!6239, !6240, !6241, !6242, !6243, !6244}
!6239 = !DILocalVariable(name: "r", arg: 1, scope: !6235, file: !3, line: 1349, type: !163)
!6240 = !DILocalVariable(name: "rec", arg: 2, scope: !6235, file: !3, line: 1349, type: !807)
!6241 = !DILocalVariable(name: "query", arg: 3, scope: !6235, file: !3, line: 1350, type: !110)
!6242 = !DILocalVariable(name: "qlen", arg: 4, scope: !6235, file: !3, line: 1350, type: !76)
!6243 = !DILocalVariable(name: "b", scope: !6235, file: !3, line: 1352, type: !280)
!6244 = !DILocalVariable(name: "rc", scope: !6235, file: !3, line: 1353, type: !8)
!6245 = !DILocation(line: 1349, column: 45, scope: !6235)
!6246 = !DILocation(line: 1349, column: 75, scope: !6235)
!6247 = !DILocation(line: 1350, column: 13, scope: !6235)
!6248 = !{!1070, !1070, i64 0}
!6249 = !DILocation(line: 1350, column: 28, scope: !6235)
!6250 = !DILocation(line: 1352, column: 5, scope: !6235)
!6251 = !DILocation(line: 1352, column: 17, scope: !6235)
!6252 = !DILocation(line: 1353, column: 5, scope: !6235)
!6253 = !DILocation(line: 1353, column: 17, scope: !6235)
!6254 = !DILocation(line: 1355, column: 8, scope: !6235)
!6255 = !DILocation(line: 1357, column: 9, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1357, column: 9)
!6257 = !DILocation(line: 1357, column: 14, scope: !6256)
!6258 = !DILocation(line: 1357, column: 18, scope: !6256)
!6259 = !DILocation(line: 1357, column: 9, scope: !6235)
!6260 = !DILocation(line: 1358, column: 13, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1357, column: 27)
!6262 = !DILocation(line: 1358, column: 18, scope: !6261)
!6263 = !DILocation(line: 1358, column: 11, scope: !6261)
!6264 = !DILocation(line: 1360, column: 13, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1360, column: 13)
!6266 = !DILocation(line: 1360, column: 15, scope: !6265)
!6267 = !DILocation(line: 1360, column: 13, scope: !6261)
!6268 = !DILocation(line: 1361, column: 37, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1360, column: 24)
!6270 = !DILocation(line: 1361, column: 17, scope: !6269)
!6271 = !DILocation(line: 1361, column: 15, scope: !6269)
!6272 = !DILocation(line: 1362, column: 17, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6269, file: !3, line: 1362, column: 17)
!6274 = !DILocation(line: 1362, column: 19, scope: !6273)
!6275 = !DILocation(line: 1362, column: 17, scope: !6269)
!6276 = !DILocation(line: 1363, column: 17, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6273, file: !3, line: 1362, column: 28)
!6278 = !DILocation(line: 1366, column: 43, scope: !6269)
!6279 = !DILocation(line: 1366, column: 24, scope: !6269)
!6280 = !DILocation(line: 1366, column: 13, scope: !6269)
!6281 = !DILocation(line: 1366, column: 16, scope: !6269)
!6282 = !DILocation(line: 1366, column: 22, scope: !6269)
!6283 = !DILocation(line: 1367, column: 17, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6269, file: !3, line: 1367, column: 17)
!6285 = !DILocation(line: 1367, column: 20, scope: !6284)
!6286 = !DILocation(line: 1367, column: 26, scope: !6284)
!6287 = !DILocation(line: 1367, column: 17, scope: !6269)
!6288 = !DILocation(line: 1368, column: 35, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1367, column: 35)
!6290 = !DILocation(line: 1368, column: 38, scope: !6289)
!6291 = !DILocation(line: 1368, column: 17, scope: !6289)
!6292 = !DILocation(line: 1369, column: 17, scope: !6289)
!6293 = !DILocation(line: 1372, column: 22, scope: !6269)
!6294 = !DILocation(line: 1372, column: 25, scope: !6269)
!6295 = !DILocation(line: 1372, column: 31, scope: !6269)
!6296 = !DILocation(line: 1372, column: 13, scope: !6269)
!6297 = !DILocation(line: 1372, column: 16, scope: !6269)
!6298 = !DILocation(line: 1372, column: 20, scope: !6269)
!6299 = !{!1269, !821, i64 20}
!6300 = !DILocation(line: 1374, column: 29, scope: !6269)
!6301 = !DILocation(line: 1374, column: 13, scope: !6269)
!6302 = !DILocation(line: 1374, column: 18, scope: !6269)
!6303 = !DILocation(line: 1374, column: 27, scope: !6269)
!6304 = !DILocation(line: 1375, column: 9, scope: !6269)
!6305 = !DILocation(line: 1377, column: 18, scope: !6261)
!6306 = !DILocation(line: 1377, column: 21, scope: !6261)
!6307 = !DILocation(line: 1377, column: 9, scope: !6261)
!6308 = !DILocation(line: 1377, column: 12, scope: !6261)
!6309 = !DILocation(line: 1377, column: 16, scope: !6261)
!6310 = !{!1269, !821, i64 0}
!6311 = !DILocation(line: 1378, column: 19, scope: !6261)
!6312 = !DILocation(line: 1378, column: 22, scope: !6261)
!6313 = !DILocation(line: 1378, column: 9, scope: !6261)
!6314 = !DILocation(line: 1378, column: 12, scope: !6261)
!6315 = !DILocation(line: 1378, column: 17, scope: !6261)
!6316 = !{!1269, !821, i64 4}
!6317 = !DILocation(line: 1380, column: 13, scope: !6261)
!6318 = !DILocation(line: 1380, column: 18, scope: !6261)
!6319 = !DILocation(line: 1380, column: 11, scope: !6261)
!6320 = !DILocation(line: 1382, column: 13, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1382, column: 13)
!6322 = !DILocation(line: 1382, column: 15, scope: !6321)
!6323 = !DILocation(line: 1382, column: 13, scope: !6261)
!6324 = !DILocation(line: 1383, column: 37, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1382, column: 24)
!6326 = !DILocation(line: 1383, column: 17, scope: !6325)
!6327 = !DILocation(line: 1383, column: 15, scope: !6325)
!6328 = !DILocation(line: 1384, column: 17, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 1384, column: 17)
!6330 = !DILocation(line: 1384, column: 19, scope: !6329)
!6331 = !DILocation(line: 1384, column: 17, scope: !6325)
!6332 = !DILocation(line: 1385, column: 17, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 1384, column: 28)
!6334 = !DILocation(line: 1388, column: 43, scope: !6325)
!6335 = !DILocation(line: 1388, column: 24, scope: !6325)
!6336 = !DILocation(line: 1388, column: 13, scope: !6325)
!6337 = !DILocation(line: 1388, column: 16, scope: !6325)
!6338 = !DILocation(line: 1388, column: 22, scope: !6325)
!6339 = !DILocation(line: 1389, column: 17, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 1389, column: 17)
!6341 = !DILocation(line: 1389, column: 20, scope: !6340)
!6342 = !DILocation(line: 1389, column: 26, scope: !6340)
!6343 = !DILocation(line: 1389, column: 17, scope: !6325)
!6344 = !DILocation(line: 1390, column: 35, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1389, column: 35)
!6346 = !DILocation(line: 1390, column: 38, scope: !6345)
!6347 = !DILocation(line: 1390, column: 17, scope: !6345)
!6348 = !DILocation(line: 1391, column: 17, scope: !6345)
!6349 = !DILocation(line: 1394, column: 22, scope: !6325)
!6350 = !DILocation(line: 1394, column: 25, scope: !6325)
!6351 = !DILocation(line: 1394, column: 31, scope: !6325)
!6352 = !DILocation(line: 1394, column: 13, scope: !6325)
!6353 = !DILocation(line: 1394, column: 16, scope: !6325)
!6354 = !DILocation(line: 1394, column: 20, scope: !6325)
!6355 = !DILocation(line: 1396, column: 30, scope: !6325)
!6356 = !DILocation(line: 1396, column: 13, scope: !6325)
!6357 = !DILocation(line: 1396, column: 18, scope: !6325)
!6358 = !DILocation(line: 1396, column: 28, scope: !6325)
!6359 = !DILocation(line: 1397, column: 9, scope: !6325)
!6360 = !DILocation(line: 1399, column: 18, scope: !6261)
!6361 = !DILocation(line: 1399, column: 21, scope: !6261)
!6362 = !DILocation(line: 1399, column: 9, scope: !6261)
!6363 = !DILocation(line: 1399, column: 12, scope: !6261)
!6364 = !DILocation(line: 1399, column: 16, scope: !6261)
!6365 = !DILocation(line: 1400, column: 19, scope: !6261)
!6366 = !DILocation(line: 1400, column: 22, scope: !6261)
!6367 = !DILocation(line: 1400, column: 9, scope: !6261)
!6368 = !DILocation(line: 1400, column: 12, scope: !6261)
!6369 = !DILocation(line: 1400, column: 17, scope: !6261)
!6370 = !DILocation(line: 1402, column: 30, scope: !6261)
!6371 = !DILocation(line: 1402, column: 14, scope: !6261)
!6372 = !DILocation(line: 1402, column: 12, scope: !6261)
!6373 = !DILocation(line: 1403, column: 13, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1403, column: 13)
!6375 = !DILocation(line: 1403, column: 16, scope: !6374)
!6376 = !DILocation(line: 1403, column: 13, scope: !6261)
!6377 = !DILocation(line: 1404, column: 13, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 1403, column: 30)
!6379 = !DILocation(line: 1407, column: 26, scope: !6261)
!6380 = !DILocation(line: 1407, column: 9, scope: !6261)
!6381 = !DILocation(line: 1407, column: 14, scope: !6261)
!6382 = !DILocation(line: 1407, column: 19, scope: !6261)
!6383 = !DILocation(line: 1407, column: 24, scope: !6261)
!6384 = !{!6385, !821, i64 0}
!6385 = !{!"ngx_connection_s", !821, i64 0, !821, i64 4, !821, i64 8, !828, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !821, i64 28, !821, i64 32, !828, i64 36, !821, i64 40, !821, i64 44, !828, i64 48, !821, i64 52, !828, i64 56, !998, i64 60, !998, i64 68, !1070, i64 76, !821, i64 80, !828, i64 84, !821, i64 88, !887, i64 92, !888, i64 100, !828, i64 104, !828, i64 108, !828, i64 109, !828, i64 109, !828, i64 109, !828, i64 109, !828, i64 109, !828, i64 109, !828, i64 110, !828, i64 110, !828, i64 110, !828, i64 110, !828, i64 110, !828, i64 110, !828, i64 111}
!6386 = !DILocation(line: 1408, column: 9, scope: !6261)
!6387 = !DILocation(line: 1408, column: 14, scope: !6261)
!6388 = !DILocation(line: 1408, column: 19, scope: !6261)
!6389 = !{!6385, !821, i64 8}
!6390 = !DILocation(line: 1408, column: 26, scope: !6261)
!6391 = !DILocation(line: 1408, column: 34, scope: !6261)
!6392 = !DILocation(line: 1409, column: 9, scope: !6261)
!6393 = !DILocation(line: 1409, column: 14, scope: !6261)
!6394 = !DILocation(line: 1409, column: 19, scope: !6261)
!6395 = !{!6385, !821, i64 4}
!6396 = !DILocation(line: 1409, column: 25, scope: !6261)
!6397 = !DILocation(line: 1409, column: 33, scope: !6261)
!6398 = !DILocation(line: 1410, column: 9, scope: !6261)
!6399 = !DILocation(line: 1410, column: 14, scope: !6261)
!6400 = !DILocation(line: 1410, column: 19, scope: !6261)
!6401 = !DILocation(line: 1410, column: 25, scope: !6261)
!6402 = !DILocation(line: 1410, column: 34, scope: !6261)
!6403 = !DILocation(line: 1412, column: 23, scope: !6261)
!6404 = !DILocation(line: 1412, column: 28, scope: !6261)
!6405 = !DILocation(line: 1412, column: 33, scope: !6261)
!6406 = !DILocation(line: 1412, column: 54, scope: !6261)
!6407 = !DILocation(line: 1412, column: 57, scope: !6261)
!6408 = !DILocation(line: 1412, column: 69, scope: !6261)
!6409 = !DILocation(line: 1412, column: 9, scope: !6261)
!6410 = !DILocation(line: 1413, column: 5, scope: !6261)
!6411 = !DILocation(line: 1415, column: 9, scope: !6235)
!6412 = !DILocation(line: 1415, column: 14, scope: !6235)
!6413 = !DILocation(line: 1415, column: 7, scope: !6235)
!6414 = !DILocation(line: 1417, column: 9, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1417, column: 9)
!6416 = !DILocation(line: 1417, column: 12, scope: !6415)
!6417 = !DILocation(line: 1417, column: 18, scope: !6415)
!6418 = !DILocation(line: 1417, column: 21, scope: !6415)
!6419 = !DILocation(line: 1417, column: 16, scope: !6415)
!6420 = !DILocation(line: 1417, column: 33, scope: !6415)
!6421 = !DILocation(line: 1417, column: 31, scope: !6415)
!6422 = !DILocation(line: 1417, column: 26, scope: !6415)
!6423 = !DILocation(line: 1417, column: 9, scope: !6235)
!6424 = !DILocation(line: 1418, column: 9, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 1418, column: 9)
!6426 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1417, column: 39)
!6427 = !DILocation(line: 1418, column: 9, scope: !6426)
!6428 = !DILocation(line: 1419, column: 9, scope: !6426)
!6429 = !DILocation(line: 1422, column: 28, scope: !6235)
!6430 = !DILocation(line: 1422, column: 33, scope: !6235)
!6431 = !DILocation(line: 1422, column: 18, scope: !6235)
!6432 = !DILocation(line: 1422, column: 6, scope: !6235)
!6433 = !DILocation(line: 1422, column: 9, scope: !6235)
!6434 = !DILocation(line: 1422, column: 13, scope: !6235)
!6435 = !DILocation(line: 1422, column: 16, scope: !6235)
!6436 = !DILocation(line: 1423, column: 27, scope: !6235)
!6437 = !DILocation(line: 1423, column: 18, scope: !6235)
!6438 = !DILocation(line: 1423, column: 6, scope: !6235)
!6439 = !DILocation(line: 1423, column: 9, scope: !6235)
!6440 = !DILocation(line: 1423, column: 13, scope: !6235)
!6441 = !DILocation(line: 1423, column: 16, scope: !6235)
!6442 = !DILocation(line: 1424, column: 15, scope: !6235)
!6443 = !DILocation(line: 1424, column: 5, scope: !6235)
!6444 = !DILocation(line: 1424, column: 8, scope: !6235)
!6445 = !DILocation(line: 1424, column: 13, scope: !6235)
!6446 = !DILocation(line: 1426, column: 9, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 1426, column: 9)
!6448 = !DILocation(line: 1426, column: 12, scope: !6447)
!6449 = !DILocation(line: 1426, column: 9, scope: !6235)
!6450 = !DILocation(line: 1427, column: 32, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 1426, column: 23)
!6452 = !DILocation(line: 1427, column: 37, scope: !6451)
!6453 = !DILocation(line: 1427, column: 42, scope: !6451)
!6454 = !DILocation(line: 1427, column: 9, scope: !6451)
!6455 = !DILocation(line: 1428, column: 5, scope: !6451)
!6456 = !DILocation(line: 1430, column: 5, scope: !6235)
!6457 = !DILocation(line: 1431, column: 1, scope: !6235)
!6458 = distinct !DISubprogram(name: "ngx_resolver_send_udp_query", scope: !3, file: !3, line: 1318, type: !6236, isLocal: true, isDefinition: true, scopeLine: 1320, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6459)
!6459 = !{!6460, !6461, !6462, !6463, !6464}
!6460 = !DILocalVariable(name: "r", arg: 1, scope: !6458, file: !3, line: 1318, type: !163)
!6461 = !DILocalVariable(name: "rec", arg: 2, scope: !6458, file: !3, line: 1318, type: !807)
!6462 = !DILocalVariable(name: "query", arg: 3, scope: !6458, file: !3, line: 1319, type: !110)
!6463 = !DILocalVariable(name: "qlen", arg: 4, scope: !6458, file: !3, line: 1319, type: !76)
!6464 = !DILocalVariable(name: "n", scope: !6458, file: !3, line: 1321, type: !559)
!6465 = !DILocation(line: 1318, column: 45, scope: !6458)
!6466 = !DILocation(line: 1318, column: 76, scope: !6458)
!6467 = !DILocation(line: 1319, column: 13, scope: !6458)
!6468 = !DILocation(line: 1319, column: 28, scope: !6458)
!6469 = !DILocation(line: 1321, column: 5, scope: !6458)
!6470 = !DILocation(line: 1321, column: 14, scope: !6458)
!6471 = !DILocation(line: 1323, column: 9, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1323, column: 9)
!6473 = !DILocation(line: 1323, column: 14, scope: !6472)
!6474 = !DILocation(line: 1323, column: 18, scope: !6472)
!6475 = !DILocation(line: 1323, column: 9, scope: !6458)
!6476 = !DILocation(line: 1324, column: 29, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 1324, column: 13)
!6478 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 1323, column: 27)
!6479 = !DILocation(line: 1324, column: 13, scope: !6477)
!6480 = !DILocation(line: 1324, column: 34, scope: !6477)
!6481 = !DILocation(line: 1324, column: 13, scope: !6478)
!6482 = !DILocation(line: 1325, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 1324, column: 45)
!6484 = !DILocation(line: 1328, column: 26, scope: !6478)
!6485 = !DILocation(line: 1328, column: 9, scope: !6478)
!6486 = !DILocation(line: 1328, column: 14, scope: !6478)
!6487 = !DILocation(line: 1328, column: 19, scope: !6478)
!6488 = !DILocation(line: 1328, column: 24, scope: !6478)
!6489 = !DILocation(line: 1329, column: 9, scope: !6478)
!6490 = !DILocation(line: 1329, column: 14, scope: !6478)
!6491 = !DILocation(line: 1329, column: 19, scope: !6478)
!6492 = !DILocation(line: 1329, column: 25, scope: !6478)
!6493 = !DILocation(line: 1329, column: 33, scope: !6478)
!6494 = !DILocation(line: 1330, column: 9, scope: !6478)
!6495 = !DILocation(line: 1330, column: 14, scope: !6478)
!6496 = !DILocation(line: 1330, column: 19, scope: !6478)
!6497 = !DILocation(line: 1330, column: 25, scope: !6478)
!6498 = !DILocation(line: 1330, column: 34, scope: !6478)
!6499 = !DILocation(line: 1331, column: 5, scope: !6478)
!6500 = !DILocation(line: 1333, column: 9, scope: !6458)
!6501 = !{!6502, !821, i64 12}
!6502 = !{!"", !821, i64 0, !821, i64 4, !821, i64 8, !821, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !828, i64 28}
!6503 = !DILocation(line: 1333, column: 18, scope: !6458)
!6504 = !DILocation(line: 1333, column: 23, scope: !6458)
!6505 = !DILocation(line: 1333, column: 28, scope: !6458)
!6506 = !DILocation(line: 1333, column: 35, scope: !6458)
!6507 = !DILocation(line: 1333, column: 7, scope: !6458)
!6508 = !DILocation(line: 1335, column: 9, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1335, column: 9)
!6510 = !DILocation(line: 1335, column: 11, scope: !6509)
!6511 = !DILocation(line: 1335, column: 9, scope: !6458)
!6512 = !DILocation(line: 1336, column: 9, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1335, column: 18)
!6514 = !DILocation(line: 1339, column: 18, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1339, column: 9)
!6516 = !DILocation(line: 1339, column: 32, scope: !6515)
!6517 = !DILocation(line: 1339, column: 23, scope: !6515)
!6518 = !DILocation(line: 1339, column: 20, scope: !6515)
!6519 = !DILocation(line: 1339, column: 9, scope: !6458)
!6520 = !DILocation(line: 1340, column: 9, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 1340, column: 9)
!6522 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1339, column: 38)
!6523 = !DILocation(line: 1340, column: 9, scope: !6522)
!6524 = !DILocation(line: 1341, column: 9, scope: !6522)
!6525 = !DILocation(line: 1344, column: 5, scope: !6458)
!6526 = !DILocation(line: 1345, column: 1, scope: !6458)
!6527 = distinct !DISubprogram(name: "ngx_tcp_connect", scope: !3, file: !3, line: 4467, type: !6528, isLocal: true, isDefinition: true, scopeLine: 4468, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6530)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!8, !807}
!6530 = !{!6531, !6532, !6533, !6534, !6537, !6538, !6539, !6540, !6541}
!6531 = !DILocalVariable(name: "rec", arg: 1, scope: !6527, file: !3, line: 4467, type: !807)
!6532 = !DILocalVariable(name: "rc", scope: !6527, file: !3, line: 4469, type: !12)
!6533 = !DILocalVariable(name: "event", scope: !6527, file: !3, line: 4470, type: !8)
!6534 = !DILocalVariable(name: "err", scope: !6527, file: !3, line: 4471, type: !6535)
!6535 = !DIDerivedType(tag: DW_TAG_typedef, name: "ngx_err_t", file: !6536, line: 16, baseType: !12)
!6536 = !DIFile(filename: "src/os/unix/ngx_errno.h", directory: "/home/sam/Projects/nginx-1.12.2")
!6537 = !DILocalVariable(name: "level", scope: !6527, file: !3, line: 4472, type: !82)
!6538 = !DILocalVariable(name: "s", scope: !6527, file: !3, line: 4473, type: !495)
!6539 = !DILocalVariable(name: "rev", scope: !6527, file: !3, line: 4474, type: !168)
!6540 = !DILocalVariable(name: "wev", scope: !6527, file: !3, line: 4474, type: !168)
!6541 = !DILocalVariable(name: "c", scope: !6527, file: !3, line: 4475, type: !544)
!6542 = !DILocation(line: 4467, column: 44, scope: !6527)
!6543 = !DILocation(line: 4469, column: 5, scope: !6527)
!6544 = !DILocation(line: 4469, column: 24, scope: !6527)
!6545 = !DILocation(line: 4470, column: 5, scope: !6527)
!6546 = !DILocation(line: 4470, column: 24, scope: !6527)
!6547 = !DILocation(line: 4471, column: 5, scope: !6527)
!6548 = !DILocation(line: 4471, column: 24, scope: !6527)
!6549 = !DILocation(line: 4472, column: 5, scope: !6527)
!6550 = !DILocation(line: 4472, column: 24, scope: !6527)
!6551 = !DILocation(line: 4473, column: 5, scope: !6527)
!6552 = !DILocation(line: 4473, column: 24, scope: !6527)
!6553 = !DILocation(line: 4474, column: 5, scope: !6527)
!6554 = !DILocation(line: 4474, column: 24, scope: !6527)
!6555 = !DILocation(line: 4474, column: 30, scope: !6527)
!6556 = !DILocation(line: 4475, column: 5, scope: !6527)
!6557 = !DILocation(line: 4475, column: 24, scope: !6527)
!6558 = !DILocation(line: 4477, column: 20, scope: !6527)
!6559 = !DILocation(line: 4477, column: 25, scope: !6527)
!6560 = !DILocation(line: 4477, column: 35, scope: !6527)
!6561 = !DILocation(line: 4477, column: 9, scope: !6527)
!6562 = !DILocation(line: 4477, column: 7, scope: !6527)
!6563 = !DILocation(line: 4481, column: 9, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4481, column: 9)
!6565 = !DILocation(line: 4481, column: 11, scope: !6564)
!6566 = !DILocation(line: 4481, column: 9, scope: !6527)
!6567 = !DILocation(line: 4482, column: 9, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 4482, column: 9)
!6569 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 4481, column: 33)
!6570 = !DILocation(line: 4482, column: 9, scope: !6569)
!6571 = !DILocation(line: 4484, column: 9, scope: !6569)
!6572 = !DILocation(line: 4487, column: 28, scope: !6527)
!6573 = !DILocation(line: 4487, column: 32, scope: !6527)
!6574 = !DILocation(line: 4487, column: 37, scope: !6527)
!6575 = !DILocation(line: 4487, column: 9, scope: !6527)
!6576 = !DILocation(line: 4487, column: 7, scope: !6527)
!6577 = !DILocation(line: 4489, column: 9, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4489, column: 9)
!6579 = !DILocation(line: 4489, column: 11, scope: !6578)
!6580 = !DILocation(line: 4489, column: 9, scope: !6527)
!6581 = !DILocation(line: 4490, column: 30, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 4490, column: 13)
!6583 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 4489, column: 20)
!6584 = !DILocation(line: 4490, column: 13, scope: !6582)
!6585 = !DILocation(line: 4490, column: 33, scope: !6582)
!6586 = !DILocation(line: 4490, column: 13, scope: !6583)
!6587 = !DILocation(line: 4491, column: 13, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 4491, column: 13)
!6589 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 4490, column: 40)
!6590 = !DILocation(line: 4491, column: 13, scope: !6589)
!6591 = !DILocation(line: 4493, column: 9, scope: !6589)
!6592 = !DILocation(line: 4495, column: 9, scope: !6583)
!6593 = !DILocation(line: 4498, column: 25, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4498, column: 9)
!6595 = !DILocation(line: 4498, column: 9, scope: !6594)
!6596 = !DILocation(line: 4498, column: 28, scope: !6594)
!6597 = !DILocation(line: 4498, column: 9, scope: !6527)
!6598 = !DILocation(line: 4499, column: 9, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 4499, column: 9)
!6600 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 4498, column: 35)
!6601 = !DILocation(line: 4499, column: 9, scope: !6600)
!6602 = !DILocation(line: 4502, column: 9, scope: !6600)
!6603 = !DILocation(line: 4505, column: 11, scope: !6527)
!6604 = !DILocation(line: 4505, column: 14, scope: !6527)
!6605 = !DILocation(line: 4505, column: 9, scope: !6527)
!6606 = !DILocation(line: 4506, column: 11, scope: !6527)
!6607 = !DILocation(line: 4506, column: 14, scope: !6527)
!6608 = !DILocation(line: 4506, column: 9, scope: !6527)
!6609 = !DILocation(line: 4508, column: 17, scope: !6527)
!6610 = !DILocation(line: 4508, column: 22, scope: !6527)
!6611 = !DILocation(line: 4508, column: 5, scope: !6527)
!6612 = !DILocation(line: 4508, column: 10, scope: !6527)
!6613 = !DILocation(line: 4508, column: 14, scope: !6527)
!6614 = !DILocation(line: 4509, column: 17, scope: !6527)
!6615 = !DILocation(line: 4509, column: 22, scope: !6527)
!6616 = !DILocation(line: 4509, column: 5, scope: !6527)
!6617 = !DILocation(line: 4509, column: 10, scope: !6527)
!6618 = !DILocation(line: 4509, column: 14, scope: !6527)
!6619 = !DILocation(line: 4511, column: 16, scope: !6527)
!6620 = !DILocation(line: 4511, column: 5, scope: !6527)
!6621 = !DILocation(line: 4511, column: 10, scope: !6527)
!6622 = !DILocation(line: 4511, column: 14, scope: !6527)
!6623 = !DILocation(line: 4513, column: 17, scope: !6527)
!6624 = !DILocation(line: 4513, column: 5, scope: !6527)
!6625 = !DILocation(line: 4513, column: 8, scope: !6527)
!6626 = !DILocation(line: 4513, column: 15, scope: !6527)
!6627 = !{!6385, !888, i64 100}
!6628 = !DILocation(line: 4515, column: 9, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4515, column: 9)
!6630 = !{!6631, !821, i64 16}
!6631 = !{!"", !821, i64 0, !821, i64 4, !821, i64 8, !821, i64 12, !821, i64 16, !821, i64 20, !821, i64 24, !821, i64 28, !821, i64 32, !821, i64 36}
!6632 = !DILocation(line: 4515, column: 9, scope: !6527)
!6633 = !DILocation(line: 4516, column: 13, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 4516, column: 13)
!6635 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 4515, column: 23)
!6636 = !DILocation(line: 4516, column: 26, scope: !6634)
!6637 = !DILocation(line: 4516, column: 29, scope: !6634)
!6638 = !DILocation(line: 4516, column: 13, scope: !6635)
!6639 = !DILocation(line: 4517, column: 13, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 4516, column: 43)
!6641 = !DILocation(line: 4519, column: 5, scope: !6635)
!6642 = !DILocation(line: 4524, column: 18, scope: !6527)
!6643 = !DILocation(line: 4524, column: 21, scope: !6527)
!6644 = !DILocation(line: 4524, column: 26, scope: !6527)
!6645 = !DILocation(line: 4524, column: 36, scope: !6527)
!6646 = !DILocation(line: 4524, column: 41, scope: !6527)
!6647 = !DILocation(line: 4524, column: 10, scope: !6527)
!6648 = !DILocation(line: 4524, column: 8, scope: !6527)
!6649 = !DILocation(line: 4526, column: 9, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4526, column: 9)
!6651 = !DILocation(line: 4526, column: 12, scope: !6650)
!6652 = !DILocation(line: 4526, column: 9, scope: !6527)
!6653 = !DILocation(line: 4527, column: 15, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4526, column: 19)
!6655 = !DILocation(line: 4527, column: 13, scope: !6654)
!6656 = !DILocation(line: 4530, column: 13, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 4530, column: 13)
!6658 = !DILocation(line: 4530, column: 17, scope: !6657)
!6659 = !DILocation(line: 4530, column: 13, scope: !6654)
!6660 = !DILocation(line: 4537, column: 17, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4537, column: 17)
!6662 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 4536, column: 9)
!6663 = !DILocation(line: 4537, column: 21, scope: !6661)
!6664 = !DILocation(line: 4543, column: 17, scope: !6661)
!6665 = !DILocation(line: 4543, column: 20, scope: !6661)
!6666 = !DILocation(line: 4543, column: 24, scope: !6661)
!6667 = !DILocation(line: 4545, column: 17, scope: !6661)
!6668 = !DILocation(line: 4545, column: 20, scope: !6661)
!6669 = !DILocation(line: 4545, column: 24, scope: !6661)
!6670 = !DILocation(line: 4546, column: 17, scope: !6661)
!6671 = !DILocation(line: 4546, column: 20, scope: !6661)
!6672 = !DILocation(line: 4546, column: 24, scope: !6661)
!6673 = !DILocation(line: 4547, column: 17, scope: !6661)
!6674 = !DILocation(line: 4547, column: 20, scope: !6661)
!6675 = !DILocation(line: 4547, column: 24, scope: !6661)
!6676 = !DILocation(line: 4548, column: 17, scope: !6661)
!6677 = !DILocation(line: 4548, column: 20, scope: !6661)
!6678 = !DILocation(line: 4548, column: 24, scope: !6661)
!6679 = !DILocation(line: 4549, column: 17, scope: !6661)
!6680 = !DILocation(line: 4549, column: 20, scope: !6661)
!6681 = !DILocation(line: 4549, column: 24, scope: !6661)
!6682 = !DILocation(line: 4537, column: 17, scope: !6662)
!6683 = !DILocation(line: 4551, column: 23, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 4550, column: 13)
!6685 = !DILocation(line: 4553, column: 13, scope: !6684)
!6686 = !DILocation(line: 4554, column: 23, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 4553, column: 20)
!6688 = !DILocation(line: 4557, column: 13, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 4557, column: 13)
!6690 = !{!6385, !821, i64 40}
!6691 = !DILocation(line: 4557, column: 13, scope: !6662)
!6692 = !DILocation(line: 4560, column: 34, scope: !6662)
!6693 = !DILocation(line: 4560, column: 13, scope: !6662)
!6694 = !DILocation(line: 4561, column: 13, scope: !6662)
!6695 = !DILocation(line: 4561, column: 18, scope: !6662)
!6696 = !DILocation(line: 4561, column: 22, scope: !6662)
!6697 = !DILocation(line: 4563, column: 13, scope: !6662)
!6698 = !DILocation(line: 4565, column: 5, scope: !6654)
!6699 = !DILocation(line: 4567, column: 9, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4567, column: 9)
!6701 = !DILocation(line: 4567, column: 9, scope: !6527)
!6702 = !DILocation(line: 4568, column: 13, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 4568, column: 13)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 4567, column: 23)
!6705 = !DILocation(line: 4568, column: 16, scope: !6703)
!6706 = !DILocation(line: 4568, column: 13, scope: !6704)
!6707 = !DILocation(line: 4572, column: 13, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 4568, column: 23)
!6709 = !DILocation(line: 4577, column: 9, scope: !6704)
!6710 = !DILocation(line: 4577, column: 14, scope: !6704)
!6711 = !DILocation(line: 4577, column: 20, scope: !6704)
!6712 = !DILocation(line: 4579, column: 9, scope: !6704)
!6713 = !DILocation(line: 4582, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4582, column: 9)
!6715 = !DILocation(line: 4582, column: 25, scope: !6714)
!6716 = !DILocation(line: 4582, column: 9, scope: !6527)
!6717 = !DILocation(line: 4587, column: 26, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 4587, column: 13)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 4582, column: 47)
!6720 = !DILocation(line: 4587, column: 13, scope: !6718)
!6721 = !DILocation(line: 4587, column: 29, scope: !6718)
!6722 = !DILocation(line: 4587, column: 13, scope: !6719)
!6723 = !DILocation(line: 4588, column: 13, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 4588, column: 13)
!6725 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 4587, column: 36)
!6726 = !DILocation(line: 4588, column: 13, scope: !6725)
!6727 = !DILocation(line: 4590, column: 13, scope: !6725)
!6728 = !DILocation(line: 4600, column: 9, scope: !6719)
!6729 = !DILocation(line: 4600, column: 14, scope: !6719)
!6730 = !DILocation(line: 4600, column: 20, scope: !6719)
!6731 = !DILocation(line: 4601, column: 9, scope: !6719)
!6732 = !DILocation(line: 4601, column: 14, scope: !6719)
!6733 = !DILocation(line: 4601, column: 20, scope: !6719)
!6734 = !DILocation(line: 4603, column: 9, scope: !6719)
!6735 = !DILocation(line: 4606, column: 9, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4606, column: 9)
!6737 = !DILocation(line: 4606, column: 25, scope: !6736)
!6738 = !DILocation(line: 4606, column: 9, scope: !6527)
!6739 = !DILocation(line: 4610, column: 15, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 4606, column: 48)
!6741 = !DILocation(line: 4612, column: 5, scope: !6740)
!6742 = !DILocation(line: 4616, column: 15, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 4612, column: 12)
!6744 = !DILocation(line: 4619, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4619, column: 9)
!6746 = !{!6631, !821, i64 0}
!6747 = !DILocation(line: 4619, column: 23, scope: !6745)
!6748 = !DILocation(line: 4619, column: 44, scope: !6745)
!6749 = !DILocation(line: 4619, column: 51, scope: !6745)
!6750 = !DILocation(line: 4619, column: 9, scope: !6527)
!6751 = !DILocation(line: 4620, column: 9, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 4619, column: 62)
!6753 = !DILocation(line: 4623, column: 9, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 4623, column: 9)
!6755 = !DILocation(line: 4623, column: 12, scope: !6754)
!6756 = !DILocation(line: 4623, column: 9, scope: !6527)
!6757 = !DILocation(line: 4627, column: 13, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 4627, column: 13)
!6759 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 4623, column: 19)
!6760 = !DILocation(line: 4627, column: 27, scope: !6758)
!6761 = !DILocation(line: 4627, column: 49, scope: !6758)
!6762 = !DILocation(line: 4627, column: 56, scope: !6758)
!6763 = !DILocation(line: 4627, column: 13, scope: !6759)
!6764 = !DILocation(line: 4628, column: 13, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 4627, column: 67)
!6766 = !DILocation(line: 4631, column: 9, scope: !6759)
!6767 = !DILocation(line: 4636, column: 5, scope: !6527)
!6768 = !DILocation(line: 4636, column: 10, scope: !6527)
!6769 = !DILocation(line: 4636, column: 16, scope: !6527)
!6770 = !DILocation(line: 4638, column: 5, scope: !6527)
!6771 = !DILocation(line: 4642, column: 26, scope: !6527)
!6772 = !DILocation(line: 4642, column: 5, scope: !6527)
!6773 = !DILocation(line: 4643, column: 5, scope: !6527)
!6774 = !DILocation(line: 4643, column: 10, scope: !6527)
!6775 = !DILocation(line: 4643, column: 14, scope: !6527)
!6776 = !DILocation(line: 4645, column: 5, scope: !6527)
!6777 = !DILocation(line: 4646, column: 1, scope: !6527)
!6778 = distinct !DISubprogram(name: "ngx_resolver_tcp_write", scope: !3, file: !3, line: 1592, type: !199, isLocal: true, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6779)
!6779 = !{!6780, !6781, !6782, !6783, !6784, !6785, !6786}
!6780 = !DILocalVariable(name: "wev", arg: 1, scope: !6778, file: !3, line: 1592, type: !168)
!6781 = !DILocalVariable(name: "sent", scope: !6778, file: !3, line: 1594, type: !287)
!6782 = !DILocalVariable(name: "n", scope: !6778, file: !3, line: 1595, type: !559)
!6783 = !DILocalVariable(name: "b", scope: !6778, file: !3, line: 1596, type: !280)
!6784 = !DILocalVariable(name: "r", scope: !6778, file: !3, line: 1597, type: !163)
!6785 = !DILocalVariable(name: "c", scope: !6778, file: !3, line: 1598, type: !544)
!6786 = !DILocalVariable(name: "rec", scope: !6778, file: !3, line: 1599, type: !807)
!6787 = !DILocation(line: 1592, column: 37, scope: !6778)
!6788 = !DILocation(line: 1594, column: 5, scope: !6778)
!6789 = !DILocation(line: 1594, column: 33, scope: !6778)
!6790 = !DILocation(line: 1595, column: 5, scope: !6778)
!6791 = !DILocation(line: 1595, column: 33, scope: !6778)
!6792 = !DILocation(line: 1596, column: 5, scope: !6778)
!6793 = !DILocation(line: 1596, column: 33, scope: !6778)
!6794 = !DILocation(line: 1597, column: 5, scope: !6778)
!6795 = !DILocation(line: 1597, column: 33, scope: !6778)
!6796 = !DILocation(line: 1598, column: 5, scope: !6778)
!6797 = !DILocation(line: 1598, column: 33, scope: !6778)
!6798 = !DILocation(line: 1599, column: 5, scope: !6778)
!6799 = !DILocation(line: 1599, column: 33, scope: !6778)
!6800 = !DILocation(line: 1601, column: 9, scope: !6778)
!6801 = !DILocation(line: 1601, column: 14, scope: !6778)
!6802 = !DILocation(line: 1601, column: 7, scope: !6778)
!6803 = !DILocation(line: 1602, column: 11, scope: !6778)
!6804 = !DILocation(line: 1602, column: 14, scope: !6778)
!6805 = !DILocation(line: 1602, column: 9, scope: !6778)
!6806 = !DILocation(line: 1603, column: 9, scope: !6778)
!6807 = !DILocation(line: 1603, column: 14, scope: !6778)
!6808 = !DILocation(line: 1603, column: 7, scope: !6778)
!6809 = !DILocation(line: 1604, column: 9, scope: !6778)
!6810 = !DILocation(line: 1604, column: 14, scope: !6778)
!6811 = !DILocation(line: 1604, column: 7, scope: !6778)
!6812 = !DILocation(line: 1606, column: 9, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1606, column: 9)
!6814 = !DILocation(line: 1606, column: 14, scope: !6813)
!6815 = !DILocation(line: 1606, column: 9, scope: !6778)
!6816 = !DILocation(line: 1607, column: 9, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1606, column: 24)
!6818 = !DILocation(line: 1610, column: 12, scope: !6778)
!6819 = !DILocation(line: 1610, column: 15, scope: !6778)
!6820 = !{!6385, !828, i64 36}
!6821 = !DILocation(line: 1610, column: 10, scope: !6778)
!6822 = !DILocation(line: 1612, column: 5, scope: !6778)
!6823 = !DILocation(line: 1612, column: 12, scope: !6778)
!6824 = !DILocation(line: 1612, column: 17, scope: !6778)
!6825 = !DILocation(line: 1612, column: 23, scope: !6778)
!6826 = !DILocation(line: 1612, column: 26, scope: !6778)
!6827 = !DILocation(line: 1612, column: 29, scope: !6778)
!6828 = !DILocation(line: 1612, column: 35, scope: !6778)
!6829 = !DILocation(line: 1612, column: 38, scope: !6778)
!6830 = !DILocation(line: 1612, column: 33, scope: !6778)
!6831 = !DILocation(line: 1613, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1612, column: 44)
!6833 = !DILocation(line: 1613, column: 22, scope: !6832)
!6834 = !DILocation(line: 1613, column: 25, scope: !6832)
!6835 = !DILocation(line: 1613, column: 28, scope: !6832)
!6836 = !DILocation(line: 1613, column: 33, scope: !6832)
!6837 = !DILocation(line: 1613, column: 36, scope: !6832)
!6838 = !DILocation(line: 1613, column: 43, scope: !6832)
!6839 = !DILocation(line: 1613, column: 46, scope: !6832)
!6840 = !DILocation(line: 1613, column: 41, scope: !6832)
!6841 = !DILocation(line: 1613, column: 11, scope: !6832)
!6842 = !DILocation(line: 1615, column: 13, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 1615, column: 13)
!6844 = !DILocation(line: 1615, column: 15, scope: !6843)
!6845 = !DILocation(line: 1615, column: 13, scope: !6832)
!6846 = !DILocation(line: 1616, column: 13, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1615, column: 29)
!6848 = !DILocation(line: 1619, column: 13, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 1619, column: 13)
!6850 = !DILocation(line: 1619, column: 15, scope: !6849)
!6851 = !DILocation(line: 1619, column: 13, scope: !6832)
!6852 = !DILocation(line: 1620, column: 13, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1619, column: 29)
!6854 = !DILocation(line: 1623, column: 19, scope: !6832)
!6855 = !DILocation(line: 1623, column: 9, scope: !6832)
!6856 = !DILocation(line: 1623, column: 12, scope: !6832)
!6857 = !DILocation(line: 1623, column: 16, scope: !6832)
!6858 = distinct !{!6858, !6822, !6859}
!6859 = !DILocation(line: 1624, column: 5, scope: !6778)
!6860 = !DILocation(line: 1626, column: 9, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1626, column: 9)
!6862 = !DILocation(line: 1626, column: 12, scope: !6861)
!6863 = !DILocation(line: 1626, column: 19, scope: !6861)
!6864 = !DILocation(line: 1626, column: 22, scope: !6861)
!6865 = !DILocation(line: 1626, column: 16, scope: !6861)
!6866 = !DILocation(line: 1626, column: 9, scope: !6778)
!6867 = !DILocation(line: 1627, column: 19, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 1626, column: 29)
!6869 = !DILocation(line: 1627, column: 9, scope: !6868)
!6870 = !DILocation(line: 1627, column: 12, scope: !6868)
!6871 = !DILocation(line: 1627, column: 17, scope: !6868)
!6872 = !DILocation(line: 1628, column: 18, scope: !6868)
!6873 = !DILocation(line: 1628, column: 21, scope: !6868)
!6874 = !DILocation(line: 1628, column: 9, scope: !6868)
!6875 = !DILocation(line: 1628, column: 12, scope: !6868)
!6876 = !DILocation(line: 1628, column: 16, scope: !6868)
!6877 = !DILocation(line: 1629, column: 5, scope: !6868)
!6878 = !DILocation(line: 1631, column: 9, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1631, column: 9)
!6880 = !DILocation(line: 1631, column: 12, scope: !6879)
!6881 = !DILocation(line: 1631, column: 20, scope: !6879)
!6882 = !DILocation(line: 1631, column: 17, scope: !6879)
!6883 = !DILocation(line: 1631, column: 9, scope: !6778)
!6884 = !DILocation(line: 1632, column: 23, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 1631, column: 26)
!6886 = !DILocation(line: 1632, column: 42, scope: !6885)
!6887 = !DILocation(line: 1632, column: 45, scope: !6885)
!6888 = !DILocation(line: 1632, column: 57, scope: !6885)
!6889 = !DILocation(line: 1632, column: 9, scope: !6885)
!6890 = !DILocation(line: 1633, column: 5, scope: !6885)
!6891 = !DILocation(line: 1635, column: 32, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1635, column: 9)
!6893 = !DILocation(line: 1635, column: 9, scope: !6892)
!6894 = !DILocation(line: 1635, column: 40, scope: !6892)
!6895 = !DILocation(line: 1635, column: 9, scope: !6778)
!6896 = !DILocation(line: 1636, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 1635, column: 51)
!6898 = !DILocation(line: 1639, column: 5, scope: !6778)
!6899 = !DILocation(line: 1643, column: 26, scope: !6778)
!6900 = !DILocation(line: 1643, column: 5, scope: !6778)
!6901 = !DILocation(line: 1644, column: 5, scope: !6778)
!6902 = !DILocation(line: 1644, column: 10, scope: !6778)
!6903 = !DILocation(line: 1644, column: 14, scope: !6778)
!6904 = !DILocation(line: 1645, column: 1, scope: !6778)
!6905 = distinct !DISubprogram(name: "ngx_resolver_tcp_read", scope: !3, file: !3, line: 1649, type: !199, isLocal: true, isDefinition: true, scopeLine: 1650, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !6906)
!6906 = !{!6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915}
!6907 = !DILocalVariable(name: "rev", arg: 1, scope: !6905, file: !3, line: 1649, type: !168)
!6908 = !DILocalVariable(name: "p", scope: !6905, file: !3, line: 1651, type: !110)
!6909 = !DILocalVariable(name: "size", scope: !6905, file: !3, line: 1652, type: !134)
!6910 = !DILocalVariable(name: "n", scope: !6905, file: !3, line: 1653, type: !559)
!6911 = !DILocalVariable(name: "qlen", scope: !6905, file: !3, line: 1654, type: !76)
!6912 = !DILocalVariable(name: "b", scope: !6905, file: !3, line: 1655, type: !280)
!6913 = !DILocalVariable(name: "r", scope: !6905, file: !3, line: 1656, type: !163)
!6914 = !DILocalVariable(name: "c", scope: !6905, file: !3, line: 1657, type: !544)
!6915 = !DILocalVariable(name: "rec", scope: !6905, file: !3, line: 1658, type: !807)
!6916 = !DILocation(line: 1649, column: 36, scope: !6905)
!6917 = !DILocation(line: 1651, column: 5, scope: !6905)
!6918 = !DILocation(line: 1651, column: 33, scope: !6905)
!6919 = !DILocation(line: 1652, column: 5, scope: !6905)
!6920 = !DILocation(line: 1652, column: 33, scope: !6905)
!6921 = !DILocation(line: 1653, column: 5, scope: !6905)
!6922 = !DILocation(line: 1653, column: 33, scope: !6905)
!6923 = !DILocation(line: 1654, column: 5, scope: !6905)
!6924 = !DILocation(line: 1654, column: 33, scope: !6905)
!6925 = !DILocation(line: 1655, column: 5, scope: !6905)
!6926 = !DILocation(line: 1655, column: 33, scope: !6905)
!6927 = !DILocation(line: 1656, column: 5, scope: !6905)
!6928 = !DILocation(line: 1656, column: 33, scope: !6905)
!6929 = !DILocation(line: 1657, column: 5, scope: !6905)
!6930 = !DILocation(line: 1657, column: 33, scope: !6905)
!6931 = !DILocation(line: 1658, column: 5, scope: !6905)
!6932 = !DILocation(line: 1658, column: 33, scope: !6905)
!6933 = !DILocation(line: 1660, column: 9, scope: !6905)
!6934 = !DILocation(line: 1660, column: 14, scope: !6905)
!6935 = !DILocation(line: 1660, column: 7, scope: !6905)
!6936 = !DILocation(line: 1661, column: 11, scope: !6905)
!6937 = !DILocation(line: 1661, column: 14, scope: !6905)
!6938 = !DILocation(line: 1661, column: 9, scope: !6905)
!6939 = !DILocation(line: 1662, column: 9, scope: !6905)
!6940 = !DILocation(line: 1662, column: 14, scope: !6905)
!6941 = !DILocation(line: 1662, column: 7, scope: !6905)
!6942 = !DILocation(line: 1663, column: 9, scope: !6905)
!6943 = !DILocation(line: 1663, column: 14, scope: !6905)
!6944 = !DILocation(line: 1663, column: 7, scope: !6905)
!6945 = !DILocation(line: 1665, column: 5, scope: !6905)
!6946 = !DILocation(line: 1665, column: 12, scope: !6905)
!6947 = !DILocation(line: 1665, column: 17, scope: !6905)
!6948 = !DILocation(line: 1666, column: 13, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1665, column: 24)
!6950 = !{!6502, !821, i64 0}
!6951 = !DILocation(line: 1666, column: 22, scope: !6949)
!6952 = !DILocation(line: 1666, column: 25, scope: !6949)
!6953 = !DILocation(line: 1666, column: 28, scope: !6949)
!6954 = !DILocation(line: 1666, column: 34, scope: !6949)
!6955 = !DILocation(line: 1666, column: 37, scope: !6949)
!6956 = !DILocation(line: 1666, column: 43, scope: !6949)
!6957 = !DILocation(line: 1666, column: 46, scope: !6949)
!6958 = !DILocation(line: 1666, column: 41, scope: !6949)
!6959 = !DILocation(line: 1666, column: 11, scope: !6949)
!6960 = !DILocation(line: 1668, column: 13, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1668, column: 13)
!6962 = !DILocation(line: 1668, column: 15, scope: !6961)
!6963 = !DILocation(line: 1668, column: 13, scope: !6949)
!6964 = !DILocation(line: 1669, column: 13, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 1668, column: 29)
!6966 = !DILocation(line: 1672, column: 13, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1672, column: 13)
!6968 = !DILocation(line: 1672, column: 15, scope: !6967)
!6969 = !DILocation(line: 1672, column: 28, scope: !6967)
!6970 = !DILocation(line: 1672, column: 31, scope: !6967)
!6971 = !DILocation(line: 1672, column: 33, scope: !6967)
!6972 = !DILocation(line: 1672, column: 13, scope: !6949)
!6973 = !DILocation(line: 1673, column: 13, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 1672, column: 39)
!6975 = !DILocation(line: 1676, column: 20, scope: !6949)
!6976 = !DILocation(line: 1676, column: 9, scope: !6949)
!6977 = !DILocation(line: 1676, column: 12, scope: !6949)
!6978 = !DILocation(line: 1676, column: 17, scope: !6949)
!6979 = !DILocation(line: 1678, column: 9, scope: !6949)
!6980 = !DILocation(line: 1679, column: 17, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 1678, column: 20)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 1678, column: 9)
!6983 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1678, column: 9)
!6984 = !DILocation(line: 1679, column: 20, scope: !6981)
!6985 = !DILocation(line: 1679, column: 15, scope: !6981)
!6986 = !DILocation(line: 1680, column: 20, scope: !6981)
!6987 = !DILocation(line: 1680, column: 23, scope: !6981)
!6988 = !DILocation(line: 1680, column: 30, scope: !6981)
!6989 = !DILocation(line: 1680, column: 28, scope: !6981)
!6990 = !DILocation(line: 1680, column: 18, scope: !6981)
!6991 = !DILocation(line: 1682, column: 17, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 1682, column: 17)
!6993 = !DILocation(line: 1682, column: 22, scope: !6992)
!6994 = !DILocation(line: 1682, column: 17, scope: !6981)
!6995 = !DILocation(line: 1683, column: 17, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 1682, column: 27)
!6997 = !DILocation(line: 1686, column: 32, scope: !6981)
!6998 = !DILocation(line: 1686, column: 30, scope: !6981)
!6999 = !DILocation(line: 1686, column: 20, scope: !6981)
!7000 = !DILocation(line: 1686, column: 35, scope: !6981)
!7001 = !DILocation(line: 1686, column: 18, scope: !6981)
!7002 = !DILocation(line: 1687, column: 23, scope: !6981)
!7003 = !DILocation(line: 1687, column: 21, scope: !6981)
!7004 = !DILocation(line: 1687, column: 18, scope: !6981)
!7005 = !DILocation(line: 1689, column: 17, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 1689, column: 17)
!7007 = !DILocation(line: 1689, column: 38, scope: !7006)
!7008 = !DILocation(line: 1689, column: 36, scope: !7006)
!7009 = !DILocation(line: 1689, column: 22, scope: !7006)
!7010 = !DILocation(line: 1689, column: 17, scope: !6981)
!7011 = !DILocation(line: 1690, column: 17, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 1689, column: 45)
!7013 = !DILocation(line: 1693, column: 43, scope: !6981)
!7014 = !DILocation(line: 1693, column: 46, scope: !6981)
!7015 = !DILocation(line: 1693, column: 49, scope: !6981)
!7016 = !DILocation(line: 1693, column: 13, scope: !6981)
!7017 = !DILocation(line: 1695, column: 27, scope: !6981)
!7018 = !DILocation(line: 1695, column: 25, scope: !6981)
!7019 = !DILocation(line: 1695, column: 13, scope: !6981)
!7020 = !DILocation(line: 1695, column: 16, scope: !6981)
!7021 = !DILocation(line: 1695, column: 20, scope: !6981)
!7022 = !DILocation(line: 1678, column: 9, scope: !6982)
!7023 = distinct !{!7023, !7024, !7025}
!7024 = !DILocation(line: 1678, column: 9, scope: !6983)
!7025 = !DILocation(line: 1696, column: 9, scope: !6983)
!7026 = !DILocation(line: 1698, column: 13, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1698, column: 13)
!7028 = !DILocation(line: 1698, column: 16, scope: !7027)
!7029 = !DILocation(line: 1698, column: 23, scope: !7027)
!7030 = !DILocation(line: 1698, column: 26, scope: !7027)
!7031 = !DILocation(line: 1698, column: 20, scope: !7027)
!7032 = !DILocation(line: 1698, column: 13, scope: !6949)
!7033 = !DILocation(line: 1699, column: 23, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 1698, column: 33)
!7035 = !DILocation(line: 1699, column: 13, scope: !7034)
!7036 = !DILocation(line: 1699, column: 16, scope: !7034)
!7037 = !DILocation(line: 1699, column: 21, scope: !7034)
!7038 = !DILocation(line: 1700, column: 22, scope: !7034)
!7039 = !DILocation(line: 1700, column: 25, scope: !7034)
!7040 = !DILocation(line: 1700, column: 13, scope: !7034)
!7041 = !DILocation(line: 1700, column: 16, scope: !7034)
!7042 = !DILocation(line: 1700, column: 20, scope: !7034)
!7043 = !DILocation(line: 1701, column: 9, scope: !7034)
!7044 = distinct !{!7044, !6945, !7045}
!7045 = !DILocation(line: 1702, column: 5, scope: !6905)
!7046 = !DILocation(line: 1704, column: 31, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1704, column: 9)
!7048 = !DILocation(line: 1704, column: 9, scope: !7047)
!7049 = !DILocation(line: 1704, column: 39, scope: !7047)
!7050 = !DILocation(line: 1704, column: 9, scope: !6905)
!7051 = !DILocation(line: 1705, column: 9, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1704, column: 50)
!7053 = !DILocation(line: 1708, column: 5, scope: !6905)
!7054 = !DILocation(line: 1712, column: 26, scope: !6905)
!7055 = !DILocation(line: 1712, column: 5, scope: !6905)
!7056 = !DILocation(line: 1713, column: 5, scope: !6905)
!7057 = !DILocation(line: 1713, column: 10, scope: !6905)
!7058 = !DILocation(line: 1713, column: 14, scope: !6905)
!7059 = !DILocation(line: 1714, column: 1, scope: !6905)
!7060 = distinct !DISubprogram(name: "ngx_resolver_process_response", scope: !3, file: !3, line: 1718, type: !7061, isLocal: true, isDefinition: true, scopeLine: 1720, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !7063)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{null, !163, !110, !134, !82}
!7063 = !{!7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084}
!7064 = !DILocalVariable(name: "r", arg: 1, scope: !7060, file: !3, line: 1718, type: !163)
!7065 = !DILocalVariable(name: "buf", arg: 2, scope: !7060, file: !3, line: 1718, type: !110)
!7066 = !DILocalVariable(name: "n", arg: 3, scope: !7060, file: !3, line: 1718, type: !134)
!7067 = !DILocalVariable(name: "tcp", arg: 4, scope: !7060, file: !3, line: 1719, type: !82)
!7068 = !DILocalVariable(name: "err", scope: !7060, file: !3, line: 1721, type: !6)
!7069 = !DILocalVariable(name: "i", scope: !7060, file: !3, line: 1722, type: !82)
!7070 = !DILocalVariable(name: "times", scope: !7060, file: !3, line: 1722, type: !82)
!7071 = !DILocalVariable(name: "ident", scope: !7060, file: !3, line: 1722, type: !82)
!7072 = !DILocalVariable(name: "qident", scope: !7060, file: !3, line: 1722, type: !82)
!7073 = !DILocalVariable(name: "flags", scope: !7060, file: !3, line: 1722, type: !82)
!7074 = !DILocalVariable(name: "code", scope: !7060, file: !3, line: 1722, type: !82)
!7075 = !DILocalVariable(name: "nqs", scope: !7060, file: !3, line: 1722, type: !82)
!7076 = !DILocalVariable(name: "nan", scope: !7060, file: !3, line: 1722, type: !82)
!7077 = !DILocalVariable(name: "trunc", scope: !7060, file: !3, line: 1722, type: !82)
!7078 = !DILocalVariable(name: "qtype", scope: !7060, file: !3, line: 1723, type: !82)
!7079 = !DILocalVariable(name: "qclass", scope: !7060, file: !3, line: 1723, type: !82)
!7080 = !DILocalVariable(name: "qident6", scope: !7060, file: !3, line: 1725, type: !82)
!7081 = !DILocalVariable(name: "q", scope: !7060, file: !3, line: 1727, type: !107)
!7082 = !DILocalVariable(name: "qs", scope: !7060, file: !3, line: 1728, type: !485)
!7083 = !DILocalVariable(name: "response", scope: !7060, file: !3, line: 1729, type: !469)
!7084 = !DILocalVariable(name: "rn", scope: !7060, file: !3, line: 1730, type: !84)
!7085 = !DILocation(line: 1718, column: 47, scope: !7060)
!7086 = !DILocation(line: 1718, column: 58, scope: !7060)
!7087 = !DILocation(line: 1718, column: 70, scope: !7060)
!7088 = !DILocation(line: 1719, column: 16, scope: !7060)
!7089 = !DILocation(line: 1721, column: 5, scope: !7060)
!7090 = !DILocation(line: 1721, column: 27, scope: !7060)
!7091 = !DILocation(line: 1722, column: 5, scope: !7060)
!7092 = !DILocation(line: 1722, column: 27, scope: !7060)
!7093 = !DILocation(line: 1722, column: 30, scope: !7060)
!7094 = !DILocation(line: 1722, column: 37, scope: !7060)
!7095 = !DILocation(line: 1722, column: 44, scope: !7060)
!7096 = !DILocation(line: 1722, column: 52, scope: !7060)
!7097 = !DILocation(line: 1722, column: 59, scope: !7060)
!7098 = !DILocation(line: 1722, column: 65, scope: !7060)
!7099 = !DILocation(line: 1722, column: 70, scope: !7060)
!7100 = !DILocation(line: 1722, column: 75, scope: !7060)
!7101 = !DILocation(line: 1723, column: 27, scope: !7060)
!7102 = !DILocation(line: 1723, column: 34, scope: !7060)
!7103 = !DILocation(line: 1725, column: 5, scope: !7060)
!7104 = !DILocation(line: 1725, column: 27, scope: !7060)
!7105 = !DILocation(line: 1727, column: 5, scope: !7060)
!7106 = !DILocation(line: 1727, column: 27, scope: !7060)
!7107 = !DILocation(line: 1728, column: 5, scope: !7060)
!7108 = !DILocation(line: 1728, column: 27, scope: !7060)
!7109 = !DILocation(line: 1729, column: 5, scope: !7060)
!7110 = !DILocation(line: 1729, column: 27, scope: !7060)
!7111 = !DILocation(line: 1730, column: 5, scope: !7060)
!7112 = !DILocation(line: 1730, column: 27, scope: !7060)
!7113 = !DILocation(line: 1732, column: 9, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1732, column: 9)
!7115 = !DILocation(line: 1732, column: 11, scope: !7114)
!7116 = !DILocation(line: 1732, column: 9, scope: !7060)
!7117 = !DILocation(line: 1733, column: 9, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 1732, column: 41)
!7119 = !DILocation(line: 1736, column: 39, scope: !7060)
!7120 = !DILocation(line: 1736, column: 16, scope: !7060)
!7121 = !DILocation(line: 1736, column: 14, scope: !7060)
!7122 = !DILocation(line: 1738, column: 14, scope: !7060)
!7123 = !DILocation(line: 1738, column: 24, scope: !7060)
!7124 = !DILocation(line: 1738, column: 33, scope: !7060)
!7125 = !DILocation(line: 1738, column: 41, scope: !7060)
!7126 = !DILocation(line: 1738, column: 51, scope: !7060)
!7127 = !DILocation(line: 1738, column: 39, scope: !7060)
!7128 = !DILocation(line: 1738, column: 11, scope: !7060)
!7129 = !DILocation(line: 1739, column: 14, scope: !7060)
!7130 = !DILocation(line: 1739, column: 24, scope: !7060)
!7131 = !DILocation(line: 1739, column: 33, scope: !7060)
!7132 = !DILocation(line: 1739, column: 41, scope: !7060)
!7133 = !DILocation(line: 1739, column: 51, scope: !7060)
!7134 = !DILocation(line: 1739, column: 39, scope: !7060)
!7135 = !DILocation(line: 1739, column: 11, scope: !7060)
!7136 = !DILocation(line: 1740, column: 12, scope: !7060)
!7137 = !DILocation(line: 1740, column: 22, scope: !7060)
!7138 = !DILocation(line: 1740, column: 29, scope: !7060)
!7139 = !DILocation(line: 1740, column: 37, scope: !7060)
!7140 = !DILocation(line: 1740, column: 47, scope: !7060)
!7141 = !DILocation(line: 1740, column: 35, scope: !7060)
!7142 = !DILocation(line: 1740, column: 9, scope: !7060)
!7143 = !DILocation(line: 1741, column: 12, scope: !7060)
!7144 = !DILocation(line: 1741, column: 22, scope: !7060)
!7145 = !DILocation(line: 1741, column: 29, scope: !7060)
!7146 = !DILocation(line: 1741, column: 37, scope: !7060)
!7147 = !DILocation(line: 1741, column: 47, scope: !7060)
!7148 = !DILocation(line: 1741, column: 35, scope: !7060)
!7149 = !DILocation(line: 1741, column: 9, scope: !7060)
!7150 = !DILocation(line: 1742, column: 13, scope: !7060)
!7151 = !DILocation(line: 1742, column: 19, scope: !7060)
!7152 = !DILocation(line: 1742, column: 11, scope: !7060)
!7153 = !DILocation(line: 1751, column: 10, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1751, column: 9)
!7155 = !DILocation(line: 1751, column: 16, scope: !7154)
!7156 = !DILocation(line: 1751, column: 26, scope: !7154)
!7157 = !DILocation(line: 1751, column: 36, scope: !7154)
!7158 = !DILocation(line: 1751, column: 40, scope: !7154)
!7159 = !DILocation(line: 1751, column: 46, scope: !7154)
!7160 = !DILocation(line: 1751, column: 49, scope: !7154)
!7161 = !DILocation(line: 1751, column: 9, scope: !7060)
!7162 = !DILocation(line: 1752, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 1752, column: 9)
!7164 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1751, column: 55)
!7165 = !DILocation(line: 1752, column: 9, scope: !7164)
!7166 = !DILocation(line: 1755, column: 9, scope: !7164)
!7167 = !DILocation(line: 1758, column: 12, scope: !7060)
!7168 = !DILocation(line: 1758, column: 18, scope: !7060)
!7169 = !DILocation(line: 1758, column: 10, scope: !7060)
!7170 = !DILocation(line: 1760, column: 9, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1760, column: 9)
!7172 = !DILocation(line: 1760, column: 14, scope: !7171)
!7173 = !DILocation(line: 1760, column: 9, scope: !7060)
!7174 = !DILocation(line: 1762, column: 15, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1760, column: 38)
!7176 = !DILocation(line: 1764, column: 18, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1764, column: 9)
!7178 = !DILocation(line: 1764, column: 16, scope: !7177)
!7179 = !DILocation(line: 1764, column: 14, scope: !7177)
!7180 = !DILocation(line: 1765, column: 14, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1764, column: 9)
!7182 = !DILocation(line: 1765, column: 19, scope: !7181)
!7183 = !DILocation(line: 1765, column: 16, scope: !7181)
!7184 = !DILocation(line: 1765, column: 61, scope: !7181)
!7185 = !DILocation(line: 1765, column: 69, scope: !7181)
!7186 = !DILocation(line: 1765, column: 72, scope: !7181)
!7187 = !DILocation(line: 1764, column: 9, scope: !7177)
!7188 = !DILocation(line: 1768, column: 18, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 1767, column: 9)
!7190 = !DILocation(line: 1768, column: 16, scope: !7189)
!7191 = !DILocation(line: 1769, column: 23, scope: !7189)
!7192 = !DILocation(line: 1769, column: 27, scope: !7189)
!7193 = !DILocation(line: 1769, column: 36, scope: !7189)
!7194 = !DILocation(line: 1769, column: 44, scope: !7189)
!7195 = !DILocation(line: 1769, column: 48, scope: !7189)
!7196 = !DILocation(line: 1769, column: 42, scope: !7189)
!7197 = !DILocation(line: 1769, column: 20, scope: !7189)
!7198 = !DILocation(line: 1771, column: 17, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1771, column: 17)
!7200 = !DILocation(line: 1771, column: 27, scope: !7199)
!7201 = !DILocation(line: 1771, column: 24, scope: !7199)
!7202 = !DILocation(line: 1771, column: 17, scope: !7189)
!7203 = !DILocation(line: 1772, column: 17, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 1771, column: 34)
!7205 = !DILocation(line: 1776, column: 17, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1776, column: 17)
!7207 = !DILocation(line: 1776, column: 21, scope: !7206)
!7208 = !DILocation(line: 1776, column: 17, scope: !7189)
!7209 = !DILocation(line: 1777, column: 28, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 1776, column: 29)
!7211 = !DILocation(line: 1777, column: 32, scope: !7210)
!7212 = !DILocation(line: 1777, column: 42, scope: !7210)
!7213 = !DILocation(line: 1777, column: 50, scope: !7210)
!7214 = !DILocation(line: 1777, column: 54, scope: !7210)
!7215 = !DILocation(line: 1777, column: 48, scope: !7210)
!7216 = !DILocation(line: 1777, column: 25, scope: !7210)
!7217 = !DILocation(line: 1779, column: 21, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 1779, column: 21)
!7219 = !DILocation(line: 1779, column: 32, scope: !7218)
!7220 = !DILocation(line: 1779, column: 29, scope: !7218)
!7221 = !DILocation(line: 1779, column: 21, scope: !7210)
!7222 = !DILocation(line: 1780, column: 21, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1779, column: 39)
!7224 = !DILocation(line: 1782, column: 13, scope: !7210)
!7225 = !DILocation(line: 1784, column: 9, scope: !7189)
!7226 = !DILocation(line: 1766, column: 18, scope: !7181)
!7227 = !DILocation(line: 1766, column: 16, scope: !7181)
!7228 = !DILocation(line: 1764, column: 9, scope: !7181)
!7229 = distinct !{!7229, !7187, !7230}
!7230 = !DILocation(line: 1784, column: 9, scope: !7177)
!7231 = !DILocation(line: 1786, column: 9, scope: !7175)
!7232 = !DILocation(line: 1789, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1789, column: 9)
!7234 = !DILocation(line: 1789, column: 14, scope: !7233)
!7235 = !DILocation(line: 1789, column: 9, scope: !7060)
!7236 = !DILocation(line: 1790, column: 9, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1789, column: 37)
!7238 = !DILocation(line: 1793, column: 9, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1793, column: 9)
!7240 = !DILocation(line: 1793, column: 13, scope: !7239)
!7241 = !DILocation(line: 1793, column: 9, scope: !7060)
!7242 = !DILocation(line: 1794, column: 13, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1793, column: 19)
!7244 = !DILocation(line: 1795, column: 9, scope: !7243)
!7245 = !DILocation(line: 1798, column: 7, scope: !7060)
!7246 = !DILocation(line: 1800, column: 5, scope: !7060)
!7247 = !DILocation(line: 1800, column: 12, scope: !7060)
!7248 = !DILocation(line: 1800, column: 29, scope: !7060)
!7249 = !DILocation(line: 1800, column: 14, scope: !7060)
!7250 = !DILocation(line: 1801, column: 13, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 1801, column: 13)
!7252 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1800, column: 32)
!7253 = !DILocation(line: 1801, column: 17, scope: !7251)
!7254 = !DILocation(line: 1801, column: 20, scope: !7251)
!7255 = !DILocation(line: 1801, column: 13, scope: !7252)
!7256 = !DILocation(line: 1802, column: 13, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 1801, column: 29)
!7258 = !DILocation(line: 1805, column: 18, scope: !7252)
!7259 = !DILocation(line: 1805, column: 22, scope: !7252)
!7260 = !DILocation(line: 1805, column: 16, scope: !7252)
!7261 = !DILocation(line: 1805, column: 11, scope: !7252)
!7262 = distinct !{!7262, !7246, !7263}
!7263 = !DILocation(line: 1806, column: 5, scope: !7060)
!7264 = !DILocation(line: 1808, column: 5, scope: !7060)
!7265 = !DILocation(line: 1812, column: 10, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1812, column: 9)
!7267 = !DILocation(line: 1812, column: 13, scope: !7266)
!7268 = !DILocation(line: 1812, column: 9, scope: !7060)
!7269 = !DILocation(line: 1813, column: 13, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 1812, column: 44)
!7271 = !DILocation(line: 1814, column: 9, scope: !7270)
!7272 = !DILocation(line: 1817, column: 9, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1817, column: 9)
!7274 = !DILocation(line: 1817, column: 11, scope: !7273)
!7275 = !DILocation(line: 1817, column: 41, scope: !7273)
!7276 = !DILocation(line: 1817, column: 45, scope: !7273)
!7277 = !DILocation(line: 1817, column: 39, scope: !7273)
!7278 = !DILocation(line: 1818, column: 24, scope: !7273)
!7279 = !DILocation(line: 1818, column: 9, scope: !7273)
!7280 = !DILocation(line: 1817, column: 9, scope: !7060)
!7281 = !DILocation(line: 1820, column: 9, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1819, column: 5)
!7283 = !DILocation(line: 1823, column: 33, scope: !7060)
!7284 = !DILocation(line: 1823, column: 37, scope: !7060)
!7285 = !DILocation(line: 1823, column: 10, scope: !7060)
!7286 = !DILocation(line: 1823, column: 8, scope: !7060)
!7287 = !DILocation(line: 1825, column: 14, scope: !7060)
!7288 = !DILocation(line: 1825, column: 18, scope: !7060)
!7289 = !DILocation(line: 1825, column: 26, scope: !7060)
!7290 = !DILocation(line: 1825, column: 34, scope: !7060)
!7291 = !DILocation(line: 1825, column: 38, scope: !7060)
!7292 = !DILocation(line: 1825, column: 32, scope: !7060)
!7293 = !DILocation(line: 1825, column: 11, scope: !7060)
!7294 = !DILocation(line: 1826, column: 15, scope: !7060)
!7295 = !DILocation(line: 1826, column: 19, scope: !7060)
!7296 = !DILocation(line: 1826, column: 28, scope: !7060)
!7297 = !DILocation(line: 1826, column: 36, scope: !7060)
!7298 = !DILocation(line: 1826, column: 40, scope: !7060)
!7299 = !DILocation(line: 1826, column: 34, scope: !7060)
!7300 = !DILocation(line: 1826, column: 12, scope: !7060)
!7301 = !DILocation(line: 1831, column: 9, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1831, column: 9)
!7303 = !DILocation(line: 1831, column: 16, scope: !7302)
!7304 = !DILocation(line: 1831, column: 9, scope: !7060)
!7305 = !DILocation(line: 1832, column: 9, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1832, column: 9)
!7307 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 1831, column: 22)
!7308 = !DILocation(line: 1832, column: 9, scope: !7307)
!7309 = !DILocation(line: 1834, column: 9, scope: !7307)
!7310 = !DILocation(line: 1837, column: 13, scope: !7060)
!7311 = !DILocation(line: 1837, column: 5, scope: !7060)
!7312 = !DILocation(line: 1844, column: 32, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1837, column: 20)
!7314 = !DILocation(line: 1844, column: 35, scope: !7313)
!7315 = !DILocation(line: 1844, column: 40, scope: !7313)
!7316 = !DILocation(line: 1844, column: 43, scope: !7313)
!7317 = !DILocation(line: 1844, column: 50, scope: !7313)
!7318 = !DILocation(line: 1844, column: 56, scope: !7313)
!7319 = !DILocation(line: 1844, column: 63, scope: !7313)
!7320 = !DILocation(line: 1844, column: 68, scope: !7313)
!7321 = !DILocation(line: 1845, column: 32, scope: !7313)
!7322 = !DILocation(line: 1845, column: 34, scope: !7313)
!7323 = !DILocation(line: 1844, column: 9, scope: !7313)
!7324 = !DILocation(line: 1847, column: 9, scope: !7313)
!7325 = !DILocation(line: 1851, column: 34, scope: !7313)
!7326 = !DILocation(line: 1851, column: 37, scope: !7313)
!7327 = !DILocation(line: 1851, column: 42, scope: !7313)
!7328 = !DILocation(line: 1851, column: 45, scope: !7313)
!7329 = !DILocation(line: 1851, column: 52, scope: !7313)
!7330 = !DILocation(line: 1851, column: 58, scope: !7313)
!7331 = !DILocation(line: 1851, column: 63, scope: !7313)
!7332 = !DILocation(line: 1852, column: 34, scope: !7313)
!7333 = !DILocation(line: 1852, column: 36, scope: !7313)
!7334 = !DILocation(line: 1851, column: 9, scope: !7313)
!7335 = !DILocation(line: 1854, column: 9, scope: !7313)
!7336 = !DILocation(line: 1858, column: 34, scope: !7313)
!7337 = !DILocation(line: 1858, column: 37, scope: !7313)
!7338 = !DILocation(line: 1858, column: 42, scope: !7313)
!7339 = !DILocation(line: 1858, column: 45, scope: !7313)
!7340 = !DILocation(line: 1858, column: 52, scope: !7313)
!7341 = !DILocation(line: 1858, column: 58, scope: !7313)
!7342 = !DILocation(line: 1858, column: 9, scope: !7313)
!7343 = !DILocation(line: 1860, column: 9, scope: !7313)
!7344 = !DILocation(line: 1863, column: 9, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1863, column: 9)
!7346 = !DILocation(line: 1863, column: 9, scope: !7313)
!7347 = !DILocation(line: 1865, column: 9, scope: !7313)
!7348 = !DILocation(line: 1868, column: 5, scope: !7060)
!7349 = !DILocation(line: 1872, column: 9, scope: !7060)
!7350 = !DILocation(line: 1872, column: 5, scope: !7060)
!7351 = !DILocation(line: 1876, column: 5, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1876, column: 5)
!7353 = !DILocation(line: 1876, column: 5, scope: !7060)
!7354 = !DILocation(line: 1878, column: 5, scope: !7060)
!7355 = !DILocation(line: 1882, column: 5, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1882, column: 5)
!7357 = !DILocation(line: 1882, column: 5, scope: !7060)
!7358 = !DILocation(line: 1886, column: 5, scope: !7060)
!7359 = !DILocation(line: 1890, column: 5, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1890, column: 5)
!7361 = !DILocation(line: 1890, column: 5, scope: !7060)
!7362 = !DILocation(line: 1893, column: 5, scope: !7060)
!7363 = !DILocation(line: 1894, column: 1, scope: !7060)
!7364 = distinct !DISubprogram(name: "ngx_resolver_process_a", scope: !3, file: !3, line: 1898, type: !7365, isLocal: true, isDefinition: true, scopeLine: 1901, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !7367)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{null, !163, !110, !134, !82, !82, !82, !82, !82, !82}
!7367 = !{!7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378, !7379, !7380, !7382, !7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396, !7397, !7398, !7399}
!7368 = !DILocalVariable(name: "r", arg: 1, scope: !7364, file: !3, line: 1898, type: !163)
!7369 = !DILocalVariable(name: "buf", arg: 2, scope: !7364, file: !3, line: 1898, type: !110)
!7370 = !DILocalVariable(name: "n", arg: 3, scope: !7364, file: !3, line: 1898, type: !134)
!7371 = !DILocalVariable(name: "ident", arg: 4, scope: !7364, file: !3, line: 1899, type: !82)
!7372 = !DILocalVariable(name: "code", arg: 5, scope: !7364, file: !3, line: 1899, type: !82)
!7373 = !DILocalVariable(name: "qtype", arg: 6, scope: !7364, file: !3, line: 1899, type: !82)
!7374 = !DILocalVariable(name: "nan", arg: 7, scope: !7364, file: !3, line: 1900, type: !82)
!7375 = !DILocalVariable(name: "trunc", arg: 8, scope: !7364, file: !3, line: 1900, type: !82)
!7376 = !DILocalVariable(name: "ans", arg: 9, scope: !7364, file: !3, line: 1900, type: !82)
!7377 = !DILocalVariable(name: "err", scope: !7364, file: !3, line: 1902, type: !6)
!7378 = !DILocalVariable(name: "cname", scope: !7364, file: !3, line: 1903, type: !110)
!7379 = !DILocalVariable(name: "len", scope: !7364, file: !3, line: 1904, type: !134)
!7380 = !DILocalVariable(name: "ttl", scope: !7364, file: !3, line: 1905, type: !7381)
!7381 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !11, line: 166, baseType: !12)
!7382 = !DILocalVariable(name: "hash", scope: !7364, file: !3, line: 1906, type: !23)
!7383 = !DILocalVariable(name: "addr", scope: !7364, file: !3, line: 1907, type: !121)
!7384 = !DILocalVariable(name: "name", scope: !7364, file: !3, line: 1908, type: !129)
!7385 = !DILocalVariable(name: "type", scope: !7364, file: !3, line: 1909, type: !82)
!7386 = !DILocalVariable(name: "class", scope: !7364, file: !3, line: 1909, type: !82)
!7387 = !DILocalVariable(name: "qident", scope: !7364, file: !3, line: 1909, type: !82)
!7388 = !DILocalVariable(name: "naddrs", scope: !7364, file: !3, line: 1909, type: !82)
!7389 = !DILocalVariable(name: "a", scope: !7364, file: !3, line: 1909, type: !82)
!7390 = !DILocalVariable(name: "i", scope: !7364, file: !3, line: 1909, type: !82)
!7391 = !DILocalVariable(name: "j", scope: !7364, file: !3, line: 1909, type: !82)
!7392 = !DILocalVariable(name: "start", scope: !7364, file: !3, line: 1909, type: !82)
!7393 = !DILocalVariable(name: "addr6", scope: !7364, file: !3, line: 1911, type: !148)
!7394 = !DILocalVariable(name: "an", scope: !7364, file: !3, line: 1913, type: !497)
!7395 = !DILocalVariable(name: "ctx", scope: !7364, file: !3, line: 1914, type: !157)
!7396 = !DILocalVariable(name: "next", scope: !7364, file: !3, line: 1914, type: !157)
!7397 = !DILocalVariable(name: "rn", scope: !7364, file: !3, line: 1915, type: !84)
!7398 = !DILocalVariable(name: "addrs", scope: !7364, file: !3, line: 1916, type: !424)
!7399 = !DILocalVariable(name: "rec", scope: !7364, file: !3, line: 1917, type: !807)
!7400 = !DILocation(line: 1898, column: 40, scope: !7364)
!7401 = !DILocation(line: 1898, column: 51, scope: !7364)
!7402 = !DILocation(line: 1898, column: 63, scope: !7364)
!7403 = !DILocation(line: 1899, column: 16, scope: !7364)
!7404 = !DILocation(line: 1899, column: 34, scope: !7364)
!7405 = !DILocation(line: 1899, column: 51, scope: !7364)
!7406 = !DILocation(line: 1900, column: 16, scope: !7364)
!7407 = !DILocation(line: 1900, column: 32, scope: !7364)
!7408 = !DILocation(line: 1900, column: 50, scope: !7364)
!7409 = !DILocation(line: 1902, column: 5, scope: !7364)
!7410 = !DILocation(line: 1902, column: 33, scope: !7364)
!7411 = !DILocation(line: 1903, column: 5, scope: !7364)
!7412 = !DILocation(line: 1903, column: 33, scope: !7364)
!7413 = !DILocation(line: 1904, column: 5, scope: !7364)
!7414 = !DILocation(line: 1904, column: 33, scope: !7364)
!7415 = !DILocation(line: 1905, column: 5, scope: !7364)
!7416 = !DILocation(line: 1905, column: 33, scope: !7364)
!7417 = !DILocation(line: 1906, column: 5, scope: !7364)
!7418 = !DILocation(line: 1906, column: 33, scope: !7364)
!7419 = !DILocation(line: 1907, column: 5, scope: !7364)
!7420 = !DILocation(line: 1907, column: 33, scope: !7364)
!7421 = !DILocation(line: 1908, column: 5, scope: !7364)
!7422 = !DILocation(line: 1908, column: 33, scope: !7364)
!7423 = !DILocation(line: 1909, column: 5, scope: !7364)
!7424 = !DILocation(line: 1909, column: 33, scope: !7364)
!7425 = !DILocation(line: 1909, column: 39, scope: !7364)
!7426 = !DILocation(line: 1909, column: 46, scope: !7364)
!7427 = !DILocation(line: 1909, column: 54, scope: !7364)
!7428 = !DILocation(line: 1909, column: 62, scope: !7364)
!7429 = !DILocation(line: 1909, column: 65, scope: !7364)
!7430 = !DILocation(line: 1909, column: 68, scope: !7364)
!7431 = !DILocation(line: 1909, column: 71, scope: !7364)
!7432 = !DILocation(line: 1911, column: 5, scope: !7364)
!7433 = !DILocation(line: 1911, column: 33, scope: !7364)
!7434 = !DILocation(line: 1913, column: 5, scope: !7364)
!7435 = !DILocation(line: 1913, column: 33, scope: !7364)
!7436 = !DILocation(line: 1914, column: 5, scope: !7364)
!7437 = !DILocation(line: 1914, column: 33, scope: !7364)
!7438 = !DILocation(line: 1914, column: 39, scope: !7364)
!7439 = !DILocation(line: 1915, column: 5, scope: !7364)
!7440 = !DILocation(line: 1915, column: 33, scope: !7364)
!7441 = !DILocation(line: 1916, column: 5, scope: !7364)
!7442 = !DILocation(line: 1916, column: 33, scope: !7364)
!7443 = !DILocation(line: 1917, column: 5, scope: !7364)
!7444 = !DILocation(line: 1917, column: 33, scope: !7364)
!7445 = !DILocation(line: 1919, column: 27, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1919, column: 9)
!7447 = !DILocation(line: 1919, column: 37, scope: !7446)
!7448 = !DILocation(line: 1920, column: 27, scope: !7446)
!7449 = !DILocation(line: 1920, column: 31, scope: !7446)
!7450 = !DILocation(line: 1920, column: 61, scope: !7446)
!7451 = !DILocation(line: 1920, column: 67, scope: !7446)
!7452 = !DILocation(line: 1920, column: 65, scope: !7446)
!7453 = !DILocation(line: 1919, column: 9, scope: !7446)
!7454 = !DILocation(line: 1921, column: 9, scope: !7446)
!7455 = !DILocation(line: 1919, column: 9, scope: !7364)
!7456 = !DILocation(line: 1923, column: 9, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 1922, column: 5)
!7458 = !DILocation(line: 1928, column: 33, scope: !7364)
!7459 = !DILocation(line: 1928, column: 44, scope: !7364)
!7460 = !DILocation(line: 1928, column: 12, scope: !7364)
!7461 = !DILocation(line: 1928, column: 10, scope: !7364)
!7462 = !DILocation(line: 1932, column: 35, scope: !7364)
!7463 = !DILocation(line: 1932, column: 45, scope: !7364)
!7464 = !DILocation(line: 1932, column: 10, scope: !7364)
!7465 = !DILocation(line: 1932, column: 8, scope: !7364)
!7466 = !DILocation(line: 1934, column: 9, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1934, column: 9)
!7468 = !DILocation(line: 1934, column: 12, scope: !7467)
!7469 = !DILocation(line: 1934, column: 9, scope: !7364)
!7470 = !DILocation(line: 1935, column: 9, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1935, column: 9)
!7472 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 1934, column: 21)
!7473 = !DILocation(line: 1935, column: 9, scope: !7472)
!7474 = !DILocation(line: 1937, column: 27, scope: !7472)
!7475 = !DILocation(line: 1937, column: 35, scope: !7472)
!7476 = !DILocation(line: 1937, column: 9, scope: !7472)
!7477 = !DILocation(line: 1938, column: 9, scope: !7472)
!7478 = !DILocation(line: 1941, column: 13, scope: !7364)
!7479 = !DILocation(line: 1941, column: 5, scope: !7364)
!7480 = !DILocation(line: 1946, column: 13, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1946, column: 13)
!7482 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1941, column: 20)
!7483 = !DILocation(line: 1946, column: 17, scope: !7481)
!7484 = !DILocation(line: 1946, column: 24, scope: !7481)
!7485 = !DILocation(line: 1946, column: 32, scope: !7481)
!7486 = !DILocation(line: 1946, column: 35, scope: !7481)
!7487 = !DILocation(line: 1946, column: 39, scope: !7481)
!7488 = !DILocation(line: 1946, column: 47, scope: !7481)
!7489 = !DILocation(line: 1946, column: 13, scope: !7482)
!7490 = !DILocation(line: 1947, column: 13, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 1947, column: 13)
!7492 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 1946, column: 64)
!7493 = !DILocation(line: 1947, column: 13, scope: !7492)
!7494 = !DILocation(line: 1949, column: 31, scope: !7492)
!7495 = !DILocation(line: 1949, column: 39, scope: !7492)
!7496 = !DILocation(line: 1949, column: 13, scope: !7492)
!7497 = !DILocation(line: 1950, column: 13, scope: !7492)
!7498 = !DILocation(line: 1953, column: 13, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1953, column: 13)
!7500 = !DILocation(line: 1953, column: 19, scope: !7499)
!7501 = !DILocation(line: 1953, column: 22, scope: !7499)
!7502 = !DILocation(line: 1953, column: 26, scope: !7499)
!7503 = !DILocation(line: 1953, column: 13, scope: !7482)
!7504 = !DILocation(line: 1954, column: 31, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 1953, column: 32)
!7506 = !DILocation(line: 1954, column: 39, scope: !7505)
!7507 = !DILocation(line: 1954, column: 13, scope: !7505)
!7508 = !DILocation(line: 1955, column: 13, scope: !7505)
!7509 = !DILocation(line: 1958, column: 19, scope: !7482)
!7510 = !DILocation(line: 1958, column: 23, scope: !7482)
!7511 = !DILocation(line: 1958, column: 33, scope: !7482)
!7512 = !DILocation(line: 1958, column: 41, scope: !7482)
!7513 = !DILocation(line: 1958, column: 45, scope: !7482)
!7514 = !DILocation(line: 1958, column: 39, scope: !7482)
!7515 = !DILocation(line: 1958, column: 16, scope: !7482)
!7516 = !DILocation(line: 1960, column: 9, scope: !7482)
!7517 = !DILocation(line: 1965, column: 13, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1965, column: 13)
!7519 = !DILocation(line: 1965, column: 17, scope: !7518)
!7520 = !DILocation(line: 1965, column: 23, scope: !7518)
!7521 = !DILocation(line: 1965, column: 31, scope: !7518)
!7522 = !DILocation(line: 1965, column: 34, scope: !7518)
!7523 = !DILocation(line: 1965, column: 38, scope: !7518)
!7524 = !DILocation(line: 1965, column: 45, scope: !7518)
!7525 = !DILocation(line: 1965, column: 13, scope: !7482)
!7526 = !DILocation(line: 1966, column: 13, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !3, line: 1966, column: 13)
!7528 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 1965, column: 62)
!7529 = !DILocation(line: 1966, column: 13, scope: !7528)
!7530 = !DILocation(line: 1968, column: 31, scope: !7528)
!7531 = !DILocation(line: 1968, column: 39, scope: !7528)
!7532 = !DILocation(line: 1968, column: 13, scope: !7528)
!7533 = !DILocation(line: 1969, column: 13, scope: !7528)
!7534 = !DILocation(line: 1972, column: 13, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1972, column: 13)
!7536 = !DILocation(line: 1972, column: 19, scope: !7535)
!7537 = !DILocation(line: 1972, column: 22, scope: !7535)
!7538 = !DILocation(line: 1972, column: 26, scope: !7535)
!7539 = !DILocation(line: 1972, column: 13, scope: !7482)
!7540 = !DILocation(line: 1973, column: 31, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1972, column: 31)
!7542 = !DILocation(line: 1973, column: 39, scope: !7541)
!7543 = !DILocation(line: 1973, column: 13, scope: !7541)
!7544 = !DILocation(line: 1974, column: 13, scope: !7541)
!7545 = !DILocation(line: 1977, column: 19, scope: !7482)
!7546 = !DILocation(line: 1977, column: 23, scope: !7482)
!7547 = !DILocation(line: 1977, column: 32, scope: !7482)
!7548 = !DILocation(line: 1977, column: 40, scope: !7482)
!7549 = !DILocation(line: 1977, column: 44, scope: !7482)
!7550 = !DILocation(line: 1977, column: 38, scope: !7482)
!7551 = !DILocation(line: 1977, column: 16, scope: !7482)
!7552 = !DILocation(line: 1978, column: 5, scope: !7482)
!7553 = !DILocation(line: 1980, column: 9, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1980, column: 9)
!7555 = !DILocation(line: 1980, column: 18, scope: !7554)
!7556 = !DILocation(line: 1980, column: 15, scope: !7554)
!7557 = !DILocation(line: 1980, column: 9, scope: !7364)
!7558 = !DILocation(line: 1981, column: 9, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 1981, column: 9)
!7560 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1980, column: 26)
!7561 = !DILocation(line: 1981, column: 9, scope: !7560)
!7562 = !DILocation(line: 1984, column: 27, scope: !7560)
!7563 = !DILocation(line: 1984, column: 35, scope: !7560)
!7564 = !DILocation(line: 1984, column: 9, scope: !7560)
!7565 = !DILocation(line: 1985, column: 9, scope: !7560)
!7566 = !DILocation(line: 1988, column: 23, scope: !7364)
!7567 = !DILocation(line: 1988, column: 31, scope: !7364)
!7568 = !DILocation(line: 1988, column: 5, scope: !7364)
!7569 = !DILocation(line: 1990, column: 9, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1990, column: 9)
!7571 = !DILocation(line: 1990, column: 9, scope: !7364)
!7572 = !DILocation(line: 1992, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1990, column: 16)
!7574 = !DILocation(line: 1994, column: 13, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 1994, column: 13)
!7576 = !DILocation(line: 1994, column: 17, scope: !7575)
!7577 = !DILocation(line: 1994, column: 25, scope: !7575)
!7578 = !DILocation(line: 1994, column: 13, scope: !7573)
!7579 = !DILocation(line: 1995, column: 32, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1994, column: 34)
!7581 = !DILocation(line: 1995, column: 35, scope: !7580)
!7582 = !DILocation(line: 1995, column: 49, scope: !7580)
!7583 = !DILocation(line: 1995, column: 53, scope: !7580)
!7584 = !DILocation(line: 1995, column: 13, scope: !7580)
!7585 = !DILocation(line: 1996, column: 36, scope: !7580)
!7586 = !DILocation(line: 1996, column: 39, scope: !7580)
!7587 = !DILocation(line: 1996, column: 13, scope: !7580)
!7588 = !DILocation(line: 1997, column: 13, scope: !7580)
!7589 = !DILocation(line: 2000, column: 15, scope: !7573)
!7590 = !DILocation(line: 2000, column: 18, scope: !7573)
!7591 = !DILocation(line: 2000, column: 30, scope: !7573)
!7592 = !DILocation(line: 2000, column: 13, scope: !7573)
!7593 = !DILocation(line: 2001, column: 16, scope: !7573)
!7594 = !DILocation(line: 2001, column: 20, scope: !7573)
!7595 = !DILocation(line: 2001, column: 24, scope: !7573)
!7596 = !DILocation(line: 2001, column: 13, scope: !7573)
!7597 = !DILocation(line: 2003, column: 17, scope: !7573)
!7598 = !DILocation(line: 2003, column: 9, scope: !7573)
!7599 = !DILocation(line: 2008, column: 13, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 2003, column: 24)
!7601 = !DILocation(line: 2008, column: 17, scope: !7600)
!7602 = !DILocation(line: 2008, column: 22, scope: !7600)
!7603 = !DILocation(line: 2010, column: 48, scope: !7600)
!7604 = !DILocation(line: 2010, column: 51, scope: !7600)
!7605 = !DILocation(line: 2010, column: 56, scope: !7600)
!7606 = !DILocation(line: 2010, column: 60, scope: !7600)
!7607 = !DILocation(line: 2010, column: 68, scope: !7600)
!7608 = !DILocation(line: 2010, column: 72, scope: !7600)
!7609 = !DILocation(line: 2010, column: 20, scope: !7600)
!7610 = !DILocation(line: 2012, column: 13, scope: !7600)
!7611 = !DILocation(line: 2017, column: 13, scope: !7600)
!7612 = !DILocation(line: 2017, column: 17, scope: !7600)
!7613 = !DILocation(line: 2017, column: 21, scope: !7600)
!7614 = !DILocation(line: 2019, column: 48, scope: !7600)
!7615 = !DILocation(line: 2019, column: 51, scope: !7600)
!7616 = !DILocation(line: 2019, column: 56, scope: !7600)
!7617 = !DILocation(line: 2019, column: 60, scope: !7600)
!7618 = !DILocation(line: 2019, column: 67, scope: !7600)
!7619 = !DILocation(line: 2019, column: 71, scope: !7600)
!7620 = !DILocation(line: 2019, column: 20, scope: !7600)
!7621 = !DILocation(line: 2020, column: 9, scope: !7600)
!7622 = !DILocation(line: 2022, column: 22, scope: !7573)
!7623 = !DILocation(line: 2022, column: 35, scope: !7573)
!7624 = !DILocation(line: 2022, column: 38, scope: !7573)
!7625 = !DILocation(line: 2022, column: 33, scope: !7573)
!7626 = !DILocation(line: 2022, column: 9, scope: !7573)
!7627 = !DILocation(line: 2022, column: 13, scope: !7573)
!7628 = !DILocation(line: 2022, column: 20, scope: !7573)
!7629 = !DILocation(line: 2024, column: 9, scope: !7573)
!7630 = !DILocation(line: 2026, column: 9, scope: !7573)
!7631 = !DILocation(line: 2029, column: 9, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2029, column: 9)
!7633 = !DILocation(line: 2029, column: 14, scope: !7632)
!7634 = !DILocation(line: 2029, column: 19, scope: !7632)
!7635 = !DILocation(line: 2029, column: 22, scope: !7632)
!7636 = !DILocation(line: 2029, column: 26, scope: !7632)
!7637 = !DILocation(line: 2029, column: 9, scope: !7364)
!7638 = !DILocation(line: 2030, column: 16, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 2029, column: 32)
!7640 = !DILocation(line: 2030, column: 20, scope: !7639)
!7641 = !DILocation(line: 2030, column: 14, scope: !7639)
!7642 = !DILocation(line: 2031, column: 5, scope: !7639)
!7643 = !DILocation(line: 2033, column: 9, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2033, column: 9)
!7645 = !DILocation(line: 2033, column: 14, scope: !7644)
!7646 = !DILocation(line: 2033, column: 19, scope: !7644)
!7647 = !DILocation(line: 2033, column: 22, scope: !7644)
!7648 = !DILocation(line: 2033, column: 26, scope: !7644)
!7649 = !DILocation(line: 2033, column: 9, scope: !7364)
!7650 = !DILocation(line: 2036, column: 17, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2033, column: 32)
!7652 = !DILocation(line: 2036, column: 9, scope: !7651)
!7653 = !DILocation(line: 2040, column: 13, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 2036, column: 24)
!7655 = !DILocation(line: 2040, column: 17, scope: !7654)
!7656 = !DILocation(line: 2040, column: 25, scope: !7654)
!7657 = !DILocation(line: 2042, column: 17, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2042, column: 17)
!7659 = !DILocation(line: 2042, column: 21, scope: !7658)
!7660 = !DILocation(line: 2042, column: 28, scope: !7658)
!7661 = !DILocation(line: 2042, column: 17, scope: !7654)
!7662 = !DILocation(line: 2043, column: 17, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 2042, column: 45)
!7664 = !DILocation(line: 2046, column: 17, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2046, column: 17)
!7666 = !DILocation(line: 2046, column: 21, scope: !7665)
!7667 = !DILocation(line: 2046, column: 17, scope: !7654)
!7668 = !DILocation(line: 2047, column: 17, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 2046, column: 29)
!7670 = !DILocation(line: 2050, column: 13, scope: !7654)
!7671 = !DILocation(line: 2054, column: 13, scope: !7654)
!7672 = !DILocation(line: 2054, column: 17, scope: !7654)
!7673 = !DILocation(line: 2054, column: 24, scope: !7654)
!7674 = !DILocation(line: 2056, column: 17, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2056, column: 17)
!7676 = !DILocation(line: 2056, column: 21, scope: !7675)
!7677 = !DILocation(line: 2056, column: 29, scope: !7675)
!7678 = !DILocation(line: 2056, column: 17, scope: !7654)
!7679 = !DILocation(line: 2057, column: 17, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 2056, column: 46)
!7681 = !DILocation(line: 2060, column: 17, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2060, column: 17)
!7683 = !DILocation(line: 2060, column: 21, scope: !7682)
!7684 = !DILocation(line: 2060, column: 17, scope: !7654)
!7685 = !DILocation(line: 2061, column: 17, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 2060, column: 30)
!7687 = !DILocation(line: 2063, column: 9, scope: !7654)
!7688 = !DILocation(line: 2066, column: 14, scope: !7651)
!7689 = !DILocation(line: 2067, column: 5, scope: !7651)
!7690 = !DILocation(line: 2069, column: 9, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2069, column: 9)
!7692 = !DILocation(line: 2069, column: 9, scope: !7364)
!7693 = !DILocation(line: 2072, column: 17, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 2069, column: 15)
!7695 = !DILocation(line: 2072, column: 9, scope: !7694)
!7696 = !DILocation(line: 2076, column: 13, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2072, column: 24)
!7698 = !DILocation(line: 2076, column: 17, scope: !7697)
!7699 = !DILocation(line: 2076, column: 25, scope: !7697)
!7700 = !DILocation(line: 2078, column: 17, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2078, column: 17)
!7702 = !DILocation(line: 2078, column: 21, scope: !7701)
!7703 = !DILocation(line: 2078, column: 28, scope: !7701)
!7704 = !DILocation(line: 2078, column: 17, scope: !7697)
!7705 = !DILocation(line: 2079, column: 37, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 2078, column: 45)
!7707 = !DILocation(line: 2079, column: 28, scope: !7706)
!7708 = !DILocation(line: 2079, column: 17, scope: !7706)
!7709 = !DILocation(line: 2079, column: 21, scope: !7706)
!7710 = !DILocation(line: 2079, column: 26, scope: !7706)
!7711 = !DILocation(line: 2080, column: 17, scope: !7706)
!7712 = !DILocation(line: 2083, column: 13, scope: !7697)
!7713 = !DILocation(line: 2087, column: 13, scope: !7697)
!7714 = !DILocation(line: 2087, column: 17, scope: !7697)
!7715 = !DILocation(line: 2087, column: 24, scope: !7697)
!7716 = !DILocation(line: 2089, column: 17, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2089, column: 17)
!7718 = !DILocation(line: 2089, column: 21, scope: !7717)
!7719 = !DILocation(line: 2089, column: 29, scope: !7717)
!7720 = !DILocation(line: 2089, column: 17, scope: !7697)
!7721 = !DILocation(line: 2090, column: 37, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2089, column: 46)
!7723 = !DILocation(line: 2090, column: 28, scope: !7722)
!7724 = !DILocation(line: 2090, column: 17, scope: !7722)
!7725 = !DILocation(line: 2090, column: 21, scope: !7722)
!7726 = !DILocation(line: 2090, column: 26, scope: !7722)
!7727 = !DILocation(line: 2091, column: 17, scope: !7722)
!7728 = !DILocation(line: 2093, column: 9, scope: !7697)
!7729 = !DILocation(line: 2096, column: 16, scope: !7694)
!7730 = !DILocation(line: 2096, column: 20, scope: !7694)
!7731 = !DILocation(line: 2096, column: 14, scope: !7694)
!7732 = !DILocation(line: 2097, column: 9, scope: !7694)
!7733 = !DILocation(line: 2097, column: 13, scope: !7694)
!7734 = !DILocation(line: 2097, column: 21, scope: !7694)
!7735 = !DILocation(line: 2099, column: 9, scope: !7694)
!7736 = !DILocation(line: 2101, column: 28, scope: !7694)
!7737 = !DILocation(line: 2101, column: 31, scope: !7694)
!7738 = !DILocation(line: 2101, column: 45, scope: !7694)
!7739 = !DILocation(line: 2101, column: 49, scope: !7694)
!7740 = !DILocation(line: 2101, column: 9, scope: !7694)
!7741 = !DILocation(line: 2105, column: 9, scope: !7694)
!7742 = !DILocation(line: 2105, column: 16, scope: !7694)
!7743 = !DILocation(line: 2106, column: 19, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2105, column: 22)
!7745 = !DILocation(line: 2106, column: 17, scope: !7744)
!7746 = !DILocation(line: 2107, column: 26, scope: !7744)
!7747 = !DILocation(line: 2107, column: 13, scope: !7744)
!7748 = !DILocation(line: 2107, column: 18, scope: !7744)
!7749 = !DILocation(line: 2107, column: 24, scope: !7744)
!7750 = !DILocation(line: 2108, column: 26, scope: !7744)
!7751 = !DILocation(line: 2108, column: 40, scope: !7744)
!7752 = !DILocation(line: 2108, column: 43, scope: !7744)
!7753 = !DILocation(line: 2108, column: 51, scope: !7744)
!7754 = !DILocation(line: 2108, column: 54, scope: !7744)
!7755 = !DILocation(line: 2108, column: 37, scope: !7744)
!7756 = !DILocation(line: 2108, column: 13, scope: !7744)
!7757 = !DILocation(line: 2108, column: 18, scope: !7744)
!7758 = !DILocation(line: 2108, column: 24, scope: !7744)
!7759 = !DILocation(line: 2109, column: 20, scope: !7744)
!7760 = !DILocation(line: 2109, column: 25, scope: !7744)
!7761 = !DILocation(line: 2109, column: 18, scope: !7744)
!7762 = !DILocation(line: 2111, column: 13, scope: !7744)
!7763 = !DILocation(line: 2111, column: 18, scope: !7744)
!7764 = !DILocation(line: 2111, column: 26, scope: !7744)
!7765 = distinct !{!7765, !7741, !7766}
!7766 = !DILocation(line: 2112, column: 9, scope: !7694)
!7767 = !DILocation(line: 2114, column: 32, scope: !7694)
!7768 = !DILocation(line: 2114, column: 35, scope: !7694)
!7769 = !DILocation(line: 2114, column: 9, scope: !7694)
!7770 = !DILocation(line: 2116, column: 9, scope: !7694)
!7771 = !DILocation(line: 2119, column: 9, scope: !7364)
!7772 = !DILocation(line: 2119, column: 7, scope: !7364)
!7773 = !DILocation(line: 2120, column: 12, scope: !7364)
!7774 = !DILocation(line: 2121, column: 11, scope: !7364)
!7775 = !DILocation(line: 2123, column: 12, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2123, column: 5)
!7777 = !DILocation(line: 2123, column: 10, scope: !7776)
!7778 = !DILocation(line: 2123, column: 17, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 2123, column: 5)
!7780 = !DILocation(line: 2123, column: 21, scope: !7779)
!7781 = !DILocation(line: 2123, column: 19, scope: !7779)
!7782 = !DILocation(line: 2123, column: 5, scope: !7776)
!7783 = !DILocation(line: 2125, column: 17, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2123, column: 31)
!7785 = !DILocation(line: 2125, column: 15, scope: !7784)
!7786 = !DILocation(line: 2127, column: 9, scope: !7784)
!7787 = !DILocation(line: 2127, column: 16, scope: !7784)
!7788 = !DILocation(line: 2127, column: 20, scope: !7784)
!7789 = !DILocation(line: 2127, column: 18, scope: !7784)
!7790 = !DILocation(line: 2129, column: 17, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 2129, column: 17)
!7792 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2127, column: 23)
!7793 = !DILocation(line: 2129, column: 21, scope: !7791)
!7794 = !DILocation(line: 2129, column: 24, scope: !7791)
!7795 = !DILocation(line: 2129, column: 17, scope: !7792)
!7796 = !DILocation(line: 2130, column: 19, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 2129, column: 32)
!7798 = !DILocation(line: 2131, column: 17, scope: !7797)
!7799 = !DILocation(line: 2134, column: 17, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 2134, column: 17)
!7801 = !DILocation(line: 2134, column: 21, scope: !7800)
!7802 = !DILocation(line: 2134, column: 24, scope: !7800)
!7803 = !DILocation(line: 2134, column: 17, scope: !7792)
!7804 = !DILocation(line: 2135, column: 18, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 2134, column: 30)
!7806 = !DILocation(line: 2136, column: 17, scope: !7805)
!7807 = !DILocation(line: 2139, column: 22, scope: !7792)
!7808 = !DILocation(line: 2139, column: 26, scope: !7792)
!7809 = !DILocation(line: 2139, column: 20, scope: !7792)
!7810 = !DILocation(line: 2139, column: 15, scope: !7792)
!7811 = distinct !{!7811, !7786, !7812}
!7812 = !DILocation(line: 2140, column: 9, scope: !7784)
!7813 = !DILocation(line: 2142, column: 9, scope: !7784)
!7814 = !DILocation(line: 2146, column: 13, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2146, column: 13)
!7816 = !DILocation(line: 2146, column: 17, scope: !7815)
!7817 = !DILocation(line: 2146, column: 15, scope: !7815)
!7818 = !DILocation(line: 2146, column: 23, scope: !7815)
!7819 = !DILocation(line: 2146, column: 13, scope: !7784)
!7820 = !DILocation(line: 2147, column: 17, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 2146, column: 28)
!7822 = !DILocation(line: 2148, column: 13, scope: !7821)
!7823 = !DILocation(line: 2146, column: 25, scope: !7815)
!7824 = !DILocation(line: 2153, column: 13, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2153, column: 13)
!7826 = !DILocation(line: 2153, column: 15, scope: !7825)
!7827 = !DILocation(line: 2153, column: 46, scope: !7825)
!7828 = !DILocation(line: 2153, column: 43, scope: !7825)
!7829 = !DILocation(line: 2153, column: 13, scope: !7784)
!7830 = !DILocation(line: 2154, column: 13, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 2153, column: 49)
!7832 = !DILocation(line: 2157, column: 37, scope: !7784)
!7833 = !DILocation(line: 2157, column: 41, scope: !7784)
!7834 = !DILocation(line: 2157, column: 14, scope: !7784)
!7835 = !DILocation(line: 2157, column: 12, scope: !7784)
!7836 = !DILocation(line: 2159, column: 17, scope: !7784)
!7837 = !DILocation(line: 2159, column: 21, scope: !7784)
!7838 = !{!7839, !822, i64 0}
!7839 = !{!"", !822, i64 0, !822, i64 1, !822, i64 2, !822, i64 3, !822, i64 4, !822, i64 8, !822, i64 9}
!7840 = !DILocation(line: 2159, column: 29, scope: !7784)
!7841 = !DILocation(line: 2159, column: 37, scope: !7784)
!7842 = !DILocation(line: 2159, column: 41, scope: !7784)
!7843 = !{!7839, !822, i64 1}
!7844 = !DILocation(line: 2159, column: 35, scope: !7784)
!7845 = !DILocation(line: 2159, column: 14, scope: !7784)
!7846 = !DILocation(line: 2160, column: 18, scope: !7784)
!7847 = !DILocation(line: 2160, column: 22, scope: !7784)
!7848 = !{!7839, !822, i64 2}
!7849 = !DILocation(line: 2160, column: 31, scope: !7784)
!7850 = !DILocation(line: 2160, column: 39, scope: !7784)
!7851 = !DILocation(line: 2160, column: 43, scope: !7784)
!7852 = !{!7839, !822, i64 3}
!7853 = !DILocation(line: 2160, column: 37, scope: !7784)
!7854 = !DILocation(line: 2160, column: 15, scope: !7784)
!7855 = !DILocation(line: 2161, column: 16, scope: !7784)
!7856 = !DILocation(line: 2161, column: 20, scope: !7784)
!7857 = !{!7839, !822, i64 8}
!7858 = !DILocation(line: 2161, column: 27, scope: !7784)
!7859 = !DILocation(line: 2161, column: 35, scope: !7784)
!7860 = !DILocation(line: 2161, column: 39, scope: !7784)
!7861 = !{!7839, !822, i64 9}
!7862 = !DILocation(line: 2161, column: 33, scope: !7784)
!7863 = !DILocation(line: 2161, column: 13, scope: !7784)
!7864 = !DILocation(line: 2162, column: 16, scope: !7784)
!7865 = !DILocation(line: 2162, column: 20, scope: !7784)
!7866 = !DILocation(line: 2162, column: 27, scope: !7784)
!7867 = !DILocation(line: 2162, column: 37, scope: !7784)
!7868 = !DILocation(line: 2162, column: 41, scope: !7784)
!7869 = !DILocation(line: 2162, column: 48, scope: !7784)
!7870 = !DILocation(line: 2162, column: 34, scope: !7784)
!7871 = !DILocation(line: 2163, column: 16, scope: !7784)
!7872 = !DILocation(line: 2163, column: 20, scope: !7784)
!7873 = !DILocation(line: 2163, column: 27, scope: !7784)
!7874 = !DILocation(line: 2163, column: 13, scope: !7784)
!7875 = !DILocation(line: 2163, column: 36, scope: !7784)
!7876 = !DILocation(line: 2163, column: 40, scope: !7784)
!7877 = !DILocation(line: 2163, column: 35, scope: !7784)
!7878 = !DILocation(line: 2163, column: 33, scope: !7784)
!7879 = !DILocation(line: 2162, column: 13, scope: !7784)
!7880 = !DILocation(line: 2165, column: 13, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2165, column: 13)
!7882 = !DILocation(line: 2165, column: 19, scope: !7881)
!7883 = !DILocation(line: 2165, column: 13, scope: !7784)
!7884 = !DILocation(line: 2166, column: 13, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 2166, column: 13)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 2165, column: 25)
!7887 = !DILocation(line: 2166, column: 13, scope: !7886)
!7888 = !DILocation(line: 2168, column: 13, scope: !7886)
!7889 = !DILocation(line: 2171, column: 13, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2171, column: 13)
!7891 = !DILocation(line: 2171, column: 17, scope: !7890)
!7892 = !DILocation(line: 2171, column: 13, scope: !7784)
!7893 = !DILocation(line: 2172, column: 17, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2171, column: 22)
!7895 = !DILocation(line: 2173, column: 9, scope: !7894)
!7896 = !DILocation(line: 2175, column: 19, scope: !7784)
!7897 = !DILocation(line: 2175, column: 9, scope: !7784)
!7898 = !DILocation(line: 2175, column: 13, scope: !7784)
!7899 = !DILocation(line: 2175, column: 17, scope: !7784)
!7900 = !DILocation(line: 2177, column: 11, scope: !7784)
!7901 = !DILocation(line: 2179, column: 17, scope: !7784)
!7902 = !DILocation(line: 2179, column: 9, scope: !7784)
!7903 = !DILocation(line: 2183, column: 17, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2183, column: 17)
!7905 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 2179, column: 23)
!7906 = !DILocation(line: 2183, column: 23, scope: !7904)
!7907 = !DILocation(line: 2183, column: 17, scope: !7905)
!7908 = !DILocation(line: 2184, column: 21, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 2183, column: 41)
!7910 = !DILocation(line: 2185, column: 17, scope: !7909)
!7911 = !DILocation(line: 2188, column: 17, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2188, column: 17)
!7913 = !DILocation(line: 2188, column: 21, scope: !7912)
!7914 = !DILocation(line: 2188, column: 17, scope: !7905)
!7915 = !DILocation(line: 2189, column: 21, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 2188, column: 27)
!7917 = !DILocation(line: 2190, column: 17, scope: !7916)
!7918 = !DILocation(line: 2193, column: 17, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2193, column: 17)
!7920 = !DILocation(line: 2193, column: 19, scope: !7919)
!7921 = !DILocation(line: 2193, column: 25, scope: !7919)
!7922 = !DILocation(line: 2193, column: 23, scope: !7919)
!7923 = !DILocation(line: 2193, column: 17, scope: !7905)
!7924 = !DILocation(line: 2194, column: 17, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2193, column: 28)
!7926 = !DILocation(line: 2197, column: 19, scope: !7905)
!7927 = !DILocation(line: 2199, column: 13, scope: !7905)
!7928 = !DILocation(line: 2204, column: 17, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2204, column: 17)
!7930 = !DILocation(line: 2204, column: 23, scope: !7929)
!7931 = !DILocation(line: 2204, column: 17, scope: !7905)
!7932 = !DILocation(line: 2205, column: 21, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 2204, column: 44)
!7934 = !DILocation(line: 2206, column: 17, scope: !7933)
!7935 = !DILocation(line: 2209, column: 17, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2209, column: 17)
!7937 = !DILocation(line: 2209, column: 21, scope: !7936)
!7938 = !DILocation(line: 2209, column: 17, scope: !7905)
!7939 = !DILocation(line: 2210, column: 21, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 2209, column: 28)
!7941 = !DILocation(line: 2211, column: 17, scope: !7940)
!7942 = !DILocation(line: 2214, column: 17, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2214, column: 17)
!7944 = !DILocation(line: 2214, column: 19, scope: !7943)
!7945 = !DILocation(line: 2214, column: 26, scope: !7943)
!7946 = !DILocation(line: 2214, column: 24, scope: !7943)
!7947 = !DILocation(line: 2214, column: 17, scope: !7905)
!7948 = !DILocation(line: 2215, column: 17, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2214, column: 29)
!7950 = !DILocation(line: 2218, column: 19, scope: !7905)
!7951 = !DILocation(line: 2220, column: 13, scope: !7905)
!7952 = !DILocation(line: 2225, column: 22, scope: !7905)
!7953 = !DILocation(line: 2225, column: 26, scope: !7905)
!7954 = !DILocation(line: 2225, column: 19, scope: !7905)
!7955 = !DILocation(line: 2227, column: 13, scope: !7905)
!7956 = !DILocation(line: 2235, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2235, column: 13)
!7958 = !DILocation(line: 2235, column: 13, scope: !7905)
!7959 = !DILocation(line: 2237, column: 9, scope: !7905)
!7960 = !DILocation(line: 2239, column: 14, scope: !7784)
!7961 = !DILocation(line: 2239, column: 11, scope: !7784)
!7962 = !DILocation(line: 2240, column: 5, scope: !7784)
!7963 = !DILocation(line: 2123, column: 27, scope: !7779)
!7964 = !DILocation(line: 2123, column: 5, scope: !7779)
!7965 = distinct !{!7965, !7782, !7966}
!7966 = !DILocation(line: 2240, column: 5, scope: !7776)
!7967 = !DILocation(line: 2246, column: 9, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2246, column: 9)
!7969 = !DILocation(line: 2246, column: 9, scope: !7364)
!7970 = !DILocation(line: 2248, column: 17, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 2246, column: 17)
!7972 = !DILocation(line: 2248, column: 9, scope: !7971)
!7973 = !DILocation(line: 2253, column: 17, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2253, column: 17)
!7975 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 2248, column: 24)
!7976 = !DILocation(line: 2253, column: 24, scope: !7974)
!7977 = !DILocation(line: 2253, column: 17, scope: !7975)
!7978 = !DILocation(line: 2254, column: 26, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2253, column: 30)
!7980 = !DILocation(line: 2254, column: 30, scope: !7979)
!7981 = !DILocation(line: 2254, column: 33, scope: !7979)
!7982 = !DILocation(line: 2254, column: 23, scope: !7979)
!7983 = !DILocation(line: 2255, column: 17, scope: !7979)
!7984 = !DILocation(line: 2255, column: 21, scope: !7979)
!7985 = !DILocation(line: 2255, column: 29, scope: !7979)
!7986 = !DILocation(line: 2257, column: 13, scope: !7979)
!7987 = !DILocation(line: 2258, column: 44, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 2257, column: 20)
!7989 = !DILocation(line: 2258, column: 47, scope: !7988)
!7990 = !DILocation(line: 2258, column: 54, scope: !7988)
!7991 = !DILocation(line: 2258, column: 25, scope: !7988)
!7992 = !DILocation(line: 2258, column: 23, scope: !7988)
!7993 = !DILocation(line: 2259, column: 21, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 2259, column: 21)
!7995 = !DILocation(line: 2259, column: 27, scope: !7994)
!7996 = !DILocation(line: 2259, column: 21, scope: !7988)
!7997 = !DILocation(line: 2260, column: 21, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2259, column: 36)
!7999 = !DILocation(line: 2263, column: 33, scope: !7988)
!8000 = !DILocation(line: 2263, column: 17, scope: !7988)
!8001 = !DILocation(line: 2263, column: 21, scope: !7988)
!8002 = !DILocation(line: 2263, column: 24, scope: !7988)
!8003 = !DILocation(line: 2263, column: 31, scope: !7988)
!8004 = !DILocation(line: 2264, column: 41, scope: !7988)
!8005 = !DILocation(line: 2264, column: 31, scope: !7988)
!8006 = !DILocation(line: 2264, column: 17, scope: !7988)
!8007 = !DILocation(line: 2264, column: 21, scope: !7988)
!8008 = !DILocation(line: 2264, column: 29, scope: !7988)
!8009 = !DILocation(line: 2268, column: 18, scope: !7975)
!8010 = !DILocation(line: 2271, column: 13, scope: !7975)
!8011 = !DILocation(line: 2276, column: 17, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2276, column: 17)
!8013 = !DILocation(line: 2276, column: 24, scope: !8012)
!8014 = !DILocation(line: 2276, column: 17, scope: !7975)
!8015 = !DILocation(line: 2277, column: 25, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 2276, column: 30)
!8017 = !DILocation(line: 2277, column: 29, scope: !8016)
!8018 = !DILocation(line: 2277, column: 31, scope: !8016)
!8019 = !DILocation(line: 2277, column: 22, scope: !8016)
!8020 = !DILocation(line: 2278, column: 17, scope: !8016)
!8021 = !DILocation(line: 2278, column: 21, scope: !8016)
!8022 = !DILocation(line: 2278, column: 28, scope: !8016)
!8023 = !DILocation(line: 2280, column: 13, scope: !8016)
!8024 = !DILocation(line: 2281, column: 43, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 2280, column: 20)
!8026 = !DILocation(line: 2281, column: 46, scope: !8025)
!8027 = !DILocation(line: 2281, column: 53, scope: !8025)
!8028 = !DILocation(line: 2281, column: 24, scope: !8025)
!8029 = !DILocation(line: 2281, column: 22, scope: !8025)
!8030 = !DILocation(line: 2282, column: 21, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2282, column: 21)
!8032 = !DILocation(line: 2282, column: 26, scope: !8031)
!8033 = !DILocation(line: 2282, column: 21, scope: !8025)
!8034 = !DILocation(line: 2283, column: 21, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 2282, column: 35)
!8036 = !DILocation(line: 2286, column: 31, scope: !8025)
!8037 = !DILocation(line: 2286, column: 17, scope: !8025)
!8038 = !DILocation(line: 2286, column: 21, scope: !8025)
!8039 = !DILocation(line: 2286, column: 23, scope: !8025)
!8040 = !DILocation(line: 2286, column: 29, scope: !8025)
!8041 = !DILocation(line: 2287, column: 40, scope: !8025)
!8042 = !DILocation(line: 2287, column: 30, scope: !8025)
!8043 = !DILocation(line: 2287, column: 17, scope: !8025)
!8044 = !DILocation(line: 2287, column: 21, scope: !8025)
!8045 = !DILocation(line: 2287, column: 28, scope: !8025)
!8046 = !DILocation(line: 2291, column: 19, scope: !7975)
!8047 = !DILocation(line: 2293, column: 9, scope: !7975)
!8048 = !DILocation(line: 2295, column: 11, scope: !7971)
!8049 = !DILocation(line: 2296, column: 13, scope: !7971)
!8050 = !DILocation(line: 2296, column: 11, scope: !7971)
!8051 = !DILocation(line: 2298, column: 16, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 2298, column: 9)
!8053 = !DILocation(line: 2298, column: 14, scope: !8052)
!8054 = !DILocation(line: 2298, column: 21, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 2298, column: 9)
!8056 = !DILocation(line: 2298, column: 25, scope: !8055)
!8057 = !DILocation(line: 2298, column: 23, scope: !8055)
!8058 = !DILocation(line: 2298, column: 9, scope: !8052)
!8059 = !DILocation(line: 2300, column: 13, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2298, column: 35)
!8061 = !DILocation(line: 2302, column: 21, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2302, column: 21)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2300, column: 24)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2300, column: 13)
!8065 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2300, column: 13)
!8066 = !DILocation(line: 2302, column: 25, scope: !8062)
!8067 = !DILocation(line: 2302, column: 28, scope: !8062)
!8068 = !DILocation(line: 2302, column: 21, scope: !8063)
!8069 = !DILocation(line: 2303, column: 23, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 2302, column: 36)
!8071 = !DILocation(line: 2304, column: 21, scope: !8070)
!8072 = !DILocation(line: 2307, column: 21, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2307, column: 21)
!8074 = !DILocation(line: 2307, column: 25, scope: !8073)
!8075 = !DILocation(line: 2307, column: 28, scope: !8073)
!8076 = !DILocation(line: 2307, column: 21, scope: !8063)
!8077 = !DILocation(line: 2308, column: 22, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 2307, column: 34)
!8079 = !DILocation(line: 2309, column: 21, scope: !8078)
!8080 = !DILocation(line: 2312, column: 26, scope: !8063)
!8081 = !DILocation(line: 2312, column: 30, scope: !8063)
!8082 = !DILocation(line: 2312, column: 24, scope: !8063)
!8083 = !DILocation(line: 2312, column: 19, scope: !8063)
!8084 = !DILocation(line: 2300, column: 13, scope: !8064)
!8085 = distinct !{!8085, !8086, !8087}
!8086 = !DILocation(line: 2300, column: 13, scope: !8065)
!8087 = !DILocation(line: 2313, column: 13, scope: !8065)
!8088 = !DILocation(line: 2315, column: 41, scope: !8060)
!8089 = !DILocation(line: 2315, column: 45, scope: !8060)
!8090 = !DILocation(line: 2315, column: 18, scope: !8060)
!8091 = !DILocation(line: 2315, column: 16, scope: !8060)
!8092 = !DILocation(line: 2317, column: 21, scope: !8060)
!8093 = !DILocation(line: 2317, column: 25, scope: !8060)
!8094 = !DILocation(line: 2317, column: 33, scope: !8060)
!8095 = !DILocation(line: 2317, column: 41, scope: !8060)
!8096 = !DILocation(line: 2317, column: 45, scope: !8060)
!8097 = !DILocation(line: 2317, column: 39, scope: !8060)
!8098 = !DILocation(line: 2317, column: 18, scope: !8060)
!8099 = !DILocation(line: 2318, column: 20, scope: !8060)
!8100 = !DILocation(line: 2318, column: 24, scope: !8060)
!8101 = !DILocation(line: 2318, column: 31, scope: !8060)
!8102 = !DILocation(line: 2318, column: 39, scope: !8060)
!8103 = !DILocation(line: 2318, column: 43, scope: !8060)
!8104 = !DILocation(line: 2318, column: 37, scope: !8060)
!8105 = !DILocation(line: 2318, column: 17, scope: !8060)
!8106 = !DILocation(line: 2320, column: 15, scope: !8060)
!8107 = !DILocation(line: 2322, column: 17, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2322, column: 17)
!8109 = !DILocation(line: 2322, column: 22, scope: !8108)
!8110 = !DILocation(line: 2322, column: 17, scope: !8060)
!8111 = !DILocation(line: 2324, column: 34, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2322, column: 40)
!8113 = !DILocation(line: 2324, column: 38, scope: !8112)
!8114 = !DILocation(line: 2324, column: 41, scope: !8112)
!8115 = !DILocation(line: 2324, column: 51, scope: !8112)
!8116 = !DILocation(line: 2324, column: 55, scope: !8112)
!8117 = !DILocation(line: 2324, column: 57, scope: !8112)
!8118 = !DILocation(line: 2324, column: 62, scope: !8112)
!8119 = !DILocation(line: 2324, column: 48, scope: !8112)
!8120 = !DILocation(line: 2325, column: 36, scope: !8112)
!8121 = !DILocation(line: 2325, column: 40, scope: !8112)
!8122 = !DILocation(line: 2325, column: 42, scope: !8112)
!8123 = !DILocation(line: 2325, column: 47, scope: !8112)
!8124 = !DILocation(line: 2325, column: 33, scope: !8112)
!8125 = !DILocation(line: 2325, column: 56, scope: !8112)
!8126 = !DILocation(line: 2325, column: 60, scope: !8112)
!8127 = !DILocation(line: 2325, column: 62, scope: !8112)
!8128 = !DILocation(line: 2325, column: 55, scope: !8112)
!8129 = !DILocation(line: 2325, column: 53, scope: !8112)
!8130 = !DILocation(line: 2324, column: 27, scope: !8112)
!8131 = !DILocation(line: 2324, column: 17, scope: !8112)
!8132 = !DILocation(line: 2324, column: 22, scope: !8112)
!8133 = !DILocation(line: 2324, column: 25, scope: !8112)
!8134 = !DILocation(line: 2327, column: 21, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 2327, column: 21)
!8136 = !DILocation(line: 2327, column: 28, scope: !8135)
!8137 = !DILocation(line: 2327, column: 25, scope: !8135)
!8138 = !DILocation(line: 2327, column: 21, scope: !8112)
!8139 = !DILocation(line: 2330, column: 25, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 2330, column: 25)
!8141 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 2327, column: 36)
!8142 = !DILocation(line: 2330, column: 29, scope: !8140)
!8143 = !DILocation(line: 2330, column: 37, scope: !8140)
!8144 = !DILocation(line: 2330, column: 25, scope: !8141)
!8145 = !DILocation(line: 2331, column: 25, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 2330, column: 54)
!8147 = !DILocation(line: 2335, column: 21, scope: !8141)
!8148 = !DILocation(line: 2337, column: 13, scope: !8112)
!8149 = !DILocation(line: 2340, column: 22, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2340, column: 22)
!8151 = !DILocation(line: 2340, column: 27, scope: !8150)
!8152 = !DILocation(line: 2340, column: 22, scope: !8108)
!8153 = !DILocation(line: 2342, column: 17, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2340, column: 48)
!8155 = !DILocation(line: 2344, column: 21, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 2344, column: 21)
!8157 = !DILocation(line: 2344, column: 28, scope: !8156)
!8158 = !DILocation(line: 2344, column: 25, scope: !8156)
!8159 = !DILocation(line: 2344, column: 21, scope: !8154)
!8160 = !DILocation(line: 2346, column: 25, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2346, column: 25)
!8162 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 2344, column: 36)
!8163 = !DILocation(line: 2346, column: 29, scope: !8161)
!8164 = !DILocation(line: 2346, column: 36, scope: !8161)
!8165 = !DILocation(line: 2346, column: 25, scope: !8162)
!8166 = !DILocation(line: 2347, column: 25, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 2346, column: 53)
!8168 = !DILocation(line: 2350, column: 21, scope: !8162)
!8169 = !DILocation(line: 2352, column: 13, scope: !8154)
!8170 = !DILocation(line: 2355, column: 18, scope: !8060)
!8171 = !DILocation(line: 2355, column: 15, scope: !8060)
!8172 = !DILocation(line: 2356, column: 9, scope: !8060)
!8173 = !DILocation(line: 2298, column: 31, scope: !8055)
!8174 = !DILocation(line: 2298, column: 9, scope: !8055)
!8175 = distinct !{!8175, !8058, !8176}
!8176 = !DILocation(line: 2356, column: 9, scope: !8052)
!8177 = !DILocation(line: 2357, column: 5, scope: !7971)
!8178 = !DILocation(line: 2359, column: 13, scope: !7364)
!8179 = !DILocation(line: 2359, column: 5, scope: !7364)
!8180 = !DILocation(line: 2364, column: 13, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 2364, column: 13)
!8182 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2359, column: 20)
!8183 = !DILocation(line: 2364, column: 17, scope: !8181)
!8184 = !DILocation(line: 2364, column: 25, scope: !8181)
!8185 = !DILocation(line: 2364, column: 13, scope: !8182)
!8186 = !DILocation(line: 2365, column: 13, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 2364, column: 42)
!8188 = !DILocation(line: 2365, column: 17, scope: !8187)
!8189 = !DILocation(line: 2365, column: 25, scope: !8187)
!8190 = !DILocation(line: 2366, column: 9, scope: !8187)
!8191 = !DILocation(line: 2368, column: 9, scope: !8182)
!8192 = !DILocation(line: 2373, column: 13, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 2373, column: 13)
!8194 = !DILocation(line: 2373, column: 17, scope: !8193)
!8195 = !DILocation(line: 2373, column: 24, scope: !8193)
!8196 = !DILocation(line: 2373, column: 13, scope: !8182)
!8197 = !DILocation(line: 2374, column: 13, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 2373, column: 41)
!8199 = !DILocation(line: 2374, column: 17, scope: !8198)
!8200 = !DILocation(line: 2374, column: 24, scope: !8198)
!8201 = !DILocation(line: 2375, column: 9, scope: !8198)
!8202 = !DILocation(line: 2376, column: 5, scope: !8182)
!8203 = !DILocation(line: 2378, column: 9, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2378, column: 9)
!8205 = !DILocation(line: 2378, column: 13, scope: !8204)
!8206 = !DILocation(line: 2378, column: 20, scope: !8204)
!8207 = !DILocation(line: 2380, column: 9, scope: !8204)
!8208 = !DILocation(line: 2380, column: 12, scope: !8204)
!8209 = !DILocation(line: 2380, column: 16, scope: !8204)
!8210 = !DILocation(line: 2380, column: 24, scope: !8204)
!8211 = !DILocation(line: 2382, column: 9, scope: !8204)
!8212 = !DILocation(line: 2382, column: 12, scope: !8204)
!8213 = !DILocation(line: 2382, column: 16, scope: !8204)
!8214 = !DILocation(line: 2384, column: 14, scope: !8204)
!8215 = !DILocation(line: 2384, column: 18, scope: !8204)
!8216 = !DILocation(line: 2384, column: 12, scope: !8204)
!8217 = !DILocation(line: 2386, column: 12, scope: !8204)
!8218 = !DILocation(line: 2378, column: 9, scope: !7364)
!8219 = !DILocation(line: 2387, column: 5, scope: !8204)
!8220 = !DILocation(line: 2393, column: 18, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 2387, column: 5)
!8222 = !DILocation(line: 2393, column: 22, scope: !8221)
!8223 = !DILocation(line: 2393, column: 16, scope: !8221)
!8224 = !DILocation(line: 2395, column: 19, scope: !8221)
!8225 = !DILocation(line: 2395, column: 23, scope: !8221)
!8226 = !DILocation(line: 2395, column: 16, scope: !8221)
!8227 = !DILocation(line: 2398, column: 13, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2398, column: 13)
!8229 = !DILocation(line: 2398, column: 20, scope: !8228)
!8230 = !DILocation(line: 2398, column: 25, scope: !8228)
!8231 = !DILocation(line: 2398, column: 28, scope: !8228)
!8232 = !DILocation(line: 2398, column: 32, scope: !8228)
!8233 = !DILocation(line: 2398, column: 39, scope: !8228)
!8234 = !DILocation(line: 2398, column: 13, scope: !8221)
!8235 = !DILocation(line: 2399, column: 19, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2398, column: 45)
!8237 = !DILocation(line: 2401, column: 9, scope: !8236)
!8238 = !DILocation(line: 2402, column: 41, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2401, column: 16)
!8240 = !DILocation(line: 2402, column: 44, scope: !8239)
!8241 = !DILocation(line: 2402, column: 21, scope: !8239)
!8242 = !DILocation(line: 2402, column: 19, scope: !8239)
!8243 = !DILocation(line: 2403, column: 17, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2403, column: 17)
!8245 = !DILocation(line: 2403, column: 23, scope: !8244)
!8246 = !DILocation(line: 2403, column: 17, scope: !8239)
!8247 = !DILocation(line: 2404, column: 17, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 2403, column: 32)
!8249 = !DILocation(line: 2408, column: 9, scope: !8221)
!8250 = !DILocation(line: 2410, column: 21, scope: !8221)
!8251 = !DILocation(line: 2410, column: 35, scope: !8221)
!8252 = !DILocation(line: 2410, column: 38, scope: !8221)
!8253 = !DILocation(line: 2410, column: 46, scope: !8221)
!8254 = !DILocation(line: 2410, column: 49, scope: !8221)
!8255 = !DILocation(line: 2410, column: 66, scope: !8221)
!8256 = !DILocation(line: 2410, column: 70, scope: !8221)
!8257 = !DILocation(line: 2410, column: 32, scope: !8221)
!8258 = !DILocation(line: 2410, column: 9, scope: !8221)
!8259 = !DILocation(line: 2410, column: 13, scope: !8221)
!8260 = !DILocation(line: 2410, column: 19, scope: !8221)
!8261 = !DILocation(line: 2411, column: 22, scope: !8221)
!8262 = !DILocation(line: 2411, column: 35, scope: !8221)
!8263 = !DILocation(line: 2411, column: 38, scope: !8221)
!8264 = !DILocation(line: 2411, column: 33, scope: !8221)
!8265 = !DILocation(line: 2411, column: 9, scope: !8221)
!8266 = !DILocation(line: 2411, column: 13, scope: !8221)
!8267 = !DILocation(line: 2411, column: 20, scope: !8221)
!8268 = !DILocation(line: 2413, column: 9, scope: !8221)
!8269 = !DILocation(line: 2415, column: 16, scope: !8221)
!8270 = !DILocation(line: 2415, column: 20, scope: !8221)
!8271 = !DILocation(line: 2415, column: 14, scope: !8221)
!8272 = !DILocation(line: 2416, column: 9, scope: !8221)
!8273 = !DILocation(line: 2416, column: 13, scope: !8221)
!8274 = !DILocation(line: 2416, column: 21, scope: !8221)
!8275 = !DILocation(line: 2420, column: 9, scope: !8221)
!8276 = !DILocation(line: 2420, column: 16, scope: !8221)
!8277 = !DILocation(line: 2421, column: 19, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2420, column: 22)
!8279 = !DILocation(line: 2421, column: 17, scope: !8278)
!8280 = !DILocation(line: 2422, column: 13, scope: !8278)
!8281 = !DILocation(line: 2422, column: 18, scope: !8278)
!8282 = !DILocation(line: 2422, column: 24, scope: !8278)
!8283 = !DILocation(line: 2423, column: 26, scope: !8278)
!8284 = !DILocation(line: 2423, column: 30, scope: !8278)
!8285 = !DILocation(line: 2423, column: 13, scope: !8278)
!8286 = !DILocation(line: 2423, column: 18, scope: !8278)
!8287 = !DILocation(line: 2423, column: 24, scope: !8278)
!8288 = !DILocation(line: 2424, column: 27, scope: !8278)
!8289 = !DILocation(line: 2424, column: 13, scope: !8278)
!8290 = !DILocation(line: 2424, column: 18, scope: !8278)
!8291 = !DILocation(line: 2424, column: 25, scope: !8278)
!8292 = !DILocation(line: 2426, column: 17, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 2426, column: 17)
!8294 = !DILocation(line: 2426, column: 23, scope: !8293)
!8295 = !DILocation(line: 2426, column: 17, scope: !8278)
!8296 = !DILocation(line: 2427, column: 31, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 2426, column: 32)
!8298 = !DILocation(line: 2427, column: 36, scope: !8297)
!8299 = !DILocation(line: 2427, column: 17, scope: !8297)
!8300 = !DILocation(line: 2427, column: 22, scope: !8297)
!8301 = !DILocation(line: 2427, column: 28, scope: !8297)
!8302 = !DILocation(line: 2428, column: 59, scope: !8297)
!8303 = !DILocation(line: 2428, column: 64, scope: !8297)
!8304 = !DILocation(line: 2428, column: 38, scope: !8297)
!8305 = !DILocation(line: 2428, column: 17, scope: !8297)
!8306 = !DILocation(line: 2428, column: 22, scope: !8297)
!8307 = !DILocation(line: 2428, column: 27, scope: !8297)
!8308 = !DILocation(line: 2428, column: 36, scope: !8297)
!8309 = !DILocation(line: 2429, column: 17, scope: !8297)
!8310 = !DILocation(line: 2429, column: 22, scope: !8297)
!8311 = !DILocation(line: 2429, column: 27, scope: !8297)
!8312 = !DILocation(line: 2429, column: 35, scope: !8297)
!8313 = !DILocation(line: 2430, column: 17, scope: !8297)
!8314 = !DILocation(line: 2431, column: 17, scope: !8297)
!8315 = !DILocation(line: 2431, column: 22, scope: !8297)
!8316 = !DILocation(line: 2431, column: 26, scope: !8297)
!8317 = !DILocation(line: 2431, column: 37, scope: !8297)
!8318 = !DILocation(line: 2432, column: 44, scope: !8297)
!8319 = !DILocation(line: 2432, column: 48, scope: !8297)
!8320 = !DILocation(line: 2432, column: 50, scope: !8297)
!8321 = !DILocation(line: 2432, column: 17, scope: !8297)
!8322 = !DILocation(line: 2432, column: 22, scope: !8297)
!8323 = !DILocation(line: 2432, column: 26, scope: !8297)
!8324 = !DILocation(line: 2432, column: 35, scope: !8297)
!8325 = !DILocation(line: 2432, column: 42, scope: !8297)
!8326 = !DILocation(line: 2434, column: 13, scope: !8297)
!8327 = !DILocation(line: 2435, column: 30, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 2434, column: 20)
!8329 = !DILocation(line: 2435, column: 17, scope: !8328)
!8330 = !DILocation(line: 2435, column: 22, scope: !8328)
!8331 = !DILocation(line: 2435, column: 28, scope: !8328)
!8332 = !DILocation(line: 2438, column: 20, scope: !8278)
!8333 = !DILocation(line: 2438, column: 25, scope: !8278)
!8334 = !DILocation(line: 2438, column: 18, scope: !8278)
!8335 = !DILocation(line: 2440, column: 13, scope: !8278)
!8336 = !DILocation(line: 2440, column: 18, scope: !8278)
!8337 = !DILocation(line: 2440, column: 26, scope: !8278)
!8338 = distinct !{!8338, !8275, !8339}
!8339 = !DILocation(line: 2441, column: 9, scope: !8221)
!8340 = !DILocation(line: 2443, column: 13, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 2443, column: 13)
!8342 = !DILocation(line: 2443, column: 19, scope: !8341)
!8343 = !DILocation(line: 2443, column: 13, scope: !8221)
!8344 = !DILocation(line: 2444, column: 31, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2443, column: 28)
!8346 = !DILocation(line: 2444, column: 34, scope: !8345)
!8347 = !DILocation(line: 2444, column: 41, scope: !8345)
!8348 = !DILocation(line: 2444, column: 13, scope: !8345)
!8349 = !DILocation(line: 2445, column: 31, scope: !8345)
!8350 = !DILocation(line: 2445, column: 34, scope: !8345)
!8351 = !DILocation(line: 2445, column: 13, scope: !8345)
!8352 = !DILocation(line: 2446, column: 9, scope: !8345)
!8353 = !DILocation(line: 2448, column: 27, scope: !8221)
!8354 = !DILocation(line: 2448, column: 30, scope: !8221)
!8355 = !DILocation(line: 2448, column: 34, scope: !8221)
!8356 = !DILocation(line: 2448, column: 9, scope: !8221)
!8357 = !DILocation(line: 2449, column: 9, scope: !8221)
!8358 = !DILocation(line: 2449, column: 13, scope: !8221)
!8359 = !DILocation(line: 2449, column: 19, scope: !8221)
!8360 = !DILocation(line: 2451, column: 9, scope: !8221)
!8361 = !DILocation(line: 2451, column: 13, scope: !8221)
!8362 = !DILocation(line: 2451, column: 20, scope: !8221)
!8363 = !DILocation(line: 2454, column: 9, scope: !8221)
!8364 = !DILocation(line: 2457, column: 9, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2457, column: 9)
!8366 = !DILocation(line: 2457, column: 9, scope: !7364)
!8367 = !DILocation(line: 2461, column: 13, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2461, column: 13)
!8369 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 2457, column: 16)
!8370 = !DILocation(line: 2461, column: 17, scope: !8368)
!8371 = !DILocation(line: 2461, column: 24, scope: !8368)
!8372 = !DILocation(line: 2463, column: 13, scope: !8368)
!8373 = !DILocation(line: 2463, column: 16, scope: !8368)
!8374 = !DILocation(line: 2463, column: 20, scope: !8368)
!8375 = !DILocation(line: 2463, column: 28, scope: !8368)
!8376 = !DILocation(line: 2461, column: 13, scope: !8369)
!8377 = !DILocation(line: 2467, column: 13, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 2466, column: 9)
!8379 = !DILocation(line: 2470, column: 31, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2470, column: 13)
!8381 = !DILocation(line: 2470, column: 41, scope: !8380)
!8382 = !DILocation(line: 2470, column: 46, scope: !8380)
!8383 = !DILocation(line: 2470, column: 53, scope: !8380)
!8384 = !DILocation(line: 2470, column: 59, scope: !8380)
!8385 = !DILocation(line: 2470, column: 57, scope: !8380)
!8386 = !DILocation(line: 2470, column: 13, scope: !8380)
!8387 = !DILocation(line: 2470, column: 62, scope: !8380)
!8388 = !DILocation(line: 2470, column: 13, scope: !8369)
!8389 = !DILocation(line: 2471, column: 13, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2470, column: 73)
!8391 = !DILocation(line: 2477, column: 9, scope: !8369)
!8392 = !DILocation(line: 2479, column: 36, scope: !8369)
!8393 = !DILocation(line: 2479, column: 21, scope: !8369)
!8394 = !DILocation(line: 2479, column: 9, scope: !8369)
!8395 = !DILocation(line: 2479, column: 13, scope: !8369)
!8396 = !DILocation(line: 2479, column: 19, scope: !8369)
!8397 = !DILocation(line: 2480, column: 28, scope: !8369)
!8398 = !DILocation(line: 2480, column: 9, scope: !8369)
!8399 = !DILocation(line: 2480, column: 13, scope: !8369)
!8400 = !DILocation(line: 2480, column: 15, scope: !8369)
!8401 = !DILocation(line: 2480, column: 21, scope: !8369)
!8402 = !DILocation(line: 2482, column: 21, scope: !8369)
!8403 = !DILocation(line: 2482, column: 35, scope: !8369)
!8404 = !DILocation(line: 2482, column: 38, scope: !8369)
!8405 = !DILocation(line: 2482, column: 46, scope: !8369)
!8406 = !DILocation(line: 2482, column: 49, scope: !8369)
!8407 = !DILocation(line: 2482, column: 66, scope: !8369)
!8408 = !DILocation(line: 2482, column: 70, scope: !8369)
!8409 = !DILocation(line: 2482, column: 32, scope: !8369)
!8410 = !DILocation(line: 2482, column: 9, scope: !8369)
!8411 = !DILocation(line: 2482, column: 13, scope: !8369)
!8412 = !DILocation(line: 2482, column: 19, scope: !8369)
!8413 = !DILocation(line: 2483, column: 22, scope: !8369)
!8414 = !DILocation(line: 2483, column: 35, scope: !8369)
!8415 = !DILocation(line: 2483, column: 38, scope: !8369)
!8416 = !DILocation(line: 2483, column: 33, scope: !8369)
!8417 = !DILocation(line: 2483, column: 9, scope: !8369)
!8418 = !DILocation(line: 2483, column: 13, scope: !8369)
!8419 = !DILocation(line: 2483, column: 20, scope: !8369)
!8420 = !DILocation(line: 2485, column: 9, scope: !8369)
!8421 = !DILocation(line: 2487, column: 27, scope: !8369)
!8422 = !DILocation(line: 2487, column: 30, scope: !8369)
!8423 = !DILocation(line: 2487, column: 34, scope: !8369)
!8424 = !DILocation(line: 2487, column: 9, scope: !8369)
!8425 = !DILocation(line: 2488, column: 9, scope: !8369)
!8426 = !DILocation(line: 2488, column: 13, scope: !8369)
!8427 = !DILocation(line: 2488, column: 19, scope: !8369)
!8428 = !DILocation(line: 2490, column: 9, scope: !8369)
!8429 = !DILocation(line: 2490, column: 13, scope: !8369)
!8430 = !DILocation(line: 2490, column: 20, scope: !8369)
!8431 = !DILocation(line: 2493, column: 15, scope: !8369)
!8432 = !DILocation(line: 2493, column: 19, scope: !8369)
!8433 = !DILocation(line: 2493, column: 13, scope: !8369)
!8434 = !DILocation(line: 2494, column: 9, scope: !8369)
!8435 = !DILocation(line: 2494, column: 13, scope: !8369)
!8436 = !DILocation(line: 2494, column: 21, scope: !8369)
!8437 = !DILocation(line: 2496, column: 13, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2496, column: 13)
!8439 = !DILocation(line: 2496, column: 13, scope: !8369)
!8440 = !DILocation(line: 2498, column: 17, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 2498, column: 17)
!8442 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 2496, column: 18)
!8443 = !DILocation(line: 2498, column: 22, scope: !8441)
!8444 = !DILocation(line: 2498, column: 31, scope: !8441)
!8445 = !DILocation(line: 2498, column: 34, scope: !8441)
!8446 = !DILocation(line: 2498, column: 17, scope: !8442)
!8447 = !DILocation(line: 2502, column: 17, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 2498, column: 65)
!8449 = distinct !{!8449, !8447, !8450}
!8450 = !DILocation(line: 2509, column: 29, scope: !8448)
!8451 = !DILocation(line: 2503, column: 21, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 2502, column: 20)
!8453 = !DILocation(line: 2503, column: 26, scope: !8452)
!8454 = !DILocation(line: 2503, column: 32, scope: !8452)
!8455 = !DILocation(line: 2504, column: 28, scope: !8452)
!8456 = !DILocation(line: 2504, column: 33, scope: !8452)
!8457 = !DILocation(line: 2504, column: 26, scope: !8452)
!8458 = !DILocation(line: 2506, column: 21, scope: !8452)
!8459 = !DILocation(line: 2506, column: 26, scope: !8452)
!8460 = !DILocation(line: 2506, column: 34, scope: !8452)
!8461 = !DILocation(line: 2508, column: 27, scope: !8452)
!8462 = !DILocation(line: 2508, column: 25, scope: !8452)
!8463 = !DILocation(line: 2509, column: 17, scope: !8452)
!8464 = !DILocation(line: 2509, column: 26, scope: !8448)
!8465 = !DILocation(line: 2511, column: 17, scope: !8448)
!8466 = !DILocation(line: 2514, column: 25, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 2514, column: 13)
!8468 = !DILocation(line: 2514, column: 23, scope: !8467)
!8469 = !DILocation(line: 2514, column: 18, scope: !8467)
!8470 = !DILocation(line: 2514, column: 30, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2514, column: 13)
!8472 = !DILocation(line: 2514, column: 13, scope: !8467)
!8473 = !DILocation(line: 2515, column: 17, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 2514, column: 55)
!8475 = !DILocation(line: 2515, column: 23, scope: !8474)
!8476 = !DILocation(line: 2515, column: 28, scope: !8474)
!8477 = !DILocation(line: 2516, column: 13, scope: !8474)
!8478 = !DILocation(line: 2514, column: 43, scope: !8471)
!8479 = !DILocation(line: 2514, column: 49, scope: !8471)
!8480 = !DILocation(line: 2514, column: 41, scope: !8471)
!8481 = !DILocation(line: 2514, column: 13, scope: !8471)
!8482 = distinct !{!8482, !8472, !8483}
!8483 = !DILocation(line: 2516, column: 13, scope: !8467)
!8484 = !DILocation(line: 2518, column: 44, scope: !8442)
!8485 = !DILocation(line: 2518, column: 47, scope: !8442)
!8486 = !DILocation(line: 2518, column: 20, scope: !8442)
!8487 = !DILocation(line: 2519, column: 9, scope: !8442)
!8488 = !DILocation(line: 2523, column: 9, scope: !8369)
!8489 = !DILocation(line: 2526, column: 5, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2526, column: 5)
!8491 = !DILocation(line: 2526, column: 5, scope: !7364)
!8492 = !DILocation(line: 2528, column: 5, scope: !7364)
!8493 = !DILocation(line: 2532, column: 9, scope: !7364)
!8494 = !DILocation(line: 2532, column: 5, scope: !7364)
!8495 = !DILocation(line: 2538, column: 5, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 2538, column: 5)
!8497 = !DILocation(line: 2538, column: 5, scope: !7364)
!8498 = !DILocation(line: 2540, column: 5, scope: !7364)
!8499 = !DILocation(line: 2548, column: 5, scope: !7364)
!8500 = !DILocation(line: 2549, column: 1, scope: !7364)
!8501 = distinct !DISubprogram(name: "ngx_resolver_process_srv", scope: !3, file: !3, line: 2553, type: !8502, isLocal: true, isDefinition: true, scopeLine: 2556, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !8504)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{null, !163, !110, !134, !82, !82, !82, !82, !82}
!8504 = !{!8505, !8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513, !8514, !8515, !8516, !8517, !8518, !8519, !8520, !8521, !8522, !8523, !8524, !8525, !8526, !8527, !8528, !8529, !8530, !8531, !8532}
!8505 = !DILocalVariable(name: "r", arg: 1, scope: !8501, file: !3, line: 2553, type: !163)
!8506 = !DILocalVariable(name: "buf", arg: 2, scope: !8501, file: !3, line: 2553, type: !110)
!8507 = !DILocalVariable(name: "n", arg: 3, scope: !8501, file: !3, line: 2553, type: !134)
!8508 = !DILocalVariable(name: "ident", arg: 4, scope: !8501, file: !3, line: 2554, type: !82)
!8509 = !DILocalVariable(name: "code", arg: 5, scope: !8501, file: !3, line: 2554, type: !82)
!8510 = !DILocalVariable(name: "nan", arg: 6, scope: !8501, file: !3, line: 2554, type: !82)
!8511 = !DILocalVariable(name: "trunc", arg: 7, scope: !8501, file: !3, line: 2555, type: !82)
!8512 = !DILocalVariable(name: "ans", arg: 8, scope: !8501, file: !3, line: 2555, type: !82)
!8513 = !DILocalVariable(name: "err", scope: !8501, file: !3, line: 2557, type: !6)
!8514 = !DILocalVariable(name: "cname", scope: !8501, file: !3, line: 2558, type: !110)
!8515 = !DILocalVariable(name: "len", scope: !8501, file: !3, line: 2559, type: !134)
!8516 = !DILocalVariable(name: "ttl", scope: !8501, file: !3, line: 2560, type: !7381)
!8517 = !DILocalVariable(name: "hash", scope: !8501, file: !3, line: 2561, type: !23)
!8518 = !DILocalVariable(name: "name", scope: !8501, file: !3, line: 2562, type: !129)
!8519 = !DILocalVariable(name: "type", scope: !8501, file: !3, line: 2563, type: !82)
!8520 = !DILocalVariable(name: "qident", scope: !8501, file: !3, line: 2563, type: !82)
!8521 = !DILocalVariable(name: "class", scope: !8501, file: !3, line: 2563, type: !82)
!8522 = !DILocalVariable(name: "start", scope: !8501, file: !3, line: 2563, type: !82)
!8523 = !DILocalVariable(name: "nsrvs", scope: !8501, file: !3, line: 2563, type: !82)
!8524 = !DILocalVariable(name: "a", scope: !8501, file: !3, line: 2563, type: !82)
!8525 = !DILocalVariable(name: "i", scope: !8501, file: !3, line: 2563, type: !82)
!8526 = !DILocalVariable(name: "j", scope: !8501, file: !3, line: 2563, type: !82)
!8527 = !DILocalVariable(name: "an", scope: !8501, file: !3, line: 2564, type: !497)
!8528 = !DILocalVariable(name: "ctx", scope: !8501, file: !3, line: 2565, type: !157)
!8529 = !DILocalVariable(name: "next", scope: !8501, file: !3, line: 2565, type: !157)
!8530 = !DILocalVariable(name: "srvs", scope: !8501, file: !3, line: 2566, type: !124)
!8531 = !DILocalVariable(name: "rn", scope: !8501, file: !3, line: 2567, type: !84)
!8532 = !DILocalVariable(name: "rec", scope: !8501, file: !3, line: 2568, type: !807)
!8533 = !DILocation(line: 2553, column: 42, scope: !8501)
!8534 = !DILocation(line: 2553, column: 53, scope: !8501)
!8535 = !DILocation(line: 2553, column: 65, scope: !8501)
!8536 = !DILocation(line: 2554, column: 16, scope: !8501)
!8537 = !DILocation(line: 2554, column: 34, scope: !8501)
!8538 = !DILocation(line: 2554, column: 51, scope: !8501)
!8539 = !DILocation(line: 2555, column: 16, scope: !8501)
!8540 = !DILocation(line: 2555, column: 34, scope: !8501)
!8541 = !DILocation(line: 2557, column: 5, scope: !8501)
!8542 = !DILocation(line: 2557, column: 33, scope: !8501)
!8543 = !DILocation(line: 2558, column: 5, scope: !8501)
!8544 = !DILocation(line: 2558, column: 33, scope: !8501)
!8545 = !DILocation(line: 2559, column: 5, scope: !8501)
!8546 = !DILocation(line: 2559, column: 33, scope: !8501)
!8547 = !DILocation(line: 2560, column: 5, scope: !8501)
!8548 = !DILocation(line: 2560, column: 33, scope: !8501)
!8549 = !DILocation(line: 2561, column: 5, scope: !8501)
!8550 = !DILocation(line: 2561, column: 33, scope: !8501)
!8551 = !DILocation(line: 2562, column: 5, scope: !8501)
!8552 = !DILocation(line: 2562, column: 33, scope: !8501)
!8553 = !DILocation(line: 2563, column: 5, scope: !8501)
!8554 = !DILocation(line: 2563, column: 33, scope: !8501)
!8555 = !DILocation(line: 2563, column: 39, scope: !8501)
!8556 = !DILocation(line: 2563, column: 47, scope: !8501)
!8557 = !DILocation(line: 2563, column: 54, scope: !8501)
!8558 = !DILocation(line: 2563, column: 61, scope: !8501)
!8559 = !DILocation(line: 2563, column: 68, scope: !8501)
!8560 = !DILocation(line: 2563, column: 71, scope: !8501)
!8561 = !DILocation(line: 2563, column: 74, scope: !8501)
!8562 = !DILocation(line: 2564, column: 5, scope: !8501)
!8563 = !DILocation(line: 2564, column: 33, scope: !8501)
!8564 = !DILocation(line: 2565, column: 5, scope: !8501)
!8565 = !DILocation(line: 2565, column: 33, scope: !8501)
!8566 = !DILocation(line: 2565, column: 39, scope: !8501)
!8567 = !DILocation(line: 2566, column: 5, scope: !8501)
!8568 = !DILocation(line: 2566, column: 33, scope: !8501)
!8569 = !DILocation(line: 2567, column: 5, scope: !8501)
!8570 = !DILocation(line: 2567, column: 33, scope: !8501)
!8571 = !DILocation(line: 2568, column: 5, scope: !8501)
!8572 = !DILocation(line: 2568, column: 33, scope: !8501)
!8573 = !DILocation(line: 2570, column: 27, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2570, column: 9)
!8575 = !DILocation(line: 2570, column: 37, scope: !8574)
!8576 = !DILocation(line: 2571, column: 27, scope: !8574)
!8577 = !DILocation(line: 2571, column: 31, scope: !8574)
!8578 = !DILocation(line: 2571, column: 61, scope: !8574)
!8579 = !DILocation(line: 2571, column: 67, scope: !8574)
!8580 = !DILocation(line: 2571, column: 65, scope: !8574)
!8581 = !DILocation(line: 2570, column: 9, scope: !8574)
!8582 = !DILocation(line: 2572, column: 9, scope: !8574)
!8583 = !DILocation(line: 2570, column: 9, scope: !8501)
!8584 = !DILocation(line: 2574, column: 9, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 2573, column: 5)
!8586 = !DILocation(line: 2579, column: 33, scope: !8501)
!8587 = !DILocation(line: 2579, column: 44, scope: !8501)
!8588 = !DILocation(line: 2579, column: 12, scope: !8501)
!8589 = !DILocation(line: 2579, column: 10, scope: !8501)
!8590 = !DILocation(line: 2581, column: 34, scope: !8501)
!8591 = !DILocation(line: 2581, column: 44, scope: !8501)
!8592 = !DILocation(line: 2581, column: 10, scope: !8501)
!8593 = !DILocation(line: 2581, column: 8, scope: !8501)
!8594 = !DILocation(line: 2583, column: 9, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2583, column: 9)
!8596 = !DILocation(line: 2583, column: 12, scope: !8595)
!8597 = !DILocation(line: 2583, column: 20, scope: !8595)
!8598 = !DILocation(line: 2583, column: 23, scope: !8595)
!8599 = !DILocation(line: 2583, column: 27, scope: !8595)
!8600 = !DILocation(line: 2583, column: 33, scope: !8595)
!8601 = !DILocation(line: 2583, column: 9, scope: !8501)
!8602 = !DILocation(line: 2584, column: 9, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 2584, column: 9)
!8604 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 2583, column: 42)
!8605 = !DILocation(line: 2584, column: 9, scope: !8604)
!8606 = !DILocation(line: 2586, column: 27, scope: !8604)
!8607 = !DILocation(line: 2586, column: 35, scope: !8604)
!8608 = !DILocation(line: 2586, column: 9, scope: !8604)
!8609 = !DILocation(line: 2587, column: 9, scope: !8604)
!8610 = !DILocation(line: 2590, column: 9, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2590, column: 9)
!8612 = !DILocation(line: 2590, column: 15, scope: !8611)
!8613 = !DILocation(line: 2590, column: 18, scope: !8611)
!8614 = !DILocation(line: 2590, column: 22, scope: !8611)
!8615 = !DILocation(line: 2590, column: 9, scope: !8501)
!8616 = !DILocation(line: 2591, column: 27, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 2590, column: 27)
!8618 = !DILocation(line: 2591, column: 35, scope: !8617)
!8619 = !DILocation(line: 2591, column: 9, scope: !8617)
!8620 = !DILocation(line: 2592, column: 9, scope: !8617)
!8621 = !DILocation(line: 2595, column: 15, scope: !8501)
!8622 = !DILocation(line: 2595, column: 19, scope: !8501)
!8623 = !DILocation(line: 2595, column: 28, scope: !8501)
!8624 = !DILocation(line: 2595, column: 36, scope: !8501)
!8625 = !DILocation(line: 2595, column: 40, scope: !8501)
!8626 = !DILocation(line: 2595, column: 34, scope: !8501)
!8627 = !DILocation(line: 2595, column: 12, scope: !8501)
!8628 = !DILocation(line: 2597, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2597, column: 9)
!8630 = !DILocation(line: 2597, column: 18, scope: !8629)
!8631 = !DILocation(line: 2597, column: 15, scope: !8629)
!8632 = !DILocation(line: 2597, column: 9, scope: !8501)
!8633 = !DILocation(line: 2598, column: 9, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 2598, column: 9)
!8635 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 2597, column: 26)
!8636 = !DILocation(line: 2598, column: 9, scope: !8635)
!8637 = !DILocation(line: 2601, column: 27, scope: !8635)
!8638 = !DILocation(line: 2601, column: 35, scope: !8635)
!8639 = !DILocation(line: 2601, column: 9, scope: !8635)
!8640 = !DILocation(line: 2602, column: 9, scope: !8635)
!8641 = !DILocation(line: 2605, column: 23, scope: !8501)
!8642 = !DILocation(line: 2605, column: 31, scope: !8501)
!8643 = !DILocation(line: 2605, column: 5, scope: !8501)
!8644 = !DILocation(line: 2607, column: 9, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2607, column: 9)
!8646 = !DILocation(line: 2607, column: 9, scope: !8501)
!8647 = !DILocation(line: 2609, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2607, column: 16)
!8649 = !DILocation(line: 2611, column: 13, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 2611, column: 13)
!8651 = !DILocation(line: 2611, column: 17, scope: !8650)
!8652 = !DILocation(line: 2611, column: 25, scope: !8650)
!8653 = !DILocation(line: 2611, column: 13, scope: !8648)
!8654 = !DILocation(line: 2612, column: 32, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 2611, column: 34)
!8656 = !DILocation(line: 2612, column: 35, scope: !8655)
!8657 = !DILocation(line: 2612, column: 48, scope: !8655)
!8658 = !DILocation(line: 2612, column: 52, scope: !8655)
!8659 = !DILocation(line: 2612, column: 13, scope: !8655)
!8660 = !DILocation(line: 2613, column: 36, scope: !8655)
!8661 = !DILocation(line: 2613, column: 39, scope: !8655)
!8662 = !DILocation(line: 2613, column: 13, scope: !8655)
!8663 = !DILocation(line: 2614, column: 13, scope: !8655)
!8664 = !DILocation(line: 2617, column: 15, scope: !8648)
!8665 = !DILocation(line: 2617, column: 18, scope: !8648)
!8666 = !DILocation(line: 2617, column: 30, scope: !8648)
!8667 = !DILocation(line: 2617, column: 13, scope: !8648)
!8668 = !DILocation(line: 2618, column: 16, scope: !8648)
!8669 = !DILocation(line: 2618, column: 20, scope: !8648)
!8670 = !DILocation(line: 2618, column: 24, scope: !8648)
!8671 = !DILocation(line: 2618, column: 13, scope: !8648)
!8672 = !DILocation(line: 2620, column: 9, scope: !8648)
!8673 = !DILocation(line: 2620, column: 13, scope: !8648)
!8674 = !DILocation(line: 2620, column: 17, scope: !8648)
!8675 = !DILocation(line: 2622, column: 44, scope: !8648)
!8676 = !DILocation(line: 2622, column: 47, scope: !8648)
!8677 = !DILocation(line: 2622, column: 52, scope: !8648)
!8678 = !DILocation(line: 2622, column: 56, scope: !8648)
!8679 = !DILocation(line: 2622, column: 63, scope: !8648)
!8680 = !DILocation(line: 2622, column: 67, scope: !8648)
!8681 = !DILocation(line: 2622, column: 16, scope: !8648)
!8682 = !DILocation(line: 2624, column: 22, scope: !8648)
!8683 = !DILocation(line: 2624, column: 35, scope: !8648)
!8684 = !DILocation(line: 2624, column: 38, scope: !8648)
!8685 = !DILocation(line: 2624, column: 33, scope: !8648)
!8686 = !DILocation(line: 2624, column: 9, scope: !8648)
!8687 = !DILocation(line: 2624, column: 13, scope: !8648)
!8688 = !DILocation(line: 2624, column: 20, scope: !8648)
!8689 = !DILocation(line: 2626, column: 9, scope: !8648)
!8690 = !DILocation(line: 2628, column: 9, scope: !8648)
!8691 = !DILocation(line: 2631, column: 9, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2631, column: 9)
!8693 = !DILocation(line: 2631, column: 14, scope: !8692)
!8694 = !DILocation(line: 2631, column: 19, scope: !8692)
!8695 = !DILocation(line: 2631, column: 22, scope: !8692)
!8696 = !DILocation(line: 2631, column: 26, scope: !8692)
!8697 = !DILocation(line: 2631, column: 9, scope: !8501)
!8698 = !DILocation(line: 2632, column: 16, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 2631, column: 32)
!8700 = !DILocation(line: 2632, column: 20, scope: !8699)
!8701 = !DILocation(line: 2632, column: 14, scope: !8699)
!8702 = !DILocation(line: 2633, column: 5, scope: !8699)
!8703 = !DILocation(line: 2635, column: 9, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2635, column: 9)
!8705 = !DILocation(line: 2635, column: 14, scope: !8704)
!8706 = !DILocation(line: 2635, column: 19, scope: !8704)
!8707 = !DILocation(line: 2635, column: 22, scope: !8704)
!8708 = !DILocation(line: 2635, column: 26, scope: !8704)
!8709 = !DILocation(line: 2635, column: 9, scope: !8501)
!8710 = !DILocation(line: 2636, column: 14, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 2635, column: 32)
!8712 = !DILocation(line: 2637, column: 5, scope: !8711)
!8713 = !DILocation(line: 2639, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2639, column: 9)
!8715 = !DILocation(line: 2639, column: 9, scope: !8501)
!8716 = !DILocation(line: 2640, column: 16, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 2639, column: 15)
!8718 = !DILocation(line: 2640, column: 20, scope: !8717)
!8719 = !DILocation(line: 2640, column: 14, scope: !8717)
!8720 = !DILocation(line: 2641, column: 9, scope: !8717)
!8721 = !DILocation(line: 2641, column: 13, scope: !8717)
!8722 = !DILocation(line: 2641, column: 21, scope: !8717)
!8723 = !DILocation(line: 2643, column: 9, scope: !8717)
!8724 = !DILocation(line: 2645, column: 28, scope: !8717)
!8725 = !DILocation(line: 2645, column: 31, scope: !8717)
!8726 = !DILocation(line: 2645, column: 44, scope: !8717)
!8727 = !DILocation(line: 2645, column: 48, scope: !8717)
!8728 = !DILocation(line: 2645, column: 9, scope: !8717)
!8729 = !DILocation(line: 2647, column: 9, scope: !8717)
!8730 = !DILocation(line: 2647, column: 16, scope: !8717)
!8731 = !DILocation(line: 2648, column: 19, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2647, column: 22)
!8733 = !DILocation(line: 2648, column: 17, scope: !8732)
!8734 = !DILocation(line: 2649, column: 26, scope: !8732)
!8735 = !DILocation(line: 2649, column: 13, scope: !8732)
!8736 = !DILocation(line: 2649, column: 18, scope: !8732)
!8737 = !DILocation(line: 2649, column: 24, scope: !8732)
!8738 = !DILocation(line: 2650, column: 26, scope: !8732)
!8739 = !DILocation(line: 2650, column: 40, scope: !8732)
!8740 = !DILocation(line: 2650, column: 43, scope: !8732)
!8741 = !DILocation(line: 2650, column: 51, scope: !8732)
!8742 = !DILocation(line: 2650, column: 54, scope: !8732)
!8743 = !DILocation(line: 2650, column: 37, scope: !8732)
!8744 = !DILocation(line: 2650, column: 13, scope: !8732)
!8745 = !DILocation(line: 2650, column: 18, scope: !8732)
!8746 = !DILocation(line: 2650, column: 24, scope: !8732)
!8747 = !DILocation(line: 2651, column: 20, scope: !8732)
!8748 = !DILocation(line: 2651, column: 25, scope: !8732)
!8749 = !DILocation(line: 2651, column: 18, scope: !8732)
!8750 = !DILocation(line: 2653, column: 13, scope: !8732)
!8751 = !DILocation(line: 2653, column: 18, scope: !8732)
!8752 = !DILocation(line: 2653, column: 26, scope: !8732)
!8753 = distinct !{!8753, !8729, !8754}
!8754 = !DILocation(line: 2654, column: 9, scope: !8717)
!8755 = !DILocation(line: 2656, column: 32, scope: !8717)
!8756 = !DILocation(line: 2656, column: 35, scope: !8717)
!8757 = !DILocation(line: 2656, column: 9, scope: !8717)
!8758 = !DILocation(line: 2658, column: 9, scope: !8717)
!8759 = !DILocation(line: 2661, column: 9, scope: !8501)
!8760 = !DILocation(line: 2661, column: 7, scope: !8501)
!8761 = !DILocation(line: 2662, column: 11, scope: !8501)
!8762 = !DILocation(line: 2663, column: 11, scope: !8501)
!8763 = !DILocation(line: 2665, column: 12, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2665, column: 5)
!8765 = !DILocation(line: 2665, column: 10, scope: !8764)
!8766 = !DILocation(line: 2665, column: 17, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 2665, column: 5)
!8768 = !DILocation(line: 2665, column: 21, scope: !8767)
!8769 = !DILocation(line: 2665, column: 19, scope: !8767)
!8770 = !DILocation(line: 2665, column: 5, scope: !8764)
!8771 = !DILocation(line: 2667, column: 17, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 2665, column: 31)
!8773 = !DILocation(line: 2667, column: 15, scope: !8772)
!8774 = !DILocation(line: 2669, column: 9, scope: !8772)
!8775 = !DILocation(line: 2669, column: 16, scope: !8772)
!8776 = !DILocation(line: 2669, column: 20, scope: !8772)
!8777 = !DILocation(line: 2669, column: 18, scope: !8772)
!8778 = !DILocation(line: 2671, column: 17, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2671, column: 17)
!8780 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2669, column: 23)
!8781 = !DILocation(line: 2671, column: 21, scope: !8779)
!8782 = !DILocation(line: 2671, column: 24, scope: !8779)
!8783 = !DILocation(line: 2671, column: 17, scope: !8780)
!8784 = !DILocation(line: 2672, column: 19, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2671, column: 32)
!8786 = !DILocation(line: 2673, column: 17, scope: !8785)
!8787 = !DILocation(line: 2676, column: 17, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2676, column: 17)
!8789 = !DILocation(line: 2676, column: 21, scope: !8788)
!8790 = !DILocation(line: 2676, column: 24, scope: !8788)
!8791 = !DILocation(line: 2676, column: 17, scope: !8780)
!8792 = !DILocation(line: 2677, column: 18, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2676, column: 30)
!8794 = !DILocation(line: 2678, column: 17, scope: !8793)
!8795 = !DILocation(line: 2681, column: 22, scope: !8780)
!8796 = !DILocation(line: 2681, column: 26, scope: !8780)
!8797 = !DILocation(line: 2681, column: 20, scope: !8780)
!8798 = !DILocation(line: 2681, column: 15, scope: !8780)
!8799 = distinct !{!8799, !8774, !8800}
!8800 = !DILocation(line: 2682, column: 9, scope: !8772)
!8801 = !DILocation(line: 2684, column: 9, scope: !8772)
!8802 = !DILocation(line: 2688, column: 13, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2688, column: 13)
!8804 = !DILocation(line: 2688, column: 17, scope: !8803)
!8805 = !DILocation(line: 2688, column: 15, scope: !8803)
!8806 = !DILocation(line: 2688, column: 23, scope: !8803)
!8807 = !DILocation(line: 2688, column: 13, scope: !8772)
!8808 = !DILocation(line: 2689, column: 17, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 2688, column: 28)
!8810 = !DILocation(line: 2690, column: 13, scope: !8809)
!8811 = !DILocation(line: 2688, column: 25, scope: !8803)
!8812 = !DILocation(line: 2695, column: 13, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2695, column: 13)
!8814 = !DILocation(line: 2695, column: 15, scope: !8813)
!8815 = !DILocation(line: 2695, column: 46, scope: !8813)
!8816 = !DILocation(line: 2695, column: 43, scope: !8813)
!8817 = !DILocation(line: 2695, column: 13, scope: !8772)
!8818 = !DILocation(line: 2696, column: 13, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 2695, column: 49)
!8820 = !DILocation(line: 2699, column: 37, scope: !8772)
!8821 = !DILocation(line: 2699, column: 41, scope: !8772)
!8822 = !DILocation(line: 2699, column: 14, scope: !8772)
!8823 = !DILocation(line: 2699, column: 12, scope: !8772)
!8824 = !DILocation(line: 2701, column: 17, scope: !8772)
!8825 = !DILocation(line: 2701, column: 21, scope: !8772)
!8826 = !DILocation(line: 2701, column: 29, scope: !8772)
!8827 = !DILocation(line: 2701, column: 37, scope: !8772)
!8828 = !DILocation(line: 2701, column: 41, scope: !8772)
!8829 = !DILocation(line: 2701, column: 35, scope: !8772)
!8830 = !DILocation(line: 2701, column: 14, scope: !8772)
!8831 = !DILocation(line: 2702, column: 18, scope: !8772)
!8832 = !DILocation(line: 2702, column: 22, scope: !8772)
!8833 = !DILocation(line: 2702, column: 31, scope: !8772)
!8834 = !DILocation(line: 2702, column: 39, scope: !8772)
!8835 = !DILocation(line: 2702, column: 43, scope: !8772)
!8836 = !DILocation(line: 2702, column: 37, scope: !8772)
!8837 = !DILocation(line: 2702, column: 15, scope: !8772)
!8838 = !DILocation(line: 2703, column: 16, scope: !8772)
!8839 = !DILocation(line: 2703, column: 20, scope: !8772)
!8840 = !DILocation(line: 2703, column: 27, scope: !8772)
!8841 = !DILocation(line: 2703, column: 35, scope: !8772)
!8842 = !DILocation(line: 2703, column: 39, scope: !8772)
!8843 = !DILocation(line: 2703, column: 33, scope: !8772)
!8844 = !DILocation(line: 2703, column: 13, scope: !8772)
!8845 = !DILocation(line: 2704, column: 16, scope: !8772)
!8846 = !DILocation(line: 2704, column: 20, scope: !8772)
!8847 = !DILocation(line: 2704, column: 27, scope: !8772)
!8848 = !DILocation(line: 2704, column: 37, scope: !8772)
!8849 = !DILocation(line: 2704, column: 41, scope: !8772)
!8850 = !DILocation(line: 2704, column: 48, scope: !8772)
!8851 = !DILocation(line: 2704, column: 34, scope: !8772)
!8852 = !DILocation(line: 2705, column: 16, scope: !8772)
!8853 = !DILocation(line: 2705, column: 20, scope: !8772)
!8854 = !DILocation(line: 2705, column: 27, scope: !8772)
!8855 = !DILocation(line: 2705, column: 13, scope: !8772)
!8856 = !DILocation(line: 2705, column: 36, scope: !8772)
!8857 = !DILocation(line: 2705, column: 40, scope: !8772)
!8858 = !DILocation(line: 2705, column: 35, scope: !8772)
!8859 = !DILocation(line: 2705, column: 33, scope: !8772)
!8860 = !DILocation(line: 2704, column: 13, scope: !8772)
!8861 = !DILocation(line: 2707, column: 13, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2707, column: 13)
!8863 = !DILocation(line: 2707, column: 19, scope: !8862)
!8864 = !DILocation(line: 2707, column: 13, scope: !8772)
!8865 = !DILocation(line: 2708, column: 13, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2708, column: 13)
!8867 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 2707, column: 25)
!8868 = !DILocation(line: 2708, column: 13, scope: !8867)
!8869 = !DILocation(line: 2710, column: 13, scope: !8867)
!8870 = !DILocation(line: 2713, column: 13, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2713, column: 13)
!8872 = !DILocation(line: 2713, column: 17, scope: !8871)
!8873 = !DILocation(line: 2713, column: 13, scope: !8772)
!8874 = !DILocation(line: 2714, column: 17, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 2713, column: 22)
!8876 = !DILocation(line: 2715, column: 9, scope: !8875)
!8877 = !DILocation(line: 2717, column: 19, scope: !8772)
!8878 = !DILocation(line: 2717, column: 9, scope: !8772)
!8879 = !DILocation(line: 2717, column: 13, scope: !8772)
!8880 = !DILocation(line: 2717, column: 17, scope: !8772)
!8881 = !DILocation(line: 2719, column: 11, scope: !8772)
!8882 = !DILocation(line: 2721, column: 17, scope: !8772)
!8883 = !DILocation(line: 2721, column: 9, scope: !8772)
!8884 = !DILocation(line: 2725, column: 17, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 2725, column: 17)
!8886 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2721, column: 23)
!8887 = !DILocation(line: 2725, column: 19, scope: !8885)
!8888 = !DILocation(line: 2725, column: 25, scope: !8885)
!8889 = !DILocation(line: 2725, column: 23, scope: !8885)
!8890 = !DILocation(line: 2725, column: 17, scope: !8886)
!8891 = !DILocation(line: 2726, column: 17, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2725, column: 28)
!8893 = !DILocation(line: 2729, column: 35, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 2729, column: 17)
!8895 = !DILocation(line: 2729, column: 44, scope: !8894)
!8896 = !DILocation(line: 2729, column: 50, scope: !8894)
!8897 = !DILocation(line: 2729, column: 54, scope: !8894)
!8898 = !DILocation(line: 2729, column: 56, scope: !8894)
!8899 = !DILocation(line: 2729, column: 62, scope: !8894)
!8900 = !DILocation(line: 2729, column: 68, scope: !8894)
!8901 = !DILocation(line: 2729, column: 66, scope: !8894)
!8902 = !DILocation(line: 2729, column: 17, scope: !8894)
!8903 = !DILocation(line: 2730, column: 17, scope: !8894)
!8904 = !DILocation(line: 2729, column: 17, scope: !8886)
!8905 = !DILocation(line: 2732, column: 17, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 2731, column: 13)
!8907 = !DILocation(line: 2735, column: 18, scope: !8886)
!8908 = !DILocation(line: 2737, column: 13, scope: !8886)
!8909 = !DILocation(line: 2741, column: 22, scope: !8886)
!8910 = !DILocation(line: 2741, column: 26, scope: !8886)
!8911 = !DILocation(line: 2741, column: 19, scope: !8886)
!8912 = !DILocation(line: 2743, column: 13, scope: !8886)
!8913 = !DILocation(line: 2751, column: 13, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 2751, column: 13)
!8915 = !DILocation(line: 2751, column: 13, scope: !8886)
!8916 = !DILocation(line: 2753, column: 9, scope: !8886)
!8917 = !DILocation(line: 2755, column: 14, scope: !8772)
!8918 = !DILocation(line: 2755, column: 11, scope: !8772)
!8919 = !DILocation(line: 2756, column: 5, scope: !8772)
!8920 = !DILocation(line: 2665, column: 27, scope: !8767)
!8921 = !DILocation(line: 2665, column: 5, scope: !8767)
!8922 = distinct !{!8922, !8770, !8923}
!8923 = !DILocation(line: 2756, column: 5, scope: !8764)
!8924 = !DILocation(line: 2762, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2762, column: 9)
!8926 = !DILocation(line: 2762, column: 9, scope: !8501)
!8927 = !DILocation(line: 2764, column: 36, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 2762, column: 16)
!8929 = !DILocation(line: 2764, column: 39, scope: !8928)
!8930 = !DILocation(line: 2764, column: 45, scope: !8928)
!8931 = !DILocation(line: 2764, column: 16, scope: !8928)
!8932 = !DILocation(line: 2764, column: 14, scope: !8928)
!8933 = !DILocation(line: 2765, column: 13, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 2765, column: 13)
!8935 = !DILocation(line: 2765, column: 18, scope: !8934)
!8936 = !DILocation(line: 2765, column: 13, scope: !8928)
!8937 = !DILocation(line: 2766, column: 13, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 2765, column: 27)
!8939 = !DILocation(line: 2769, column: 22, scope: !8928)
!8940 = !DILocation(line: 2769, column: 9, scope: !8928)
!8941 = !DILocation(line: 2769, column: 13, scope: !8928)
!8942 = !DILocation(line: 2769, column: 15, scope: !8928)
!8943 = !DILocation(line: 2769, column: 20, scope: !8928)
!8944 = !DILocation(line: 2770, column: 31, scope: !8928)
!8945 = !DILocation(line: 2770, column: 21, scope: !8928)
!8946 = !DILocation(line: 2770, column: 9, scope: !8928)
!8947 = !DILocation(line: 2770, column: 13, scope: !8928)
!8948 = !DILocation(line: 2770, column: 19, scope: !8928)
!8949 = !DILocation(line: 2772, column: 11, scope: !8928)
!8950 = !DILocation(line: 2773, column: 13, scope: !8928)
!8951 = !DILocation(line: 2773, column: 11, scope: !8928)
!8952 = !DILocation(line: 2775, column: 16, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 2775, column: 9)
!8954 = !DILocation(line: 2775, column: 14, scope: !8953)
!8955 = !DILocation(line: 2775, column: 21, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 2775, column: 9)
!8957 = !DILocation(line: 2775, column: 25, scope: !8956)
!8958 = !DILocation(line: 2775, column: 23, scope: !8956)
!8959 = !DILocation(line: 2775, column: 9, scope: !8953)
!8960 = !DILocation(line: 2777, column: 13, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 2775, column: 35)
!8962 = !DILocation(line: 2779, column: 21, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2779, column: 21)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !3, line: 2777, column: 24)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2777, column: 13)
!8966 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2777, column: 13)
!8967 = !DILocation(line: 2779, column: 25, scope: !8963)
!8968 = !DILocation(line: 2779, column: 28, scope: !8963)
!8969 = !DILocation(line: 2779, column: 21, scope: !8964)
!8970 = !DILocation(line: 2780, column: 23, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 2779, column: 36)
!8972 = !DILocation(line: 2781, column: 21, scope: !8971)
!8973 = !DILocation(line: 2784, column: 21, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2784, column: 21)
!8975 = !DILocation(line: 2784, column: 25, scope: !8974)
!8976 = !DILocation(line: 2784, column: 28, scope: !8974)
!8977 = !DILocation(line: 2784, column: 21, scope: !8964)
!8978 = !DILocation(line: 2785, column: 22, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 2784, column: 34)
!8980 = !DILocation(line: 2786, column: 21, scope: !8979)
!8981 = !DILocation(line: 2789, column: 26, scope: !8964)
!8982 = !DILocation(line: 2789, column: 30, scope: !8964)
!8983 = !DILocation(line: 2789, column: 24, scope: !8964)
!8984 = !DILocation(line: 2789, column: 19, scope: !8964)
!8985 = !DILocation(line: 2777, column: 13, scope: !8965)
!8986 = distinct !{!8986, !8987, !8988}
!8987 = !DILocation(line: 2777, column: 13, scope: !8966)
!8988 = !DILocation(line: 2790, column: 13, scope: !8966)
!8989 = !DILocation(line: 2792, column: 41, scope: !8961)
!8990 = !DILocation(line: 2792, column: 45, scope: !8961)
!8991 = !DILocation(line: 2792, column: 18, scope: !8961)
!8992 = !DILocation(line: 2792, column: 16, scope: !8961)
!8993 = !DILocation(line: 2794, column: 21, scope: !8961)
!8994 = !DILocation(line: 2794, column: 25, scope: !8961)
!8995 = !DILocation(line: 2794, column: 33, scope: !8961)
!8996 = !DILocation(line: 2794, column: 41, scope: !8961)
!8997 = !DILocation(line: 2794, column: 45, scope: !8961)
!8998 = !DILocation(line: 2794, column: 39, scope: !8961)
!8999 = !DILocation(line: 2794, column: 18, scope: !8961)
!9000 = !DILocation(line: 2795, column: 20, scope: !8961)
!9001 = !DILocation(line: 2795, column: 24, scope: !8961)
!9002 = !DILocation(line: 2795, column: 31, scope: !8961)
!9003 = !DILocation(line: 2795, column: 39, scope: !8961)
!9004 = !DILocation(line: 2795, column: 43, scope: !8961)
!9005 = !DILocation(line: 2795, column: 37, scope: !8961)
!9006 = !DILocation(line: 2795, column: 17, scope: !8961)
!9007 = !DILocation(line: 2797, column: 15, scope: !8961)
!9008 = !DILocation(line: 2799, column: 17, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 2799, column: 17)
!9010 = !DILocation(line: 2799, column: 22, scope: !9009)
!9011 = !DILocation(line: 2799, column: 17, scope: !8961)
!9012 = !DILocation(line: 2801, column: 37, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 2799, column: 42)
!9014 = !DILocation(line: 2801, column: 41, scope: !9013)
!9015 = !DILocation(line: 2801, column: 44, scope: !9013)
!9016 = !DILocation(line: 2801, column: 52, scope: !9013)
!9017 = !DILocation(line: 2801, column: 56, scope: !9013)
!9018 = !DILocation(line: 2801, column: 58, scope: !9013)
!9019 = !DILocation(line: 2801, column: 50, scope: !9013)
!9020 = !DILocation(line: 2801, column: 36, scope: !9013)
!9021 = !DILocation(line: 2801, column: 17, scope: !9013)
!9022 = !DILocation(line: 2801, column: 22, scope: !9013)
!9023 = !DILocation(line: 2801, column: 25, scope: !9013)
!9024 = !DILocation(line: 2801, column: 34, scope: !9013)
!9025 = !DILocation(line: 2802, column: 35, scope: !9013)
!9026 = !DILocation(line: 2802, column: 39, scope: !9013)
!9027 = !DILocation(line: 2802, column: 41, scope: !9013)
!9028 = !DILocation(line: 2802, column: 46, scope: !9013)
!9029 = !DILocation(line: 2802, column: 54, scope: !9013)
!9030 = !DILocation(line: 2802, column: 58, scope: !9013)
!9031 = !DILocation(line: 2802, column: 60, scope: !9013)
!9032 = !DILocation(line: 2802, column: 52, scope: !9013)
!9033 = !DILocation(line: 2802, column: 34, scope: !9013)
!9034 = !DILocation(line: 2802, column: 17, scope: !9013)
!9035 = !DILocation(line: 2802, column: 22, scope: !9013)
!9036 = !DILocation(line: 2802, column: 25, scope: !9013)
!9037 = !DILocation(line: 2802, column: 32, scope: !9013)
!9038 = !DILocation(line: 2804, column: 21, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2804, column: 21)
!9040 = !DILocation(line: 2804, column: 26, scope: !9039)
!9041 = !DILocation(line: 2804, column: 29, scope: !9039)
!9042 = !DILocation(line: 2804, column: 36, scope: !9039)
!9043 = !DILocation(line: 2804, column: 21, scope: !9013)
!9044 = !DILocation(line: 2805, column: 21, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 2804, column: 42)
!9046 = !DILocation(line: 2805, column: 26, scope: !9045)
!9047 = !DILocation(line: 2805, column: 29, scope: !9045)
!9048 = !DILocation(line: 2805, column: 36, scope: !9045)
!9049 = !DILocation(line: 2806, column: 17, scope: !9045)
!9050 = !DILocation(line: 2808, column: 33, scope: !9013)
!9051 = !DILocation(line: 2808, column: 37, scope: !9013)
!9052 = !DILocation(line: 2808, column: 39, scope: !9013)
!9053 = !DILocation(line: 2808, column: 44, scope: !9013)
!9054 = !DILocation(line: 2808, column: 52, scope: !9013)
!9055 = !DILocation(line: 2808, column: 56, scope: !9013)
!9056 = !DILocation(line: 2808, column: 58, scope: !9013)
!9057 = !DILocation(line: 2808, column: 50, scope: !9013)
!9058 = !DILocation(line: 2808, column: 32, scope: !9013)
!9059 = !DILocation(line: 2808, column: 17, scope: !9013)
!9060 = !DILocation(line: 2808, column: 22, scope: !9013)
!9061 = !DILocation(line: 2808, column: 25, scope: !9013)
!9062 = !DILocation(line: 2808, column: 30, scope: !9013)
!9063 = !DILocation(line: 2810, column: 39, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2810, column: 21)
!9065 = !DILocation(line: 2810, column: 43, scope: !9064)
!9066 = !DILocation(line: 2810, column: 48, scope: !9064)
!9067 = !DILocation(line: 2810, column: 51, scope: !9064)
!9068 = !DILocation(line: 2810, column: 57, scope: !9064)
!9069 = !DILocation(line: 2810, column: 63, scope: !9064)
!9070 = !DILocation(line: 2810, column: 67, scope: !9064)
!9071 = !DILocation(line: 2810, column: 69, scope: !9064)
!9072 = !DILocation(line: 2811, column: 39, scope: !9064)
!9073 = !DILocation(line: 2811, column: 45, scope: !9064)
!9074 = !DILocation(line: 2811, column: 43, scope: !9064)
!9075 = !DILocation(line: 2810, column: 21, scope: !9064)
!9076 = !DILocation(line: 2812, column: 21, scope: !9064)
!9077 = !DILocation(line: 2810, column: 21, scope: !9013)
!9078 = !DILocation(line: 2814, column: 21, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 2813, column: 17)
!9080 = !DILocation(line: 2817, column: 18, scope: !9013)
!9081 = !DILocation(line: 2818, column: 13, scope: !9013)
!9082 = !DILocation(line: 2820, column: 18, scope: !8961)
!9083 = !DILocation(line: 2820, column: 15, scope: !8961)
!9084 = !DILocation(line: 2821, column: 9, scope: !8961)
!9085 = !DILocation(line: 2775, column: 31, scope: !8956)
!9086 = !DILocation(line: 2775, column: 9, scope: !8956)
!9087 = distinct !{!9087, !8959, !9088}
!9088 = !DILocation(line: 2821, column: 9, scope: !8953)
!9089 = !DILocation(line: 2823, column: 18, scope: !8928)
!9090 = !DILocation(line: 2823, column: 24, scope: !8928)
!9091 = !DILocation(line: 2823, column: 9, scope: !8928)
!9092 = !DILocation(line: 2826, column: 27, scope: !8928)
!9093 = !DILocation(line: 2826, column: 30, scope: !8928)
!9094 = !DILocation(line: 2826, column: 34, scope: !8928)
!9095 = !DILocation(line: 2826, column: 9, scope: !8928)
!9096 = !DILocation(line: 2827, column: 9, scope: !8928)
!9097 = !DILocation(line: 2827, column: 13, scope: !8928)
!9098 = !DILocation(line: 2827, column: 19, scope: !8928)
!9099 = !DILocation(line: 2829, column: 9, scope: !8928)
!9100 = !DILocation(line: 2831, column: 21, scope: !8928)
!9101 = !DILocation(line: 2831, column: 35, scope: !8928)
!9102 = !DILocation(line: 2831, column: 38, scope: !8928)
!9103 = !DILocation(line: 2831, column: 46, scope: !8928)
!9104 = !DILocation(line: 2831, column: 49, scope: !8928)
!9105 = !DILocation(line: 2831, column: 66, scope: !8928)
!9106 = !DILocation(line: 2831, column: 70, scope: !8928)
!9107 = !DILocation(line: 2831, column: 32, scope: !8928)
!9108 = !DILocation(line: 2831, column: 9, scope: !8928)
!9109 = !DILocation(line: 2831, column: 13, scope: !8928)
!9110 = !DILocation(line: 2831, column: 19, scope: !8928)
!9111 = !DILocation(line: 2832, column: 22, scope: !8928)
!9112 = !DILocation(line: 2832, column: 35, scope: !8928)
!9113 = !DILocation(line: 2832, column: 38, scope: !8928)
!9114 = !DILocation(line: 2832, column: 33, scope: !8928)
!9115 = !DILocation(line: 2832, column: 9, scope: !8928)
!9116 = !DILocation(line: 2832, column: 13, scope: !8928)
!9117 = !DILocation(line: 2832, column: 20, scope: !8928)
!9118 = !DILocation(line: 2834, column: 9, scope: !8928)
!9119 = !DILocation(line: 2836, column: 16, scope: !8928)
!9120 = !DILocation(line: 2836, column: 20, scope: !8928)
!9121 = !DILocation(line: 2836, column: 14, scope: !8928)
!9122 = !DILocation(line: 2837, column: 9, scope: !8928)
!9123 = !DILocation(line: 2837, column: 13, scope: !8928)
!9124 = !DILocation(line: 2837, column: 21, scope: !8928)
!9125 = !DILocation(line: 2839, column: 9, scope: !8928)
!9126 = !DILocation(line: 2839, column: 16, scope: !8928)
!9127 = !DILocation(line: 2840, column: 19, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 2839, column: 22)
!9129 = !DILocation(line: 2840, column: 17, scope: !9128)
!9130 = !DILocation(line: 2841, column: 20, scope: !9128)
!9131 = !DILocation(line: 2841, column: 25, scope: !9128)
!9132 = !DILocation(line: 2841, column: 18, scope: !9128)
!9133 = !DILocation(line: 2843, column: 44, scope: !9128)
!9134 = !DILocation(line: 2843, column: 49, scope: !9128)
!9135 = !DILocation(line: 2843, column: 13, scope: !9128)
!9136 = distinct !{!9136, !9125, !9137}
!9137 = !DILocation(line: 2844, column: 9, scope: !8928)
!9138 = !DILocation(line: 2846, column: 9, scope: !8928)
!9139 = !DILocation(line: 2849, column: 5, scope: !8501)
!9140 = !DILocation(line: 2849, column: 9, scope: !8501)
!9141 = !DILocation(line: 2849, column: 15, scope: !8501)
!9142 = !DILocation(line: 2851, column: 9, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2851, column: 9)
!9144 = !DILocation(line: 2851, column: 9, scope: !8501)
!9145 = !DILocation(line: 2855, column: 31, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 2855, column: 13)
!9147 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 2851, column: 16)
!9148 = !DILocation(line: 2855, column: 41, scope: !9146)
!9149 = !DILocation(line: 2855, column: 46, scope: !9146)
!9150 = !DILocation(line: 2855, column: 53, scope: !9146)
!9151 = !DILocation(line: 2855, column: 59, scope: !9146)
!9152 = !DILocation(line: 2855, column: 57, scope: !9146)
!9153 = !DILocation(line: 2855, column: 13, scope: !9146)
!9154 = !DILocation(line: 2855, column: 62, scope: !9146)
!9155 = !DILocation(line: 2855, column: 13, scope: !9147)
!9156 = !DILocation(line: 2856, column: 13, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 2855, column: 73)
!9158 = !DILocation(line: 2862, column: 9, scope: !9147)
!9159 = !DILocation(line: 2864, column: 36, scope: !9147)
!9160 = !DILocation(line: 2864, column: 21, scope: !9147)
!9161 = !DILocation(line: 2864, column: 9, scope: !9147)
!9162 = !DILocation(line: 2864, column: 13, scope: !9147)
!9163 = !DILocation(line: 2864, column: 19, scope: !9147)
!9164 = !DILocation(line: 2865, column: 28, scope: !9147)
!9165 = !DILocation(line: 2865, column: 9, scope: !9147)
!9166 = !DILocation(line: 2865, column: 13, scope: !9147)
!9167 = !DILocation(line: 2865, column: 15, scope: !9147)
!9168 = !DILocation(line: 2865, column: 21, scope: !9147)
!9169 = !DILocation(line: 2867, column: 21, scope: !9147)
!9170 = !DILocation(line: 2867, column: 35, scope: !9147)
!9171 = !DILocation(line: 2867, column: 38, scope: !9147)
!9172 = !DILocation(line: 2867, column: 46, scope: !9147)
!9173 = !DILocation(line: 2867, column: 49, scope: !9147)
!9174 = !DILocation(line: 2867, column: 66, scope: !9147)
!9175 = !DILocation(line: 2867, column: 70, scope: !9147)
!9176 = !DILocation(line: 2867, column: 32, scope: !9147)
!9177 = !DILocation(line: 2867, column: 9, scope: !9147)
!9178 = !DILocation(line: 2867, column: 13, scope: !9147)
!9179 = !DILocation(line: 2867, column: 19, scope: !9147)
!9180 = !DILocation(line: 2868, column: 22, scope: !9147)
!9181 = !DILocation(line: 2868, column: 35, scope: !9147)
!9182 = !DILocation(line: 2868, column: 38, scope: !9147)
!9183 = !DILocation(line: 2868, column: 33, scope: !9147)
!9184 = !DILocation(line: 2868, column: 9, scope: !9147)
!9185 = !DILocation(line: 2868, column: 13, scope: !9147)
!9186 = !DILocation(line: 2868, column: 20, scope: !9147)
!9187 = !DILocation(line: 2870, column: 9, scope: !9147)
!9188 = !DILocation(line: 2872, column: 27, scope: !9147)
!9189 = !DILocation(line: 2872, column: 30, scope: !9147)
!9190 = !DILocation(line: 2872, column: 34, scope: !9147)
!9191 = !DILocation(line: 2872, column: 9, scope: !9147)
!9192 = !DILocation(line: 2873, column: 9, scope: !9147)
!9193 = !DILocation(line: 2873, column: 13, scope: !9147)
!9194 = !DILocation(line: 2873, column: 19, scope: !9147)
!9195 = !DILocation(line: 2875, column: 9, scope: !9147)
!9196 = !DILocation(line: 2875, column: 13, scope: !9147)
!9197 = !DILocation(line: 2875, column: 20, scope: !9147)
!9198 = !DILocation(line: 2878, column: 15, scope: !9147)
!9199 = !DILocation(line: 2878, column: 19, scope: !9147)
!9200 = !DILocation(line: 2878, column: 13, scope: !9147)
!9201 = !DILocation(line: 2879, column: 9, scope: !9147)
!9202 = !DILocation(line: 2879, column: 13, scope: !9147)
!9203 = !DILocation(line: 2879, column: 21, scope: !9147)
!9204 = !DILocation(line: 2881, column: 13, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 2881, column: 13)
!9206 = !DILocation(line: 2881, column: 13, scope: !9147)
!9207 = !DILocation(line: 2883, column: 17, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 2883, column: 17)
!9209 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 2881, column: 18)
!9210 = !DILocation(line: 2883, column: 22, scope: !9208)
!9211 = !DILocation(line: 2883, column: 31, scope: !9208)
!9212 = !DILocation(line: 2883, column: 34, scope: !9208)
!9213 = !DILocation(line: 2883, column: 17, scope: !9209)
!9214 = !DILocation(line: 2887, column: 17, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 2883, column: 65)
!9216 = distinct !{!9216, !9214, !9217}
!9217 = !DILocation(line: 2894, column: 29, scope: !9215)
!9218 = !DILocation(line: 2888, column: 21, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 2887, column: 20)
!9220 = !DILocation(line: 2888, column: 26, scope: !9219)
!9221 = !DILocation(line: 2888, column: 32, scope: !9219)
!9222 = !DILocation(line: 2889, column: 28, scope: !9219)
!9223 = !DILocation(line: 2889, column: 33, scope: !9219)
!9224 = !DILocation(line: 2889, column: 26, scope: !9219)
!9225 = !DILocation(line: 2891, column: 21, scope: !9219)
!9226 = !DILocation(line: 2891, column: 26, scope: !9219)
!9227 = !DILocation(line: 2891, column: 34, scope: !9219)
!9228 = !DILocation(line: 2893, column: 27, scope: !9219)
!9229 = !DILocation(line: 2893, column: 25, scope: !9219)
!9230 = !DILocation(line: 2894, column: 17, scope: !9219)
!9231 = !DILocation(line: 2894, column: 26, scope: !9215)
!9232 = !DILocation(line: 2896, column: 17, scope: !9215)
!9233 = !DILocation(line: 2899, column: 25, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 2899, column: 13)
!9235 = !DILocation(line: 2899, column: 23, scope: !9234)
!9236 = !DILocation(line: 2899, column: 18, scope: !9234)
!9237 = !DILocation(line: 2899, column: 30, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 2899, column: 13)
!9239 = !DILocation(line: 2899, column: 13, scope: !9234)
!9240 = !DILocation(line: 2900, column: 17, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 2899, column: 55)
!9242 = !DILocation(line: 2900, column: 23, scope: !9241)
!9243 = !DILocation(line: 2900, column: 28, scope: !9241)
!9244 = !DILocation(line: 2901, column: 13, scope: !9241)
!9245 = !DILocation(line: 2899, column: 43, scope: !9238)
!9246 = !DILocation(line: 2899, column: 49, scope: !9238)
!9247 = !DILocation(line: 2899, column: 41, scope: !9238)
!9248 = !DILocation(line: 2899, column: 13, scope: !9238)
!9249 = distinct !{!9249, !9239, !9250}
!9250 = !DILocation(line: 2901, column: 13, scope: !9234)
!9251 = !DILocation(line: 2903, column: 44, scope: !9209)
!9252 = !DILocation(line: 2903, column: 47, scope: !9209)
!9253 = !DILocation(line: 2903, column: 20, scope: !9209)
!9254 = !DILocation(line: 2904, column: 9, scope: !9209)
!9255 = !DILocation(line: 2908, column: 9, scope: !9147)
!9256 = !DILocation(line: 2911, column: 5, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2911, column: 5)
!9258 = !DILocation(line: 2911, column: 5, scope: !8501)
!9259 = !DILocation(line: 2913, column: 5, scope: !8501)
!9260 = !DILocation(line: 2917, column: 9, scope: !8501)
!9261 = !DILocation(line: 2917, column: 5, scope: !8501)
!9262 = !DILocation(line: 2923, column: 5, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2923, column: 5)
!9264 = !DILocation(line: 2923, column: 5, scope: !8501)
!9265 = !DILocation(line: 2925, column: 5, scope: !8501)
!9266 = !DILocation(line: 2931, column: 5, scope: !8501)
!9267 = !DILocation(line: 2932, column: 1, scope: !8501)
!9268 = distinct !DISubprogram(name: "ngx_resolver_process_ptr", scope: !3, file: !3, line: 3074, type: !9269, isLocal: true, isDefinition: true, scopeLine: 3076, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !163, !110, !134, !82, !82, !82}
!9271 = !{!9272, !9273, !9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299}
!9272 = !DILocalVariable(name: "r", arg: 1, scope: !9268, file: !3, line: 3074, type: !163)
!9273 = !DILocalVariable(name: "buf", arg: 2, scope: !9268, file: !3, line: 3074, type: !110)
!9274 = !DILocalVariable(name: "n", arg: 3, scope: !9268, file: !3, line: 3074, type: !134)
!9275 = !DILocalVariable(name: "ident", arg: 4, scope: !9268, file: !3, line: 3075, type: !82)
!9276 = !DILocalVariable(name: "code", arg: 5, scope: !9268, file: !3, line: 3075, type: !82)
!9277 = !DILocalVariable(name: "nan", arg: 6, scope: !9268, file: !3, line: 3075, type: !82)
!9278 = !DILocalVariable(name: "err", scope: !9268, file: !3, line: 3077, type: !6)
!9279 = !DILocalVariable(name: "len", scope: !9268, file: !3, line: 3078, type: !134)
!9280 = !DILocalVariable(name: "addr", scope: !9268, file: !3, line: 3079, type: !21)
!9281 = !DILocalVariable(name: "ttl", scope: !9268, file: !3, line: 3080, type: !7381)
!9282 = !DILocalVariable(name: "octet", scope: !9268, file: !3, line: 3081, type: !8)
!9283 = !DILocalVariable(name: "name", scope: !9268, file: !3, line: 3082, type: !129)
!9284 = !DILocalVariable(name: "mask", scope: !9268, file: !3, line: 3083, type: !82)
!9285 = !DILocalVariable(name: "type", scope: !9268, file: !3, line: 3083, type: !82)
!9286 = !DILocalVariable(name: "class", scope: !9268, file: !3, line: 3083, type: !82)
!9287 = !DILocalVariable(name: "qident", scope: !9268, file: !3, line: 3083, type: !82)
!9288 = !DILocalVariable(name: "a", scope: !9268, file: !3, line: 3083, type: !82)
!9289 = !DILocalVariable(name: "i", scope: !9268, file: !3, line: 3083, type: !82)
!9290 = !DILocalVariable(name: "start", scope: !9268, file: !3, line: 3083, type: !82)
!9291 = !DILocalVariable(name: "expire_queue", scope: !9268, file: !3, line: 3084, type: !107)
!9292 = !DILocalVariable(name: "tree", scope: !9268, file: !3, line: 3085, type: !2021)
!9293 = !DILocalVariable(name: "an", scope: !9268, file: !3, line: 3086, type: !497)
!9294 = !DILocalVariable(name: "ctx", scope: !9268, file: !3, line: 3087, type: !157)
!9295 = !DILocalVariable(name: "next", scope: !9268, file: !3, line: 3087, type: !157)
!9296 = !DILocalVariable(name: "rn", scope: !9268, file: !3, line: 3088, type: !84)
!9297 = !DILocalVariable(name: "hash", scope: !9268, file: !3, line: 3090, type: !23)
!9298 = !DILocalVariable(name: "digit", scope: !9268, file: !3, line: 3091, type: !8)
!9299 = !DILocalVariable(name: "addr6", scope: !9268, file: !3, line: 3092, type: !45)
!9300 = !DILocation(line: 3074, column: 42, scope: !9268)
!9301 = !DILocation(line: 3074, column: 53, scope: !9268)
!9302 = !DILocation(line: 3074, column: 65, scope: !9268)
!9303 = !DILocation(line: 3075, column: 16, scope: !9268)
!9304 = !DILocation(line: 3075, column: 34, scope: !9268)
!9305 = !DILocation(line: 3075, column: 51, scope: !9268)
!9306 = !DILocation(line: 3077, column: 5, scope: !9268)
!9307 = !DILocation(line: 3077, column: 27, scope: !9268)
!9308 = !DILocation(line: 3078, column: 5, scope: !9268)
!9309 = !DILocation(line: 3078, column: 27, scope: !9268)
!9310 = !DILocation(line: 3079, column: 5, scope: !9268)
!9311 = !DILocation(line: 3079, column: 27, scope: !9268)
!9312 = !DILocation(line: 3080, column: 5, scope: !9268)
!9313 = !DILocation(line: 3080, column: 27, scope: !9268)
!9314 = !DILocation(line: 3081, column: 5, scope: !9268)
!9315 = !DILocation(line: 3081, column: 27, scope: !9268)
!9316 = !DILocation(line: 3082, column: 5, scope: !9268)
!9317 = !DILocation(line: 3082, column: 27, scope: !9268)
!9318 = !DILocation(line: 3083, column: 5, scope: !9268)
!9319 = !DILocation(line: 3083, column: 27, scope: !9268)
!9320 = !DILocation(line: 3083, column: 33, scope: !9268)
!9321 = !DILocation(line: 3083, column: 39, scope: !9268)
!9322 = !DILocation(line: 3083, column: 46, scope: !9268)
!9323 = !DILocation(line: 3083, column: 54, scope: !9268)
!9324 = !DILocation(line: 3083, column: 57, scope: !9268)
!9325 = !DILocation(line: 3083, column: 60, scope: !9268)
!9326 = !DILocation(line: 3084, column: 5, scope: !9268)
!9327 = !DILocation(line: 3084, column: 27, scope: !9268)
!9328 = !DILocation(line: 3085, column: 5, scope: !9268)
!9329 = !DILocation(line: 3085, column: 27, scope: !9268)
!9330 = !DILocation(line: 3086, column: 5, scope: !9268)
!9331 = !DILocation(line: 3086, column: 27, scope: !9268)
!9332 = !DILocation(line: 3087, column: 5, scope: !9268)
!9333 = !DILocation(line: 3087, column: 27, scope: !9268)
!9334 = !DILocation(line: 3087, column: 33, scope: !9268)
!9335 = !DILocation(line: 3088, column: 5, scope: !9268)
!9336 = !DILocation(line: 3088, column: 27, scope: !9268)
!9337 = !DILocation(line: 3090, column: 5, scope: !9268)
!9338 = !DILocation(line: 3090, column: 27, scope: !9268)
!9339 = !DILocation(line: 3091, column: 5, scope: !9268)
!9340 = !DILocation(line: 3091, column: 27, scope: !9268)
!9341 = !DILocation(line: 3092, column: 5, scope: !9268)
!9342 = !DILocation(line: 3092, column: 27, scope: !9268)
!9343 = !DILocation(line: 3095, column: 27, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3095, column: 9)
!9345 = !DILocation(line: 3095, column: 37, scope: !9344)
!9346 = !DILocation(line: 3096, column: 27, scope: !9344)
!9347 = !DILocation(line: 3096, column: 31, scope: !9344)
!9348 = !DILocation(line: 3096, column: 61, scope: !9344)
!9349 = !DILocation(line: 3096, column: 67, scope: !9344)
!9350 = !DILocation(line: 3096, column: 65, scope: !9344)
!9351 = !DILocation(line: 3095, column: 9, scope: !9344)
!9352 = !DILocation(line: 3097, column: 9, scope: !9344)
!9353 = !DILocation(line: 3095, column: 9, scope: !9268)
!9354 = !DILocation(line: 3099, column: 9, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 3098, column: 5)
!9356 = !DILocation(line: 3106, column: 10, scope: !9268)
!9357 = !DILocation(line: 3107, column: 7, scope: !9268)
!9358 = !DILocation(line: 3109, column: 15, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3109, column: 5)
!9360 = !DILocation(line: 3109, column: 10, scope: !9359)
!9361 = !DILocation(line: 3109, column: 20, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 3109, column: 5)
!9363 = !DILocation(line: 3109, column: 25, scope: !9362)
!9364 = !DILocation(line: 3109, column: 5, scope: !9359)
!9365 = !DILocation(line: 3110, column: 15, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 3109, column: 42)
!9367 = !DILocation(line: 3110, column: 20, scope: !9366)
!9368 = !DILocation(line: 3110, column: 13, scope: !9366)
!9369 = !DILocation(line: 3112, column: 27, scope: !9366)
!9370 = !DILocation(line: 3112, column: 31, scope: !9366)
!9371 = !DILocation(line: 3112, column: 35, scope: !9366)
!9372 = !DILocation(line: 3112, column: 17, scope: !9366)
!9373 = !DILocation(line: 3112, column: 15, scope: !9366)
!9374 = !DILocation(line: 3113, column: 13, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 3113, column: 13)
!9376 = !DILocation(line: 3113, column: 19, scope: !9375)
!9377 = !DILocation(line: 3113, column: 32, scope: !9375)
!9378 = !DILocation(line: 3113, column: 35, scope: !9375)
!9379 = !DILocation(line: 3113, column: 41, scope: !9375)
!9380 = !DILocation(line: 3113, column: 13, scope: !9366)
!9381 = !DILocation(line: 3114, column: 13, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9375, file: !3, line: 3113, column: 48)
!9383 = !DILocation(line: 3117, column: 17, scope: !9366)
!9384 = !DILocation(line: 3117, column: 26, scope: !9366)
!9385 = !DILocation(line: 3117, column: 23, scope: !9366)
!9386 = !DILocation(line: 3117, column: 14, scope: !9366)
!9387 = !DILocation(line: 3118, column: 14, scope: !9366)
!9388 = !DILocation(line: 3118, column: 11, scope: !9366)
!9389 = !DILocation(line: 3119, column: 5, scope: !9366)
!9390 = !DILocation(line: 3109, column: 36, scope: !9362)
!9391 = !DILocation(line: 3109, column: 5, scope: !9362)
!9392 = distinct !{!9392, !9364, !9393}
!9393 = !DILocation(line: 3119, column: 5, scope: !9359)
!9394 = !DILocation(line: 3121, column: 25, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3121, column: 9)
!9396 = !DILocation(line: 3121, column: 29, scope: !9395)
!9397 = !DILocation(line: 3121, column: 9, scope: !9395)
!9398 = !DILocation(line: 3121, column: 63, scope: !9395)
!9399 = !DILocation(line: 3121, column: 9, scope: !9268)
!9400 = !DILocation(line: 3122, column: 11, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 3121, column: 69)
!9402 = !DILocation(line: 3126, column: 39, scope: !9401)
!9403 = !DILocation(line: 3126, column: 42, scope: !9401)
!9404 = !DILocation(line: 3126, column: 14, scope: !9401)
!9405 = !DILocation(line: 3126, column: 12, scope: !9401)
!9406 = !DILocation(line: 3128, column: 17, scope: !9401)
!9407 = !DILocation(line: 3128, column: 20, scope: !9401)
!9408 = !DILocation(line: 3128, column: 14, scope: !9401)
!9409 = !DILocation(line: 3129, column: 25, scope: !9401)
!9410 = !DILocation(line: 3129, column: 28, scope: !9401)
!9411 = !DILocation(line: 3129, column: 22, scope: !9401)
!9412 = !DILocation(line: 3131, column: 9, scope: !9401)
!9413 = !DILocation(line: 3121, column: 66, scope: !9395)
!9414 = !DILocation(line: 3138, column: 7, scope: !9268)
!9415 = !DILocation(line: 3140, column: 16, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3140, column: 5)
!9417 = !DILocation(line: 3140, column: 10, scope: !9416)
!9418 = !DILocation(line: 3140, column: 22, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 3140, column: 5)
!9420 = !DILocation(line: 3140, column: 28, scope: !9419)
!9421 = !DILocation(line: 3140, column: 5, scope: !9416)
!9422 = !DILocation(line: 3141, column: 13, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 3141, column: 13)
!9424 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 3140, column: 43)
!9425 = !DILocation(line: 3141, column: 18, scope: !9423)
!9426 = !DILocation(line: 3141, column: 22, scope: !9423)
!9427 = !DILocation(line: 3141, column: 13, scope: !9424)
!9428 = !DILocation(line: 3142, column: 13, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 3141, column: 31)
!9430 = !DILocation(line: 3145, column: 29, scope: !9424)
!9431 = !DILocation(line: 3145, column: 34, scope: !9424)
!9432 = !DILocation(line: 3145, column: 17, scope: !9424)
!9433 = !DILocation(line: 3145, column: 15, scope: !9424)
!9434 = !DILocation(line: 3146, column: 13, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 3146, column: 13)
!9436 = !DILocation(line: 3146, column: 19, scope: !9435)
!9437 = !DILocation(line: 3146, column: 13, scope: !9424)
!9438 = !DILocation(line: 3147, column: 13, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 3146, column: 33)
!9440 = !DILocation(line: 3150, column: 41, scope: !9424)
!9441 = !DILocation(line: 3150, column: 32, scope: !9424)
!9442 = !DILocation(line: 3150, column: 15, scope: !9424)
!9443 = !DILocation(line: 3150, column: 23, scope: !9424)
!9444 = !DILocation(line: 3150, column: 9, scope: !9424)
!9445 = !DILocation(line: 3150, column: 30, scope: !9424)
!9446 = !DILocation(line: 3152, column: 13, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 3152, column: 13)
!9448 = !DILocation(line: 3152, column: 18, scope: !9447)
!9449 = !DILocation(line: 3152, column: 22, scope: !9447)
!9450 = !DILocation(line: 3152, column: 13, scope: !9424)
!9451 = !DILocation(line: 3153, column: 13, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 3152, column: 31)
!9453 = !DILocation(line: 3156, column: 29, scope: !9424)
!9454 = !DILocation(line: 3156, column: 34, scope: !9424)
!9455 = !DILocation(line: 3156, column: 17, scope: !9424)
!9456 = !DILocation(line: 3156, column: 15, scope: !9424)
!9457 = !DILocation(line: 3157, column: 13, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 3157, column: 13)
!9459 = !DILocation(line: 3157, column: 19, scope: !9458)
!9460 = !DILocation(line: 3157, column: 13, scope: !9424)
!9461 = !DILocation(line: 3158, column: 13, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 3157, column: 33)
!9463 = !DILocation(line: 3161, column: 43, scope: !9424)
!9464 = !DILocation(line: 3161, column: 49, scope: !9424)
!9465 = !DILocation(line: 3161, column: 33, scope: !9424)
!9466 = !DILocation(line: 3161, column: 15, scope: !9424)
!9467 = !DILocation(line: 3161, column: 23, scope: !9424)
!9468 = !DILocation(line: 3161, column: 9, scope: !9424)
!9469 = !DILocation(line: 3161, column: 30, scope: !9424)
!9470 = !DILocation(line: 3162, column: 5, scope: !9424)
!9471 = !DILocation(line: 3140, column: 39, scope: !9419)
!9472 = !DILocation(line: 3140, column: 5, scope: !9419)
!9473 = distinct !{!9473, !9421, !9474}
!9474 = !DILocation(line: 3162, column: 5, scope: !9416)
!9475 = !DILocation(line: 3164, column: 25, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3164, column: 9)
!9477 = !DILocation(line: 3164, column: 29, scope: !9476)
!9478 = !DILocation(line: 3164, column: 9, scope: !9476)
!9479 = !DILocation(line: 3164, column: 59, scope: !9476)
!9480 = !DILocation(line: 3164, column: 9, scope: !9268)
!9481 = !DILocation(line: 3165, column: 11, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 3164, column: 65)
!9483 = !DILocation(line: 3169, column: 38, scope: !9482)
!9484 = !DILocation(line: 3169, column: 32, scope: !9482)
!9485 = !DILocation(line: 3169, column: 16, scope: !9482)
!9486 = !DILocation(line: 3169, column: 14, scope: !9482)
!9487 = !DILocation(line: 3170, column: 40, scope: !9482)
!9488 = !DILocation(line: 3170, column: 51, scope: !9482)
!9489 = !DILocation(line: 3170, column: 14, scope: !9482)
!9490 = !DILocation(line: 3170, column: 12, scope: !9482)
!9491 = !DILocation(line: 3172, column: 17, scope: !9482)
!9492 = !DILocation(line: 3172, column: 20, scope: !9482)
!9493 = !DILocation(line: 3172, column: 14, scope: !9482)
!9494 = !DILocation(line: 3173, column: 25, scope: !9482)
!9495 = !DILocation(line: 3173, column: 28, scope: !9482)
!9496 = !DILocation(line: 3173, column: 22, scope: !9482)
!9497 = !DILocation(line: 3175, column: 9, scope: !9482)
!9498 = !DILocation(line: 3164, column: 62, scope: !9476)
!9499 = !DILocation(line: 3181, column: 5, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3181, column: 5)
!9501 = !DILocation(line: 3181, column: 5, scope: !9268)
!9502 = !DILocation(line: 3183, column: 23, scope: !9268)
!9503 = !DILocation(line: 3183, column: 31, scope: !9268)
!9504 = !DILocation(line: 3183, column: 5, scope: !9268)
!9505 = !DILocation(line: 3184, column: 5, scope: !9268)
!9506 = !DILocation(line: 3188, column: 9, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3188, column: 9)
!9508 = !DILocation(line: 3188, column: 12, scope: !9507)
!9509 = !DILocation(line: 3188, column: 20, scope: !9507)
!9510 = !DILocation(line: 3188, column: 23, scope: !9507)
!9511 = !DILocation(line: 3188, column: 27, scope: !9507)
!9512 = !DILocation(line: 3188, column: 33, scope: !9507)
!9513 = !DILocation(line: 3188, column: 9, scope: !9268)
!9514 = !DILocation(line: 3189, column: 9, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 3189, column: 9)
!9516 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 3188, column: 42)
!9517 = !DILocation(line: 3189, column: 9, scope: !9516)
!9518 = !DILocation(line: 3191, column: 27, scope: !9516)
!9519 = !DILocation(line: 3191, column: 35, scope: !9516)
!9520 = !DILocation(line: 3191, column: 9, scope: !9516)
!9521 = !DILocation(line: 3192, column: 9, scope: !9516)
!9522 = !DILocation(line: 3195, column: 15, scope: !9268)
!9523 = !DILocation(line: 3195, column: 19, scope: !9268)
!9524 = !DILocation(line: 3195, column: 28, scope: !9268)
!9525 = !DILocation(line: 3195, column: 36, scope: !9268)
!9526 = !DILocation(line: 3195, column: 40, scope: !9268)
!9527 = !DILocation(line: 3195, column: 34, scope: !9268)
!9528 = !DILocation(line: 3195, column: 12, scope: !9268)
!9529 = !DILocation(line: 3197, column: 9, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3197, column: 9)
!9531 = !DILocation(line: 3197, column: 18, scope: !9530)
!9532 = !DILocation(line: 3197, column: 15, scope: !9530)
!9533 = !DILocation(line: 3197, column: 9, scope: !9268)
!9534 = !DILocation(line: 3198, column: 9, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 3198, column: 9)
!9536 = distinct !DILexicalBlock(scope: !9530, file: !3, line: 3197, column: 26)
!9537 = !DILocation(line: 3198, column: 9, scope: !9536)
!9538 = !DILocation(line: 3201, column: 27, scope: !9536)
!9539 = !DILocation(line: 3201, column: 35, scope: !9536)
!9540 = !DILocation(line: 3201, column: 9, scope: !9536)
!9541 = !DILocation(line: 3202, column: 9, scope: !9536)
!9542 = !DILocation(line: 3205, column: 23, scope: !9268)
!9543 = !DILocation(line: 3205, column: 31, scope: !9268)
!9544 = !DILocation(line: 3205, column: 5, scope: !9268)
!9545 = !DILocation(line: 3207, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3207, column: 9)
!9547 = !DILocation(line: 3207, column: 14, scope: !9546)
!9548 = !DILocation(line: 3207, column: 19, scope: !9546)
!9549 = !DILocation(line: 3207, column: 22, scope: !9546)
!9550 = !DILocation(line: 3207, column: 26, scope: !9546)
!9551 = !DILocation(line: 3207, column: 9, scope: !9268)
!9552 = !DILocation(line: 3208, column: 14, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 3207, column: 32)
!9554 = !DILocation(line: 3209, column: 5, scope: !9553)
!9555 = !DILocation(line: 3211, column: 9, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3211, column: 9)
!9557 = !DILocation(line: 3211, column: 9, scope: !9268)
!9558 = !DILocation(line: 3212, column: 16, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 3211, column: 15)
!9560 = !DILocation(line: 3212, column: 20, scope: !9559)
!9561 = !DILocation(line: 3212, column: 14, scope: !9559)
!9562 = !DILocation(line: 3213, column: 9, scope: !9559)
!9563 = !DILocation(line: 3213, column: 13, scope: !9559)
!9564 = !DILocation(line: 3213, column: 21, scope: !9559)
!9565 = !DILocation(line: 3215, column: 9, scope: !9559)
!9566 = !DILocation(line: 3217, column: 27, scope: !9559)
!9567 = !DILocation(line: 3217, column: 34, scope: !9559)
!9568 = !DILocation(line: 3217, column: 38, scope: !9559)
!9569 = !DILocation(line: 3217, column: 9, scope: !9559)
!9570 = !DILocation(line: 3221, column: 9, scope: !9559)
!9571 = !DILocation(line: 3221, column: 16, scope: !9559)
!9572 = !DILocation(line: 3222, column: 19, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 3221, column: 22)
!9574 = !DILocation(line: 3222, column: 17, scope: !9573)
!9575 = !DILocation(line: 3223, column: 26, scope: !9573)
!9576 = !DILocation(line: 3223, column: 13, scope: !9573)
!9577 = !DILocation(line: 3223, column: 18, scope: !9573)
!9578 = !DILocation(line: 3223, column: 24, scope: !9573)
!9579 = !DILocation(line: 3224, column: 26, scope: !9573)
!9580 = !DILocation(line: 3224, column: 40, scope: !9573)
!9581 = !DILocation(line: 3224, column: 43, scope: !9573)
!9582 = !DILocation(line: 3224, column: 51, scope: !9573)
!9583 = !DILocation(line: 3224, column: 54, scope: !9573)
!9584 = !DILocation(line: 3224, column: 37, scope: !9573)
!9585 = !DILocation(line: 3224, column: 13, scope: !9573)
!9586 = !DILocation(line: 3224, column: 18, scope: !9573)
!9587 = !DILocation(line: 3224, column: 24, scope: !9573)
!9588 = !DILocation(line: 3225, column: 20, scope: !9573)
!9589 = !DILocation(line: 3225, column: 25, scope: !9573)
!9590 = !DILocation(line: 3225, column: 18, scope: !9573)
!9591 = !DILocation(line: 3227, column: 13, scope: !9573)
!9592 = !DILocation(line: 3227, column: 18, scope: !9573)
!9593 = !DILocation(line: 3227, column: 26, scope: !9573)
!9594 = distinct !{!9594, !9570, !9595}
!9595 = !DILocation(line: 3228, column: 9, scope: !9559)
!9596 = !DILocation(line: 3230, column: 32, scope: !9559)
!9597 = !DILocation(line: 3230, column: 35, scope: !9559)
!9598 = !DILocation(line: 3230, column: 9, scope: !9559)
!9599 = !DILocation(line: 3232, column: 9, scope: !9559)
!9600 = !DILocation(line: 3235, column: 7, scope: !9268)
!9601 = !DILocation(line: 3237, column: 12, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3237, column: 5)
!9603 = !DILocation(line: 3237, column: 10, scope: !9602)
!9604 = !DILocation(line: 3237, column: 17, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 3237, column: 5)
!9606 = !DILocation(line: 3237, column: 21, scope: !9605)
!9607 = !DILocation(line: 3237, column: 19, scope: !9605)
!9608 = !DILocation(line: 3237, column: 5, scope: !9602)
!9609 = !DILocation(line: 3239, column: 17, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 3237, column: 31)
!9611 = !DILocation(line: 3239, column: 15, scope: !9610)
!9612 = !DILocation(line: 3241, column: 9, scope: !9610)
!9613 = !DILocation(line: 3241, column: 16, scope: !9610)
!9614 = !DILocation(line: 3241, column: 20, scope: !9610)
!9615 = !DILocation(line: 3241, column: 18, scope: !9610)
!9616 = !DILocation(line: 3243, column: 17, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 3243, column: 17)
!9618 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3241, column: 23)
!9619 = !DILocation(line: 3243, column: 21, scope: !9617)
!9620 = !DILocation(line: 3243, column: 24, scope: !9617)
!9621 = !DILocation(line: 3243, column: 17, scope: !9618)
!9622 = !DILocation(line: 3244, column: 19, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 3243, column: 32)
!9624 = !DILocation(line: 3245, column: 17, scope: !9623)
!9625 = !DILocation(line: 3248, column: 17, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 3248, column: 17)
!9627 = !DILocation(line: 3248, column: 21, scope: !9626)
!9628 = !DILocation(line: 3248, column: 24, scope: !9626)
!9629 = !DILocation(line: 3248, column: 17, scope: !9618)
!9630 = !DILocation(line: 3249, column: 18, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 3248, column: 30)
!9632 = !DILocation(line: 3250, column: 17, scope: !9631)
!9633 = !DILocation(line: 3253, column: 22, scope: !9618)
!9634 = !DILocation(line: 3253, column: 26, scope: !9618)
!9635 = !DILocation(line: 3253, column: 20, scope: !9618)
!9636 = !DILocation(line: 3253, column: 15, scope: !9618)
!9637 = distinct !{!9637, !9612, !9638}
!9638 = !DILocation(line: 3254, column: 9, scope: !9610)
!9639 = !DILocation(line: 3256, column: 9, scope: !9610)
!9640 = !DILocation(line: 3260, column: 13, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3260, column: 13)
!9642 = !DILocation(line: 3260, column: 17, scope: !9641)
!9643 = !DILocation(line: 3260, column: 15, scope: !9641)
!9644 = !DILocation(line: 3260, column: 23, scope: !9641)
!9645 = !DILocation(line: 3260, column: 13, scope: !9610)
!9646 = !DILocation(line: 3261, column: 17, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 3260, column: 28)
!9648 = !DILocation(line: 3262, column: 13, scope: !9647)
!9649 = !DILocation(line: 3260, column: 25, scope: !9641)
!9650 = !DILocation(line: 3267, column: 13, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3267, column: 13)
!9652 = !DILocation(line: 3267, column: 15, scope: !9651)
!9653 = !DILocation(line: 3267, column: 46, scope: !9651)
!9654 = !DILocation(line: 3267, column: 43, scope: !9651)
!9655 = !DILocation(line: 3267, column: 13, scope: !9610)
!9656 = !DILocation(line: 3268, column: 13, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 3267, column: 49)
!9658 = !DILocation(line: 3271, column: 37, scope: !9610)
!9659 = !DILocation(line: 3271, column: 41, scope: !9610)
!9660 = !DILocation(line: 3271, column: 14, scope: !9610)
!9661 = !DILocation(line: 3271, column: 12, scope: !9610)
!9662 = !DILocation(line: 3273, column: 17, scope: !9610)
!9663 = !DILocation(line: 3273, column: 21, scope: !9610)
!9664 = !DILocation(line: 3273, column: 29, scope: !9610)
!9665 = !DILocation(line: 3273, column: 37, scope: !9610)
!9666 = !DILocation(line: 3273, column: 41, scope: !9610)
!9667 = !DILocation(line: 3273, column: 35, scope: !9610)
!9668 = !DILocation(line: 3273, column: 14, scope: !9610)
!9669 = !DILocation(line: 3274, column: 18, scope: !9610)
!9670 = !DILocation(line: 3274, column: 22, scope: !9610)
!9671 = !DILocation(line: 3274, column: 31, scope: !9610)
!9672 = !DILocation(line: 3274, column: 39, scope: !9610)
!9673 = !DILocation(line: 3274, column: 43, scope: !9610)
!9674 = !DILocation(line: 3274, column: 37, scope: !9610)
!9675 = !DILocation(line: 3274, column: 15, scope: !9610)
!9676 = !DILocation(line: 3275, column: 16, scope: !9610)
!9677 = !DILocation(line: 3275, column: 20, scope: !9610)
!9678 = !DILocation(line: 3275, column: 27, scope: !9610)
!9679 = !DILocation(line: 3275, column: 35, scope: !9610)
!9680 = !DILocation(line: 3275, column: 39, scope: !9610)
!9681 = !DILocation(line: 3275, column: 33, scope: !9610)
!9682 = !DILocation(line: 3275, column: 13, scope: !9610)
!9683 = !DILocation(line: 3276, column: 16, scope: !9610)
!9684 = !DILocation(line: 3276, column: 20, scope: !9610)
!9685 = !DILocation(line: 3276, column: 27, scope: !9610)
!9686 = !DILocation(line: 3276, column: 37, scope: !9610)
!9687 = !DILocation(line: 3276, column: 41, scope: !9610)
!9688 = !DILocation(line: 3276, column: 48, scope: !9610)
!9689 = !DILocation(line: 3276, column: 34, scope: !9610)
!9690 = !DILocation(line: 3277, column: 16, scope: !9610)
!9691 = !DILocation(line: 3277, column: 20, scope: !9610)
!9692 = !DILocation(line: 3277, column: 27, scope: !9610)
!9693 = !DILocation(line: 3277, column: 13, scope: !9610)
!9694 = !DILocation(line: 3277, column: 36, scope: !9610)
!9695 = !DILocation(line: 3277, column: 40, scope: !9610)
!9696 = !DILocation(line: 3277, column: 35, scope: !9610)
!9697 = !DILocation(line: 3277, column: 33, scope: !9610)
!9698 = !DILocation(line: 3276, column: 13, scope: !9610)
!9699 = !DILocation(line: 3279, column: 13, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3279, column: 13)
!9701 = !DILocation(line: 3279, column: 19, scope: !9700)
!9702 = !DILocation(line: 3279, column: 13, scope: !9610)
!9703 = !DILocation(line: 3280, column: 13, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 3280, column: 13)
!9705 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 3279, column: 25)
!9706 = !DILocation(line: 3280, column: 13, scope: !9705)
!9707 = !DILocation(line: 3282, column: 13, scope: !9705)
!9708 = !DILocation(line: 3285, column: 13, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3285, column: 13)
!9710 = !DILocation(line: 3285, column: 17, scope: !9709)
!9711 = !DILocation(line: 3285, column: 13, scope: !9610)
!9712 = !DILocation(line: 3286, column: 17, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 3285, column: 22)
!9714 = !DILocation(line: 3287, column: 9, scope: !9713)
!9715 = !DILocation(line: 3293, column: 11, scope: !9610)
!9716 = !DILocation(line: 3295, column: 17, scope: !9610)
!9717 = !DILocation(line: 3295, column: 9, scope: !9610)
!9718 = !DILocation(line: 3299, column: 13, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3295, column: 23)
!9720 = !DILocation(line: 3307, column: 13, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 3307, column: 13)
!9722 = !DILocation(line: 3307, column: 13, scope: !9719)
!9723 = !DILocation(line: 3309, column: 9, scope: !9719)
!9724 = !DILocation(line: 3311, column: 14, scope: !9610)
!9725 = !DILocation(line: 3311, column: 11, scope: !9610)
!9726 = !DILocation(line: 3312, column: 5, scope: !9610)
!9727 = !DILocation(line: 3237, column: 27, scope: !9605)
!9728 = !DILocation(line: 3237, column: 5, scope: !9605)
!9729 = distinct !{!9729, !9608, !9730}
!9730 = !DILocation(line: 3312, column: 5, scope: !9602)
!9731 = !DILocation(line: 3316, column: 5, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3316, column: 5)
!9733 = !DILocation(line: 3316, column: 5, scope: !9268)
!9734 = !DILocation(line: 3318, column: 5, scope: !9268)
!9735 = !DILocation(line: 3322, column: 27, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3322, column: 9)
!9737 = !DILocation(line: 3322, column: 37, scope: !9736)
!9738 = !DILocation(line: 3322, column: 42, scope: !9736)
!9739 = !DILocation(line: 3322, column: 48, scope: !9736)
!9740 = !DILocation(line: 3322, column: 46, scope: !9736)
!9741 = !DILocation(line: 3322, column: 51, scope: !9736)
!9742 = !DILocation(line: 3322, column: 57, scope: !9736)
!9743 = !DILocation(line: 3322, column: 55, scope: !9736)
!9744 = !DILocation(line: 3322, column: 9, scope: !9736)
!9745 = !DILocation(line: 3322, column: 60, scope: !9736)
!9746 = !DILocation(line: 3322, column: 9, scope: !9268)
!9747 = !DILocation(line: 3323, column: 9, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 3322, column: 71)
!9749 = !DILocation(line: 3328, column: 14, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3328, column: 9)
!9751 = !DILocation(line: 3328, column: 30, scope: !9750)
!9752 = !DILocation(line: 3328, column: 34, scope: !9750)
!9753 = !DILocation(line: 3328, column: 21, scope: !9750)
!9754 = !DILocation(line: 3328, column: 18, scope: !9750)
!9755 = !DILocation(line: 3329, column: 9, scope: !9750)
!9756 = !DILocation(line: 3329, column: 12, scope: !9750)
!9757 = !DILocation(line: 3329, column: 55, scope: !9750)
!9758 = !DILocation(line: 3328, column: 9, scope: !9268)
!9759 = !DILocation(line: 3331, column: 13, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 3331, column: 13)
!9761 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 3330, column: 5)
!9762 = !DILocation(line: 3331, column: 17, scope: !9760)
!9763 = !DILocation(line: 3331, column: 13, scope: !9761)
!9764 = !DILocation(line: 3332, column: 31, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 3331, column: 23)
!9766 = !DILocation(line: 3332, column: 34, scope: !9765)
!9767 = !DILocation(line: 3332, column: 38, scope: !9765)
!9768 = !DILocation(line: 3332, column: 13, scope: !9765)
!9769 = !DILocation(line: 3333, column: 9, scope: !9765)
!9770 = !DILocation(line: 3335, column: 35, scope: !9761)
!9771 = !DILocation(line: 3335, column: 20, scope: !9761)
!9772 = !DILocation(line: 3335, column: 9, scope: !9761)
!9773 = !DILocation(line: 3335, column: 13, scope: !9761)
!9774 = !DILocation(line: 3335, column: 18, scope: !9761)
!9775 = !DILocation(line: 3336, column: 25, scope: !9761)
!9776 = !DILocation(line: 3336, column: 9, scope: !9761)
!9777 = !DILocation(line: 3336, column: 13, scope: !9761)
!9778 = !DILocation(line: 3336, column: 18, scope: !9761)
!9779 = !DILocation(line: 3338, column: 38, scope: !9761)
!9780 = !DILocation(line: 3338, column: 41, scope: !9761)
!9781 = !DILocation(line: 3338, column: 45, scope: !9761)
!9782 = !DILocation(line: 3338, column: 56, scope: !9761)
!9783 = !DILocation(line: 3338, column: 21, scope: !9761)
!9784 = !DILocation(line: 3338, column: 14, scope: !9761)
!9785 = !DILocation(line: 3338, column: 19, scope: !9761)
!9786 = !DILocation(line: 3339, column: 18, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 3339, column: 13)
!9788 = !DILocation(line: 3339, column: 23, scope: !9787)
!9789 = !DILocation(line: 3339, column: 13, scope: !9761)
!9790 = !DILocation(line: 3340, column: 13, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 3339, column: 32)
!9792 = !DILocation(line: 3342, column: 5, scope: !9761)
!9793 = !DILocation(line: 3344, column: 5, scope: !9268)
!9794 = !DILocation(line: 3346, column: 17, scope: !9268)
!9795 = !DILocation(line: 3346, column: 31, scope: !9268)
!9796 = !DILocation(line: 3346, column: 34, scope: !9268)
!9797 = !DILocation(line: 3346, column: 42, scope: !9268)
!9798 = !DILocation(line: 3346, column: 45, scope: !9268)
!9799 = !DILocation(line: 3346, column: 53, scope: !9268)
!9800 = !DILocation(line: 3346, column: 28, scope: !9268)
!9801 = !DILocation(line: 3346, column: 5, scope: !9268)
!9802 = !DILocation(line: 3346, column: 9, scope: !9268)
!9803 = !DILocation(line: 3346, column: 15, scope: !9268)
!9804 = !DILocation(line: 3347, column: 18, scope: !9268)
!9805 = !DILocation(line: 3347, column: 31, scope: !9268)
!9806 = !DILocation(line: 3347, column: 34, scope: !9268)
!9807 = !DILocation(line: 3347, column: 29, scope: !9268)
!9808 = !DILocation(line: 3347, column: 5, scope: !9268)
!9809 = !DILocation(line: 3347, column: 9, scope: !9268)
!9810 = !DILocation(line: 3347, column: 16, scope: !9268)
!9811 = !DILocation(line: 3349, column: 5, scope: !9268)
!9812 = !DILocation(line: 3351, column: 12, scope: !9268)
!9813 = !DILocation(line: 3351, column: 16, scope: !9268)
!9814 = !DILocation(line: 3351, column: 10, scope: !9268)
!9815 = !DILocation(line: 3352, column: 5, scope: !9268)
!9816 = !DILocation(line: 3352, column: 9, scope: !9268)
!9817 = !DILocation(line: 3352, column: 17, scope: !9268)
!9818 = !DILocation(line: 3356, column: 5, scope: !9268)
!9819 = !DILocation(line: 3356, column: 12, scope: !9268)
!9820 = !DILocation(line: 3357, column: 15, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3356, column: 18)
!9822 = !DILocation(line: 3357, column: 13, scope: !9821)
!9823 = !DILocation(line: 3358, column: 9, scope: !9821)
!9824 = !DILocation(line: 3358, column: 14, scope: !9821)
!9825 = !DILocation(line: 3358, column: 20, scope: !9821)
!9826 = !DILocation(line: 3359, column: 22, scope: !9821)
!9827 = !DILocation(line: 3359, column: 26, scope: !9821)
!9828 = !DILocation(line: 3359, column: 9, scope: !9821)
!9829 = !DILocation(line: 3359, column: 14, scope: !9821)
!9830 = !DILocation(line: 3359, column: 20, scope: !9821)
!9831 = !DILocation(line: 3360, column: 9, scope: !9821)
!9832 = !DILocation(line: 3360, column: 14, scope: !9821)
!9833 = !DILocation(line: 3360, column: 21, scope: !9821)
!9834 = !DILocation(line: 3361, column: 16, scope: !9821)
!9835 = !DILocation(line: 3361, column: 21, scope: !9821)
!9836 = !DILocation(line: 3361, column: 14, scope: !9821)
!9837 = !DILocation(line: 3363, column: 9, scope: !9821)
!9838 = !DILocation(line: 3363, column: 14, scope: !9821)
!9839 = !DILocation(line: 3363, column: 22, scope: !9821)
!9840 = distinct !{!9840, !9818, !9841}
!9841 = !DILocation(line: 3364, column: 5, scope: !9268)
!9842 = !DILocation(line: 3366, column: 23, scope: !9268)
!9843 = !DILocation(line: 3366, column: 31, scope: !9268)
!9844 = !DILocation(line: 3366, column: 5, scope: !9268)
!9845 = !DILocation(line: 3368, column: 5, scope: !9268)
!9846 = !DILocation(line: 3372, column: 9, scope: !9268)
!9847 = !DILocation(line: 3372, column: 5, scope: !9268)
!9848 = !DILocation(line: 3378, column: 5, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 3378, column: 5)
!9850 = !DILocation(line: 3378, column: 5, scope: !9268)
!9851 = !DILocation(line: 3380, column: 5, scope: !9268)
!9852 = !DILocation(line: 3386, column: 5, scope: !9268)
!9853 = !DILocation(line: 3387, column: 1, scope: !9268)
!9854 = distinct !DISubprogram(name: "ngx_resolver_copy", scope: !3, file: !3, line: 3944, type: !9855, isLocal: true, isDefinition: true, scopeLine: 3946, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !9857)
!9855 = !DISubroutineType(types: !9856)
!9856 = !{!8, !163, !760, !110, !110, !110}
!9857 = !{!9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868}
!9858 = !DILocalVariable(name: "r", arg: 1, scope: !9854, file: !3, line: 3944, type: !163)
!9859 = !DILocalVariable(name: "name", arg: 2, scope: !9854, file: !3, line: 3944, type: !760)
!9860 = !DILocalVariable(name: "buf", arg: 3, scope: !9854, file: !3, line: 3944, type: !110)
!9861 = !DILocalVariable(name: "src", arg: 4, scope: !9854, file: !3, line: 3944, type: !110)
!9862 = !DILocalVariable(name: "last", arg: 5, scope: !9854, file: !3, line: 3945, type: !110)
!9863 = !DILocalVariable(name: "err", scope: !9854, file: !3, line: 3947, type: !6)
!9864 = !DILocalVariable(name: "p", scope: !9854, file: !3, line: 3948, type: !110)
!9865 = !DILocalVariable(name: "dst", scope: !9854, file: !3, line: 3948, type: !110)
!9866 = !DILocalVariable(name: "len", scope: !9854, file: !3, line: 3949, type: !559)
!9867 = !DILocalVariable(name: "i", scope: !9854, file: !3, line: 3950, type: !82)
!9868 = !DILocalVariable(name: "n", scope: !9854, file: !3, line: 3950, type: !82)
!9869 = !DILocation(line: 3944, column: 35, scope: !9854)
!9870 = !DILocation(line: 3944, column: 49, scope: !9854)
!9871 = !DILocation(line: 3944, column: 63, scope: !9854)
!9872 = !DILocation(line: 3944, column: 76, scope: !9854)
!9873 = !DILocation(line: 3945, column: 13, scope: !9854)
!9874 = !DILocation(line: 3947, column: 5, scope: !9854)
!9875 = !DILocation(line: 3947, column: 18, scope: !9854)
!9876 = !DILocation(line: 3948, column: 5, scope: !9854)
!9877 = !DILocation(line: 3948, column: 18, scope: !9854)
!9878 = !DILocation(line: 3948, column: 22, scope: !9854)
!9879 = !DILocation(line: 3949, column: 5, scope: !9854)
!9880 = !DILocation(line: 3949, column: 18, scope: !9854)
!9881 = !DILocation(line: 3950, column: 5, scope: !9854)
!9882 = !DILocation(line: 3950, column: 18, scope: !9854)
!9883 = !DILocation(line: 3950, column: 21, scope: !9854)
!9884 = !DILocation(line: 3952, column: 9, scope: !9854)
!9885 = !DILocation(line: 3952, column: 7, scope: !9854)
!9886 = !DILocation(line: 3953, column: 9, scope: !9854)
!9887 = !DILocation(line: 3960, column: 12, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3960, column: 5)
!9889 = !DILocation(line: 3960, column: 10, scope: !9888)
!9890 = !DILocation(line: 3960, column: 17, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 3960, column: 5)
!9892 = !DILocation(line: 3960, column: 19, scope: !9891)
!9893 = !DILocation(line: 3960, column: 5, scope: !9888)
!9894 = !DILocation(line: 3961, column: 15, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 3960, column: 31)
!9896 = !DILocation(line: 3961, column: 13, scope: !9895)
!9897 = !DILocation(line: 3961, column: 11, scope: !9895)
!9898 = !DILocation(line: 3963, column: 13, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 3963, column: 13)
!9900 = !DILocation(line: 3963, column: 15, scope: !9899)
!9901 = !DILocation(line: 3963, column: 13, scope: !9895)
!9902 = !DILocation(line: 3964, column: 13, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 3963, column: 21)
!9904 = !DILocation(line: 3967, column: 13, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 3967, column: 13)
!9906 = !DILocation(line: 3967, column: 15, scope: !9905)
!9907 = !DILocation(line: 3967, column: 13, scope: !9895)
!9908 = !DILocation(line: 3968, column: 19, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 3967, column: 23)
!9910 = !DILocation(line: 3968, column: 21, scope: !9909)
!9911 = !DILocation(line: 3968, column: 29, scope: !9909)
!9912 = !DILocation(line: 3968, column: 38, scope: !9909)
!9913 = !DILocation(line: 3968, column: 37, scope: !9909)
!9914 = !DILocation(line: 3968, column: 35, scope: !9909)
!9915 = !DILocation(line: 3968, column: 15, scope: !9909)
!9916 = !DILocation(line: 3969, column: 18, scope: !9909)
!9917 = !DILocation(line: 3969, column: 22, scope: !9909)
!9918 = !DILocation(line: 3969, column: 15, scope: !9909)
!9919 = !DILocation(line: 3971, column: 9, scope: !9909)
!9920 = !DILocation(line: 3972, column: 24, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 3971, column: 16)
!9922 = !DILocation(line: 3972, column: 22, scope: !9921)
!9923 = !DILocation(line: 3972, column: 17, scope: !9921)
!9924 = !DILocation(line: 3973, column: 18, scope: !9921)
!9925 = !DILocation(line: 3973, column: 20, scope: !9921)
!9926 = !DILocation(line: 3973, column: 15, scope: !9921)
!9927 = !DILocation(line: 3976, column: 13, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 3976, column: 13)
!9929 = !DILocation(line: 3976, column: 18, scope: !9928)
!9930 = !DILocation(line: 3976, column: 15, scope: !9928)
!9931 = !DILocation(line: 3976, column: 13, scope: !9895)
!9932 = !DILocation(line: 3977, column: 17, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 3976, column: 24)
!9934 = !DILocation(line: 3978, column: 13, scope: !9933)
!9935 = !DILocation(line: 3980, column: 5, scope: !9895)
!9936 = !DILocation(line: 3960, column: 27, scope: !9891)
!9937 = !DILocation(line: 3960, column: 5, scope: !9891)
!9938 = distinct !{!9938, !9893, !9939}
!9939 = !DILocation(line: 3980, column: 5, scope: !9888)
!9940 = !DILocation(line: 3982, column: 9, scope: !9854)
!9941 = !DILocation(line: 3982, column: 5, scope: !9854)
!9942 = !DILocation(line: 3986, column: 5, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3986, column: 5)
!9944 = !DILocation(line: 3986, column: 5, scope: !9854)
!9945 = !DILocation(line: 3988, column: 5, scope: !9854)
!9946 = !DILocation(line: 3992, column: 9, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3992, column: 9)
!9948 = !DILocation(line: 3992, column: 14, scope: !9947)
!9949 = !DILocation(line: 3992, column: 9, scope: !9854)
!9950 = !DILocation(line: 3993, column: 9, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 3992, column: 23)
!9952 = !DILocation(line: 3996, column: 9, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3996, column: 9)
!9954 = !DILocation(line: 3996, column: 13, scope: !9953)
!9955 = !DILocation(line: 3996, column: 9, scope: !9854)
!9956 = !DILocation(line: 3997, column: 9, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 3996, column: 20)
!9958 = !DILocation(line: 3998, column: 9, scope: !9957)
!9959 = !DILocation(line: 4001, column: 30, scope: !9854)
!9960 = !DILocation(line: 4001, column: 33, scope: !9854)
!9961 = !DILocation(line: 4001, column: 11, scope: !9854)
!9962 = !DILocation(line: 4001, column: 9, scope: !9854)
!9963 = !DILocation(line: 4002, column: 9, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 4002, column: 9)
!9965 = !DILocation(line: 4002, column: 13, scope: !9964)
!9966 = !DILocation(line: 4002, column: 9, scope: !9854)
!9967 = !DILocation(line: 4003, column: 9, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 4002, column: 22)
!9969 = !DILocation(line: 4006, column: 18, scope: !9854)
!9970 = !DILocation(line: 4006, column: 5, scope: !9854)
!9971 = !DILocation(line: 4006, column: 11, scope: !9854)
!9972 = !DILocation(line: 4006, column: 16, scope: !9854)
!9973 = !DILocation(line: 4008, column: 13, scope: !9854)
!9974 = !DILocation(line: 4008, column: 9, scope: !9854)
!9975 = !DILocation(line: 4008, column: 7, scope: !9854)
!9976 = !DILocation(line: 4010, column: 5, scope: !9854)
!9977 = !DILocation(line: 4011, column: 13, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 4011, column: 13)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 4010, column: 16)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 4010, column: 5)
!9981 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 4010, column: 5)
!9982 = !DILocation(line: 4011, column: 15, scope: !9978)
!9983 = !DILocation(line: 4011, column: 13, scope: !9979)
!9984 = !DILocation(line: 4012, column: 19, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 4011, column: 23)
!9986 = !DILocation(line: 4012, column: 21, scope: !9985)
!9987 = !DILocation(line: 4012, column: 29, scope: !9985)
!9988 = !DILocation(line: 4012, column: 38, scope: !9985)
!9989 = !DILocation(line: 4012, column: 37, scope: !9985)
!9990 = !DILocation(line: 4012, column: 35, scope: !9985)
!9991 = !DILocation(line: 4012, column: 15, scope: !9985)
!9992 = !DILocation(line: 4013, column: 20, scope: !9985)
!9993 = !DILocation(line: 4013, column: 24, scope: !9985)
!9994 = !DILocation(line: 4013, column: 17, scope: !9985)
!9995 = !DILocation(line: 4015, column: 21, scope: !9985)
!9996 = !DILocation(line: 4015, column: 17, scope: !9985)
!9997 = !DILocation(line: 4015, column: 15, scope: !9985)
!9998 = !DILocation(line: 4017, column: 9, scope: !9985)
!9999 = !DILocation(line: 4018, column: 24, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 4017, column: 16)
!10001 = !DILocation(line: 4018, column: 29, scope: !10000)
!10002 = !DILocation(line: 4018, column: 34, scope: !10000)
!10003 = !DILocation(line: 4018, column: 13, scope: !10000)
!10004 = !DILocation(line: 4019, column: 20, scope: !10000)
!10005 = !DILocation(line: 4019, column: 17, scope: !10000)
!10006 = !DILocation(line: 4020, column: 20, scope: !10000)
!10007 = !DILocation(line: 4020, column: 17, scope: !10000)
!10008 = !DILocation(line: 4022, column: 21, scope: !10000)
!10009 = !DILocation(line: 4022, column: 17, scope: !10000)
!10010 = !DILocation(line: 4022, column: 15, scope: !10000)
!10011 = !DILocation(line: 4024, column: 17, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 4024, column: 17)
!10013 = !DILocation(line: 4024, column: 19, scope: !10012)
!10014 = !DILocation(line: 4024, column: 17, scope: !10000)
!10015 = !DILocation(line: 4025, column: 21, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 4024, column: 25)
!10017 = !DILocation(line: 4025, column: 24, scope: !10016)
!10018 = !DILocation(line: 4026, column: 13, scope: !10016)
!10019 = !DILocation(line: 4029, column: 13, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 4029, column: 13)
!10021 = !DILocation(line: 4029, column: 15, scope: !10020)
!10022 = !DILocation(line: 4029, column: 13, scope: !9979)
!10023 = !DILocation(line: 4030, column: 25, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 4029, column: 21)
!10025 = !DILocation(line: 4030, column: 31, scope: !10024)
!10026 = !DILocation(line: 4030, column: 37, scope: !10024)
!10027 = !DILocation(line: 4030, column: 29, scope: !10024)
!10028 = !DILocation(line: 4030, column: 13, scope: !10024)
!10029 = !DILocation(line: 4030, column: 19, scope: !10024)
!10030 = !DILocation(line: 4030, column: 23, scope: !10024)
!10031 = !DILocation(line: 4031, column: 13, scope: !10024)
!10032 = !DILocation(line: 4010, column: 5, scope: !9980)
!10033 = distinct !{!10033, !10034, !10035}
!10034 = !DILocation(line: 4010, column: 5, scope: !9981)
!10035 = !DILocation(line: 4033, column: 5, scope: !9981)
!10036 = !DILocation(line: 4034, column: 1, scope: !9854)
!10037 = distinct !DISubprogram(name: "ngx_resolver_cmp_srvs", scope: !3, file: !3, line: 4650, type: !10038, isLocal: true, isDefinition: true, scopeLine: 4651, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !10042)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{!8, !10040, !10040}
!10040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10041, size: 32)
!10041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10042 = !{!10043, !10044, !10045, !10046, !10047, !10048}
!10043 = !DILocalVariable(name: "one", arg: 1, scope: !10037, file: !3, line: 4650, type: !10040)
!10044 = !DILocalVariable(name: "two", arg: 2, scope: !10037, file: !3, line: 4650, type: !10040)
!10045 = !DILocalVariable(name: "p1", scope: !10037, file: !3, line: 4652, type: !8)
!10046 = !DILocalVariable(name: "p2", scope: !10037, file: !3, line: 4652, type: !8)
!10047 = !DILocalVariable(name: "first", scope: !10037, file: !3, line: 4653, type: !124)
!10048 = !DILocalVariable(name: "second", scope: !10037, file: !3, line: 4653, type: !124)
!10049 = !DILocation(line: 4650, column: 35, scope: !10037)
!10050 = !DILocation(line: 4650, column: 52, scope: !10037)
!10051 = !DILocation(line: 4652, column: 5, scope: !10037)
!10052 = !DILocation(line: 4652, column: 26, scope: !10037)
!10053 = !DILocation(line: 4652, column: 30, scope: !10037)
!10054 = !DILocation(line: 4653, column: 5, scope: !10037)
!10055 = !DILocation(line: 4653, column: 26, scope: !10037)
!10056 = !DILocation(line: 4653, column: 34, scope: !10037)
!10057 = !DILocation(line: 4655, column: 36, scope: !10037)
!10058 = !DILocation(line: 4655, column: 13, scope: !10037)
!10059 = !DILocation(line: 4655, column: 11, scope: !10037)
!10060 = !DILocation(line: 4656, column: 37, scope: !10037)
!10061 = !DILocation(line: 4656, column: 14, scope: !10037)
!10062 = !DILocation(line: 4656, column: 12, scope: !10037)
!10063 = !DILocation(line: 4658, column: 10, scope: !10037)
!10064 = !DILocation(line: 4658, column: 17, scope: !10037)
!10065 = !DILocation(line: 4658, column: 8, scope: !10037)
!10066 = !DILocation(line: 4659, column: 10, scope: !10037)
!10067 = !DILocation(line: 4659, column: 18, scope: !10037)
!10068 = !DILocation(line: 4659, column: 8, scope: !10037)
!10069 = !DILocation(line: 4661, column: 12, scope: !10037)
!10070 = !DILocation(line: 4661, column: 17, scope: !10037)
!10071 = !DILocation(line: 4661, column: 15, scope: !10037)
!10072 = !DILocation(line: 4662, column: 1, scope: !10037)
!10073 = !DILocation(line: 4661, column: 5, scope: !10037)
!10074 = distinct !DISubprogram(name: "ngx_udp_connect", scope: !3, file: !3, line: 4383, type: !6528, isLocal: true, isDefinition: true, scopeLine: 4384, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !10075)
!10075 = !{!10076, !10077, !10078, !10079, !10080, !10081, !10082}
!10076 = !DILocalVariable(name: "rec", arg: 1, scope: !10074, file: !3, line: 4383, type: !807)
!10077 = !DILocalVariable(name: "rc", scope: !10074, file: !3, line: 4385, type: !12)
!10078 = !DILocalVariable(name: "event", scope: !10074, file: !3, line: 4386, type: !8)
!10079 = !DILocalVariable(name: "rev", scope: !10074, file: !3, line: 4387, type: !168)
!10080 = !DILocalVariable(name: "wev", scope: !10074, file: !3, line: 4387, type: !168)
!10081 = !DILocalVariable(name: "s", scope: !10074, file: !3, line: 4388, type: !495)
!10082 = !DILocalVariable(name: "c", scope: !10074, file: !3, line: 4389, type: !544)
!10083 = !DILocation(line: 4383, column: 44, scope: !10074)
!10084 = !DILocation(line: 4385, column: 5, scope: !10074)
!10085 = !DILocation(line: 4385, column: 24, scope: !10074)
!10086 = !DILocation(line: 4386, column: 5, scope: !10074)
!10087 = !DILocation(line: 4386, column: 24, scope: !10074)
!10088 = !DILocation(line: 4387, column: 5, scope: !10074)
!10089 = !DILocation(line: 4387, column: 24, scope: !10074)
!10090 = !DILocation(line: 4387, column: 30, scope: !10074)
!10091 = !DILocation(line: 4388, column: 5, scope: !10074)
!10092 = !DILocation(line: 4388, column: 24, scope: !10074)
!10093 = !DILocation(line: 4389, column: 5, scope: !10074)
!10094 = !DILocation(line: 4389, column: 24, scope: !10074)
!10095 = !DILocation(line: 4391, column: 20, scope: !10074)
!10096 = !DILocation(line: 4391, column: 25, scope: !10074)
!10097 = !DILocation(line: 4391, column: 35, scope: !10074)
!10098 = !DILocation(line: 4391, column: 9, scope: !10074)
!10099 = !DILocation(line: 4391, column: 7, scope: !10074)
!10100 = !DILocation(line: 4395, column: 9, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4395, column: 9)
!10102 = !DILocation(line: 4395, column: 11, scope: !10101)
!10103 = !DILocation(line: 4395, column: 9, scope: !10074)
!10104 = !DILocation(line: 4396, column: 9, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 4396, column: 9)
!10106 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 4395, column: 33)
!10107 = !DILocation(line: 4396, column: 9, scope: !10106)
!10108 = !DILocation(line: 4398, column: 9, scope: !10106)
!10109 = !DILocation(line: 4401, column: 28, scope: !10074)
!10110 = !DILocation(line: 4401, column: 32, scope: !10074)
!10111 = !DILocation(line: 4401, column: 37, scope: !10074)
!10112 = !DILocation(line: 4401, column: 9, scope: !10074)
!10113 = !DILocation(line: 4401, column: 7, scope: !10074)
!10114 = !DILocation(line: 4403, column: 9, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4403, column: 9)
!10116 = !DILocation(line: 4403, column: 11, scope: !10115)
!10117 = !DILocation(line: 4403, column: 9, scope: !10074)
!10118 = !DILocation(line: 4404, column: 30, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 4404, column: 13)
!10120 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 4403, column: 20)
!10121 = !DILocation(line: 4404, column: 13, scope: !10119)
!10122 = !DILocation(line: 4404, column: 33, scope: !10119)
!10123 = !DILocation(line: 4404, column: 13, scope: !10120)
!10124 = !DILocation(line: 4405, column: 13, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 4405, column: 13)
!10126 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 4404, column: 40)
!10127 = !DILocation(line: 4405, column: 13, scope: !10126)
!10128 = !DILocation(line: 4407, column: 9, scope: !10126)
!10129 = !DILocation(line: 4409, column: 9, scope: !10120)
!10130 = !DILocation(line: 4412, column: 25, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4412, column: 9)
!10132 = !DILocation(line: 4412, column: 9, scope: !10131)
!10133 = !DILocation(line: 4412, column: 28, scope: !10131)
!10134 = !DILocation(line: 4412, column: 9, scope: !10074)
!10135 = !DILocation(line: 4413, column: 9, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 4413, column: 9)
!10137 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 4412, column: 35)
!10138 = !DILocation(line: 4413, column: 9, scope: !10137)
!10139 = !DILocation(line: 4416, column: 9, scope: !10137)
!10140 = !DILocation(line: 4419, column: 11, scope: !10074)
!10141 = !DILocation(line: 4419, column: 14, scope: !10074)
!10142 = !DILocation(line: 4419, column: 9, scope: !10074)
!10143 = !DILocation(line: 4420, column: 11, scope: !10074)
!10144 = !DILocation(line: 4420, column: 14, scope: !10074)
!10145 = !DILocation(line: 4420, column: 9, scope: !10074)
!10146 = !DILocation(line: 4422, column: 17, scope: !10074)
!10147 = !DILocation(line: 4422, column: 22, scope: !10074)
!10148 = !DILocation(line: 4422, column: 5, scope: !10074)
!10149 = !DILocation(line: 4422, column: 10, scope: !10074)
!10150 = !DILocation(line: 4422, column: 14, scope: !10074)
!10151 = !DILocation(line: 4423, column: 17, scope: !10074)
!10152 = !DILocation(line: 4423, column: 22, scope: !10074)
!10153 = !DILocation(line: 4423, column: 5, scope: !10074)
!10154 = !DILocation(line: 4423, column: 10, scope: !10074)
!10155 = !DILocation(line: 4423, column: 14, scope: !10074)
!10156 = !DILocation(line: 4425, column: 16, scope: !10074)
!10157 = !DILocation(line: 4425, column: 5, scope: !10074)
!10158 = !DILocation(line: 4425, column: 10, scope: !10074)
!10159 = !DILocation(line: 4425, column: 14, scope: !10074)
!10160 = !DILocation(line: 4427, column: 17, scope: !10074)
!10161 = !DILocation(line: 4427, column: 5, scope: !10074)
!10162 = !DILocation(line: 4427, column: 8, scope: !10074)
!10163 = !DILocation(line: 4427, column: 15, scope: !10074)
!10164 = !DILocation(line: 4432, column: 18, scope: !10074)
!10165 = !DILocation(line: 4432, column: 21, scope: !10074)
!10166 = !DILocation(line: 4432, column: 26, scope: !10074)
!10167 = !DILocation(line: 4432, column: 36, scope: !10074)
!10168 = !DILocation(line: 4432, column: 41, scope: !10074)
!10169 = !DILocation(line: 4432, column: 10, scope: !10074)
!10170 = !DILocation(line: 4432, column: 8, scope: !10074)
!10171 = !DILocation(line: 4436, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4436, column: 9)
!10173 = !DILocation(line: 4436, column: 12, scope: !10172)
!10174 = !DILocation(line: 4436, column: 9, scope: !10074)
!10175 = !DILocation(line: 4437, column: 9, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 4437, column: 9)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 4436, column: 19)
!10178 = !DILocation(line: 4437, column: 9, scope: !10177)
!10179 = !DILocation(line: 4440, column: 9, scope: !10177)
!10180 = !DILocation(line: 4444, column: 5, scope: !10074)
!10181 = !DILocation(line: 4444, column: 10, scope: !10074)
!10182 = !DILocation(line: 4444, column: 16, scope: !10074)
!10183 = !DILocation(line: 4446, column: 14, scope: !10074)
!10184 = !DILocation(line: 4446, column: 30, scope: !10074)
!10185 = !DILocation(line: 4446, column: 13, scope: !10074)
!10186 = !DILocation(line: 4446, column: 11, scope: !10074)
!10187 = !DILocation(line: 4451, column: 9, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4451, column: 9)
!10189 = !DILocation(line: 4451, column: 23, scope: !10188)
!10190 = !DILocation(line: 4451, column: 44, scope: !10188)
!10191 = !DILocation(line: 4451, column: 51, scope: !10188)
!10192 = !DILocation(line: 4451, column: 9, scope: !10074)
!10193 = !DILocation(line: 4452, column: 9, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4451, column: 62)
!10195 = !DILocation(line: 4455, column: 5, scope: !10074)
!10196 = !DILocation(line: 4459, column: 26, scope: !10074)
!10197 = !DILocation(line: 4459, column: 5, scope: !10074)
!10198 = !DILocation(line: 4460, column: 5, scope: !10074)
!10199 = !DILocation(line: 4460, column: 10, scope: !10074)
!10200 = !DILocation(line: 4460, column: 14, scope: !10074)
!10201 = !DILocation(line: 4462, column: 5, scope: !10074)
!10202 = !DILocation(line: 4463, column: 1, scope: !10074)
!10203 = distinct !DISubprogram(name: "ngx_resolver_udp_read", scope: !3, file: !3, line: 1568, type: !199, isLocal: true, isDefinition: true, scopeLine: 1569, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !10204)
!10204 = !{!10205, !10206, !10207, !10208, !10209}
!10205 = !DILocalVariable(name: "rev", arg: 1, scope: !10203, file: !3, line: 1568, type: !168)
!10206 = !DILocalVariable(name: "n", scope: !10203, file: !3, line: 1570, type: !559)
!10207 = !DILocalVariable(name: "c", scope: !10203, file: !3, line: 1571, type: !544)
!10208 = !DILocalVariable(name: "rec", scope: !10203, file: !3, line: 1572, type: !807)
!10209 = !DILocalVariable(name: "buf", scope: !10203, file: !3, line: 1573, type: !10210)
!10210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 32768, elements: !10211)
!10211 = !{!10212}
!10212 = !DISubrange(count: 4096)
!10213 = !DILocation(line: 1568, column: 36, scope: !10203)
!10214 = !DILocation(line: 1570, column: 5, scope: !10203)
!10215 = !DILocation(line: 1570, column: 33, scope: !10203)
!10216 = !DILocation(line: 1571, column: 5, scope: !10203)
!10217 = !DILocation(line: 1571, column: 33, scope: !10203)
!10218 = !DILocation(line: 1572, column: 5, scope: !10203)
!10219 = !DILocation(line: 1572, column: 33, scope: !10203)
!10220 = !DILocation(line: 1573, column: 5, scope: !10203)
!10221 = !DILocation(line: 1573, column: 33, scope: !10203)
!10222 = !DILocation(line: 1575, column: 9, scope: !10203)
!10223 = !DILocation(line: 1575, column: 14, scope: !10203)
!10224 = !DILocation(line: 1575, column: 7, scope: !10203)
!10225 = !DILocation(line: 1576, column: 11, scope: !10203)
!10226 = !DILocation(line: 1576, column: 14, scope: !10203)
!10227 = !DILocation(line: 1576, column: 9, scope: !10203)
!10228 = !DILocation(line: 1578, column: 5, scope: !10203)
!10229 = distinct !{!10229, !10228, !10230}
!10230 = !DILocation(line: 1587, column: 24, scope: !10203)
!10231 = !DILocation(line: 1579, column: 13, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1578, column: 8)
!10233 = !{!6502, !821, i64 8}
!10234 = !DILocation(line: 1579, column: 26, scope: !10232)
!10235 = !DILocation(line: 1579, column: 29, scope: !10232)
!10236 = !DILocation(line: 1579, column: 11, scope: !10232)
!10237 = !DILocation(line: 1581, column: 13, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10232, file: !3, line: 1581, column: 13)
!10239 = !DILocation(line: 1581, column: 15, scope: !10238)
!10240 = !DILocation(line: 1581, column: 13, scope: !10232)
!10241 = !DILocation(line: 1582, column: 13, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 1581, column: 20)
!10243 = !DILocation(line: 1585, column: 39, scope: !10232)
!10244 = !DILocation(line: 1585, column: 44, scope: !10232)
!10245 = !DILocation(line: 1585, column: 54, scope: !10232)
!10246 = !DILocation(line: 1585, column: 59, scope: !10232)
!10247 = !DILocation(line: 1585, column: 9, scope: !10232)
!10248 = !DILocation(line: 1587, column: 5, scope: !10232)
!10249 = !DILocation(line: 1587, column: 14, scope: !10203)
!10250 = !DILocation(line: 1587, column: 19, scope: !10203)
!10251 = !DILocation(line: 1588, column: 1, scope: !10203)
!10252 = distinct !DISubprogram(name: "ngx_resolver_resend", scope: !3, file: !3, line: 1506, type: !10253, isLocal: true, isDefinition: true, scopeLine: 1507, flags: DIFlagPrototyped, isOptimized: true, unit: !13, variables: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{!19, !163, !2021, !107}
!10255 = !{!10256, !10257, !10258, !10259, !10260, !10261}
!10256 = !DILocalVariable(name: "r", arg: 1, scope: !10252, file: !3, line: 1506, type: !163)
!10257 = !DILocalVariable(name: "tree", arg: 2, scope: !10252, file: !3, line: 1506, type: !2021)
!10258 = !DILocalVariable(name: "queue", arg: 3, scope: !10252, file: !3, line: 1506, type: !107)
!10259 = !DILocalVariable(name: "now", scope: !10252, file: !3, line: 1508, type: !19)
!10260 = !DILocalVariable(name: "q", scope: !10252, file: !3, line: 1509, type: !107)
!10261 = !DILocalVariable(name: "rn", scope: !10252, file: !3, line: 1510, type: !84)
!10262 = !DILocation(line: 1506, column: 37, scope: !10252)
!10263 = !DILocation(line: 1506, column: 54, scope: !10252)
!10264 = !DILocation(line: 1506, column: 73, scope: !10252)
!10265 = !DILocation(line: 1508, column: 5, scope: !10252)
!10266 = !DILocation(line: 1508, column: 27, scope: !10252)
!10267 = !DILocation(line: 1509, column: 5, scope: !10252)
!10268 = !DILocation(line: 1509, column: 27, scope: !10252)
!10269 = !DILocation(line: 1510, column: 5, scope: !10252)
!10270 = !DILocation(line: 1510, column: 27, scope: !10252)
!10271 = !DILocation(line: 1512, column: 11, scope: !10252)
!10272 = !DILocation(line: 1512, column: 9, scope: !10252)
!10273 = !DILocation(line: 1514, column: 5, scope: !10252)
!10274 = !DILocation(line: 1515, column: 13, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1515, column: 13)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1514, column: 16)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 1514, column: 5)
!10278 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 1514, column: 5)
!10279 = !DILocation(line: 1515, column: 13, scope: !10276)
!10280 = !DILocation(line: 1516, column: 13, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 1515, column: 37)
!10282 = !DILocation(line: 1519, column: 13, scope: !10276)
!10283 = !DILocation(line: 1519, column: 11, scope: !10276)
!10284 = !DILocation(line: 1521, column: 14, scope: !10276)
!10285 = !DILocation(line: 1521, column: 12, scope: !10276)
!10286 = !DILocation(line: 1523, column: 13, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1523, column: 13)
!10288 = !DILocation(line: 1523, column: 19, scope: !10287)
!10289 = !DILocation(line: 1523, column: 23, scope: !10287)
!10290 = !DILocation(line: 1523, column: 17, scope: !10287)
!10291 = !DILocation(line: 1523, column: 13, scope: !10276)
!10292 = !DILocation(line: 1524, column: 20, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1523, column: 31)
!10294 = !DILocation(line: 1524, column: 24, scope: !10293)
!10295 = !DILocation(line: 1524, column: 33, scope: !10293)
!10296 = !DILocation(line: 1524, column: 31, scope: !10293)
!10297 = !DILocation(line: 1524, column: 13, scope: !10293)
!10298 = !DILocation(line: 1531, column: 9, scope: !10276)
!10299 = !DILocation(line: 1533, column: 13, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1533, column: 13)
!10301 = !DILocation(line: 1533, column: 17, scope: !10300)
!10302 = !DILocation(line: 1533, column: 13, scope: !10276)
!10303 = !DILocation(line: 1535, column: 19, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 1535, column: 17)
!10305 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 1533, column: 26)
!10306 = !DILocation(line: 1535, column: 23, scope: !10304)
!10307 = !DILocation(line: 1535, column: 17, scope: !10304)
!10308 = !DILocation(line: 1535, column: 42, scope: !10304)
!10309 = !DILocation(line: 1535, column: 45, scope: !10304)
!10310 = !DILocation(line: 1535, column: 57, scope: !10304)
!10311 = !DILocation(line: 1535, column: 39, scope: !10304)
!10312 = !DILocation(line: 1535, column: 17, scope: !10305)
!10313 = !DILocation(line: 1536, column: 17, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1535, column: 64)
!10315 = !DILocation(line: 1536, column: 21, scope: !10314)
!10316 = !DILocation(line: 1536, column: 37, scope: !10314)
!10317 = !DILocation(line: 1537, column: 13, scope: !10314)
!10318 = !DILocation(line: 1539, column: 44, scope: !10305)
!10319 = !DILocation(line: 1539, column: 47, scope: !10305)
!10320 = !DILocation(line: 1539, column: 20, scope: !10305)
!10321 = !DILocation(line: 1541, column: 26, scope: !10305)
!10322 = !DILocation(line: 1541, column: 32, scope: !10305)
!10323 = !DILocation(line: 1541, column: 35, scope: !10305)
!10324 = !DILocation(line: 1541, column: 30, scope: !10305)
!10325 = !DILocation(line: 1541, column: 13, scope: !10305)
!10326 = !DILocation(line: 1541, column: 17, scope: !10305)
!10327 = !DILocation(line: 1541, column: 24, scope: !10305)
!10328 = !DILocation(line: 1543, column: 13, scope: !10305)
!10329 = !DILocation(line: 1545, column: 13, scope: !10305)
!10330 = distinct !{!10330, !10331, !10332}
!10331 = !DILocation(line: 1514, column: 5, scope: !10278)
!10332 = !DILocation(line: 1551, column: 5, scope: !10278)
!10333 = !DILocation(line: 1548, column: 27, scope: !10276)
!10334 = !DILocation(line: 1548, column: 34, scope: !10276)
!10335 = !DILocation(line: 1548, column: 38, scope: !10276)
!10336 = !DILocation(line: 1548, column: 9, scope: !10276)
!10337 = !DILocation(line: 1550, column: 32, scope: !10276)
!10338 = !DILocation(line: 1550, column: 35, scope: !10276)
!10339 = !DILocation(line: 1550, column: 9, scope: !10276)
!10340 = !DILocation(line: 1514, column: 5, scope: !10277)
!10341 = !DILocation(line: 1552, column: 1, scope: !10252)
